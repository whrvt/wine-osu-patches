From 89ed1b0aa85ae44573ac5a69762a9fc0b7c50c03 Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Sun, 15 Dec 2024 17:22:38 -0800
Subject: [PATCH] HACK: shell32: Strip hardcoded explorer/notepad prefix from
 osu!'s shell open calls.

This allows osu! to open the screenshot folder by clicking
the popup ingame, when WINE_BLOCK_GET_VERSION=1 is used.

That's under the assumption that the Folder\\shell\\open\\command
registry key is set up correctly with xdg-open and all that
machinery that osu-winello sets up automatically.

v2: Added replacement for notepad.exe. Allows opening .osu files from
the editor given the registry association is in place.

Example registry file:

Windows Registry Editor Version 5.00

[HKEY_CLASSES_ROOT\.osu]
@="txtfile"

[HKEY_CLASSES_ROOT\folder\shell\open\command]
@="wscript.exe \"Z:\\\\home\\\\username\\\\.local\\\\share\\\\osuconfig\\\\folderfixosu.vbs\" \"%1\""

[HKEY_CLASSES_ROOT\txtfile\shell\open\command]
@="wscript.exe \"Z:\\\\home\\\\username\\\\.local\\\\share\\\\osuconfig\\\\folderfixosu.vbs\" \"%1\""

v3: Allow force-enabling the hacks outside of osu! with the env var WINE_SHELL32_HACKS=1
---
 dlls/shell32/shlexec.c | 75 ++++++++++++++++++++++++++++++++++++++++++
 loader/wine.inf.in     | 12 +++++--
 2 files changed, 84 insertions(+), 3 deletions(-)

diff --git a/dlls/shell32/shlexec.c b/dlls/shell32/shlexec.c
index 11d572ab022..e732b238e0c 100644
--- a/dlls/shell32/shlexec.c
+++ b/dlls/shell32/shlexec.c
@@ -32,6 +32,7 @@
 #include "winbase.h"
 #include "winerror.h"
 #include "winreg.h"
+#include "winternl.h"
 #include "winuser.h"
 #include "shlwapi.h"
 #include "ddeml.h"
@@ -1633,6 +1634,26 @@ static WCHAR *expand_environment( const WCHAR *str )
     return buf;
 }
 
+static FORCEINLINE BOOL is_osu(void)
+{
+    static volatile char cache = -1;
+    BOOL ret = cache;
+    if (ret == -1)
+    {
+        WCHAR buffer[2];
+        const WCHAR *p, *name = NtCurrentTeb()->Peb->ProcessParameters->ImagePathName.Buffer;
+        if (GetEnvironmentVariableW(L"WINE_SHELL32_HACKS", buffer, ARRAY_SIZE(buffer)) && !wcscmp(buffer, L"1"))
+            return (ret = 1);
+        if ((p = wcsrchr(name, '/')))
+            name = p + 1;
+        if ((p = wcsrchr(name, '\\')))
+            name = p + 1;
+        ret = !wcsicmp(name, L"osu!.exe");
+        cache = ret;
+    }
+    return ret;
+}
+
 /*************************************************************************
  *	SHELL_execute [Internal]
  */
@@ -1658,6 +1679,60 @@ static BOOL SHELL_execute( LPSHELLEXECUTEINFOW sei, SHELL_ExecuteW32 execfunc )
     /* make a local copy of the LPSHELLEXECUTEINFO structure and work with this from now on */
     sei_tmp = *sei;
 
+    /* HACK: translate hardcoded calls to use file associations for osu! */
+    if (is_osu() && sei_tmp.lpParameters)
+    {
+        static const WCHAR select_prefix[] = L"/select,";
+        LPCWSTR path = sei_tmp.lpParameters;
+        int folder = -1;
+
+        if (!wcscmp(sei_tmp.lpFile, L"explorer.exe") && !wcsncmp(path, select_prefix, ARRAY_SIZE(select_prefix) - 1))
+        {
+            folder = 1; /* folder */
+            path += ARRAY_SIZE(select_prefix) - 1;
+        }
+        else if (!wcscmp(sei_tmp.lpFile, L"notepad.exe"))
+            folder = 0; /* file */
+
+        if (folder >= 0)
+        {
+            BOOL ret;
+            size_t path_len;
+            LPWSTR dir_path;
+            BOOL has_quotes = (*path == '\"');
+            if (has_quotes)
+                path++;
+
+            path_len = wcslen(path);
+            if (has_quotes && path_len > 0 && path[path_len - 1] == '\"')
+                path_len--;
+
+            dir_path = malloc((path_len + 2) * sizeof(WCHAR));
+            if (!dir_path)
+                return FALSE;
+
+            wcscpy_s(dir_path, path_len + 1, path);
+
+            if (folder)
+            {
+                if (!PathRemoveFileSpecW(dir_path))
+                {
+                    free(dir_path);
+                    return FALSE;
+                }
+                if (wcslen(dir_path) + 2 <= path_len + 2)
+                    PathAddBackslashW(dir_path);
+            }
+
+            sei_tmp.lpFile = dir_path;
+            sei_tmp.lpParameters = sei_tmp.lpVerb = NULL;
+
+            ret = SHELL_execute(&sei_tmp, execfunc);
+            free(dir_path);
+            return ret;
+        }
+    }
+
     TRACE("mask=0x%08lx hwnd=%p verb=%s file=%s parm=%s dir=%s show=0x%08x class=%s\n",
             sei_tmp.fMask, sei_tmp.hwnd, debugstr_w(sei_tmp.lpVerb),
             debugstr_w(sei_tmp.lpFile), debugstr_w(sei_tmp.lpParameters),
diff --git a/loader/wine.inf.in b/loader/wine.inf.in
index e6bed197625..9af1f8de36b 100644
--- a/loader/wine.inf.in
+++ b/loader/wine.inf.in
@@ -75,6 +75,7 @@ AddReg=\
     ThemeManager,\
     VCRuntime.ntx86,\
     LicenseInformation
+DelReg=RemoveClasses
 
 [DefaultInstall.NT]
 RegisterDlls=RegisterDllsSection
@@ -106,6 +107,7 @@ AddReg=\
     NVIDIANGX, \
     WineNonSteamController, \
     ProtonOverrides
+DelReg=RemoveClasses
 
 [DefaultInstall.ntamd64]
 RegisterDlls=RegisterDllsSection
@@ -138,6 +140,7 @@ AddReg=\
     NVIDIANGX, \
     WineNonSteamController, \
     ProtonOverrides
+DelReg=RemoveClasses
 
 [DefaultInstall.ntarm64]
 RegisterDlls=RegisterDllsSection
@@ -167,6 +170,7 @@ AddReg=\
     VCRuntime.ntarm64,\
     VersionInfo,\
     LicenseInformation
+DelReg=RemoveClasses
 
 [Wow64Install.ntx86]
 RegisterDlls=RegisterDllsSection
@@ -190,6 +194,7 @@ AddReg=\
     NVIDIANGX, \
     WineNonSteamController, \
     ProtonOverrides
+DelReg=RemoveClasses
 
 [Wow64Install.ntarm]
 RegisterDlls=RegisterDllsSection
@@ -206,6 +211,7 @@ AddReg=\
     Tapi,\
     VersionInfo,\
     LicenseInformation
+DelReg=RemoveClasses
 
 [DefaultInstall.Services]
 AddService=BITS,0,BITSService
@@ -325,9 +331,6 @@ HKCR,exefile,,2,"Application"
 HKCR,exefile\DefaultIcon,,2,"%1"
 HKCR,exefile\shell\open\command,,2,"""%1"" %*"
 HKCR,exefile\shell\runas\command,,2,"""%1"" %*"
-HKCR,folder\shell\open\ddeexec,,2,"[ViewFolder("%l", %I, %S)]"
-HKCR,folder\shell\open\ddeexec,"NoActivateHandler",2,""
-HKCR,folder\shell\open\ddeexec\application,,2,"Folders"
 HKCR,folder\shellex\ContextMenuHandlers,,16
 HKCR,folder\shellnew,"Directory",,""
 HKCR,folder\shellnew,"ItemName",,"@%11%\shell32.dll,-142"
@@ -372,6 +375,9 @@ HKCR,http\shell\open\command,,2,"""%11%\winebrowser.exe"" ""%1"""
 HKCR,https\shell\open\command,,2,"""%11%\winebrowser.exe"" ""%1"""
 HKCR,mailto\shell\open\command,,2,"""%11%\winebrowser.exe"" ""%1"""
 
+[RemoveClasses]
+HKCR,folder\shell\open\ddeexec
+
 [ContentIndex]
 HKLM,System\CurrentControlSet\Control\ContentIndex\Language\Neutral,"WBreakerClass",,"{369647e0-17b0-11ce-9950-00aa004bbb1f}"
 HKLM,System\CurrentControlSet\Control\ContentIndex\Language\Neutral,"StemmerClass",,""
-- 
2.50.1

