From 766cb869a815329985698856847062f4186c04f9 Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Sat, 28 Dec 2024 04:33:48 -0800
Subject: [PATCH] headers: change more __GNUC__ to (__GNUC__ || __clang__)

---
 dlls/ntdll/signal_i386.c        | 4 ++--
 dlls/oleaut32/vartype.c         | 2 +-
 dlls/vcomp/main.c               | 2 +-
 dlls/win32u/dibdrv/primitives.c | 4 ++--
 include/msvcrt/stdlib.h         | 2 +-
 include/winnt.h                 | 3 ++-
 6 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/dlls/ntdll/signal_i386.c b/dlls/ntdll/signal_i386.c
index dd7c33933ba..9bf742899a8 100644
--- a/dlls/ntdll/signal_i386.c
+++ b/dlls/ntdll/signal_i386.c
@@ -232,7 +232,7 @@ void WINAPI KiUserCallbackDispatcher( ULONG id, void *args, ULONG len )
  */
 static inline void save_fpu( CONTEXT *context )
 {
-#ifdef __GNUC__
+#if defined(__GNUC__) || defined(__clang__)
     struct
     {
         DWORD ControlWord;
@@ -264,7 +264,7 @@ static inline void save_fpu( CONTEXT *context )
  */
 static inline void save_fpux( CONTEXT *context )
 {
-#ifdef __GNUC__
+#if defined(__GNUC__) || defined(__clang__)
     /* we have to enforce alignment by hand */
     char buffer[sizeof(XSAVE_FORMAT) + 16];
     XSAVE_FORMAT *state = (XSAVE_FORMAT *)(((ULONG_PTR)buffer + 15) & ~15);
diff --git a/dlls/oleaut32/vartype.c b/dlls/oleaut32/vartype.c
index 747705f94e2..86a3f8b5950 100644
--- a/dlls/oleaut32/vartype.c
+++ b/dlls/oleaut32/vartype.c
@@ -3496,7 +3496,7 @@ HRESULT WINAPI VarCyFromR4(FLOAT fltIn, CY* pCyOut)
  */
 HRESULT WINAPI VarCyFromR8(double dblIn, CY* pCyOut)
 {
-#if defined(__GNUC__) && (defined(__i386__) || defined(__x86_64__))
+#if (defined(__GNUC__) || defined(__clang__)) && (defined(__i386__) || defined(__x86_64__))
   /* This code gives identical results to Win32 on Intel.
    * Here we use fp exceptions to catch overflows when storing the value.
    */
diff --git a/dlls/vcomp/main.c b/dlls/vcomp/main.c
index e3be001d302..01721215e1b 100644
--- a/dlls/vcomp/main.c
+++ b/dlls/vcomp/main.c
@@ -135,7 +135,7 @@ static void copy_va_list_data(void **args, va_list valist, int args_count)
         args[i] = va_arg(valist, void *);
 }
 
-#if defined(__GNUC__) && (defined(__i386__) || defined(__x86_64__))
+#if (defined(__GNUC__) || defined(__clang__)) && (defined(__i386__) || defined(__x86_64__))
 
 static inline char interlocked_cmpxchg8(char *dest, char xchg, char compare)
 {
diff --git a/dlls/win32u/dibdrv/primitives.c b/dlls/win32u/dibdrv/primitives.c
index 3633c687e78..b0d611db9e7 100644
--- a/dlls/win32u/dibdrv/primitives.c
+++ b/dlls/win32u/dibdrv/primitives.c
@@ -246,7 +246,7 @@ static inline void do_rop_codes_line_rev_4(BYTE *dst, int dst_x, const BYTE *src
 
 static inline void memset_32( DWORD *start, DWORD val, DWORD size )
 {
-#if defined(__GNUC__) && (defined(__i386__) || defined(__x86_64__))
+#if (defined(__GNUC__) || defined(__clang__)) && (defined(__i386__) || defined(__x86_64__))
     DWORD dummy;
     __asm__ __volatile__( "cld; rep; stosl"
                           : "=c" (dummy), "=D" (dummy)
@@ -258,7 +258,7 @@ static inline void memset_32( DWORD *start, DWORD val, DWORD size )
 
 static inline void memset_16( WORD *start, WORD val, DWORD size )
 {
-#if defined(__GNUC__) && (defined(__i386__) || defined(__x86_64__))
+#if (defined(__GNUC__) || defined(__clang__)) && (defined(__i386__) || defined(__x86_64__))
     DWORD dummy;
     __asm__ __volatile__( "cld; rep; stosw"
                           : "=c" (dummy), "=D" (dummy)
diff --git a/include/msvcrt/stdlib.h b/include/msvcrt/stdlib.h
index 9cb8ccb110a..7ce9b1068f9 100644
--- a/include/msvcrt/stdlib.h
+++ b/include/msvcrt/stdlib.h
@@ -231,7 +231,7 @@ _ACRTIMP float         __cdecl strtof(const char*,char**);
 _ACRTIMP float         __cdecl _strtof_l(const char*,char**,_locale_t);
 _ACRTIMP double        __cdecl strtod(const char*,char**);
 _ACRTIMP double        __cdecl _strtod_l(const char*,char**,_locale_t);
-#if defined(__GNUC__) || _MSVCR_VER < 120
+#if (defined(__GNUC__) || defined(__clang__)) || _MSVCR_VER < 120
 static inline long double strtold(const char *string, char **endptr) { return strtod(string, endptr); }
 static inline long double _strtold_l(const char *string, char **endptr, _locale_t locale) { return _strtod_l(string, endptr, locale); }
 #else
diff --git a/include/winnt.h b/include/winnt.h
index c6ed535c8d8..5e4a5694e18 100644
--- a/include/winnt.h
+++ b/include/winnt.h
@@ -221,7 +222,7 @@ extern "C" {
 #define __WINE_DEALLOC(...)
 #endif
 
-#if defined(__GNUC__) && (__GNUC__ > 2)
+#if (defined(__GNUC__) && (__GNUC__ > 2)) || defined(__clang__)
 #define __WINE_MALLOC __attribute__((malloc))
 #else
 #define __WINE_MALLOC
-- 
2.47.1

