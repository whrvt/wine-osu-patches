From 2303f24ee7fb119d9ab3dad1fb6eff3cf911b1ee Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Sun, 8 Sep 2024 02:47:03 -0700
Subject: [PATCH] configure.ac: Omit frame pointers and enforce stack alignment.

clang/llvm-mingw doesn't recognize the mpreferred-stack-boundary flag, but we
still want to ensure the stack is aligned to 4-byte boundaries to avoid any new
potential compiler bugs (like the one in mingw-gcc for march=avx512).
---
 configure.ac | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/configure.ac b/configure.ac
index 9a372361164..b23b539a2e6 100644
--- a/configure.ac
+++ b/configure.ac
@@ -960,12 +960,13 @@ This is an error since --enable-archs=$wine_arch was requested.])])
     WINE_TRY_PE_CFLAGS([-Wlogical-op])
     WINE_TRY_PE_CFLAGS([-Wabsolute-value])
     WINE_TRY_PE_CFLAGS([-Wenum-enum-conversion],[:],WINE_TRY_PE_CFLAGS([-Wenum-conversion]))
+    WINE_TRY_PE_CFLAGS([-fomit-frame-pointer])
 
     dnl GCC can't handle large files when -Wmisleading-indentation is enabled (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89549)
     WINE_TRY_PE_CFLAGS([-flarge-source-files -Wmisleading-indentation],[AS_VAR_APPEND(${wine_arch}_EXTRACFLAGS,[" -Wno-misleading-indentation"])])
 
     case $wine_arch in
-      i386) WINE_TRY_PE_CFLAGS([-fno-omit-frame-pointer])
+      i386) WINE_TRY_PE_CFLAGS([-mstack-alignment=2])
             WINE_TRY_PE_CFLAGS([-mpreferred-stack-boundary=2])
             WINE_TRY_PE_CFLAGS([-Wl,--disable-stdcall-fixup],
                                [AS_VAR_APPEND([${wine_arch}_LDFLAGS],[" -Wl,--disable-stdcall-fixup"])]) ;;
@@ -1953,7 +1954,6 @@ char*f(const char *h,char n) {return strchr(h,n);}]])],[ac_cv_c_logicalop_noisy=
 
   case $HOST_ARCH in
     dnl gcc-4.6+ omits frame pointers by default, breaking some copy protections
-    i386) WINE_TRY_CFLAGS([-fno-omit-frame-pointer],[MSVCRTFLAGS="$MSVCRTFLAGS -fno-omit-frame-pointer"]) ;;
     x86_64)
       case $host_os in
         dnl Mingw uses Windows 64-bit types, not Unix ones
@@ -1972,6 +1972,7 @@ int a(int b, ...) { __builtin_ms_va_list list; __builtin_ms_va_start(list,b); }]
       esac ;;
     arm)
       WINE_TRY_CFLAGS([-Wincompatible-function-pointer-types],[EXTRACFLAGS="$EXTRACFLAGS -Wno-error=incompatible-function-pointer-types"]) ;;
+    *) WINE_TRY_CFLAGS([-fomit-frame-pointer],[MSVCRTFLAGS="$MSVCRTFLAGS -fomit-frame-pointer"]) ;;
   esac
 
   CFLAGS=$saved_CFLAGS
-- 
2.46.0

