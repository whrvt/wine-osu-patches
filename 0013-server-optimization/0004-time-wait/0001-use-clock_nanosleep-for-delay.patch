diff --git a/configure.ac b/configure.ac
index d539ee50bda..7585324602c 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2170,6 +2170,17 @@ case $host_os in
     ;;
 esac
 
+dnl Check for clock_nanosleep which may be in -lrt
+case $host_os in
+    darwin*|macosx*) ;;
+    *) ac_save_LIBS=$LIBS
+        AC_SEARCH_LIBS(clock_nanosleep, rt,
+            [AC_DEFINE(HAVE_CLOCK_NANOSLEEP, 1, [Define to 1 if you have the `clock_nanosleep' function.])
+                test "$ac_res" = "none required" || AC_SUBST(RT_LIBS,"$ac_res")])
+    LIBS=$ac_save_LIBS
+    ;;
+esac
+
 AC_CACHE_CHECK([for sched_setaffinity],wine_cv_have_sched_setaffinity,
                 AC_LINK_IFELSE([AC_LANG_PROGRAM(
 [[#include <sched.h>]], [[sched_setaffinity(0, 0, 0);]])],[wine_cv_have_sched_setaffinity=yes],[wine_cv_have_sched_setaffinity=no]))
diff --git a/dlls/ntdll/unix/sync.c b/dlls/ntdll/unix/sync.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/sync.c
+++ b/dlls/ntdll/unix/sync.c
@@ -2851,10 +2851,39 @@ NTSTATUS WINAPI NtDelayExecution( BOOLEAN alertable, const LARGE_INTEGER *timeou
     }
     else
     {
+        LONGLONG ticks = timeout->QuadPart;
         LARGE_INTEGER now;
-        timeout_t when, diff;
+        timeout_t when = ticks, diff;
 
-        if ((when = timeout->QuadPart) < 0)
+#if defined(HAVE_CLOCK_GETTIME) && defined(HAVE_CLOCK_NANOSLEEP)
+        static BOOL disable_clock_nanosleep = FALSE;
+        if (!disable_clock_nanosleep && ticks != 0)
+        {
+            struct timespec when;
+            int err;
+
+            if (ticks < 0)
+            {
+                clock_gettime( CLOCK_REALTIME, &when );
+                when.tv_sec += (time_t)(-ticks / TICKSPERSEC);
+                when.tv_nsec += (long)((-ticks % TICKSPERSEC) * 100);
+            }
+            else
+            {
+                when.tv_sec = (time_t)((ticks / TICKSPERSEC) - SECS_1601_TO_1970);
+                when.tv_nsec = (long)((ticks % TICKSPERSEC) * 100);
+            }
+
+
+            while ((err = clock_nanosleep( CLOCK_REALTIME, TIMER_ABSTIME, &when, NULL )) == EINTR);
+            if (!err)
+                return STATUS_SUCCESS;
+            else
+                disable_clock_nanosleep = TRUE;
+        }
+#endif
+
+        if (when < 0)
         {
             NtQuerySystemTime( &now );
             when = now.QuadPart - when;
