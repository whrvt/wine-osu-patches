From 6b08723120e43f0053283d1f9faaf9c988093df8 Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Sun, 23 Feb 2025 20:03:56 -0800
Subject: [PATCH 2/2] ntdll: Improve spin_lock performance.

Don't spin on a CMPXCHG, and yield with an exponential backoff.
---
 dlls/ntdll/sync.c | 35 +++++++++++++++++++++++++++++++++--
 1 file changed, 33 insertions(+), 2 deletions(-)

diff --git a/dlls/ntdll/sync.c b/dlls/ntdll/sync.c
index 62b60e29cfe..4d2ba062646 100644
--- a/dlls/ntdll/sync.c
+++ b/dlls/ntdll/sync.c
@@ -1192,10 +1192,41 @@ static struct futex_queue *get_futex_queue( const void *addr )
     return &futex_queues[(val >> 4) % ARRAY_SIZE(futex_queues)];
 }
 
+#define SPINLOCK_MAX_SPINS    (1 << 7)
+#define SPINLOCK_READ_SPINS   8
+
 static void spin_lock( LONG *lock )
 {
-    while (InterlockedCompareExchange( lock, -1, 0 ))
-        YieldProcessor();
+    unsigned int spin_count = 0;
+    unsigned int pause_spins = 1;
+
+    if (!InterlockedCompareExchange( lock, -1, 0 ))
+        return;
+
+    for (;;)
+    {
+        unsigned int i;
+
+        for (i = 0; i < SPINLOCK_READ_SPINS; i++)
+        {
+            if (!*lock)
+            {
+                if (!InterlockedCompareExchange( lock, -1, 0 ))
+                    return;
+                break;
+            }
+
+            for (unsigned int p = 0; p < pause_spins; p++)
+                YieldProcessor();
+        }
+
+        spin_count++;
+        if (spin_count >= SPINLOCK_MAX_SPINS)
+        {
+            if (pause_spins < SPINLOCK_MAX_SPINS)
+                pause_spins *= 2;
+        }
+    }
 }
 
 static void spin_unlock( LONG *lock )
-- 
2.48.1

