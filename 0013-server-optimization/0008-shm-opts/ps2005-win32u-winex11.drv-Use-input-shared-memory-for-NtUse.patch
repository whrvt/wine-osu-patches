From d48b09e8c30d70bdd95dad7fc23e8823088ee933 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Fri, 21 Jul 2023 09:50:40 +0200
Subject: [PATCH 2005/7] win32u, winex11.drv: Use input shared memory for
 NtUserGetCursor.

---
 dlls/win32u/cursoricon.c | 10 ++++++++++
 dlls/win32u/sysparams.c  |  3 +++
 dlls/winex11.drv/mouse.c | 11 +++++++++++
 include/ntuser.h         |  1 +
 4 files changed, 25 insertions(+)

diff --git a/dlls/win32u/cursoricon.c b/dlls/win32u/cursoricon.c
index 11111111111..11111111111 100644
--- a/dlls/win32u/cursoricon.c
+++ b/dlls/win32u/cursoricon.c
@@ -133,8 +133,16 @@ HCURSOR WINAPI NtUserSetCursor( HCURSOR cursor )
  */
 HCURSOR WINAPI NtUserGetCursor(void)
 {
+    struct object_lock lock = OBJECT_LOCK_INIT;
+    const input_shm_t *input_shm;
+    NTSTATUS status;
     HCURSOR ret;
 
+    while ((status = get_shared_input( 0, &lock, &input_shm )) == STATUS_PENDING)
+    {
+        ret = (HCURSOR)input_shm->cursor;
+    }
+    if (status || !ret)
     SERVER_START_REQ( set_cursor )
     {
         req->flags = 0;
#diff --git a/dlls/win32u/sysparams.c b/dlls/win32u/sysparams.c
#index 11111111111..11111111111 100644
#--- a/dlls/win32u/sysparams.c
#+++ b/dlls/win32u/sysparams.c
#@@ -6650,6 +6650,9 @@ ULONG_PTR WINAPI NtUserCallTwoParam( ULONG_PTR arg1, ULONG_PTR arg2, ULONG code
#     /* temporary exports */
#     case NtUserAllocWinProc:
#         return (UINT_PTR)alloc_winproc( (WNDPROC)arg1, arg2 );
#+    
#+    case NtUserGetInputSharedMemory:
#+        return (ULONG_PTR)get_shared_input( 0, (struct object_lock *)arg1, (const input_shm_t **)arg2 );
# 
#     default:
#         FIXME( "invalid code %u\n", (int)code );
#
#diff --git a/dlls/winex11.drv/mouse.c b/dlls/winex11.drv/mouse.c
#index 11111111111..11111111111 100644
#--- a/dlls/winex11.drv/mouse.c
#+++ b/dlls/winex11.drv/mouse.c
#@@ -481,6 +481,9 @@ void x11drv_xinput2_init( struct x11drv_thread_data *data )
# static BOOL grab_clipping_window( const RECT *clip )
# {
# #ifdef HAVE_X11_EXTENSIONS_XINPUT2_H
#+    struct object_lock lock = OBJECT_LOCK_INIT;
#+    const input_shm_t *input_shm;
#+    NTSTATUS status;
#     struct x11drv_thread_data *data = x11drv_thread_data();
#     Window clip_window;
#     HCURSOR cursor;
#@@ -529,6 +532,12 @@ static BOOL grab_clipping_window( const RECT *clip )
#                        GrabModeAsync, GrabModeAsync, clip_window, None, CurrentTime ))
#         clipping_cursor = TRUE;
# 
#+    while ((status = (void *)NtUserCallTwoParam( &lock, &input_shm, NtUserCallTwoParam_NtUserGetInputSharedMemory )) == STATUS_PENDING)
#+    {
#+        if (input_shm->cursor_count < 0) cursor = 0;
#+        else cursor = input_shm->cursor;
#+    }
#+    if (status)
#     SERVER_START_REQ( set_cursor )
#     {
#         req->flags = 0;
#
#diff --git a/include/ntuser.h b/include/ntuser.h
#index 11111111111..11111111111 100644
#--- a/include/ntuser.h
#+++ b/include/ntuser.h
#@@ -1059,6 +1059,7 @@ enum
#     NtUserCallTwoParam_IsWindowRectFullScreen,
#     /* temporary exports */
#     NtUserAllocWinProc,
#+    NtUserGetInputSharedMemory,
# };
# 
# static inline DLGPROC NtUserGetDialogProc( DLGPROC proc, BOOL ansi )
-- 
0.0.0

