From f702acd9cd3f0a4718d97900bb3311708835e589 Mon Sep 17 00:00:00 2001
From: Stelios Tsampas <loathingkernel@gmail.com>
Date: Sun, 15 Dec 2024 01:59:50 +0200
Subject: [PATCH 31/32] ntsync: disable esync and fsync when ntsync is enabled

---
 dlls/ntdll/unix/esync.c | 3 ++-
 dlls/ntdll/unix/fsync.c | 3 ++-
 server/esync.c          | 3 ++-
 server/fsync.c          | 3 ++-
 server/main.c           | 3 +++
 5 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/dlls/ntdll/unix/esync.c b/dlls/ntdll/unix/esync.c
index 3074f7c72ea..126ef27c752 100644
--- a/dlls/ntdll/unix/esync.c
+++ b/dlls/ntdll/unix/esync.c
@@ -57,7 +57,8 @@ int do_esync(void)
     static int do_esync_cached = -1;
 
     if (do_esync_cached == -1)
-        do_esync_cached = getenv("WINEESYNC") && atoi(getenv("WINEESYNC")) && !do_fsync();
+        do_esync_cached = !(getenv("WINEESYNC") && !atoi(getenv("WINEESYNC"))) && !do_fsync() &&
+                          getenv( "WINE_DISABLE_FAST_SYNC" ) && atoi( getenv( "WINE_DISABLE_FAST_SYNC" ) );
 
     return do_esync_cached;
 #else
diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index c3da44e4f26..f719c339783 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -171,7 +171,8 @@ int do_fsync(void)
     if (do_fsync_cached == -1)
     {
         syscall( __NR_futex_waitv, NULL, 0, 0, NULL, 0 );
-        do_fsync_cached = getenv("WINEFSYNC") && atoi(getenv("WINEFSYNC")) && errno != ENOSYS;
+        do_fsync_cached = errno != ENOSYS && !(getenv("WINEFSYNC") && !atoi(getenv("WINEFSYNC"))) &&
+                          getenv( "WINE_DISABLE_FAST_SYNC" ) && atoi( getenv( "WINE_DISABLE_FAST_SYNC" ) );
     }
 
     return do_fsync_cached;
diff --git a/server/esync.c b/server/esync.c
index 24f3d41ad77..97deecd2514 100644
--- a/server/esync.c
+++ b/server/esync.c
@@ -51,7 +51,8 @@ int do_esync(void)
     static int do_esync_cached = -1;
 
     if (do_esync_cached == -1)
-        do_esync_cached = getenv("WINEESYNC") && atoi(getenv("WINEESYNC")) && !do_fsync();
+        do_esync_cached = !(getenv("WINEESYNC") && !atoi(getenv("WINEESYNC"))) && !do_fsync() &&
+                          getenv( "WINE_DISABLE_FAST_SYNC" ) && atoi( getenv( "WINE_DISABLE_FAST_SYNC" ) );
 
     return do_esync_cached;
 #else
diff --git a/server/fsync.c b/server/fsync.c
index d41fee58c0b..e1abfaae800 100644
--- a/server/fsync.c
+++ b/server/fsync.c
@@ -59,7 +59,8 @@ int do_fsync(void)
     if (do_fsync_cached == -1)
     {
         syscall( __NR_futex_waitv, 0, 0, 0, 0, 0);
-        do_fsync_cached = getenv("WINEFSYNC") && atoi(getenv("WINEFSYNC")) && errno != ENOSYS;
+        do_fsync_cached = errno != ENOSYS && !(getenv("WINEFSYNC") && !atoi(getenv("WINEFSYNC"))) &&
+                          getenv( "WINE_DISABLE_FAST_SYNC" ) && atoi( getenv( "WINE_DISABLE_FAST_SYNC" ) );
     }
 
     return do_fsync_cached;
diff --git a/server/main.c b/server/main.c
index d0a0a4879b5..d0ac24b0a1f 100644
--- a/server/main.c
+++ b/server/main.c
@@ -231,6 +231,8 @@ int main( int argc, char *argv[] )
 
     sock_init();
     open_master_socket();
+    if (getenv( "WINE_DISABLE_FAST_SYNC" ) && atoi( getenv( "WINE_DISABLE_FAST_SYNC" ) ))
+    {
 
     if (do_fsync())
         fsync_init();
@@ -240,6 +242,7 @@ int main( int argc, char *argv[] )
 
     if (!do_fsync() && !do_esync())
         fprintf( stderr, "wineserver: using server-side synchronization.\n" );
+    }
 
     if (debug_level) fprintf( stderr, "wineserver: starting (pid=%ld)\n", (long) getpid() );
     set_current_time();
-- 
2.47.1


