From 9d4307cd0ca1a8216cc71ded627106439425eb7a Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Thu, 26 Dec 2024 07:00:02 -0800
Subject: [PATCH] ntdll: Increase cache entries to 256.

Match esync/fsync size to reduce 'too many allocated handles, not caching'.
---
 dlls/ntdll/unix/server.c | 2 +-
 dlls/ntdll/unix/sync.c   | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/dlls/ntdll/unix/server.c b/dlls/ntdll/unix/server.c
index 04feea53b3d..295d98b29b9 100644
--- a/dlls/ntdll/unix/server.c
+++ b/dlls/ntdll/unix/server.c
@@ -1043,7 +1043,7 @@ union fd_cache_entry
 C_ASSERT( sizeof(union fd_cache_entry) == sizeof(LONG64) );
 
 #define FD_CACHE_BLOCK_SIZE  (65536 / sizeof(union fd_cache_entry))
-#define FD_CACHE_ENTRIES     128
+#define FD_CACHE_ENTRIES     256
 
 static union fd_cache_entry *fd_cache[FD_CACHE_ENTRIES];
 static union fd_cache_entry fd_cache_initial_block[FD_CACHE_BLOCK_SIZE];
diff --git a/dlls/ntdll/unix/sync.c b/dlls/ntdll/unix/sync.c
index b89430f3edc..b06fb6eb378 100644
--- a/dlls/ntdll/unix/sync.c
+++ b/dlls/ntdll/unix/sync.c
@@ -474,7 +474,7 @@ static void release_inproc_sync_obj( struct inproc_sync_cache_entry *cache )
 
 
 #define INPROC_SYNC_CACHE_BLOCK_SIZE  (65536 / sizeof(struct inproc_sync_cache_entry))
-#define INPROC_SYNC_CACHE_ENTRIES     128
+#define INPROC_SYNC_CACHE_ENTRIES     256
 
 static struct inproc_sync_cache_entry *inproc_sync_cache[INPROC_SYNC_CACHE_ENTRIES];
 static struct inproc_sync_cache_entry inproc_sync_cache_initial_block[INPROC_SYNC_CACHE_BLOCK_SIZE];
-- 
2.47.1

