From 907704581cb90de9b267e83c41ff57f254a01ad1 Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Sun, 13 Oct 2024 19:40:09 -0700
Subject: [PATCH] winex11: Enforce stricter criteria for enabling osu! childwindow
 hack.

---
 dlls/winex11.drv/init.c | 41 ++++++++++++++++++++++++++++++++++-------
 1 file changed, 34 insertions(+), 7 deletions(-)

diff --git a/dlls/winex11.drv/init.c b/dlls/winex11.drv/init.c
index 361641eeed6..50be2a74f88 100644
--- a/dlls/winex11.drv/init.c
+++ b/dlls/winex11.drv/init.c
@@ -194,8 +194,17 @@ static HFONT X11DRV_SelectFont( PHYSDEV dev, HFONT hfont, UINT *aa_flags )
     return dev->funcs->pSelectFont( dev, hfont, aa_flags );
 }
 
-static BOOL editor_class_matches( HWND hwnd )
+enum osu_window_type 
 {
+    GAME,
+    EDITOR
+};
+
+static BOOL class_matches( HWND hwnd, enum osu_window_type type )
+{
+    static const WCHAR editor_class[] = {'W','i','n','d','o','w','s','F','o','r','m','s','1','0','.','W','i','n','d','o','w','.','8','0','8','.','a','p','p','.', 0};
+    static const WCHAR game_class[] = {'W','i','n','d','o','w','s','F','o','r','m','s','1','0','.','W','i','n','d','o','w','.','2','b','.','a','p','p','.', 0};
+
     WCHAR buffer[256];
     UNICODE_STRING name = { .Buffer = buffer, .MaximumLength = sizeof(buffer) };
 
@@ -203,23 +212,25 @@ static BOOL editor_class_matches( HWND hwnd )
 
     if (length > 0)
     {
-        static const WCHAR substr[] = {'W','i','n','d','o','w','s','F','o','r','m','s','1','0','.','W','i','n','d','o','w','.','8','0','8','.','a','p','p','.', 0};
-        return wcsncmp( buffer, substr, wcslen(substr) - 1 ) == 0;
+        if (type == EDITOR)
+            return wcsncmp( buffer, editor_class, wcslen(editor_class) - 1 ) == 0;
+        else /* GAME */
+            return wcsncmp( buffer, game_class, wcslen(game_class) - 1 ) == 0;
     }
     return FALSE;
 }
 
-static BOOL editor_visible( HWND current )
+static BOOL window_visible( HWND current, enum osu_window_type type )
 {
     while (current)
     {
-        if (editor_class_matches( current ))
+        if (class_matches( current, type ))
             return TRUE;
 
         HWND child = NtUserGetWindowRelative( current, GW_CHILD );
         if (child)
         {
-            if (editor_visible( child ))
+            if (window_visible( child, type ))
                 return TRUE;
         }
         current = NtUserGetWindowRelative( current, GW_HWNDNEXT );
@@ -227,10 +238,26 @@ static BOOL editor_visible( HWND current )
     return FALSE;
 }
 
+static BOOL osu_rendering_bypass( HWND hwnd )
+{
+    if (!use_osu_child_hack())
+        return FALSE;
+
+    if (//!window_visible( NtUserGetDesktopWindow(), GAME ) ||
+        NtUserGetWindowLongW( hwnd, GWL_EXSTYLE ) & WS_EX_LAYERED /* translucent windows don't like to be rendered onscreen */
+     || window_visible( NtUserGetDesktopWindow(), EDITOR ))
+    {
+        TRACE("osu! onscreen bypass disabled or not needed for %p\n", hwnd);
+        return FALSE;
+    }
+    TRACE("osu! onscreen bypass enabled for %p\n", hwnd);
+    return TRUE;
+}
+
 BOOL needs_offscreen_rendering( HWND hwnd, BOOL known_child )
 {
     if (NtUserGetDpiForWindow( hwnd ) != NtUserGetWinMonitorDpi( hwnd, MDT_DEFAULT )) return TRUE; /* needs DPI scaling */
-    if (!use_osu_child_hack() || (NtUserGetWindowLongW( hwnd, GWL_EXSTYLE ) & WS_EX_LAYERED) || editor_visible( NtUserGetDesktopWindow() ))
+    if (!osu_rendering_bypass( hwnd ))
     {
         if (NtUserGetAncestor( hwnd, GA_PARENT ) != NtUserGetDesktopWindow()) return TRUE; /* child window, needs compositing */
         if (NtUserGetWindowRelative( hwnd, GW_CHILD )) return TRUE; /* window has children, needs compositing */
-- 
2.47.0

