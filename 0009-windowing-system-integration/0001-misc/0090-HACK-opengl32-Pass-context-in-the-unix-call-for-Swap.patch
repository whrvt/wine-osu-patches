From 52790c00e6b0c6facd11d043d8f2ed3a3fce56a0 Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Sat, 22 Feb 2025 12:13:12 -0800
Subject: [PATCH] HACK: opengl32: Pass context in the unix call for
 SwapBuffers.

---
 dlls/opengl32/make_opengl     | 15 ++++++++++--
 dlls/opengl32/opengl32.spec   |  2 +-
 dlls/opengl32/thunks.c        |  2 ++
 dlls/opengl32/unix_thunks.c   | 43 ++++++++---------------------------
 dlls/opengl32/unix_wgl.c      | 31 +++++++++++++++++++++++++
 dlls/opengl32/unixlib.h       | 17 +++++++-------
 dlls/opengl32/wgl.c           | 25 ++------------------
 dlls/opengl32/winegl.xml      | 10 ++++++++
 dlls/win32u/dibdrv/dc.c       |  8 +++----
 dlls/wineandroid.drv/opengl.c |  4 +---
 dlls/wined3d/adapter_gl.c     |  2 +-
 dlls/wined3d/swapchain.c      |  2 +-
 dlls/winemac.drv/opengl.c     |  9 ++++----
 dlls/winewayland.drv/opengl.c |  7 +++---
 dlls/winex11.drv/opengl.c     |  9 ++++----
 include/wine/wgl_driver.h     |  4 ++--
 16 files changed, 97 insertions(+), 93 deletions(-)

diff --git a/dlls/opengl32/make_opengl b/dlls/opengl32/make_opengl
index 1e55fdf45aa..035f853ed9b 100755
--- a/dlls/opengl32/make_opengl
+++ b/dlls/opengl32/make_opengl
@@ -229,6 +229,7 @@ my %manual_wow64_thunks =
      "wglMakeCurrent" => 1,
      "wglQueryCurrentRendererStringWINE" => 1,
      "wglQueryRendererStringWINE" => 1,
+     "wglSwapBuffers" => 1,
     );
 my %pointer_array_count =
     (
@@ -661,7 +662,7 @@ my %remapped_wgl_functions =
      "GetPixelFormat" => "wglGetPixelFormat",
      "GetEnhMetaFilePixelFormat" => 0,
      "SetPixelFormat" => "wglSetPixelFormat",
-     "SwapBuffers" => "wglSwapBuffers",
+     "SwapBuffers" => 0,
      "wglUseFontBitmaps" => 0,
      "wglUseFontOutlines" => 0,
     );
@@ -694,6 +695,7 @@ my %supported_wgl_extensions =
     "WGL_NV_vertex_array_range" => 1,
     "WGL_WINE_pixel_format_passthrough" => 1,
     "WGL_WINE_query_renderer" => 1,
+    "WGL_WINE_swap_buffers" => 1,
    );
 
 my %supported_apis =
@@ -1012,6 +1014,8 @@ foreach (sort keys %wgl_functions)
     printf SPEC "%s\n", generate_spec_entry( $_, $wgl_functions{$_} );
 }
 
+printf SPEC "@ stdcall wglSwapBuffers(long)\n",;
+
 close(SPEC);
 
 #
@@ -1153,7 +1157,14 @@ foreach (sort keys %ext_functions)
     next unless defined $manual_win_functions{$_} || $manual_win_thunks{$_};
     my $decl_args = get_func_args( $ext_functions{$_}, 1, 0, "" );
     my $func_ret = get_func_ret( $ext_functions{$_}, 0 );
-    printf OUT "extern %s WINAPI %s(%s);\n", $func_ret, $_, $decl_args;
+    if ($_ eq "wglSwapBuffers")
+    {
+        printf OUT "extern %s WINAPI %s( HDC hdc );\n", $func_ret, $_;
+    }
+    else
+    {
+        printf OUT "extern %s WINAPI %s(%s);\n", $func_ret, $_, $decl_args;
+    }
 }
 
 print OUT "const void *extension_procs[] =\n";
diff --git a/dlls/opengl32/opengl32.spec b/dlls/opengl32/opengl32.spec
index 94a3dfd0757..a411b9d852f 100644
--- a/dlls/opengl32/opengl32.spec
+++ b/dlls/opengl32/opengl32.spec
@@ -353,9 +353,9 @@
 @ stdcall wglSetLayerPaletteEntries(long long long long ptr)
 @ stdcall wglSetPixelFormat(long long ptr)
 @ stdcall wglShareLists(long long)
-@ stdcall wglSwapBuffers(long)
 @ stdcall wglSwapLayerBuffers(long long)
 @ stdcall wglUseFontBitmapsA(long long long long)
 @ stdcall wglUseFontBitmapsW(long long long long)
 @ stdcall wglUseFontOutlinesA(long long long long float float long ptr)
 @ stdcall wglUseFontOutlinesW(long long long long float float long ptr)
+@ stdcall wglSwapBuffers(long)
diff --git a/dlls/opengl32/thunks.c b/dlls/opengl32/thunks.c
index ccabbbc7519..7abbccbe71e 100644
--- a/dlls/opengl32/thunks.c
+++ b/dlls/opengl32/thunks.c
@@ -24318,6 +24318,7 @@ extern BOOL WINAPI wglGetPixelFormatAttribfvARB( HDC hdc, int iPixelFormat, int
 extern BOOL WINAPI wglGetPixelFormatAttribivARB( HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues );
 extern const GLchar * WINAPI wglQueryCurrentRendererStringWINE( GLenum attribute );
 extern const GLchar * WINAPI wglQueryRendererStringWINE( HDC dc, GLint renderer, GLenum attribute );
+extern BOOL WINAPI wglSwapBuffers( HDC hdc );
 const void *extension_procs[] =
 {
     glAccumxOES,
@@ -27013,5 +27014,6 @@ const void *extension_procs[] =
     wglReleaseTexImageARB,
     wglSetPbufferAttribARB,
     wglSetPixelFormatWINE,
+    wglSwapBuffers,
     wglSwapIntervalEXT,
 };
diff --git a/dlls/opengl32/unix_thunks.c b/dlls/opengl32/unix_thunks.c
index 5afe6c34fb3..9ee13307a13 100644
--- a/dlls/opengl32/unix_thunks.c
+++ b/dlls/opengl32/unix_thunks.c
@@ -48,6 +48,7 @@ extern NTSTATUS ext_wglQueryPbufferARB( void *args );
 extern NTSTATUS ext_wglReleasePbufferDCARB( void *args );
 extern NTSTATUS ext_wglReleaseTexImageARB( void *args );
 extern NTSTATUS ext_wglSetPbufferAttribARB( void *args );
+extern NTSTATUS ext_wglSwapBuffers( void *args );
 
 static NTSTATUS wgl_wglGetPixelFormat( void *args )
 {
@@ -67,15 +68,6 @@ static NTSTATUS wgl_wglSetPixelFormat( void *args )
     return STATUS_SUCCESS;
 }
 
-static NTSTATUS wgl_wglSwapBuffers( void *args )
-{
-    struct wglSwapBuffers_params *params = args;
-    const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->wgl.p_wglSwapBuffers) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->wgl.p_wglSwapBuffers( params->hdc );
-    return STATUS_SUCCESS;
-}
-
 static NTSTATUS gl_glAccum( void *args )
 {
     struct glAccum_params *params = args;
@@ -24209,7 +24201,6 @@ const unixlib_entry_t __wine_unix_call_funcs[] =
     wgl_wglMakeCurrent,
     wgl_wglSetPixelFormat,
     wgl_wglShareLists,
-    wgl_wglSwapBuffers,
     gl_glAccum,
     gl_glAlphaFunc,
     gl_glAreTexturesResident,
@@ -27239,6 +27230,7 @@ const unixlib_entry_t __wine_unix_call_funcs[] =
     ext_wglReleaseTexImageARB,
     ext_wglSetPbufferAttribARB,
     ext_wglSetPixelFormatWINE,
+    ext_wglSwapBuffers,
     ext_wglSwapIntervalEXT,
 };
 
@@ -27338,25 +27330,6 @@ static NTSTATUS wow64_wgl_wglShareLists( void *args )
     return status;
 }
 
-static NTSTATUS wow64_wgl_wglSwapBuffers( void *args )
-{
-    struct
-    {
-        PTR32 teb;
-        PTR32 hdc;
-        BOOL ret;
-    } *params32 = args;
-    struct wglSwapBuffers_params params =
-    {
-        .teb = get_teb64(params32->teb),
-        .hdc = ULongToPtr(params32->hdc),
-    };
-    NTSTATUS status;
-    status = wgl_wglSwapBuffers( &params );
-    params32->ret = params.ret;
-    return status;
-}
-
 static NTSTATUS wow64_gl_glAccum( void *args )
 {
     struct
@@ -92293,6 +92266,7 @@ extern NTSTATUS wow64_ext_wglGetPbufferDCARB( void *args );
 extern NTSTATUS wow64_ext_wglMakeContextCurrentARB( void *args );
 extern NTSTATUS wow64_ext_wglQueryCurrentRendererStringWINE( void *args );
 extern NTSTATUS wow64_ext_wglQueryRendererStringWINE( void *args );
+extern NTSTATUS wow64_ext_wglSwapBuffers( void *args );
 
 const unixlib_entry_t __wine_unix_call_wow64_funcs[] =
 {
@@ -92308,7 +92282,6 @@ const unixlib_entry_t __wine_unix_call_wow64_funcs[] =
     wow64_wgl_wglMakeCurrent,
     wow64_wgl_wglSetPixelFormat,
     wow64_wgl_wglShareLists,
-    wow64_wgl_wglSwapBuffers,
     wow64_gl_glAccum,
     wow64_gl_glAlphaFunc,
     wow64_gl_glAreTexturesResident,
@@ -95338,6 +95311,7 @@ const unixlib_entry_t __wine_unix_call_wow64_funcs[] =
     wow64_ext_wglReleaseTexImageARB,
     wow64_ext_wglSetPbufferAttribARB,
     wow64_ext_wglSetPixelFormatWINE,
+    wow64_ext_wglSwapBuffers,
     wow64_ext_wglSwapIntervalEXT,
 };
 
@@ -95353,7 +95327,6 @@ static PROC null_wglGetProcAddress( LPCSTR lpszProc ) { return 0; }
 static BOOL null_wglMakeCurrent( HDC hDc, struct wgl_context * newContext ) { return 0; }
 static BOOL null_wglSetPixelFormat( HDC hdc, int ipfd, const PIXELFORMATDESCRIPTOR *ppfd ) { return 0; }
 static BOOL null_wglShareLists( struct wgl_context * hrcSrvShare, struct wgl_context * hrcSrvSource ) { return 0; }
-static BOOL null_wglSwapBuffers( HDC hdc ) { return 0; }
 static void null_glAccum( GLenum op, GLfloat value ) { }
 static void null_glAlphaFunc( GLenum func, GLfloat ref ) { }
 static GLboolean null_glAreTexturesResident( GLsizei n, const GLuint *textures, GLboolean *residences ) { return 0; }
@@ -98383,6 +98356,7 @@ static int null_wglReleasePbufferDCARB( struct wgl_pbuffer * hPbuffer, HDC hDC )
 static BOOL null_wglReleaseTexImageARB( struct wgl_pbuffer * hPbuffer, int iBuffer ) { return 0; }
 static BOOL null_wglSetPbufferAttribARB( struct wgl_pbuffer * hPbuffer, const int *piAttribList ) { return 0; }
 static BOOL null_wglSetPixelFormatWINE( HDC hdc, int format ) { return 0; }
+static BOOL null_wglSwapBuffers( HDC hdc, struct wgl_context * ctx ) { return 0; }
 static BOOL null_wglSwapIntervalEXT( int interval ) { return 0; }
 
 struct opengl_funcs null_opengl_funcs =
@@ -98396,7 +98370,6 @@ struct opengl_funcs null_opengl_funcs =
         null_wglMakeCurrent,
         null_wglSetPixelFormat,
         null_wglShareLists,
-        null_wglSwapBuffers,
     },
     {
         null_glAccum,
@@ -101430,12 +101403,13 @@ struct opengl_funcs null_opengl_funcs =
         null_wglReleaseTexImageARB,
         null_wglSetPbufferAttribARB,
         null_wglSetPixelFormatWINE,
+        null_wglSwapBuffers,
         null_wglSwapIntervalEXT,
     },
 };
 
-const int extension_registry_size = 2694;
-const struct registry_entry extension_registry[2694] =
+const int extension_registry_size = 2695;
+const struct registry_entry extension_registry[2695] =
 {
     { "glAccumxOES", "GL_OES_fixed_point" },
     { "glAcquireKeyedMutexWin32EXT", "GL_EXT_win32_keyed_mutex" },
@@ -104130,5 +104104,6 @@ const struct registry_entry extension_registry[2694] =
     { "wglReleaseTexImageARB", "WGL_ARB_render_texture" },
     { "wglSetPbufferAttribARB", "WGL_ARB_render_texture" },
     { "wglSetPixelFormatWINE", "WGL_WINE_pixel_format_passthrough" },
+    { "wglSwapBuffers", "WGL_WINE_swap_buffers" },
     { "wglSwapIntervalEXT", "WGL_EXT_swap_control" },
 };
diff --git a/dlls/opengl32/unix_wgl.c b/dlls/opengl32/unix_wgl.c
index 93f362b7f40..8f9d1d50043 100644
--- a/dlls/opengl32/unix_wgl.c
+++ b/dlls/opengl32/unix_wgl.c
@@ -1000,6 +1000,15 @@ NTSTATUS wgl_wglGetProcAddress( void *args )
     return STATUS_SUCCESS;
 }
 
+NTSTATUS ext_wglSwapBuffers( void *args )
+{
+    struct wglSwapBuffers_params *params = args;
+    const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
+    if (!funcs || !funcs->ext.p_wglSwapBuffers) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->ext.p_wglSwapBuffers( params->hdc, params->ctx );
+    return STATUS_SUCCESS;
+}
+
 NTSTATUS wgl_wglMakeCurrent( void *args )
 {
     struct wglMakeCurrent_params *params = args;
@@ -1211,6 +1220,7 @@ extern NTSTATUS ext_wglGetExtensionsStringARB( void *args );
 extern NTSTATUS ext_wglGetExtensionsStringEXT( void *args );
 extern NTSTATUS ext_wglQueryCurrentRendererStringWINE( void *args );
 extern NTSTATUS ext_wglQueryRendererStringWINE( void *args );
+extern NTSTATUS ext_wglSwapBuffers( void *args );
 
 struct wow64_string_entry
 {
@@ -1431,6 +1441,27 @@ NTSTATUS wow64_wgl_wglGetProcAddress( void *args )
     return STATUS_SUCCESS;
 }
 
+NTSTATUS wow64_ext_wglSwapBuffers( void *args )
+{
+    struct
+    {
+        PTR32 teb;
+        PTR32 hdc;
+        PTR32 ctx;
+        BOOL ret;
+    } *params32 = args;
+    struct wglSwapBuffers_params params =
+    {
+        .teb = get_teb64(params32->teb),
+        .hdc = ULongToPtr(params32->hdc),
+        .ctx = get_teb64(params32->teb)->glContext
+    };
+    NTSTATUS status;
+    status = ext_wglSwapBuffers( &params );
+    params32->ret = params.ret;
+    return status;
+}
+
 NTSTATUS wow64_gl_glGetString( void *args )
 {
     struct
diff --git a/dlls/opengl32/unixlib.h b/dlls/opengl32/unixlib.h
index 3eea4745aa1..017f45d4717 100644
--- a/dlls/opengl32/unixlib.h
+++ b/dlls/opengl32/unixlib.h
@@ -84,13 +84,6 @@ struct wglShareLists_params
     BOOL ret;
 };
 
-struct wglSwapBuffers_params
-{
-    TEB *teb;
-    HDC hdc;
-    BOOL ret;
-};
-
 struct glAccum_params
 {
     TEB *teb;
@@ -25320,6 +25313,14 @@ struct wglSetPixelFormatWINE_params
     BOOL ret;
 };
 
+struct wglSwapBuffers_params
+{
+    TEB *teb;
+    HDC hdc;
+    HGLRC ctx;
+    BOOL ret;
+};
+
 struct wglSwapIntervalEXT_params
 {
     TEB *teb;
@@ -25351,7 +25352,6 @@ enum unix_funcs
     unix_wglMakeCurrent,
     unix_wglSetPixelFormat,
     unix_wglShareLists,
-    unix_wglSwapBuffers,
     unix_glAccum,
     unix_glAlphaFunc,
     unix_glAreTexturesResident,
@@ -28381,6 +28381,7 @@ enum unix_funcs
     unix_wglReleaseTexImageARB,
     unix_wglSetPbufferAttribARB,
     unix_wglSetPixelFormatWINE,
+    unix_wglSwapBuffers,
     unix_wglSwapIntervalEXT,
     funcs_count
 };
diff --git a/dlls/opengl32/wgl.c b/dlls/opengl32/wgl.c
index 01e0e66f0fd..aea732447be 100644
--- a/dlls/opengl32/wgl.c
+++ b/dlls/opengl32/wgl.c
@@ -913,29 +913,8 @@ INT WINAPI wglGetPixelFormat(HDC hdc)
  */
 BOOL WINAPI DECLSPEC_HOTPATCH wglSwapBuffers( HDC hdc )
 {
-    struct wglSwapBuffers_params args = { .teb = NtCurrentTeb(), .hdc = hdc };
-    NTSTATUS status;
-
-    if ((status = UNIX_CALL( wglSwapBuffers, &args ))) WARN( "wglSwapBuffers returned %#lx\n", status );
-    else if (TRACE_ON(fps))
-    {
-        static long prev_time, start_time;
-        static unsigned long frames, frames_total;
-
-        DWORD time = GetTickCount();
-        frames++;
-        frames_total++;
-        /* every 1.5 seconds */
-        if (time - prev_time > 1500)
-        {
-            TRACE_(fps)("@ approx %.2ffps, total %.2ffps\n",
-                        1000.0*frames/(time - prev_time), 1000.0*frames_total/(time - start_time));
-            prev_time = time;
-            frames = 0;
-            if (start_time == 0) start_time = time;
-        }
-    }
-
+    struct wglSwapBuffers_params args = { .teb = NtCurrentTeb(), .hdc = hdc, .ctx = NtCurrentTeb()->glContext };
+    UNIX_CALL( wglSwapBuffers, &args );
     return args.ret;
 }
 
diff --git a/dlls/opengl32/winegl.xml b/dlls/opengl32/winegl.xml
index 7918c3ff894..e58b401af95 100644
--- a/dlls/opengl32/winegl.xml
+++ b/dlls/opengl32/winegl.xml
@@ -306,6 +306,11 @@ Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
             <param><ptype>HDC</ptype> <name>hdc</name></param>
             <param>int <name>format</name></param>
         </command>
+        <command>
+            <proto>BOOL <name>wglSwapBuffers</name></proto>
+            <param><ptype>HDC</ptype> <name>hdc</name></param>
+            <param><ptype>HGLRC</ptype> <name>ctx</name></param>
+        </command>
         <command>
             <proto>BOOL <name>wglQueryCurrentRendererIntegerWINE</name></proto>
             <param><ptype>GLenum</ptype> <name>attribute</name></param>
@@ -418,6 +423,11 @@ Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
                 <command name="wglSetPixelFormatWINE"/>
             </require>
         </extension>
+        <extension name="WGL_WINE_swap_buffers" supported="wgl">
+            <require>
+                <command name="wglSwapBuffers"/>
+            </require>
+        </extension>
         <extension name="WGL_WINE_query_renderer" supported="wgl">
             <require>
                 <enum name="WGL_RENDERER_ACCELERATED_WINE"/>
diff --git a/dlls/win32u/dibdrv/dc.c b/dlls/win32u/dibdrv/dc.c
index 60cd41142b2..012befe1378 100644
--- a/dlls/win32u/dibdrv/dc.c
+++ b/dlls/win32u/dibdrv/dc.c
@@ -571,7 +571,7 @@ static BOOL dibdrv_wglShareLists( struct wgl_context *org, struct wgl_context *d
 /***********************************************************************
  *		dibdrv_wglSwapBuffers
  */
-static BOOL dibdrv_wglSwapBuffers( HDC hdc )
+static BOOL dibdrv_wglSwapBuffers( HDC hdc, struct wgl_context *ctx )
 {
     return TRUE;
 }
@@ -596,7 +596,7 @@ static void dibdrv_get_pixel_formats( struct wgl_pixel_format *formats,
 
 static struct opengl_funcs opengl_funcs =
 {
-    {
+    .wgl = {
         dibdrv_wglCopyContext,         /* p_wglCopyContext */
         dibdrv_wglCreateContext,       /* p_wglCreateContext */
         dibdrv_wglDeleteContext,       /* p_wglDeleteContext */
@@ -605,9 +605,9 @@ static struct opengl_funcs opengl_funcs =
         dibdrv_wglMakeCurrent,         /* p_wglMakeCurrent */
         dibdrv_wglSetPixelFormat,      /* p_wglSetPixelFormat */
         dibdrv_wglShareLists,          /* p_wglShareLists */
-        dibdrv_wglSwapBuffers,         /* p_wglSwapBuffers */
         dibdrv_get_pixel_formats,      /* p_get_pixel_formats */
-    }
+    },
+    .ext = {.p_wglSwapBuffers = dibdrv_wglSwapBuffers,}
 };
 
 /**********************************************************************
diff --git a/dlls/wineandroid.drv/opengl.c b/dlls/wineandroid.drv/opengl.c
index 7981b9be9ee..a6793614116 100644
--- a/dlls/wineandroid.drv/opengl.c
+++ b/dlls/wineandroid.drv/opengl.c
@@ -579,10 +579,8 @@ static BOOL android_wglShareLists( struct wgl_context *org, struct wgl_context *
 /***********************************************************************
  *		android_wglSwapBuffers
  */
-static BOOL android_wglSwapBuffers( HDC hdc )
+static BOOL android_wglSwapBuffers( HDC hdc, struct wgl_context *ctx )
 {
-    struct wgl_context *ctx = NtCurrentTeb()->glContext;
-
     if (!ctx) return FALSE;
 
     TRACE( "%p hwnd %p context %p surface %p\n", hdc, ctx->hwnd, ctx->context, ctx->surface );
diff --git a/dlls/wined3d/adapter_gl.c b/dlls/wined3d/adapter_gl.c
index a83ec8fecc3..74d4b6390e2 100644
--- a/dlls/wined3d/adapter_gl.c
+++ b/dlls/wined3d/adapter_gl.c
@@ -5046,7 +5046,7 @@ static BOOL wined3d_adapter_gl_init(struct wined3d_adapter_gl *adapter_gl,
 #define USE_GL_FUNC(f) gl_info->gl_ops.gl.p_##f = (void *)GetProcAddress(mod_gl, #f);
         ALL_WGL_FUNCS
 #undef USE_GL_FUNC
-        gl_info->gl_ops.wgl.p_wglSwapBuffers = (void *)GetProcAddress(mod_gl, "wglSwapBuffers");
+        gl_info->gl_ops.ext.p_wglSwapBuffers = (void *)GetProcAddress(mod_gl, "wglSwapBuffers");
         gl_info->gl_ops.wgl.p_wglGetPixelFormat = (void *)GetProcAddress(mod_gl, "wglGetPixelFormat");
     }
 
diff --git a/dlls/wined3d/swapchain.c b/dlls/wined3d/swapchain.c
index 4e71f75884c..f7ee0ec781b 100644
--- a/dlls/wined3d/swapchain.c
+++ b/dlls/wined3d/swapchain.c
@@ -625,7 +625,7 @@ static void swapchain_gl_present(struct wined3d_swapchain *swapchain,
         }
 
         /* call wglSwapBuffers through the gl table to avoid confusing the Steam overlay */
-        gl_info->gl_ops.wgl.p_wglSwapBuffers(context_gl->dc);
+        gl_info->gl_ops.ext.p_wglSwapBuffers(context_gl->dc, context_gl->gl_ctx);
     }
 
     if (context->d3d_info->fences)
diff --git a/dlls/winemac.drv/opengl.c b/dlls/winemac.drv/opengl.c
index 68de39f49cd..7582e02635e 100644
--- a/dlls/winemac.drv/opengl.c
+++ b/dlls/winemac.drv/opengl.c
@@ -4487,9 +4487,8 @@ static BOOL macdrv_wglShareLists(struct wgl_context *org, struct wgl_context *de
 /**********************************************************************
  *              macdrv_wglSwapBuffers
  */
-static BOOL macdrv_wglSwapBuffers(HDC hdc)
+static BOOL macdrv_wglSwapBuffers(HDC hdc, struct wgl_context *context)
 {
-    struct wgl_context *context = NtCurrentTeb()->glContext;
     BOOL match = FALSE;
     HWND hwnd;
 
@@ -4571,7 +4570,7 @@ static void macdrv_get_pixel_formats(struct wgl_pixel_format *formats,
 
 static struct opengl_funcs opengl_funcs =
 {
-    {
+    .wgl = {
         macdrv_wglCopyContext,          /* p_wglCopyContext */
         macdrv_wglCreateContext,        /* p_wglCreateContext */
         macdrv_wglDeleteContext,        /* p_wglDeleteContext */
@@ -4580,9 +4579,9 @@ static struct opengl_funcs opengl_funcs =
         macdrv_wglMakeCurrent,          /* p_wglMakeCurrent */
         macdrv_wglSetPixelFormat,       /* p_wglSetPixelFormat */
         macdrv_wglShareLists,           /* p_wglShareLists */
-        macdrv_wglSwapBuffers,          /* p_wglSwapBuffers */
         macdrv_get_pixel_formats,       /* p_get_pixel_formats */
-    }
+    },
+    .ext = {.p_wglSwapBuffers = macdrv_wglSwapBuffers,}
 };
 
 /**********************************************************************
diff --git a/dlls/winewayland.drv/opengl.c b/dlls/winewayland.drv/opengl.c
index b8b673f398a..ad8b20cfb01 100644
--- a/dlls/winewayland.drv/opengl.c
+++ b/dlls/winewayland.drv/opengl.c
@@ -705,9 +705,8 @@ static BOOL wayland_wglShareLists(struct wgl_context *orig, struct wgl_context *
     return TRUE;
 }
 
-static BOOL wayland_wglSwapBuffers(HDC hdc)
+static BOOL wayland_wglSwapBuffers(HDC hdc, struct wgl_context *ctx)
 {
-    struct wgl_context *ctx = NtCurrentTeb()->glContext;
     HWND hwnd = NtUserWindowFromDC(hdc), toplevel = NtUserGetAncestor(hwnd, GA_ROOT);
     struct wayland_gl_drawable *gl;
 
@@ -1429,9 +1428,9 @@ static struct opengl_funcs opengl_funcs =
         .p_wglMakeCurrent = wayland_wglMakeCurrent,
         .p_wglSetPixelFormat = wayland_wglSetPixelFormat,
         .p_wglShareLists = wayland_wglShareLists,
-        .p_wglSwapBuffers = wayland_wglSwapBuffers,
         .p_get_pixel_formats = wayland_get_pixel_formats,
-    }
+    },
+    .ext = {.p_wglSwapBuffers = wayland_wglSwapBuffers,}
 };
 
 /**********************************************************************
diff --git a/dlls/winex11.drv/opengl.c b/dlls/winex11.drv/opengl.c
index ec97c224e99..b5b45f578bd 100644
--- a/dlls/winex11.drv/opengl.c
+++ b/dlls/winex11.drv/opengl.c
@@ -2864,10 +2864,9 @@ static void limit_frame_rate() {
  *
  * Swap the buffers of this DC
  */
-static BOOL glxdrv_wglSwapBuffers( HDC hdc )
+static BOOL glxdrv_wglSwapBuffers( HDC hdc, struct wgl_context *ctx )
 {
     struct gl_drawable *gl;
-    struct wgl_context *ctx = NtCurrentTeb()->glContext;
     INT64 ust, msc, sbc, target_sbc = 0;
     HWND hwnd = NtUserWindowFromDC( hdc );
     Drawable drawable = 0;
@@ -2962,7 +2961,7 @@ static void glxdrv_get_pixel_formats( struct wgl_pixel_format *formats,
 
 static struct opengl_funcs opengl_funcs =
 {
-    {
+    .wgl = {
         glxdrv_wglCopyContext,              /* p_wglCopyContext */
         glxdrv_wglCreateContext,            /* p_wglCreateContext */
         glxdrv_wglDeleteContext,            /* p_wglDeleteContext */
@@ -2971,9 +2970,9 @@ static struct opengl_funcs opengl_funcs =
         glxdrv_wglMakeCurrent,              /* p_wglMakeCurrent */
         glxdrv_wglSetPixelFormat,           /* p_wglSetPixelFormat */
         glxdrv_wglShareLists,               /* p_wglShareLists */
-        glxdrv_wglSwapBuffers,              /* p_wglSwapBuffers */
         glxdrv_get_pixel_formats,           /* p_get_pixel_formats */
-    }
+    },
+    .ext = {.p_wglSwapBuffers = glxdrv_wglSwapBuffers,}
 };
 
 struct opengl_funcs *get_glx_driver( UINT version )
diff --git a/include/wine/wgl_driver.h b/include/wine/wgl_driver.h
index b4bc5abf658..4cedd8c3135 100644
--- a/include/wine/wgl_driver.h
+++ b/include/wine/wgl_driver.h
@@ -7,7 +7,7 @@
 #define WINE_GLAPI
 #endif
 
-#define WINE_WGL_DRIVER_VERSION 28
+#define WINE_WGL_DRIVER_VERSION 29
 
 struct wgl_context;
 struct wgl_pbuffer;
@@ -54,7 +54,6 @@ struct opengl_funcs
         BOOL       (WINE_GLAPI *p_wglMakeCurrent)( HDC hDc, struct wgl_context * newContext );
         BOOL       (WINE_GLAPI *p_wglSetPixelFormat)( HDC hdc, int ipfd, const PIXELFORMATDESCRIPTOR *ppfd );
         BOOL       (WINE_GLAPI *p_wglShareLists)( struct wgl_context * hrcSrvShare, struct wgl_context * hrcSrvSource );
-        BOOL       (WINE_GLAPI *p_wglSwapBuffers)( HDC hdc );
         void       (WINE_GLAPI *p_get_pixel_formats)( struct wgl_pixel_format *formats, UINT max_formats, UINT *num_formats, UINT *num_onscreen_formats );
     } wgl;
 
@@ -3093,6 +3092,7 @@ struct opengl_funcs
         BOOL       (WINE_GLAPI *p_wglReleaseTexImageARB)( struct wgl_pbuffer * hPbuffer, int iBuffer );
         BOOL       (WINE_GLAPI *p_wglSetPbufferAttribARB)( struct wgl_pbuffer * hPbuffer, const int *piAttribList );
         BOOL       (WINE_GLAPI *p_wglSetPixelFormatWINE)( HDC hdc, int format );
+        BOOL       (WINE_GLAPI *p_wglSwapBuffers)( HDC hdc, struct wgl_context * ctx );
         BOOL       (WINE_GLAPI *p_wglSwapIntervalEXT)( int interval );
     } ext;
 };
-- 
2.48.1

