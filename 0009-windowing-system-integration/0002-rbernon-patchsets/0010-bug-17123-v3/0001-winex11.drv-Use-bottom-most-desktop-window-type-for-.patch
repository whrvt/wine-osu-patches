From a96d50e9fdde380cd6d189e60e033f79612bf97c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Wed, 31 Mar 2021 10:33:04 +0200
Subject: [PATCH 1/2] winex11.drv: Use bottom-most desktop window type for
 dummy parent.

Instead of override-redirect, whenever the window manager reports
support for the atoms.

 100.0% dlls/winex11.drv/
diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index 600ed1edb9e..a1b7cd2c3b8 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -1591,12 +1591,20 @@ static void move_window_bits( HWND hwnd, Window window, const RECT *old_rect, co
 Window get_dummy_parent(void)
 {
     static Window dummy_parent;
+    XWMHints *hints = NULL;
+    DWORD count;
+    Atom atoms[3];
 
     if (!dummy_parent)
     {
         XSetWindowAttributes attrib;
 
         attrib.override_redirect = True;
+        if (ewmh.has__net_wm_state && ewmh.has__net_wm_state_below &&
+            ewmh.has__net_wm_window_type && ewmh.has__net_wm_window_type_desktop &&
+            (hints = XAllocWMHints()))
+            attrib.override_redirect = False;
+
         attrib.border_pixel = 0;
         attrib.colormap = default_colormap;
 
@@ -1615,6 +1623,27 @@ Window get_dummy_parent(void)
                                       CWColormap | CWBorderPixel | CWOverrideRedirect, &attrib );
         WARN("Xshape support is not compiled in. Applications under XWayland may have poor performance.\n");
 #endif
+
+        if (!attrib.override_redirect)
+        {
+            count = 0;
+            atoms[count++] = x11drv_atom(_NET_WM_STATE_BELOW);
+            atoms[count++] = x11drv_atom(_NET_WM_STATE_SKIP_TASKBAR);
+            atoms[count++] = x11drv_atom(_NET_WM_STATE_SKIP_PAGER);
+            XChangeProperty( gdi_display, dummy_parent, x11drv_atom(_NET_WM_STATE), XA_ATOM,
+                             32, PropModeReplace, (unsigned char *)atoms, count );
+
+            count = 0;
+            atoms[count++] = x11drv_atom(_NET_WM_WINDOW_TYPE_DESKTOP);
+            XChangeProperty( gdi_display, dummy_parent, x11drv_atom(_NET_WM_WINDOW_TYPE), XA_ATOM,
+                             32, PropModeReplace, (unsigned char *)atoms, count );
+
+            hints->flags = InputHint;
+            hints->input = False;
+            XSetWMHints( gdi_display, dummy_parent, hints );
+            XFree( hints );
+        }
+
         XMapWindow( gdi_display, dummy_parent );
     }
     return dummy_parent;
diff --git a/dlls/winex11.drv/x11drv.h b/dlls/winex11.drv/x11drv.h
index 4fbcf06aeac..f405c2d7aa2 100644
--- a/dlls/winex11.drv/x11drv.h
+++ b/dlls/winex11.drv/x11drv.h
@@ -442,6 +442,10 @@ struct x11drv_ewmh_data
 {
     int has__net_active_window : 1;
     int has__net_wm_moveresize : 1;
+    int has__net_wm_state : 1;
+    int has__net_wm_state_below : 1;
+    int has__net_wm_window_type : 1;
+    int has__net_wm_window_type_desktop : 1;
 };
 
 extern XVisualInfo default_visual;
@@ -517,6 +521,7 @@ enum x11drv_atoms
     XATOM__NET_WM_PING,
     XATOM__NET_WM_STATE,
     XATOM__NET_WM_STATE_ABOVE,
+    XATOM__NET_WM_STATE_BELOW,
     XATOM__NET_WM_STATE_DEMANDS_ATTENTION,
     XATOM__NET_WM_STATE_FULLSCREEN,
     XATOM__NET_WM_STATE_MAXIMIZED_HORZ,
@@ -527,6 +532,7 @@ enum x11drv_atoms
     XATOM__NET_WM_USER_TIME_WINDOW,
     XATOM__NET_WM_WINDOW_OPACITY,
     XATOM__NET_WM_WINDOW_TYPE,
+    XATOM__NET_WM_WINDOW_TYPE_DESKTOP,
     XATOM__NET_WM_WINDOW_TYPE_DIALOG,
     XATOM__NET_WM_WINDOW_TYPE_NORMAL,
     XATOM__NET_WM_WINDOW_TYPE_UTILITY,
diff --git a/dlls/winex11.drv/x11drv_main.c b/dlls/winex11.drv/x11drv_main.c
index 60a5d207522..676a5cd0dbe 100644
--- a/dlls/winex11.drv/x11drv_main.c
+++ b/dlls/winex11.drv/x11drv_main.c
@@ -170,6 +170,7 @@ static const char * const atom_names[NB_XATOMS - FIRST_XATOM] =
     "_NET_WM_PING",
     "_NET_WM_STATE",
     "_NET_WM_STATE_ABOVE",
+    "_NET_WM_STATE_BELOW",
     "_NET_WM_STATE_DEMANDS_ATTENTION",
     "_NET_WM_STATE_FULLSCREEN",
     "_NET_WM_STATE_MAXIMIZED_HORZ",
@@ -180,6 +181,7 @@ static const char * const atom_names[NB_XATOMS - FIRST_XATOM] =
     "_NET_WM_USER_TIME_WINDOW",
     "_NET_WM_WINDOW_OPACITY",
     "_NET_WM_WINDOW_TYPE",
+    "_NET_WM_WINDOW_TYPE_DESKTOP",
     "_NET_WM_WINDOW_TYPE_DIALOG",
     "_NET_WM_WINDOW_TYPE_NORMAL",
     "_NET_WM_WINDOW_TYPE_UTILITY",
@@ -562,6 +564,14 @@ static void x11drv_ewmh_init(void)
             ewmh.has__net_active_window = 1;
         if (supported[i] == x11drv_atom(_NET_WM_MOVERESIZE))
             ewmh.has__net_wm_moveresize = 1;
+        if (supported[i] == x11drv_atom(_NET_WM_STATE))
+            ewmh.has__net_wm_state = 1;
+        if (supported[i] == x11drv_atom(_NET_WM_STATE_BELOW))
+            ewmh.has__net_wm_state_below = 1;
+        if (supported[i] == x11drv_atom(_NET_WM_WINDOW_TYPE))
+            ewmh.has__net_wm_window_type = 1;
+        if (supported[i] == x11drv_atom(_NET_WM_WINDOW_TYPE_DESKTOP))
+            ewmh.has__net_wm_window_type_desktop = 1;
 
         atom_name = XGetAtomName( gdi_display, supported[i] );
         TRACE( "  %s\n", atom_name );
-- 
2.43.0

