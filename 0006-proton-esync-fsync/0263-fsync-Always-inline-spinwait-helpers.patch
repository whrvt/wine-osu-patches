From a69b32e12931a3bcf13b7a59d18b8e5ddd0ef565 Mon Sep 17 00:00:00 2001
From: William Horvath <william@horvath.blog>
Date: Mon, 6 Jan 2025 09:50:04 -0800
Subject: [PATCH] fsync: Always inline spinwait helpers.

---
 dlls/ntdll/unix/fsync.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index 6db3f6cf7f2..0a9e3c00a41 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -821,8 +821,8 @@ static inline int mwaitx_supported( void )
  *   observed_val - If non-NULL, receives the last observed value
  *   mon_timeout  - Max cycles to wait in mwaitx before falling back to spin
  */
-static inline NTSTATUS try_wait_value( volatile int *addr, int expected_val,
-                                       int *observed_val, const unsigned int mon_timeout )
+static FORCEINLINE NTSTATUS try_wait_value( volatile int *addr, int expected_val,
+                                            int *observed_val, const unsigned int mon_timeout )
 {
     unsigned int attempts = 0;
 
@@ -872,8 +872,8 @@ static inline NTSTATUS try_wait_value( volatile int *addr, int expected_val,
     return STATUS_UNSUCCESSFUL;
 }
 
-static inline BOOL try_reacquire_mutex( struct mutex *mutex, int current_tid,
-                                        int *observed_tid, BOOL zero_timeout )
+static FORCEINLINE BOOL try_reacquire_mutex( struct mutex *mutex, int current_tid,
+                                             int *observed_tid, BOOL zero_timeout )
 {
     int tid = *observed_tid;
 
@@ -901,7 +901,7 @@ static inline BOOL try_reacquire_mutex( struct mutex *mutex, int current_tid,
     return FALSE; /* fall back to futex */
 }
 
-static inline BOOL try_acquire_semaphore( struct semaphore *semaphore, BOOL zero_timeout )
+static FORCEINLINE BOOL try_acquire_semaphore( struct semaphore *semaphore, BOOL zero_timeout )
 {
     int count, new_count;
 
-- 
2.47.1

