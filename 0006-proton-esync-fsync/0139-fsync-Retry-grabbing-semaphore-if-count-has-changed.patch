From fa2e7224e08179417d43c62bc8113685b670faf2 Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Tue, 7 Mar 2023 15:54:01 -0600
Subject: [PATCH 0575/2346] fsync: Retry grabbing semaphore if count has
 changed.

CW-Bug-Id: #21996
---
 dlls/ntdll/unix/fsync.c | 28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index c397129680a..10e2717e6f4 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -862,14 +862,18 @@ static NTSTATUS __fsync_wait_objects( DWORD count, const HANDLE *handles,
                     case FSYNC_SEMAPHORE:
                     {
                         struct semaphore *semaphore = obj->shm;
-                        int current;
+                        int current, new;
 
-                        if ((current = __atomic_load_n( &semaphore->count, __ATOMIC_SEQ_CST ))
-                                && __sync_val_compare_and_swap( &semaphore->count, current, current - 1 ) == current)
+                        new = __atomic_load_n( &semaphore->count, __ATOMIC_SEQ_CST );
+                        while ((current = new))
                         {
-                            TRACE("Woken up by handle %p [%d].\n", handles[i], i);
-                            if (waited) simulate_sched_quantum();
-                            return i;
+                            if ((new = __sync_val_compare_and_swap( &semaphore->count, current, current - 1 )) == current)
+                            {
+                                TRACE("Woken up by handle %p [%d].\n", handles[i], i);
+                                if (waited) simulate_sched_quantum();
+
+                                return i;
+                            }
                         }
                         futex_vector_set( &futexes[i], &semaphore->count, 0 );
                         break;
@@ -1107,10 +1111,15 @@ tryagain:
                 case FSYNC_SEMAPHORE:
                 {
                     struct semaphore *semaphore = obj->shm;
-                    int current;
+                    int current, new;
 
-                    if (!(current = __atomic_load_n( &semaphore->count, __ATOMIC_SEQ_CST ))
-                            || __sync_val_compare_and_swap( &semaphore->count, current, current - 1 ) != current)
+                    new = __atomic_load_n( &semaphore->count, __ATOMIC_SEQ_CST );
+                    while ((current = new))
+                    {
+                        if ((new = __sync_val_compare_and_swap( &semaphore->count, current, current - 1 )) == current)
+                            break;
+                    }
+                    if (!current)
                         goto tooslow;
                     break;
                 }
-- 
2.47.0

