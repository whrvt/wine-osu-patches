From f4b6716fd72a585a79044d7694f74d6c9164b6a2 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <zfigura@codeweavers.com>
Date: Tue, 4 Jun 2019 12:29:31 -0500
Subject: [PATCH 0525/2346] ntdll: Skip zero-length waits.

An optimization that avoids a syscall.
---
 dlls/ntdll/unix/fsync.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index 522803268dc..30c996a6329 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -855,7 +855,14 @@ static NTSTATUS __fsync_wait_objects( DWORD count, const HANDLE *handles,
 
             /* Looks like everything is contended, so wait. */
 
-            if (timeout)
+            if (timeout && !timeout->QuadPart)
+            {
+                /* Unlike esync, we already know that we've timed out, so we
+                 * can avoid a syscall. */
+                TRACE("Wait timed out.\n");
+                return STATUS_TIMEOUT;
+            }
+            else if (timeout)
             {
                 LONGLONG timeleft = update_timeout( end );
                 struct timespec tmo_p;
-- 
2.47.0

