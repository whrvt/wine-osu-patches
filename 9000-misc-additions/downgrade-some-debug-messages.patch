diff --git a/dlls/ntdll/unix/env.c b/dlls/ntdll/unix/env.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/env.c
+++ b/dlls/ntdll/unix/env.c
@@ -1884,7 +1884,7 @@ static void init_peb( RTL_USER_PROCESS_PARAMETERS *params, void *module )
         NtCurrentTeb()->Tib.ExceptionList = (void *)((char *)NtCurrentTeb() + teb_offset);
         wow_peb = (PEB32 *)((char *)peb + page_size);
         set_thread_id( NtCurrentTeb(), GetCurrentProcessId(), GetCurrentThreadId() );
-        ERR( "starting %s in experimental wow64 mode\n", debugstr_us(&params->ImagePathName) );
+        WARN( "starting %s in experimental wow64 mode\n", debugstr_us(&params->ImagePathName) );
         break;
     case IMAGE_FILE_MACHINE_AMD64:
         if (main_image_info.Machine == current_machine) break;
diff --git a/dlls/kernelbase/debug.c b/dlls/kernelbase/debug.c
index 11111111111..11111111111 100644
--- a/dlls/kernelbase/debug.c
+++ b/dlls/kernelbase/debug.c
@@ -834,7 +834,7 @@ HRESULT WINAPI /* DECLSPEC_HOTPATCH */ WerRegisterRuntimeExceptionModule( const
  */
 HRESULT WINAPI /* DECLSPEC_HOTPATCH */ WerSetFlags( DWORD flags )
 {
-    FIXME("(%ld) stub\n", flags);
+    WARN("(%ld) stub\n", flags);
     return S_OK;
 }
 
diff --git a/programs/wineboot/wineboot.c b/programs/wineboot/wineboot.c
index 11111111111..11111111111 100644
--- a/programs/wineboot/wineboot.c
+++ b/programs/wineboot/wineboot.c
@@ -1708,7 +1708,10 @@ static void process_run_key( HKEY key, const WCHAR *keyname, BOOL delete, BOOL s
         }
         if (runCmd( cmdline, NULL, synchronous, FALSE ) == INVALID_RUNCMD_RETURN)
         {
-            WINE_ERR( "Error running cmd %s (%lu).\n", wine_dbgstr_w(cmdline), GetLastError() );
+            if (GetLastError() == ERROR_FILE_NOT_FOUND)
+                WINE_WARN( "Error running cmd %s (%lu).\n", wine_dbgstr_w(cmdline), GetLastError() );
+            else
+                WINE_ERR( "Error running cmd %s (%lu).\n", wine_dbgstr_w(cmdline), GetLastError() );
         }
         WINE_TRACE( "Done processing cmd %lu.\n", i );
     }
