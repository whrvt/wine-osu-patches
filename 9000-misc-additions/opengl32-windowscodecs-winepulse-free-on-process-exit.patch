reverts f03c3a167c2e4abe92b1e1bf2ea5f7c31a07fc3b 6e9728bee52ac7e1f5a3d3bfe3bfaf5d9d1e01c1 505455de69acbc1390d2bf69313f1e76a19100ea
--- b/dlls/ntdll/unix/virtual.c
+++ a/dlls/ntdll/unix/virtual.c
@@ -4397,8 +4397,7 @@
         if (is_wow64())
             user_space_wow_limit = ((main_image_info.ImageCharacteristics & IMAGE_FILE_LARGE_ADDRESS_AWARE) ? limit_4g : limit_2g) - 1;
 #ifndef __APPLE__  /* don't free the zerofill section on macOS */
-        else if ((main_image_info.DllCharacteristics & IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA) &&
-                 (main_image_info.DllCharacteristics & IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE))
+        else
             free_reserved_memory( 0, (char *)0x7ffe0000 );
 #endif
     }
--- b/dlls/opengl32/wgl.c
+++ a/dlls/opengl32/wgl.c
@@ -1281,7 +1281,6 @@
         break;
 
     case DLL_PROCESS_DETACH:
-        if (reserved) break;
         UNIX_CALL( process_detach, NULL );
 #ifndef _WIN64
         cleanup_wow64_strings();
--- b/dlls/windowscodecs/main.c
+++ a/dlls/windowscodecs/main.c
@@ -44,7 +44,6 @@
             windowscodecs_module = hinstDLL;
             break;
         case DLL_PROCESS_DETACH:
-            if (lpvReserved) break;
             ReleaseComponentInfos();
             break;
     }
--- b/dlls/winepulse.drv/mmdevdrv.c
+++ a/dlls/winepulse.drv/mmdevdrv.c
@@ -72,12 +72,10 @@
 
 BOOL WINAPI DllMain(HINSTANCE dll, DWORD reason, void *reserved)
 {
+    if (reason == DLL_PROCESS_ATTACH) {
+        WCHAR buf[MAX_PATH];
+        WCHAR *filename;
-    WCHAR buf[MAX_PATH];
-    WCHAR *filename;
 
-    switch (reason)
-    {
-    case DLL_PROCESS_ATTACH:
         DisableThreadLibraryCalls(dll);
         if (__wine_init_unix_call())
             return FALSE;
@@ -89,16 +87,11 @@
 
         swprintf(drv_key_devicesW, ARRAY_SIZE(drv_key_devicesW),
                  L"Software\\Wine\\Drivers\\%s\\devices", filename);
+    } else if (reason == DLL_PROCESS_DETACH) {
+        struct device_cache *device, *device_next;
+
+        LIST_FOR_EACH_ENTRY_SAFE(device, device_next, &g_devices_cache, struct device_cache, entry)
+            free(device);
-        break;
-    case DLL_PROCESS_DETACH:
-        if (!reserved)
-        {
-            struct device_cache *device, *device_next;
-
-            LIST_FOR_EACH_ENTRY_SAFE(device, device_next, &g_devices_cache, struct device_cache, entry)
-                free(device);
-        }
-        break;
     }
     return TRUE;
 }
