Fixes osu! crashing with WINE_BLOCK_GET_VERSION=1

From 3e89c1ee3440ec639a56558076455be18c246708 Mon Sep 17 00:00:00 2001
From: Santino Mazza <smazza@codeweavers.com>
Date: Wed, 5 Oct 2022 14:40:14 -0300
Subject: [PATCH 1/3] roapi: initial testing

---
 dlls/combase/roapi.c           |  5 ++---
 dlls/combase/tests/roapi.c     | 38 ++++++++++++++++++++++++++++++++++
 include/roparameterizediid.idl |  4 ++++
 3 files changed, 44 insertions(+), 3 deletions(-)

diff --git a/dlls/combase/roapi.c b/dlls/combase/roapi.c
index 78f35de39d4..9358cd0e795 100644
--- a/dlls/combase/roapi.c
+++ b/dlls/combase/roapi.c
@@ -212,9 +212,8 @@ HRESULT WINAPI RoGetParameterizedTypeInstanceIID(UINT32 name_element_count, cons
                                                  ROPARAMIIDHANDLE *hiid)
 {
     FIXME("stub: %d %p %p %p %p\n", name_element_count, name_elements, meta_data_locator, iid, hiid);
-    if (iid) *iid = GUID_NULL;
-    if (hiid) *hiid = INVALID_HANDLE_VALUE;
-    return E_NOTIMPL;
+    if (iid) *iid = GUID_NULL;
+    if (hiid) *hiid = INVALID_HANDLE_VALUE;
 }
 
 /***********************************************************************
#diff --git a/dlls/combase/tests/roapi.c b/dlls/combase/tests/roapi.c
#index f10cbb4507b..943e81061f7 100644
#--- a/dlls/combase/tests/roapi.c
#+++ b/dlls/combase/tests/roapi.c
#@@ -25,6 +25,7 @@
# 
# #include "initguid.h"
# #include "roapi.h"
#+#include "roparameterizediid.h"
# 
# #include "wine/test.h"
# 
#@@ -116,6 +117,42 @@ static void test_ActivationFactories(void)
#     RoUninitialize();
# }
# 
#+static HRESULT __stdcall locate(IRoMetaDataLocator * This, const WCHAR *typename, IRoSimpleMetaDataBuilder *out)
#+{
#+    GUID guid;
#+    guid.Data1 = 0xDE;
#+    guid.Data2 = 0xAD;
#+    guid.Data3 = 0xBE;
#+    (((ULONG*)guid.Data4)[0]) = 0xFF;
#+    (((ULONG*)guid.Data4)[1]) = 0;
#+
#+    todo_wine ok(This != NULL, "Expected This to not be null\n");
#+    todo_wine ok(typename != NULL, "expected typename to not be null\n");
#+    todo_wine ok(!wcscmp(typename, L"Testing.test"), "string is not what expected\n");
#+    todo_wine ok(out != NULL, "expected out to not be null\n");
#+    out->lpVtbl->SetWinRtInterface(out, guid);
#+    return S_OK;
#+}
#+
#+static void test_RoGetParameterizedTypeInstanceIID(void)
#+{
#+    HRESULT hr;
#+    struct IRoMetaDataLocatorVtbl vtbl = { locate };
#+    IRoMetaDataLocator locator = {&vtbl};
#+    GUID guid = { 0xFF, 0xFF };
#+    WCHAR guid_str[39] = { 0 };
#+    PCWSTR names[1] = { L"Testing.test" };
#+
#+    hr = RoInitialize(RO_INIT_MULTITHREADED);
#+    ok(hr == S_OK, "Unexpected hr %#lx.\n", hr);
#+
#+    hr = RoGetParameterizedTypeInstanceIID(1, names, &locator, &guid, NULL);
#+    todo_wine ok(hr == S_OK, "got %#lx.\n", hr);
#+    StringFromGUID2(&guid, guid_str, sizeof(guid_str));
#+    todo_wine ok(!wcscmp(guid_str, L"{D4FE793A-2626-552A-AD82-A06A18F32C5E}"), "got guid %ls\n", guid_str);
#+    RoUninitialize();
#+}
#+
# START_TEST(roapi)
# {
#     BOOL ret;
#@@ -123,6 +160,7 @@ START_TEST(roapi)
#     load_resource(L"wine.combase.test.dll");
# 
#     test_ActivationFactories();
#+    test_RoGetParameterizedTypeInstanceIID();
# 
#     SetLastError(0xdeadbeef);
#     ret = DeleteFileW(L"wine.combase.test.dll");
diff --git a/include/roparameterizediid.idl b/include/roparameterizediid.idl
index 85ee57d6f94..a9cadc274c6 100644
--- a/include/roparameterizediid.idl
+++ b/include/roparameterizediid.idl
@@ -93,3 +93,7 @@ interface IRoMetaDataLocator
         IRoSimpleMetaDataBuilder *out
     );
 }
+
+HRESULT __stdcall RoGetParameterizedTypeInstanceIID(UINT32 name_element_count, const WCHAR **name_elements,
+                                                 const IRoMetaDataLocator *meta_data_locator, GUID *iid,
+                                                 ROPARAMIIDHANDLE *hiid);
-- 
2.47.1

From 78713381951543e38ed1d77065c561320ab48cff Mon Sep 17 00:00:00 2001
From: Santino Mazza <smazza@codeweavers.com>
Date: Wed, 5 Oct 2022 18:38:40 -0300
Subject: [PATCH 2/3] combase: Initial stubs.

---
 dlls/combase/roapi.c | 103 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 103 insertions(+)

diff --git a/dlls/combase/roapi.c b/dlls/combase/roapi.c
index 9358cd0e795..39399b034c6 100644
--- a/dlls/combase/roapi.c
+++ b/dlls/combase/roapi.c
@@ -204,6 +204,102 @@ done:
     return hr;
 }
 
+struct metadata_builder {
+    IRoSimpleMetaDataBuilder iface;
+    GUID winrt_interface;
+};
+
+static __stdcall HRESULT impl_SetWinRtInterface(IRoSimpleMetaDataBuilder *This, GUID iid)
+{
+    struct metadata_builder *metadata_builder = (struct metadata_builder*)This;
+    FIXME("stub (%p, %s)\n", This, debugstr_guid(&iid));
+    metadata_builder->winrt_interface = iid;
+    return S_OK;
+}
+
+static __stdcall HRESULT impl_SetDelegate(IRoSimpleMetaDataBuilder *This, GUID iid)
+{
+    FIXME("stub (%p, %s)\n", This, debugstr_guid(&iid));
+    return S_OK;
+}
+
+static __stdcall HRESULT impl_SetInterfaceGroupSimpleDefault(IRoSimpleMetaDataBuilder *This,
+                                                             const WCHAR *name, const WCHAR *defaultInterfaceName,
+                                                             const GUID *defaultInterfaceIID)
+{
+    FIXME("stub (%p, %s, %s, %s)\n", This, debugstr_w(name), debugstr_w(defaultInterfaceName),
+          debugstr_guid(defaultInterfaceIID));
+    return S_OK;
+}
+
+static __stdcall HRESULT impl_SetInterfaceGroupParameterizedDefault(IRoSimpleMetaDataBuilder *This,
+                                                                    const WCHAR *name, UINT32 elementCount,
+                                                                    const WCHAR **defaultInterfaceNameElements)
+{
+    FIXME("stub (%p, %s, %d, %p)\n", This, debugstr_w(name), elementCount, defaultInterfaceNameElements);
+    return S_OK;
+}
+static __stdcall HRESULT impl_SetRuntimeClassSimpleDefault(IRoSimpleMetaDataBuilder *This,
+                                                           const WCHAR *name, const WCHAR *defaultInterfaceName,
+                                                           const GUID *defaultInterfaceIID)
+{
+    FIXME("stub (%p, %s, %s, %s)\n", This, debugstr_w(name), debugstr_w(defaultInterfaceName),
+          debugstr_guid(defaultInterfaceIID));
+    return S_OK;
+}
+
+static __stdcall HRESULT impl_SetRuntimeClassParameterizedDefault(IRoSimpleMetaDataBuilder *This,
+                                                                  const WCHAR *typename, UINT32 name_element_count,
+                                                                  const WCHAR **name_elements)
+{
+    FIXME("stub (%p, %s, %d, %p)\n", This, debugstr_w(typename), name_element_count, name_elements);
+    return S_OK;
+}
+
+static __stdcall HRESULT impl_SetStruct(IRoSimpleMetaDataBuilder *This, const WCHAR *name, UINT32 numFields,
+                                        const WCHAR **fieldTypeNames)
+{
+    FIXME("stub (%p, %s, %d, %p)\n", This, debugstr_w(name), numFields, fieldTypeNames);
+    return S_OK;
+
+}
+
+static __stdcall HRESULT impl_SetEnum(IRoSimpleMetaDataBuilder *This, const WCHAR *name, const WCHAR *baseType)
+{
+    FIXME("stub (%p, %s, %s)\n", This, debugstr_w(name), debugstr_w(baseType));
+    return S_OK;
+}
+
+static __stdcall HRESULT impl_SetParameterizedInterface(IRoSimpleMetaDataBuilder *This, GUID piid, UINT32 numArgs)
+{
+    FIXME("stub (%p, %s, %d)\n", This, debugstr_guid(&piid), numArgs);
+    return S_OK;
+}
+
+static __stdcall HRESULT impl_SetParameterizedDelegate(IRoSimpleMetaDataBuilder *This, GUID piid, UINT32 numArgs)
+{
+    FIXME("stub (%p, %s, %d)\n", This, debugstr_guid(&piid), numArgs);
+    return S_OK;
+}
+
+static IRoSimpleMetaDataBuilderVtbl metadata_builder_vtbl = {
+    impl_SetWinRtInterface,
+    impl_SetDelegate,
+    impl_SetInterfaceGroupSimpleDefault,
+    impl_SetInterfaceGroupParameterizedDefault,
+    impl_SetRuntimeClassSimpleDefault,
+    impl_SetRuntimeClassParameterizedDefault,
+    impl_SetStruct,
+    impl_SetEnum,
+    impl_SetParameterizedInterface,
+    impl_SetParameterizedDelegate
+};
+
+static struct metadata_builder metadata_builder = {
+        {&metadata_builder_vtbl},
+        {0}
+};
+
 /***********************************************************************
  *      RoGetParameterizedTypeInstanceIID (combase.@)
  */
@@ -214,6 +310,13 @@ HRESULT WINAPI RoGetParameterizedTypeInstanceIID(UINT32 name_element_count, cons
     FIXME("stub: %d %p %p %p %p\n", name_element_count, name_elements, meta_data_locator, iid, hiid);
     if (iid) *iid = GUID_NULL;
     if (hiid) *hiid = INVALID_HANDLE_VALUE;
+    for (int i = 0; i < name_element_count; ++i)
+    {
+        //printf("%ls\n", name_elements[i]);
+        meta_data_locator->lpVtbl->Locate(meta_data_locator, name_elements[i], &metadata_builder.iface);
+    }
+    *iid = metadata_builder.winrt_interface;
+    return S_OK;
 }
 
 /***********************************************************************
-- 
2.47.1

