From 7c79eaa90e2b9f9ad0cc4275ad3bd5c6c0cdd239 Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Fri, 8 Nov 2024 12:59:59 -0600
Subject: [PATCH] kernel32: Add tests for module hash links.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Based on a patch by Michael MÃ¼ller <michael@fds-team.de>.
---
 dlls/kernel32/tests/module.c | 45 ++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/dlls/kernel32/tests/module.c b/dlls/kernel32/tests/module.c
index 8f3ed5872e4..e38320f537b 100644
--- a/dlls/kernel32/tests/module.c
+++ b/dlls/kernel32/tests/module.c
@@ -1802,6 +1802,50 @@ static void test_base_address_index_tree(void)
     ok( tree_count == list_count, "count mismatch %u, %u.\n", tree_count, list_count );
 }
 
+static ULONG hash_basename( const WCHAR *basename )
+{
+    WORD version = MAKEWORD(NtCurrentTeb()->Peb->OSMinorVersion, NtCurrentTeb()->Peb->OSMajorVersion);
+    ULONG hash = 0;
+    WCHAR c;
+
+    while ((c = *basename++))
+    {
+        c = towupper( c );
+        if (version >= 0x0602)      hash = hash * 65599 + c;
+        else if (version == 0x0601) hash = hash + 65599 * c;
+        else                        hash = c - 'A';
+    }
+
+    return hash & 31;
+}
+
+static void test_hash_links(void)
+{
+    LIST_ENTRY *hash_map, *entry, *entry2, *mark, *root;
+    LDR_DATA_TABLE_ENTRY *module;
+    const WCHAR *modname;
+    BOOL found;
+
+    root = &NtCurrentTeb()->Peb->LdrData->InLoadOrderModuleList;
+    module = CONTAINING_RECORD(root->Flink, LDR_DATA_TABLE_ENTRY, InLoadOrderLinks);
+    hash_map = module->HashLinks.Blink - hash_basename( module->BaseDllName.Buffer );
+
+    for (entry = root->Flink; entry != root; entry = entry->Flink)
+    {
+        module = CONTAINING_RECORD(entry, LDR_DATA_TABLE_ENTRY, InLoadOrderLinks);
+        modname = module->BaseDllName.Buffer;
+        mark = &hash_map[hash_basename( modname )];
+        found = FALSE;
+        for (entry2 = mark->Flink; entry2 != mark; entry2 = entry2->Flink)
+        {
+            module = CONTAINING_RECORD(entry2, LDR_DATA_TABLE_ENTRY, HashLinks);
+            trace("%s %s.\n", debugstr_w(modname), debugstr_w(module->BaseDllName.Buffer));
+            if ((found = !lstrcmpiW( module->BaseDllName.Buffer, modname ))) break;
+        }
+        ok( found, "Could not find %s.\n", debugstr_w(modname) );
+    }
+}
+
 START_TEST(module)
 {
     WCHAR filenameW[MAX_PATH];
@@ -1840,4 +1884,5 @@ START_TEST(module)
     test_ddag_node();
     test_tls_links();
     test_base_address_index_tree();
+    test_hash_links();
 }
-- 
GitLab

