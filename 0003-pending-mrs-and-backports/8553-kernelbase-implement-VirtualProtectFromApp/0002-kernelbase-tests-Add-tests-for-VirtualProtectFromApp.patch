From 6424e7bdaad17bcb47a5e23cdd78e19a31eb8154 Mon Sep 17 00:00:00 2001
From: Kareem Aladli <karimri@protonmail.com>
Date: Sun, 13 Jul 2025 01:29:59 +0300
Subject: [PATCH] kernelbase/tests: Add tests for VirtualProtectFromApp

---
 dlls/kernelbase/tests/process.c | 40 +++++++++++++++++++++++++++++++++
 1 file changed, 40 insertions(+)

diff --git a/dlls/kernelbase/tests/process.c b/dlls/kernelbase/tests/process.c
index 90d6b5204eb..8cb6fda4968 100644
--- a/dlls/kernelbase/tests/process.c
+++ b/dlls/kernelbase/tests/process.c
@@ -38,6 +38,7 @@ static LPVOID (WINAPI *pMapViewOfFile3)(HANDLE, HANDLE, PVOID, ULONG64 offset, S
 static LPVOID (WINAPI *pVirtualAlloc2)(HANDLE, void *, SIZE_T, DWORD, DWORD, MEM_EXTENDED_PARAMETER *, ULONG);
 static LPVOID (WINAPI *pVirtualAlloc2FromApp)(HANDLE, void *, SIZE_T, DWORD, DWORD, MEM_EXTENDED_PARAMETER *, ULONG);
 static PVOID (WINAPI *pVirtualAllocFromApp)(PVOID, SIZE_T, DWORD, DWORD);
+static BOOL (WINAPI *pVirtualProtectFromApp)(LPVOID,SIZE_T,ULONG,PULONG);
 static HANDLE (WINAPI *pOpenFileMappingFromApp)( ULONG, BOOL, LPCWSTR);
 static HANDLE (WINAPI *pCreateFileMappingFromApp)(HANDLE, PSECURITY_ATTRIBUTES, ULONG, ULONG64, PCWSTR);
 static LPVOID (WINAPI *pMapViewOfFileFromApp)(HANDLE, ULONG, ULONG64, SIZE_T);
@@ -481,6 +482,43 @@ static void test_VirtualAlloc2FromApp(void)
     }
 }
 
+static void test_VirtualProtectFromApp(void)
+{
+    ULONG old_prot;
+    void *p;
+    BOOL ret;
+
+    if (!pVirtualProtectFromApp)
+    {
+        win_skip("VirtualProtectFromApp is not available.\n");
+        return;
+    }
+
+    SetLastError(0xdeadbeef);
+    p = VirtualAlloc(NULL, 0x1000, MEM_COMMIT, PAGE_READWRITE);
+    ok(p && GetLastError() == 0xdeadbeef, "Got unexpected mem %p, GetLastError() %lu.\n", p, GetLastError());
+    ret = pVirtualProtectFromApp(p, 0x1000, PAGE_READONLY, &old_prot);
+    ok(ret && old_prot == PAGE_READWRITE, "Failed to change protection old_prot %lu, GetLastError() %lu\n",
+        old_prot, GetLastError());
+
+    ret = pVirtualProtectFromApp(p, 0x100000, PAGE_READWRITE, &old_prot);
+    ok(!ret && old_prot == PAGE_NOACCESS, "Call worked with overflowing size old_prot %lu\n", old_prot);
+
+    ret = pVirtualProtectFromApp(p, 0x1000, PAGE_EXECUTE_READ, NULL);
+    ok(!ret, "Call worked without old_prot\n");
+
+    ret = pVirtualProtectFromApp(p, 0x1000, PAGE_GUARD, &old_prot);
+    ok(!ret, "Call worked with an invalid new_prot parameter old_prot %lu\n", old_prot);
+
+    /* Works on desktop, but not on UWP */
+    ret = pVirtualProtectFromApp(p, 0x1000, PAGE_EXECUTE_READWRITE, &old_prot);
+    ok(ret && old_prot == PAGE_READONLY, "Failed to change protection old_prot %lu, GetLastError() %lu\n",
+        old_prot, GetLastError());
+
+    ret = VirtualFree(p, 0, MEM_RELEASE);
+    ok(ret, "Failed to free mem error %lu.\n", GetLastError());
+}
+
 static void test_OpenFileMappingFromApp(void)
 {
     OBJECT_BASIC_INFORMATION info;
@@ -601,6 +639,7 @@ static void init_funcs(void)
     X(VirtualAlloc2);
     X(VirtualAlloc2FromApp);
     X(VirtualAllocFromApp);
+    X(VirtualProtectFromApp);
     X(UnmapViewOfFile2);
 
     hmod = GetModuleHandleA("ntdll.dll");
@@ -618,6 +657,7 @@ START_TEST(process)
     test_VirtualAlloc2();
     test_VirtualAllocFromApp();
     test_VirtualAlloc2FromApp();
+    test_VirtualProtectFromApp();
     test_OpenFileMappingFromApp();
     test_CreateFileMappingFromApp();
     test_MapViewOfFileFromApp();
-- 
GitLab

