From 6b7c9689f42f6fe9ef46434f36b90ee2f737101c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 20 Jan 2025 15:41:46 +0100
Subject: [PATCH] winex11: Avoid setting RDW_ERASE on expose events.

The Medium launcher uses a dialog window procedure, and implements its
background by doing a StretchBlt call on WM_PAINT in the dialog
procedure call, which happens before the window message loop

It then itself calls InvalidateRect(hwnd, NULL, 0), which queues a
WM_PAINT as well but with only the RDW_INVALIDATE flag.

Next, when the window message loop is executed, the WM_PAINT message is
being processed as it should, but as we've invalidated the window with
RDW_ERASE from the expose event, the WM_NCPAINT handler erases the
entire window, clearing the pixels that the launcher has just painted.

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=57665
---
 dlls/winex11.drv/event.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index 428dcb7b8b7..f35981abcab 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -968,7 +968,7 @@ static BOOL X11DRV_Expose( HWND hwnd, XEvent *xev )
     RECT rect, abs_rect;
     POINT pos;
     struct x11drv_win_data *data;
-    UINT flags = RDW_INVALIDATE | RDW_ERASE | RDW_FRAME | RDW_ALLCHILDREN;
+    UINT flags = RDW_INVALIDATE | RDW_FRAME | RDW_ALLCHILDREN;
 
     TRACE( "win %p (%lx) %d,%d %dx%d\n",
            hwnd, event->window, event->x, event->y, event->width, event->height );
-- 
GitLab

