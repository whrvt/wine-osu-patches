From d149d4e8cb7fcaf84eb6b147663231ac2724abef Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Tue, 11 Feb 2025 18:28:36 -0600
Subject: [PATCH] server: Ignore WM_MOUSEMOVE with raw input / RIDEV_NOLEGACY.

---
 dlls/user32/tests/input.c |  6 +++---
 server/queue.c            | 10 ++++++++++
 2 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/dlls/user32/tests/input.c b/dlls/user32/tests/input.c
index cc6d02b36dc..26f7d08e422 100644
--- a/dlls/user32/tests/input.c
+++ b/dlls/user32/tests/input.c
@@ -6186,7 +6186,7 @@ static void test_system_messages_with_rawinput_nolegacy(void)
     ok_ret( 1, RegisterRawInputDevices( raw_devices, ARRAY_SIZE( raw_devices ), sizeof(RAWINPUTDEVICE) ) );
     empty_message_queue();
     pump_messages();
-    todo_wine ok( !rawinput_test_received_legacy, "Did not expect WM_MOUSEMOVE.\n" );
+    ok( !rawinput_test_received_legacy, "Did not expect WM_MOUSEMOVE.\n" );
 
     raw_devices[0].dwFlags = RIDEV_REMOVE;
     raw_devices[0].hwndTarget = NULL;
@@ -6204,7 +6204,7 @@ static void test_system_messages_with_rawinput_nolegacy(void)
     raw_devices[0].hwndTarget = hwnd;
     ok_ret( 1, RegisterRawInputDevices( raw_devices, ARRAY_SIZE( raw_devices ), sizeof(RAWINPUTDEVICE) ) );
     empty_message_queue();
-    flaky_wine ok( rawinput_test_received_legacy, "Expected WM_MOUSEMOVE.\n" );
+    todo_wine ok( rawinput_test_received_legacy, "Expected WM_MOUSEMOVE.\n" );
 
     raw_devices[0].dwFlags = RIDEV_REMOVE;
     raw_devices[0].hwndTarget = NULL;
@@ -6225,7 +6225,7 @@ static void test_system_messages_with_rawinput_nolegacy(void)
     ok_ret( 1, RegisterRawInputDevices( raw_devices, ARRAY_SIZE( raw_devices ), sizeof(RAWINPUTDEVICE) ) );
     empty_message_queue();
     pump_messages();
-    todo_wine ok( !rawinput_test_received_legacy, "Did not expect WM_MOUSEMOVE.\n" );
+    ok( !rawinput_test_received_legacy, "Did not expect WM_MOUSEMOVE.\n" );
 
     memset(&inp, 0, sizeof(inp));
     inp.type = INPUT_MOUSE;
diff --git a/server/queue.c b/server/queue.c
index 3e19d579eec..a918540c128 100644
--- a/server/queue.c
+++ b/server/queue.c
@@ -2702,11 +2702,15 @@ static int get_hardware_message( struct thread *thread, unsigned int hw_id, user
                                  struct get_message_reply *reply )
 {
     struct thread_input *input = thread->queue->input;
+    const struct rawinput_device *device;
     struct thread *win_thread;
     struct list *ptr;
     user_handle_t win;
     int clear_bits, got_one = 0;
     unsigned int msg_code;
+    int no_legacy;
+
+    no_legacy = (device = thread->process->rawinput_mouse) && (device->flags & RIDEV_NOLEGACY);
 
     ptr = list_head( &input->msg_list );
     if (hw_id)
@@ -2732,6 +2736,12 @@ static int get_hardware_message( struct thread *thread, unsigned int hw_id, user
         struct hardware_msg_data *data = msg->data;
 
         ptr = list_next( &input->msg_list, ptr );
+        if (no_legacy && msg->msg == WM_MOUSEMOVE && msg->type == MSG_HARDWARE)
+        {
+            list_remove( &msg->entry );
+            free_message( msg );
+            continue;
+        }
         win = find_hardware_message_window( input->desktop, input, msg, &msg_code, &win_thread );
         if (!win || !win_thread)
         {
-- 
GitLab

