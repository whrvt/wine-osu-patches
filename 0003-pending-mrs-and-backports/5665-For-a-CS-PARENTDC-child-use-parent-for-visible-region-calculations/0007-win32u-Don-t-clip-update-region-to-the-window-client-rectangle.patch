From cdbde96d16437621925dde6bcb33d1bc9aeceba9 Mon Sep 17 00:00:00 2001
From: Dmitry Timoshkov <dmitry@baikal.ru>
Date: Tue, 14 May 2024 15:04:16 +0300
Subject: [PATCH] win32u: Don't clip update region to the window client
 rectangle.

Signed-off-by: Dmitry Timoshkov <dmitry@baikal.ru>
---
 dlls/user32/tests/dce.c |  9 ++++-----
 dlls/user32/tests/win.c | 24 ++++++++++++------------
 dlls/win32u/dce.c       | 33 ++++++++++++++++++---------------
 3 files changed, 34 insertions(+), 32 deletions(-)

diff --git a/dlls/user32/tests/dce.c b/dlls/user32/tests/dce.c
index 09c6dd0da54..e9cc9817432 100644
--- a/dlls/user32/tests/dce.c
+++ b/dlls/user32/tests/dce.c
@@ -515,10 +515,10 @@ static void test_begin_paint(void)
     EndPaint( hwnd_parentdc, &ps );
     GetClientRect( hwnd_parent, &parent_rect );
 
-    todo_wine ok( rect.left == parent_rect.left, "rect.left = %ld, expected %ld\n", rect.left, parent_rect.left );
-    todo_wine ok( rect.top == parent_rect.top, "rect.top = %ld, expected %ld\n", rect.top, parent_rect.top );
-    todo_wine ok( rect.right == parent_rect.right, "rect.right = %ld, expected %ld\n", rect.right, parent_rect.right );
-    todo_wine ok( rect.bottom == parent_rect.bottom, "rect.bottom = %ld, expected %ld\n", rect.bottom, parent_rect.bottom );
+    ok( rect.left == parent_rect.left, "rect.left = %ld, expected %ld\n", rect.left, parent_rect.left );
+    ok( rect.top == parent_rect.top, "rect.top = %ld, expected %ld\n", rect.top, parent_rect.top );
+    ok( rect.right == parent_rect.right, "rect.right = %ld, expected %ld\n", rect.right, parent_rect.right );
+    ok( rect.bottom == parent_rect.bottom, "rect.bottom = %ld, expected %ld\n", rect.bottom, parent_rect.bottom );
 
     hdc = GetDC( hwnd_parent );
     todo_wine ok( GetPixel( hdc, 60, 60 ) == cr, "error drawing outside of window client area\n" );
@@ -561,7 +561,6 @@ static void test_cropped_parentdc_paint_clipbox(void)
     IntersectRect( &expect_rect, &toplevel_rect, &parent_rect );
 
     MapWindowPoints( hwnd_child, hwnd_container, (POINT *)&rect, 2 );
-    todo_wine
     ok( EqualRect( &rect, &expect_rect ), "rect = %s, expected %s\n",
         wine_dbgstr_rect( &rect ), wine_dbgstr_rect( &expect_rect ) );
 
diff --git a/dlls/user32/tests/win.c b/dlls/user32/tests/win.c
index 166653f0d2c..a576f2fea29 100644
--- a/dlls/user32/tests/win.c
+++ b/dlls/user32/tests/win.c
@@ -6340,49 +6340,49 @@ static void test_csparentdc(void)
    struct parentdc_test test_answer;
 
 #define nothing_todo {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}
-   const struct parentdc_test test1 = 
+   const struct parentdc_test test1 =
    {
         {{0, 0, 150, 150}, {0, 0, 150, 150}, {0, 0, 150, 150}}, nothing_todo,
-        {{0, 0, 40, 40}, {-20, -20, 130, 130}, {0, 0, 40, 40}}, {{0, 0, 0, 0}, {1, 1, 1, 1}, {0, 0, 0, 0}},
-        {{0, 0, 40, 40}, {-40, -40, 110, 110}, {0, 0, 40, 40}}, {{0, 0, 0, 0}, {1, 1, 1, 1}, {0, 0, 0, 0}},
+        {{0, 0, 40, 40}, {-20, -20, 130, 130}, {0, 0, 40, 40}}, nothing_todo,
+        {{0, 0, 40, 40}, {-40, -40, 110, 110}, {0, 0, 40, 40}}, nothing_todo,
    };
 
-   const struct parentdc_test test2 = 
+   const struct parentdc_test test2 =
    {
         {{0, 0, 150, 150}, {0, 0, 50, 50}, {0, 0, 50, 50}}, nothing_todo,
-        {{0, 0, 40, 40}, {-20, -20, 30, 30}, {0, 0, 30, 30}}, {{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}},
-        {{0, 0, 40, 40}, {-40, -40, 10, 10}, {0, 0, 10, 10}}, {{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}},
+        {{0, 0, 40, 40}, {-20, -20, 30, 30}, {0, 0, 30, 30}}, nothing_todo,
+        {{0, 0, 40, 40}, {-40, -40, 10, 10}, {0, 0, 10, 10}}, nothing_todo,
    };
 
-   const struct parentdc_test test3 = 
+   const struct parentdc_test test3 =
    {
         {{0, 0, 150, 150}, {0, 0, 10, 10}, {0, 0, 10, 10}}, nothing_todo,
         {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, nothing_todo,
         {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, nothing_todo,
    };
 
-   const struct parentdc_test test4 = 
+   const struct parentdc_test test4 =
    {
         {{0, 0, 150, 150}, {40, 40, 50, 50}, {40, 40, 50, 50}}, nothing_todo,
         {{0, 0, 40, 40}, {20, 20, 30, 30}, {20, 20, 30, 30}}, nothing_todo,
         {{0, 0, 40, 40}, {0, 0, 10, 10}, {0, 0, 10, 10}}, nothing_todo,
    };
 
-   const struct parentdc_test test5 = 
+   const struct parentdc_test test5 =
    {
         {{0, 0, 150, 150}, {20, 20, 60, 60}, {20, 20, 60, 60}}, nothing_todo,
         {{0, 0, 40, 40}, {-20, -20, 130, 130}, {0, 0, 40, 40}}, {{0, 0, 0, 0}, {1, 1, 1, 1}, {0, 0, 0, 0}},
-        {{0, 0, 40, 40}, {-20, -20, 20, 20}, {0, 0, 20, 20}}, {{0, 0, 0, 0}, {1, 1, 0, 0}, {0, 0, 0, 0}},
+        {{0, 0, 40, 40}, {-20, -20, 20, 20}, {0, 0, 20, 20}}, nothing_todo,
    };
 
-   const struct parentdc_test test6 = 
+   const struct parentdc_test test6 =
    {
         {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, nothing_todo,
         {{0, 0, 40, 40}, {0, 0, 10, 10}, {0, 0, 10, 10}}, nothing_todo,
         {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, nothing_todo,
    };
 
-   const struct parentdc_test test7 = 
+   const struct parentdc_test test7 =
    {
         {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, nothing_todo,
         {{0, 0, 40, 40}, {-20, -20, 130, 130}, {0, 0, 40, 40}}, {{0, 0, 0, 0}, {1, 1, 1, 1}, {0, 0, 0, 0}},
diff --git a/dlls/win32u/dce.c b/dlls/win32u/dce.c
index 66112b3b23a..a1fb5a8d009 100644
--- a/dlls/win32u/dce.c
+++ b/dlls/win32u/dce.c
@@ -1523,6 +1523,8 @@ static HRGN send_ncpaint( HWND hwnd, HWND *child, UINT *flags )
     HRGN client_rgn = 0;
     DWORD style;
 
+    TRACE( "hwnd %p, flags %08x\n", hwnd, *flags );
+
     if (child) hwnd = *child;
 
     if (hwnd == get_desktop_window()) return whole_rgn;
@@ -1544,23 +1546,20 @@ static HRGN send_ncpaint( HWND hwnd, HWND *child, UINT *flags )
             update.left < rects.client.left || update.top < rects.client.top ||
             update.right > rects.client.right || update.bottom > rects.client.bottom)
         {
-            client_rgn = NtGdiCreateRectRgn( rects.client.left, rects.client.top, rects.client.right, rects.client.bottom );
-            NtGdiCombineRgn( client_rgn, client_rgn, whole_rgn, RGN_AND );
-
             /* check if update rgn contains complete nonclient area */
-            if (type == SIMPLEREGION && EqualRect( &rects.window, &update ))
+            if (type == SIMPLEREGION && update.left <= rects.window.left && update.top <= rects.window.top &&
+                update.right >= rects.window.right && update.bottom >= rects.window.bottom)
             {
-                NtGdiDeleteObjectApp( whole_rgn );
-                whole_rgn = (HRGN)1;
+                client_rgn = (HRGN)1;
+            }
+            else
+            {
+                client_rgn = NtGdiCreateRectRgn( rects.client.left, rects.client.top, rects.client.right, rects.client.bottom );
+                NtGdiCombineRgn( client_rgn, client_rgn, whole_rgn, RGN_AND );
             }
-        }
-        else
-        {
-            client_rgn = whole_rgn;
-            whole_rgn = 0;
         }
 
-        if (whole_rgn) /* NOTE: WM_NCPAINT allows wParam to be 1 */
+        if (client_rgn) /* NOTE: WM_NCPAINT allows wParam to be 1 */
         {
             if (*flags & UPDATE_NONCLIENT)
             {
@@ -1571,13 +1570,13 @@ static HRGN send_ncpaint( HWND hwnd, HWND *child, UINT *flags )
                 if (style & WS_VSCROLL)
                     set_standard_scroll_painted( hwnd, SB_VERT, FALSE );
 
-                send_message( hwnd, WM_NCPAINT, (WPARAM)whole_rgn, 0 );
+                send_message( hwnd, WM_NCPAINT, (WPARAM)client_rgn, 0 );
             }
-            if (whole_rgn > (HRGN)1) NtGdiDeleteObjectApp( whole_rgn );
+            if (client_rgn > (HRGN)1) NtGdiDeleteObjectApp( client_rgn );
         }
         set_thread_dpi_awareness_context( context );
     }
-    return client_rgn;
+    return whole_rgn;
 }
 
 /***********************************************************************
@@ -1699,6 +1698,8 @@ HDC WINAPI NtUserBeginPaint( HWND hwnd, PAINTSTRUCT *ps )
     RECT rect;
     UINT flags = UPDATE_NONCLIENT | UPDATE_ERASE | UPDATE_PAINT | UPDATE_INTERNALPAINT | UPDATE_NOCHILDREN;
 
+    TRACE( "hwnd %p\n", hwnd );
+
     NtUserHideCaret( hwnd );
 
     if (!(hrgn = send_ncpaint( hwnd, NULL, &flags ))) return 0;
@@ -1723,6 +1724,8 @@ HDC WINAPI NtUserBeginPaint( HWND hwnd, PAINTSTRUCT *ps )
  */
 BOOL WINAPI NtUserEndPaint( HWND hwnd, const PAINTSTRUCT *ps )
 {
+    TRACE( "hwnd %p\n", hwnd );
+
     NtUserShowCaret( hwnd );
     flush_window_surfaces( FALSE );
     if (!ps) return FALSE;
-- 
GitLab

