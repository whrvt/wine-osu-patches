From 32cc3b61d0fb2fd2f24c1b115fb26a9a66243d58 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 11 Oct 2024 13:52:48 +0200
Subject: [PATCH] winex11: Generate relative ConfigureNotify on parent
 ConfigureNotify events.

---
 dlls/winex11.drv/event.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/dlls/winex11.drv/event.c b/dlls/winex11.drv/event.c
index ab2d0117238..b5077a2fecf 100644
--- a/dlls/winex11.drv/event.c
+++ b/dlls/winex11.drv/event.c
@@ -175,8 +175,10 @@ static inline void free_event_data( XEvent *event )
 static BOOL host_window_filter_event( XEvent *event )
 {
     struct host_window *win;
+    RECT old_rect;
 
     if (!(win = get_host_window( event->xany.window, FALSE ))) return FALSE;
+    old_rect = win->rect;
 
     switch (event->type)
     {
@@ -209,6 +211,27 @@ static BOOL host_window_filter_event( XEvent *event )
     }
     }
 
+    if (old_rect.left != win->rect.left || old_rect.top != win->rect.top)
+    {
+        XConfigureEvent configure = {.type = ConfigureNotify, .serial = event->xany.serial, .display = event->xany.display};
+        unsigned int i;
+
+        for (i = 0; i < win->children_count; i++)
+        {
+            RECT rect = win->children[i].rect;
+
+            configure.event = win->children[i].window;
+            configure.window = configure.event;
+            configure.x = rect.left;
+            configure.y = rect.top;
+            configure.width = rect.right - rect.left;
+            configure.height = rect.bottom - rect.top;
+            configure.send_event = 0;
+
+            XPutBackEvent( configure.display, (XEvent *)&configure );
+        }
+    }
+
     /* keep processing the event for foreign windows */
     return FALSE;
 }
-- 
GitLab

