From 957ab4e9e4f8d04ad41b7194d14a6281fe383af5 Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Thu, 5 Sep 2024 12:55:07 -0600
Subject: [PATCH 6/6] ntdll: Support old parameter layout for
 NtSetInformationProcess( ProcessInstrumentationCallback ).

---
 dlls/ntdll/tests/info.c   | 16 ++++++++++++++++
 dlls/ntdll/unix/process.c |  7 +++++--
 dlls/wow64/process.c      |  2 +-
 dlls/wow64/struct32.h     |  7 -------
 4 files changed, 22 insertions(+), 10 deletions(-)

diff --git a/dlls/ntdll/tests/info.c b/dlls/ntdll/tests/info.c
index ba19b248e43..b2a373ce1b3 100644
--- a/dlls/ntdll/tests/info.c
+++ b/dlls/ntdll/tests/info.c
@@ -3723,6 +3723,22 @@ static void test_process_instrumentation_callback(void)
     ok( status == STATUS_SUCCESS || status == STATUS_INFO_LENGTH_MISMATCH
             || broken( status == STATUS_PRIVILEGE_NOT_HELD ) /* some versions and machines before Win10 */,
             "Got unexpected status %#lx.\n", status );
+
+    if (status)
+    {
+        win_skip( "NtSetInformationProcess failed, skipping further tests.\n" );
+        return;
+    }
+
+    status = NtSetInformationProcess( GetCurrentProcess(), ProcessInstrumentationCallback,
+                                      &info.Callback, sizeof(info.Callback) );
+    ok( status == STATUS_SUCCESS, "got %#lx.\n", status );
+    status = NtSetInformationProcess( GetCurrentProcess(), ProcessInstrumentationCallback,
+                                      &info.Callback, sizeof(info.Callback) + 4 );
+    ok( status == STATUS_SUCCESS, "got %#lx.\n", status );
+    status = NtSetInformationProcess( GetCurrentProcess(), ProcessInstrumentationCallback,
+                                      &info.Callback, sizeof(info.Callback) / 2 );
+    ok( status == STATUS_INFO_LENGTH_MISMATCH, "got %#lx.\n", status );
 }
 
 static void test_debuggee_dbgport(int argc, char **argv)
diff --git a/dlls/ntdll/unix/process.c b/dlls/ntdll/unix/process.c
index fa8785897c3..e4b74ef364a 100644
--- a/dlls/ntdll/unix/process.c
+++ b/dlls/ntdll/unix/process.c
@@ -1713,17 +1713,20 @@ NTSTATUS WINAPI NtSetInformationProcess( HANDLE handle, PROCESSINFOCLASS class,
     case ProcessInstrumentationCallback:
     {
         PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION *instr = info;
+        void *callback;
 
         if (!is_win64 || is_wow64() || is_arm64ec()) FIXME( "ProcessInstrumentationCallback stub.\n" );
 
-        if (size < sizeof(*instr)) return STATUS_INFO_LENGTH_MISMATCH;
+        if (size < sizeof(callback)) return STATUS_INFO_LENGTH_MISMATCH;
+        if (size >= sizeof(PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION)) callback = instr->Callback;
+        else                                                              callback = *(void **)info;
         ret = STATUS_SUCCESS;
         if (handle != GetCurrentProcess())
         {
             FIXME( "Setting ProcessInstrumentationCallback is not yet supported for other process.\n" );
             break;
         }
-        InterlockedExchangePointer( &instrumentation_callback, instr->Callback );
+        InterlockedExchangePointer( &instrumentation_callback, callback );
         break;
     }
 
diff --git a/dlls/wow64/process.c b/dlls/wow64/process.c
index 9b2a6de01b3..653422a5013 100644
--- a/dlls/wow64/process.c
+++ b/dlls/wow64/process.c
@@ -894,7 +894,7 @@ NTSTATUS WINAPI wow64_NtSetInformationProcess( UINT *args )
         else return STATUS_INVALID_PARAMETER;
 
     case ProcessInstrumentationCallback:   /* PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION */
-        if (len >= sizeof(PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION32))
+        if (len >= sizeof(void *))
         {
             FIXME( "ProcessInstrumentationCallback stub\n" );
             return STATUS_SUCCESS;
diff --git a/dlls/wow64/struct32.h b/dlls/wow64/struct32.h
index b196bdd53ca..fe2bbc758ee 100644
--- a/dlls/wow64/struct32.h
+++ b/dlls/wow64/struct32.h
@@ -228,13 +228,6 @@ typedef struct
     ULONG     InheritedFromUniqueProcessId;
 } PROCESS_BASIC_INFORMATION32;
 
-typedef struct
-{
-    ULONG Version;
-    ULONG Reserved;
-    ULONG Callback;
-} PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION32;
-
 typedef struct
 {
     ULONG ReserveSize;
-- 
2.46.1

