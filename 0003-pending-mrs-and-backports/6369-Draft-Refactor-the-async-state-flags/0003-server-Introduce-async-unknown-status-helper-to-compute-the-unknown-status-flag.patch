From 953e68eeaf08887d141a5d0751f19aca7e309efd Mon Sep 17 00:00:00 2001
From: Jinoh Kang <jinoh.kang.kr@gmail.com>
Date: Sat, 24 Aug 2024 10:58:42 +0900
Subject: [PATCH] server: Introduce async_unknown_status() helper to compute
 the 'unknown_status' flag.

This helper will later be rewritten to compute the flag from a state
enum.
---
 server/async.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/server/async.c b/server/async.c
index 4754d9f2a86..a664b6bc93c 100644
--- a/server/async.c
+++ b/server/async.c
@@ -171,6 +171,11 @@ static int async_alerted( const struct async *async )
     return async->alerted;
 }
 
+static int async_unknown_status( const struct async *async )
+{
+    return async->unknown_status;
+}
+
 /* notifies client thread of new status of its async request */
 void async_terminate( struct async *async, unsigned int status )
 {
@@ -326,7 +331,7 @@ void set_async_pending( struct async *async )
 
 void async_wake_obj( struct async *async )
 {
-    assert( !async->unknown_status );
+    assert( !async_unknown_status( async ) );
     if (!async->blocking)
     {
         async->signaled = 1;
@@ -346,7 +351,7 @@ obj_handle_t async_handoff( struct async *async, data_size_t *result, int force_
 {
     async->blocking = force_blocking || async->blocking;
 
-    if (async->unknown_status)
+    if (async_unknown_status( async ))
     {
         /* even the initial status is not known yet */
         set_error( STATUS_PENDING );
@@ -503,7 +508,7 @@ void async_set_result( struct object *obj, unsigned int status, apc_param_t tota
 
     assert( async_terminated( async ) );  /* it must have been woken up if we get a result */
 
-    if (async->unknown_status) async_set_initial_status( async, status );
+    if (async_unknown_status( async )) async_set_initial_status( async, status );
 
     if (async_alerted( async ) && status == STATUS_PENDING)  /* restart it */
     {
@@ -568,7 +573,7 @@ int async_queue_has_waiting_asyncs( struct async_queue *queue )
     struct async *async;
 
     LIST_FOR_EACH_ENTRY( async, &queue->queue, struct async, queue_entry )
-        if (!async->unknown_status) return 1;
+        if (!async_unknown_status( async )) return 1;
 
     return 0;
 }
@@ -873,7 +878,7 @@ DECL_HANDLER(set_async_direct_result)
 
     if (!async) return;
 
-    if (!async->unknown_status || !async_terminated( async ) || !async_alerted( async ))
+    if (!async_unknown_status( async ) || !async_terminated( async ) || !async_alerted( async ))
     {
         set_error( STATUS_INVALID_PARAMETER );
         release_object( &async->obj );
-- 
GitLab

