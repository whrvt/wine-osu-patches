From ccd5e580f7449dfbadb40a558a77647c56fb7cf0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 6 Mar 2025 11:30:03 +0100
Subject: [PATCH] opengl32: Get rid of opengl_funcs internal structures.

---
 dlls/opengl32/make_opengl     |    35 +-
 dlls/opengl32/unix_thunks.c   | 17526 ++++++++++++++++----------------
 dlls/opengl32/unix_wgl.c      |   118 +-
 dlls/win32u/opengl.c          |    39 +-
 dlls/wineandroid.drv/opengl.c |    48 +-
 dlls/winemac.drv/opengl.c     |   113 +-
 dlls/winewayland.drv/opengl.c |    89 +-
 dlls/winex11.drv/opengl.c     |   105 +-
 include/wine/wgl_driver.h     |  6097 ++++++-----
 9 files changed, 12051 insertions(+), 12119 deletions(-)

diff --git a/dlls/opengl32/make_opengl b/dlls/opengl32/make_opengl
index 26cb34aa683..0f81f886a68 100755
--- a/dlls/opengl32/make_opengl
+++ b/dlls/opengl32/make_opengl
@@ -356,7 +356,7 @@ sub generate_unix_thunk($$$)
     {
         my $pname = get_arg_name( ${$func->[1]}[0] );
         $ret .= "    const struct opengl_funcs *funcs = get_dc_funcs( params->$pname );\n";
-        $ret .= "    if (!funcs || !funcs->$prefix.p_$name) return STATUS_NOT_IMPLEMENTED;\n";
+        $ret .= "    if (!funcs || !funcs->p_$name) return STATUS_NOT_IMPLEMENTED;\n";
     }
     else
     {
@@ -365,7 +365,7 @@ sub generate_unix_thunk($$$)
     $ret .= "    ";
     $ret .= "params->ret = " unless is_void_func( $func );
     $ret .= "($func_ret)" if defined $remap_types{$func_ret};
-    $ret .= "funcs->$prefix.p_$name($call_args);\n";
+    $ret .= "funcs->p_$name($call_args);\n";
     $ret .= "    return STATUS_SUCCESS;\n";
     $ret .= "}\n\n";
 
@@ -878,9 +878,6 @@ open HEADER, ">$wgl_driver_file" or die "cannot create $wgl_driver_file";
 print HEADER "/* Automatically generated from http://www.opengl.org/registry files; DO NOT EDIT! */\n\n";
 print HEADER "#ifndef __WINE_WGL_DRIVER_H\n";
 print HEADER "#define __WINE_WGL_DRIVER_H\n\n";
-print HEADER "#ifndef WINE_GLAPI\n";
-print HEADER "#define WINE_GLAPI\n";
-print HEADER "#endif\n\n";
 
 printf HEADER "#define WINE_WGL_DRIVER_VERSION %u\n\n", $wgl_version + 1;
 
@@ -918,36 +915,30 @@ print HEADER "    int float_components;\n";
 print HEADER "};\n\n";
 
 print HEADER "struct opengl_funcs\n{\n";
-print HEADER "    struct\n    {\n";
 foreach (sort keys %wgl_functions)
 {
     next if defined $manual_win_functions{$_};
     my $decl_args = get_func_args( $wgl_functions{$_}, 1, 1, "" );
     my $func_ret = get_func_ret( $wgl_functions{$_}, 1 );
-    printf HEADER "        %-10s (WINE_GLAPI *p_$_)($decl_args);\n", $func_ret;
+    printf HEADER "    %-10s (*p_$_)($decl_args);\n", $func_ret;
 }
-printf HEADER "        %-10s (WINE_GLAPI *p_get_pixel_formats)( struct wgl_pixel_format *formats, UINT max_formats, UINT *num_formats, UINT *num_onscreen_formats );\n", "void";
-print HEADER "    } wgl;\n\n";
+printf HEADER "    %-10s (*p_get_pixel_formats)( struct wgl_pixel_format *formats, UINT max_formats, UINT *num_formats, UINT *num_onscreen_formats );\n", "void";
 
-print HEADER "    struct\n    {\n";
 foreach (sort keys %norm_functions)
 {
     next if defined $manual_win_functions{$_};
     my $decl_args = get_func_args( $norm_functions{$_}, 1, 1, "" );
     my $func_ret = get_func_ret( $norm_functions{$_}, 1 );
-    printf HEADER "        %-10s (WINE_GLAPI *p_$_)($decl_args);\n", $func_ret;
+    printf HEADER "    %-10s (*p_$_)($decl_args);\n", $func_ret;
 }
-print HEADER "    } gl;\n\n";
 
-print HEADER "    struct\n    {\n";
 foreach (sort keys %ext_functions)
 {
     next if defined $manual_win_functions{$_};
     my $decl_args = get_func_args( $ext_functions{$_}, 1, 1, "" );
     my $func_ret = get_func_ret( $ext_functions{$_}, 1 );
-    printf HEADER "        %-10s (WINE_GLAPI *p_$_)($decl_args);\n", $func_ret;
+    printf HEADER "    %-10s (*p_$_)($decl_args);\n", $func_ret;
 }
-print HEADER "    } ext;\n";
 print HEADER "};\n\n";
 
 print HEADER "#define ALL_GL_UNIX_FUNCS";
@@ -1417,27 +1408,21 @@ print OUT "\n";
 
 print OUT "struct opengl_funcs null_opengl_funcs =\n";
 print OUT "{\n";
-print OUT "    {\n";
 foreach (sort keys %wgl_functions)
 {
     next if defined $manual_win_functions{$_};
-    print OUT "        null_$_,\n";
+    print OUT "    .p_$_ = null_$_,\n";
 }
-print OUT "    },\n";
-print OUT "    {\n";
 foreach (sort keys %norm_functions)
 {
     next if defined $manual_win_functions{$_};
-    print OUT "        null_$_,\n";
+    print OUT "    .p_$_ = null_$_,\n";
 }
-print OUT "    },\n";
-print OUT "    {\n";
 foreach (sort keys %ext_functions)
 {
     next if defined $manual_win_functions{$_};
-    print OUT "        null_$_,\n";
+    print OUT "    .p_$_ = null_$_,\n";
 }
-print OUT "    },\n";
 print OUT "};\n";
 
 # Then the table giving the string <-> function correspondence */
@@ -1448,7 +1433,7 @@ print OUT "{\n";
 foreach (sort keys %ext_functions)
 {
     my $func = $ext_functions{$_};
-    printf OUT "    { \"%s\", \"%s\", offsetof(struct opengl_funcs, ext.p_$_) },\n", $_, join(" ", sort @{$func->[2]});
+    printf OUT "    { \"%s\", \"%s\", offsetof(struct opengl_funcs, p_$_) },\n", $_, join(" ", sort @{$func->[2]});
 }
 print OUT "};\n";
 
diff --git a/dlls/opengl32/unix_thunks.c b/dlls/opengl32/unix_thunks.c
index 4bc7a21af87..c6b722478f3 100644
--- a/dlls/opengl32/unix_thunks.c
+++ b/dlls/opengl32/unix_thunks.c
@@ -53,8 +53,8 @@ static NTSTATUS wgl_wglGetPixelFormat( void *args )
 {
     struct wglGetPixelFormat_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->wgl.p_wglGetPixelFormat) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->wgl.p_wglGetPixelFormat( params->hdc );
+    if (!funcs || !funcs->p_wglGetPixelFormat) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglGetPixelFormat( params->hdc );
     return STATUS_SUCCESS;
 }
 
@@ -62,8 +62,8 @@ static NTSTATUS wgl_wglSetPixelFormat( void *args )
 {
     struct wglSetPixelFormat_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->wgl.p_wglSetPixelFormat) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->wgl.p_wglSetPixelFormat( params->hdc, params->ipfd, params->ppfd );
+    if (!funcs || !funcs->p_wglSetPixelFormat) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglSetPixelFormat( params->hdc, params->ipfd, params->ppfd );
     return STATUS_SUCCESS;
 }
 
@@ -71,8 +71,8 @@ static NTSTATUS wgl_wglSwapBuffers( void *args )
 {
     struct wglSwapBuffers_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->wgl.p_wglSwapBuffers) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->wgl.p_wglSwapBuffers( params->hdc );
+    if (!funcs || !funcs->p_wglSwapBuffers) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglSwapBuffers( params->hdc );
     return STATUS_SUCCESS;
 }
 
@@ -80,7 +80,7 @@ static NTSTATUS gl_glAccum( void *args )
 {
     struct glAccum_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glAccum( params->op, params->value );
+    funcs->p_glAccum( params->op, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -88,7 +88,7 @@ static NTSTATUS gl_glAlphaFunc( void *args )
 {
     struct glAlphaFunc_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glAlphaFunc( params->func, params->ref );
+    funcs->p_glAlphaFunc( params->func, params->ref );
     return STATUS_SUCCESS;
 }
 
@@ -96,7 +96,7 @@ static NTSTATUS gl_glAreTexturesResident( void *args )
 {
     struct glAreTexturesResident_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->gl.p_glAreTexturesResident( params->n, params->textures, params->residences );
+    params->ret = funcs->p_glAreTexturesResident( params->n, params->textures, params->residences );
     return STATUS_SUCCESS;
 }
 
@@ -104,7 +104,7 @@ static NTSTATUS gl_glArrayElement( void *args )
 {
     struct glArrayElement_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glArrayElement( params->i );
+    funcs->p_glArrayElement( params->i );
     return STATUS_SUCCESS;
 }
 
@@ -112,7 +112,7 @@ static NTSTATUS gl_glBegin( void *args )
 {
     struct glBegin_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glBegin( params->mode );
+    funcs->p_glBegin( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -120,7 +120,7 @@ static NTSTATUS gl_glBindTexture( void *args )
 {
     struct glBindTexture_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glBindTexture( params->target, params->texture );
+    funcs->p_glBindTexture( params->target, params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -128,7 +128,7 @@ static NTSTATUS gl_glBitmap( void *args )
 {
     struct glBitmap_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glBitmap( params->width, params->height, params->xorig, params->yorig, params->xmove, params->ymove, params->bitmap );
+    funcs->p_glBitmap( params->width, params->height, params->xorig, params->yorig, params->xmove, params->ymove, params->bitmap );
     return STATUS_SUCCESS;
 }
 
@@ -136,7 +136,7 @@ static NTSTATUS gl_glBlendFunc( void *args )
 {
     struct glBlendFunc_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glBlendFunc( params->sfactor, params->dfactor );
+    funcs->p_glBlendFunc( params->sfactor, params->dfactor );
     return STATUS_SUCCESS;
 }
 
@@ -144,7 +144,7 @@ static NTSTATUS gl_glCallList( void *args )
 {
     struct glCallList_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glCallList( params->list );
+    funcs->p_glCallList( params->list );
     return STATUS_SUCCESS;
 }
 
@@ -152,7 +152,7 @@ static NTSTATUS gl_glCallLists( void *args )
 {
     struct glCallLists_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glCallLists( params->n, params->type, params->lists );
+    funcs->p_glCallLists( params->n, params->type, params->lists );
     return STATUS_SUCCESS;
 }
 
@@ -160,7 +160,7 @@ static NTSTATUS gl_glClear( void *args )
 {
     struct glClear_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glClear( params->mask );
+    funcs->p_glClear( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -168,7 +168,7 @@ static NTSTATUS gl_glClearAccum( void *args )
 {
     struct glClearAccum_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glClearAccum( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glClearAccum( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -176,7 +176,7 @@ static NTSTATUS gl_glClearColor( void *args )
 {
     struct glClearColor_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glClearColor( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glClearColor( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -184,7 +184,7 @@ static NTSTATUS gl_glClearDepth( void *args )
 {
     struct glClearDepth_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glClearDepth( params->depth );
+    funcs->p_glClearDepth( params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -192,7 +192,7 @@ static NTSTATUS gl_glClearIndex( void *args )
 {
     struct glClearIndex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glClearIndex( params->c );
+    funcs->p_glClearIndex( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -200,7 +200,7 @@ static NTSTATUS gl_glClearStencil( void *args )
 {
     struct glClearStencil_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glClearStencil( params->s );
+    funcs->p_glClearStencil( params->s );
     return STATUS_SUCCESS;
 }
 
@@ -208,7 +208,7 @@ static NTSTATUS gl_glClipPlane( void *args )
 {
     struct glClipPlane_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glClipPlane( params->plane, params->equation );
+    funcs->p_glClipPlane( params->plane, params->equation );
     return STATUS_SUCCESS;
 }
 
@@ -216,7 +216,7 @@ static NTSTATUS gl_glColor3b( void *args )
 {
     struct glColor3b_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3b( params->red, params->green, params->blue );
+    funcs->p_glColor3b( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -224,7 +224,7 @@ static NTSTATUS gl_glColor3bv( void *args )
 {
     struct glColor3bv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3bv( params->v );
+    funcs->p_glColor3bv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -232,7 +232,7 @@ static NTSTATUS gl_glColor3d( void *args )
 {
     struct glColor3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3d( params->red, params->green, params->blue );
+    funcs->p_glColor3d( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -240,7 +240,7 @@ static NTSTATUS gl_glColor3dv( void *args )
 {
     struct glColor3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3dv( params->v );
+    funcs->p_glColor3dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -248,7 +248,7 @@ static NTSTATUS gl_glColor3f( void *args )
 {
     struct glColor3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3f( params->red, params->green, params->blue );
+    funcs->p_glColor3f( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -256,7 +256,7 @@ static NTSTATUS gl_glColor3fv( void *args )
 {
     struct glColor3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3fv( params->v );
+    funcs->p_glColor3fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -264,7 +264,7 @@ static NTSTATUS gl_glColor3i( void *args )
 {
     struct glColor3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3i( params->red, params->green, params->blue );
+    funcs->p_glColor3i( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -272,7 +272,7 @@ static NTSTATUS gl_glColor3iv( void *args )
 {
     struct glColor3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3iv( params->v );
+    funcs->p_glColor3iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -280,7 +280,7 @@ static NTSTATUS gl_glColor3s( void *args )
 {
     struct glColor3s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3s( params->red, params->green, params->blue );
+    funcs->p_glColor3s( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -288,7 +288,7 @@ static NTSTATUS gl_glColor3sv( void *args )
 {
     struct glColor3sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3sv( params->v );
+    funcs->p_glColor3sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -296,7 +296,7 @@ static NTSTATUS gl_glColor3ub( void *args )
 {
     struct glColor3ub_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3ub( params->red, params->green, params->blue );
+    funcs->p_glColor3ub( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -304,7 +304,7 @@ static NTSTATUS gl_glColor3ubv( void *args )
 {
     struct glColor3ubv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3ubv( params->v );
+    funcs->p_glColor3ubv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -312,7 +312,7 @@ static NTSTATUS gl_glColor3ui( void *args )
 {
     struct glColor3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3ui( params->red, params->green, params->blue );
+    funcs->p_glColor3ui( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -320,7 +320,7 @@ static NTSTATUS gl_glColor3uiv( void *args )
 {
     struct glColor3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3uiv( params->v );
+    funcs->p_glColor3uiv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -328,7 +328,7 @@ static NTSTATUS gl_glColor3us( void *args )
 {
     struct glColor3us_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3us( params->red, params->green, params->blue );
+    funcs->p_glColor3us( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -336,7 +336,7 @@ static NTSTATUS gl_glColor3usv( void *args )
 {
     struct glColor3usv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor3usv( params->v );
+    funcs->p_glColor3usv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -344,7 +344,7 @@ static NTSTATUS gl_glColor4b( void *args )
 {
     struct glColor4b_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4b( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4b( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -352,7 +352,7 @@ static NTSTATUS gl_glColor4bv( void *args )
 {
     struct glColor4bv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4bv( params->v );
+    funcs->p_glColor4bv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -360,7 +360,7 @@ static NTSTATUS gl_glColor4d( void *args )
 {
     struct glColor4d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4d( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4d( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -368,7 +368,7 @@ static NTSTATUS gl_glColor4dv( void *args )
 {
     struct glColor4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4dv( params->v );
+    funcs->p_glColor4dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -376,7 +376,7 @@ static NTSTATUS gl_glColor4f( void *args )
 {
     struct glColor4f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4f( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4f( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -384,7 +384,7 @@ static NTSTATUS gl_glColor4fv( void *args )
 {
     struct glColor4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4fv( params->v );
+    funcs->p_glColor4fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -392,7 +392,7 @@ static NTSTATUS gl_glColor4i( void *args )
 {
     struct glColor4i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4i( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4i( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -400,7 +400,7 @@ static NTSTATUS gl_glColor4iv( void *args )
 {
     struct glColor4iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4iv( params->v );
+    funcs->p_glColor4iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -408,7 +408,7 @@ static NTSTATUS gl_glColor4s( void *args )
 {
     struct glColor4s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4s( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4s( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -416,7 +416,7 @@ static NTSTATUS gl_glColor4sv( void *args )
 {
     struct glColor4sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4sv( params->v );
+    funcs->p_glColor4sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -424,7 +424,7 @@ static NTSTATUS gl_glColor4ub( void *args )
 {
     struct glColor4ub_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4ub( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4ub( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -432,7 +432,7 @@ static NTSTATUS gl_glColor4ubv( void *args )
 {
     struct glColor4ubv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4ubv( params->v );
+    funcs->p_glColor4ubv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -440,7 +440,7 @@ static NTSTATUS gl_glColor4ui( void *args )
 {
     struct glColor4ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4ui( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4ui( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -448,7 +448,7 @@ static NTSTATUS gl_glColor4uiv( void *args )
 {
     struct glColor4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4uiv( params->v );
+    funcs->p_glColor4uiv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -456,7 +456,7 @@ static NTSTATUS gl_glColor4us( void *args )
 {
     struct glColor4us_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4us( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4us( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -464,7 +464,7 @@ static NTSTATUS gl_glColor4usv( void *args )
 {
     struct glColor4usv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColor4usv( params->v );
+    funcs->p_glColor4usv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -472,7 +472,7 @@ static NTSTATUS gl_glColorMask( void *args )
 {
     struct glColorMask_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColorMask( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColorMask( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -480,7 +480,7 @@ static NTSTATUS gl_glColorMaterial( void *args )
 {
     struct glColorMaterial_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColorMaterial( params->face, params->mode );
+    funcs->p_glColorMaterial( params->face, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -488,7 +488,7 @@ static NTSTATUS gl_glColorPointer( void *args )
 {
     struct glColorPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glColorPointer( params->size, params->type, params->stride, params->pointer );
+    funcs->p_glColorPointer( params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -496,7 +496,7 @@ static NTSTATUS gl_glCopyPixels( void *args )
 {
     struct glCopyPixels_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glCopyPixels( params->x, params->y, params->width, params->height, params->type );
+    funcs->p_glCopyPixels( params->x, params->y, params->width, params->height, params->type );
     return STATUS_SUCCESS;
 }
 
@@ -504,7 +504,7 @@ static NTSTATUS gl_glCopyTexImage1D( void *args )
 {
     struct glCopyTexImage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glCopyTexImage1D( params->target, params->level, params->internalformat, params->x, params->y, params->width, params->border );
+    funcs->p_glCopyTexImage1D( params->target, params->level, params->internalformat, params->x, params->y, params->width, params->border );
     return STATUS_SUCCESS;
 }
 
@@ -512,7 +512,7 @@ static NTSTATUS gl_glCopyTexImage2D( void *args )
 {
     struct glCopyTexImage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glCopyTexImage2D( params->target, params->level, params->internalformat, params->x, params->y, params->width, params->height, params->border );
+    funcs->p_glCopyTexImage2D( params->target, params->level, params->internalformat, params->x, params->y, params->width, params->height, params->border );
     return STATUS_SUCCESS;
 }
 
@@ -520,7 +520,7 @@ static NTSTATUS gl_glCopyTexSubImage1D( void *args )
 {
     struct glCopyTexSubImage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glCopyTexSubImage1D( params->target, params->level, params->xoffset, params->x, params->y, params->width );
+    funcs->p_glCopyTexSubImage1D( params->target, params->level, params->xoffset, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -528,7 +528,7 @@ static NTSTATUS gl_glCopyTexSubImage2D( void *args )
 {
     struct glCopyTexSubImage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glCopyTexSubImage2D( params->target, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyTexSubImage2D( params->target, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -536,7 +536,7 @@ static NTSTATUS gl_glCullFace( void *args )
 {
     struct glCullFace_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glCullFace( params->mode );
+    funcs->p_glCullFace( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -544,7 +544,7 @@ static NTSTATUS gl_glDeleteLists( void *args )
 {
     struct glDeleteLists_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDeleteLists( params->list, params->range );
+    funcs->p_glDeleteLists( params->list, params->range );
     return STATUS_SUCCESS;
 }
 
@@ -552,7 +552,7 @@ static NTSTATUS gl_glDeleteTextures( void *args )
 {
     struct glDeleteTextures_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDeleteTextures( params->n, params->textures );
+    funcs->p_glDeleteTextures( params->n, params->textures );
     return STATUS_SUCCESS;
 }
 
@@ -560,7 +560,7 @@ static NTSTATUS gl_glDepthFunc( void *args )
 {
     struct glDepthFunc_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDepthFunc( params->func );
+    funcs->p_glDepthFunc( params->func );
     return STATUS_SUCCESS;
 }
 
@@ -568,7 +568,7 @@ static NTSTATUS gl_glDepthMask( void *args )
 {
     struct glDepthMask_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDepthMask( params->flag );
+    funcs->p_glDepthMask( params->flag );
     return STATUS_SUCCESS;
 }
 
@@ -576,7 +576,7 @@ static NTSTATUS gl_glDepthRange( void *args )
 {
     struct glDepthRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDepthRange( params->n, params->f );
+    funcs->p_glDepthRange( params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -584,7 +584,7 @@ static NTSTATUS gl_glDisable( void *args )
 {
     struct glDisable_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDisable( params->cap );
+    funcs->p_glDisable( params->cap );
     return STATUS_SUCCESS;
 }
 
@@ -592,7 +592,7 @@ static NTSTATUS gl_glDisableClientState( void *args )
 {
     struct glDisableClientState_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDisableClientState( params->array );
+    funcs->p_glDisableClientState( params->array );
     return STATUS_SUCCESS;
 }
 
@@ -600,7 +600,7 @@ static NTSTATUS gl_glDrawArrays( void *args )
 {
     struct glDrawArrays_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDrawArrays( params->mode, params->first, params->count );
+    funcs->p_glDrawArrays( params->mode, params->first, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -608,7 +608,7 @@ static NTSTATUS gl_glDrawBuffer( void *args )
 {
     struct glDrawBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDrawBuffer( params->buf );
+    funcs->p_glDrawBuffer( params->buf );
     return STATUS_SUCCESS;
 }
 
@@ -616,7 +616,7 @@ static NTSTATUS gl_glDrawElements( void *args )
 {
     struct glDrawElements_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDrawElements( params->mode, params->count, params->type, params->indices );
+    funcs->p_glDrawElements( params->mode, params->count, params->type, params->indices );
     return STATUS_SUCCESS;
 }
 
@@ -624,7 +624,7 @@ static NTSTATUS gl_glDrawPixels( void *args )
 {
     struct glDrawPixels_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glDrawPixels( params->width, params->height, params->format, params->type, params->pixels );
+    funcs->p_glDrawPixels( params->width, params->height, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -632,7 +632,7 @@ static NTSTATUS gl_glEdgeFlag( void *args )
 {
     struct glEdgeFlag_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEdgeFlag( params->flag );
+    funcs->p_glEdgeFlag( params->flag );
     return STATUS_SUCCESS;
 }
 
@@ -640,7 +640,7 @@ static NTSTATUS gl_glEdgeFlagPointer( void *args )
 {
     struct glEdgeFlagPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEdgeFlagPointer( params->stride, params->pointer );
+    funcs->p_glEdgeFlagPointer( params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -648,7 +648,7 @@ static NTSTATUS gl_glEdgeFlagv( void *args )
 {
     struct glEdgeFlagv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEdgeFlagv( params->flag );
+    funcs->p_glEdgeFlagv( params->flag );
     return STATUS_SUCCESS;
 }
 
@@ -656,7 +656,7 @@ static NTSTATUS gl_glEnable( void *args )
 {
     struct glEnable_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEnable( params->cap );
+    funcs->p_glEnable( params->cap );
     return STATUS_SUCCESS;
 }
 
@@ -664,7 +664,7 @@ static NTSTATUS gl_glEnableClientState( void *args )
 {
     struct glEnableClientState_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEnableClientState( params->array );
+    funcs->p_glEnableClientState( params->array );
     return STATUS_SUCCESS;
 }
 
@@ -672,7 +672,7 @@ static NTSTATUS gl_glEnd( void *args )
 {
     struct glEnd_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEnd();
+    funcs->p_glEnd();
     return STATUS_SUCCESS;
 }
 
@@ -680,7 +680,7 @@ static NTSTATUS gl_glEndList( void *args )
 {
     struct glEndList_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEndList();
+    funcs->p_glEndList();
     return STATUS_SUCCESS;
 }
 
@@ -688,7 +688,7 @@ static NTSTATUS gl_glEvalCoord1d( void *args )
 {
     struct glEvalCoord1d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalCoord1d( params->u );
+    funcs->p_glEvalCoord1d( params->u );
     return STATUS_SUCCESS;
 }
 
@@ -696,7 +696,7 @@ static NTSTATUS gl_glEvalCoord1dv( void *args )
 {
     struct glEvalCoord1dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalCoord1dv( params->u );
+    funcs->p_glEvalCoord1dv( params->u );
     return STATUS_SUCCESS;
 }
 
@@ -704,7 +704,7 @@ static NTSTATUS gl_glEvalCoord1f( void *args )
 {
     struct glEvalCoord1f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalCoord1f( params->u );
+    funcs->p_glEvalCoord1f( params->u );
     return STATUS_SUCCESS;
 }
 
@@ -712,7 +712,7 @@ static NTSTATUS gl_glEvalCoord1fv( void *args )
 {
     struct glEvalCoord1fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalCoord1fv( params->u );
+    funcs->p_glEvalCoord1fv( params->u );
     return STATUS_SUCCESS;
 }
 
@@ -720,7 +720,7 @@ static NTSTATUS gl_glEvalCoord2d( void *args )
 {
     struct glEvalCoord2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalCoord2d( params->u, params->v );
+    funcs->p_glEvalCoord2d( params->u, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -728,7 +728,7 @@ static NTSTATUS gl_glEvalCoord2dv( void *args )
 {
     struct glEvalCoord2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalCoord2dv( params->u );
+    funcs->p_glEvalCoord2dv( params->u );
     return STATUS_SUCCESS;
 }
 
@@ -736,7 +736,7 @@ static NTSTATUS gl_glEvalCoord2f( void *args )
 {
     struct glEvalCoord2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalCoord2f( params->u, params->v );
+    funcs->p_glEvalCoord2f( params->u, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -744,7 +744,7 @@ static NTSTATUS gl_glEvalCoord2fv( void *args )
 {
     struct glEvalCoord2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalCoord2fv( params->u );
+    funcs->p_glEvalCoord2fv( params->u );
     return STATUS_SUCCESS;
 }
 
@@ -752,7 +752,7 @@ static NTSTATUS gl_glEvalMesh1( void *args )
 {
     struct glEvalMesh1_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalMesh1( params->mode, params->i1, params->i2 );
+    funcs->p_glEvalMesh1( params->mode, params->i1, params->i2 );
     return STATUS_SUCCESS;
 }
 
@@ -760,7 +760,7 @@ static NTSTATUS gl_glEvalMesh2( void *args )
 {
     struct glEvalMesh2_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalMesh2( params->mode, params->i1, params->i2, params->j1, params->j2 );
+    funcs->p_glEvalMesh2( params->mode, params->i1, params->i2, params->j1, params->j2 );
     return STATUS_SUCCESS;
 }
 
@@ -768,7 +768,7 @@ static NTSTATUS gl_glEvalPoint1( void *args )
 {
     struct glEvalPoint1_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalPoint1( params->i );
+    funcs->p_glEvalPoint1( params->i );
     return STATUS_SUCCESS;
 }
 
@@ -776,7 +776,7 @@ static NTSTATUS gl_glEvalPoint2( void *args )
 {
     struct glEvalPoint2_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glEvalPoint2( params->i, params->j );
+    funcs->p_glEvalPoint2( params->i, params->j );
     return STATUS_SUCCESS;
 }
 
@@ -784,7 +784,7 @@ static NTSTATUS gl_glFeedbackBuffer( void *args )
 {
     struct glFeedbackBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glFeedbackBuffer( params->size, params->type, params->buffer );
+    funcs->p_glFeedbackBuffer( params->size, params->type, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -792,7 +792,7 @@ static NTSTATUS gl_glFinish( void *args )
 {
     struct glFinish_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glFinish();
+    funcs->p_glFinish();
     return STATUS_SUCCESS;
 }
 
@@ -800,7 +800,7 @@ static NTSTATUS gl_glFlush( void *args )
 {
     struct glFlush_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glFlush();
+    funcs->p_glFlush();
     return STATUS_SUCCESS;
 }
 
@@ -808,7 +808,7 @@ static NTSTATUS gl_glFogf( void *args )
 {
     struct glFogf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glFogf( params->pname, params->param );
+    funcs->p_glFogf( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -816,7 +816,7 @@ static NTSTATUS gl_glFogfv( void *args )
 {
     struct glFogfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glFogfv( params->pname, params->params );
+    funcs->p_glFogfv( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -824,7 +824,7 @@ static NTSTATUS gl_glFogi( void *args )
 {
     struct glFogi_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glFogi( params->pname, params->param );
+    funcs->p_glFogi( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -832,7 +832,7 @@ static NTSTATUS gl_glFogiv( void *args )
 {
     struct glFogiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glFogiv( params->pname, params->params );
+    funcs->p_glFogiv( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -840,7 +840,7 @@ static NTSTATUS gl_glFrontFace( void *args )
 {
     struct glFrontFace_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glFrontFace( params->mode );
+    funcs->p_glFrontFace( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -848,7 +848,7 @@ static NTSTATUS gl_glFrustum( void *args )
 {
     struct glFrustum_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glFrustum( params->left, params->right, params->bottom, params->top, params->zNear, params->zFar );
+    funcs->p_glFrustum( params->left, params->right, params->bottom, params->top, params->zNear, params->zFar );
     return STATUS_SUCCESS;
 }
 
@@ -856,7 +856,7 @@ static NTSTATUS gl_glGenLists( void *args )
 {
     struct glGenLists_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->gl.p_glGenLists( params->range );
+    params->ret = funcs->p_glGenLists( params->range );
     return STATUS_SUCCESS;
 }
 
@@ -864,7 +864,7 @@ static NTSTATUS gl_glGenTextures( void *args )
 {
     struct glGenTextures_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGenTextures( params->n, params->textures );
+    funcs->p_glGenTextures( params->n, params->textures );
     return STATUS_SUCCESS;
 }
 
@@ -872,7 +872,7 @@ static NTSTATUS gl_glGetBooleanv( void *args )
 {
     struct glGetBooleanv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetBooleanv( params->pname, params->data );
+    funcs->p_glGetBooleanv( params->pname, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -880,7 +880,7 @@ static NTSTATUS gl_glGetClipPlane( void *args )
 {
     struct glGetClipPlane_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetClipPlane( params->plane, params->equation );
+    funcs->p_glGetClipPlane( params->plane, params->equation );
     return STATUS_SUCCESS;
 }
 
@@ -888,7 +888,7 @@ static NTSTATUS gl_glGetDoublev( void *args )
 {
     struct glGetDoublev_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetDoublev( params->pname, params->data );
+    funcs->p_glGetDoublev( params->pname, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -896,7 +896,7 @@ static NTSTATUS gl_glGetError( void *args )
 {
     struct glGetError_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->gl.p_glGetError();
+    params->ret = funcs->p_glGetError();
     return STATUS_SUCCESS;
 }
 
@@ -904,7 +904,7 @@ static NTSTATUS gl_glGetFloatv( void *args )
 {
     struct glGetFloatv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetFloatv( params->pname, params->data );
+    funcs->p_glGetFloatv( params->pname, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -912,7 +912,7 @@ static NTSTATUS gl_glGetLightfv( void *args )
 {
     struct glGetLightfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetLightfv( params->light, params->pname, params->params );
+    funcs->p_glGetLightfv( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -920,7 +920,7 @@ static NTSTATUS gl_glGetLightiv( void *args )
 {
     struct glGetLightiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetLightiv( params->light, params->pname, params->params );
+    funcs->p_glGetLightiv( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -928,7 +928,7 @@ static NTSTATUS gl_glGetMapdv( void *args )
 {
     struct glGetMapdv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetMapdv( params->target, params->query, params->v );
+    funcs->p_glGetMapdv( params->target, params->query, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -936,7 +936,7 @@ static NTSTATUS gl_glGetMapfv( void *args )
 {
     struct glGetMapfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetMapfv( params->target, params->query, params->v );
+    funcs->p_glGetMapfv( params->target, params->query, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -944,7 +944,7 @@ static NTSTATUS gl_glGetMapiv( void *args )
 {
     struct glGetMapiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetMapiv( params->target, params->query, params->v );
+    funcs->p_glGetMapiv( params->target, params->query, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -952,7 +952,7 @@ static NTSTATUS gl_glGetMaterialfv( void *args )
 {
     struct glGetMaterialfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetMaterialfv( params->face, params->pname, params->params );
+    funcs->p_glGetMaterialfv( params->face, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -960,7 +960,7 @@ static NTSTATUS gl_glGetMaterialiv( void *args )
 {
     struct glGetMaterialiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetMaterialiv( params->face, params->pname, params->params );
+    funcs->p_glGetMaterialiv( params->face, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -968,7 +968,7 @@ static NTSTATUS gl_glGetPixelMapfv( void *args )
 {
     struct glGetPixelMapfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetPixelMapfv( params->map, params->values );
+    funcs->p_glGetPixelMapfv( params->map, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -976,7 +976,7 @@ static NTSTATUS gl_glGetPixelMapuiv( void *args )
 {
     struct glGetPixelMapuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetPixelMapuiv( params->map, params->values );
+    funcs->p_glGetPixelMapuiv( params->map, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -984,7 +984,7 @@ static NTSTATUS gl_glGetPixelMapusv( void *args )
 {
     struct glGetPixelMapusv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetPixelMapusv( params->map, params->values );
+    funcs->p_glGetPixelMapusv( params->map, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -992,7 +992,7 @@ static NTSTATUS gl_glGetPointerv( void *args )
 {
     struct glGetPointerv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetPointerv( params->pname, params->params );
+    funcs->p_glGetPointerv( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1000,7 +1000,7 @@ static NTSTATUS gl_glGetPolygonStipple( void *args )
 {
     struct glGetPolygonStipple_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetPolygonStipple( params->mask );
+    funcs->p_glGetPolygonStipple( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -1008,7 +1008,7 @@ static NTSTATUS gl_glGetTexEnvfv( void *args )
 {
     struct glGetTexEnvfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexEnvfv( params->target, params->pname, params->params );
+    funcs->p_glGetTexEnvfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1016,7 +1016,7 @@ static NTSTATUS gl_glGetTexEnviv( void *args )
 {
     struct glGetTexEnviv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexEnviv( params->target, params->pname, params->params );
+    funcs->p_glGetTexEnviv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1024,7 +1024,7 @@ static NTSTATUS gl_glGetTexGendv( void *args )
 {
     struct glGetTexGendv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexGendv( params->coord, params->pname, params->params );
+    funcs->p_glGetTexGendv( params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1032,7 +1032,7 @@ static NTSTATUS gl_glGetTexGenfv( void *args )
 {
     struct glGetTexGenfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexGenfv( params->coord, params->pname, params->params );
+    funcs->p_glGetTexGenfv( params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1040,7 +1040,7 @@ static NTSTATUS gl_glGetTexGeniv( void *args )
 {
     struct glGetTexGeniv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexGeniv( params->coord, params->pname, params->params );
+    funcs->p_glGetTexGeniv( params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1048,7 +1048,7 @@ static NTSTATUS gl_glGetTexImage( void *args )
 {
     struct glGetTexImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexImage( params->target, params->level, params->format, params->type, params->pixels );
+    funcs->p_glGetTexImage( params->target, params->level, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -1056,7 +1056,7 @@ static NTSTATUS gl_glGetTexLevelParameterfv( void *args )
 {
     struct glGetTexLevelParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexLevelParameterfv( params->target, params->level, params->pname, params->params );
+    funcs->p_glGetTexLevelParameterfv( params->target, params->level, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1064,7 +1064,7 @@ static NTSTATUS gl_glGetTexLevelParameteriv( void *args )
 {
     struct glGetTexLevelParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexLevelParameteriv( params->target, params->level, params->pname, params->params );
+    funcs->p_glGetTexLevelParameteriv( params->target, params->level, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1072,7 +1072,7 @@ static NTSTATUS gl_glGetTexParameterfv( void *args )
 {
     struct glGetTexParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexParameterfv( params->target, params->pname, params->params );
+    funcs->p_glGetTexParameterfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1080,7 +1080,7 @@ static NTSTATUS gl_glGetTexParameteriv( void *args )
 {
     struct glGetTexParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glGetTexParameteriv( params->target, params->pname, params->params );
+    funcs->p_glGetTexParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1088,7 +1088,7 @@ static NTSTATUS gl_glHint( void *args )
 {
     struct glHint_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glHint( params->target, params->mode );
+    funcs->p_glHint( params->target, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -1096,7 +1096,7 @@ static NTSTATUS gl_glIndexMask( void *args )
 {
     struct glIndexMask_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexMask( params->mask );
+    funcs->p_glIndexMask( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -1104,7 +1104,7 @@ static NTSTATUS gl_glIndexPointer( void *args )
 {
     struct glIndexPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexPointer( params->type, params->stride, params->pointer );
+    funcs->p_glIndexPointer( params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -1112,7 +1112,7 @@ static NTSTATUS gl_glIndexd( void *args )
 {
     struct glIndexd_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexd( params->c );
+    funcs->p_glIndexd( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1120,7 +1120,7 @@ static NTSTATUS gl_glIndexdv( void *args )
 {
     struct glIndexdv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexdv( params->c );
+    funcs->p_glIndexdv( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1128,7 +1128,7 @@ static NTSTATUS gl_glIndexf( void *args )
 {
     struct glIndexf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexf( params->c );
+    funcs->p_glIndexf( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1136,7 +1136,7 @@ static NTSTATUS gl_glIndexfv( void *args )
 {
     struct glIndexfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexfv( params->c );
+    funcs->p_glIndexfv( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1144,7 +1144,7 @@ static NTSTATUS gl_glIndexi( void *args )
 {
     struct glIndexi_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexi( params->c );
+    funcs->p_glIndexi( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1152,7 +1152,7 @@ static NTSTATUS gl_glIndexiv( void *args )
 {
     struct glIndexiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexiv( params->c );
+    funcs->p_glIndexiv( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1160,7 +1160,7 @@ static NTSTATUS gl_glIndexs( void *args )
 {
     struct glIndexs_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexs( params->c );
+    funcs->p_glIndexs( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1168,7 +1168,7 @@ static NTSTATUS gl_glIndexsv( void *args )
 {
     struct glIndexsv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexsv( params->c );
+    funcs->p_glIndexsv( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1176,7 +1176,7 @@ static NTSTATUS gl_glIndexub( void *args )
 {
     struct glIndexub_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexub( params->c );
+    funcs->p_glIndexub( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1184,7 +1184,7 @@ static NTSTATUS gl_glIndexubv( void *args )
 {
     struct glIndexubv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glIndexubv( params->c );
+    funcs->p_glIndexubv( params->c );
     return STATUS_SUCCESS;
 }
 
@@ -1192,7 +1192,7 @@ static NTSTATUS gl_glInitNames( void *args )
 {
     struct glInitNames_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glInitNames();
+    funcs->p_glInitNames();
     return STATUS_SUCCESS;
 }
 
@@ -1200,7 +1200,7 @@ static NTSTATUS gl_glInterleavedArrays( void *args )
 {
     struct glInterleavedArrays_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glInterleavedArrays( params->format, params->stride, params->pointer );
+    funcs->p_glInterleavedArrays( params->format, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -1208,7 +1208,7 @@ static NTSTATUS gl_glIsEnabled( void *args )
 {
     struct glIsEnabled_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->gl.p_glIsEnabled( params->cap );
+    params->ret = funcs->p_glIsEnabled( params->cap );
     return STATUS_SUCCESS;
 }
 
@@ -1216,7 +1216,7 @@ static NTSTATUS gl_glIsList( void *args )
 {
     struct glIsList_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->gl.p_glIsList( params->list );
+    params->ret = funcs->p_glIsList( params->list );
     return STATUS_SUCCESS;
 }
 
@@ -1224,7 +1224,7 @@ static NTSTATUS gl_glIsTexture( void *args )
 {
     struct glIsTexture_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->gl.p_glIsTexture( params->texture );
+    params->ret = funcs->p_glIsTexture( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -1232,7 +1232,7 @@ static NTSTATUS gl_glLightModelf( void *args )
 {
     struct glLightModelf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLightModelf( params->pname, params->param );
+    funcs->p_glLightModelf( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1240,7 +1240,7 @@ static NTSTATUS gl_glLightModelfv( void *args )
 {
     struct glLightModelfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLightModelfv( params->pname, params->params );
+    funcs->p_glLightModelfv( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1248,7 +1248,7 @@ static NTSTATUS gl_glLightModeli( void *args )
 {
     struct glLightModeli_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLightModeli( params->pname, params->param );
+    funcs->p_glLightModeli( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1256,7 +1256,7 @@ static NTSTATUS gl_glLightModeliv( void *args )
 {
     struct glLightModeliv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLightModeliv( params->pname, params->params );
+    funcs->p_glLightModeliv( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1264,7 +1264,7 @@ static NTSTATUS gl_glLightf( void *args )
 {
     struct glLightf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLightf( params->light, params->pname, params->param );
+    funcs->p_glLightf( params->light, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1272,7 +1272,7 @@ static NTSTATUS gl_glLightfv( void *args )
 {
     struct glLightfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLightfv( params->light, params->pname, params->params );
+    funcs->p_glLightfv( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1280,7 +1280,7 @@ static NTSTATUS gl_glLighti( void *args )
 {
     struct glLighti_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLighti( params->light, params->pname, params->param );
+    funcs->p_glLighti( params->light, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1288,7 +1288,7 @@ static NTSTATUS gl_glLightiv( void *args )
 {
     struct glLightiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLightiv( params->light, params->pname, params->params );
+    funcs->p_glLightiv( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1296,7 +1296,7 @@ static NTSTATUS gl_glLineStipple( void *args )
 {
     struct glLineStipple_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLineStipple( params->factor, params->pattern );
+    funcs->p_glLineStipple( params->factor, params->pattern );
     return STATUS_SUCCESS;
 }
 
@@ -1304,7 +1304,7 @@ static NTSTATUS gl_glLineWidth( void *args )
 {
     struct glLineWidth_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLineWidth( params->width );
+    funcs->p_glLineWidth( params->width );
     return STATUS_SUCCESS;
 }
 
@@ -1312,7 +1312,7 @@ static NTSTATUS gl_glListBase( void *args )
 {
     struct glListBase_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glListBase( params->base );
+    funcs->p_glListBase( params->base );
     return STATUS_SUCCESS;
 }
 
@@ -1320,7 +1320,7 @@ static NTSTATUS gl_glLoadIdentity( void *args )
 {
     struct glLoadIdentity_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLoadIdentity();
+    funcs->p_glLoadIdentity();
     return STATUS_SUCCESS;
 }
 
@@ -1328,7 +1328,7 @@ static NTSTATUS gl_glLoadMatrixd( void *args )
 {
     struct glLoadMatrixd_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLoadMatrixd( params->m );
+    funcs->p_glLoadMatrixd( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -1336,7 +1336,7 @@ static NTSTATUS gl_glLoadMatrixf( void *args )
 {
     struct glLoadMatrixf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLoadMatrixf( params->m );
+    funcs->p_glLoadMatrixf( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -1344,7 +1344,7 @@ static NTSTATUS gl_glLoadName( void *args )
 {
     struct glLoadName_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLoadName( params->name );
+    funcs->p_glLoadName( params->name );
     return STATUS_SUCCESS;
 }
 
@@ -1352,7 +1352,7 @@ static NTSTATUS gl_glLogicOp( void *args )
 {
     struct glLogicOp_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glLogicOp( params->opcode );
+    funcs->p_glLogicOp( params->opcode );
     return STATUS_SUCCESS;
 }
 
@@ -1360,7 +1360,7 @@ static NTSTATUS gl_glMap1d( void *args )
 {
     struct glMap1d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMap1d( params->target, params->u1, params->u2, params->stride, params->order, params->points );
+    funcs->p_glMap1d( params->target, params->u1, params->u2, params->stride, params->order, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -1368,7 +1368,7 @@ static NTSTATUS gl_glMap1f( void *args )
 {
     struct glMap1f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMap1f( params->target, params->u1, params->u2, params->stride, params->order, params->points );
+    funcs->p_glMap1f( params->target, params->u1, params->u2, params->stride, params->order, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -1376,7 +1376,7 @@ static NTSTATUS gl_glMap2d( void *args )
 {
     struct glMap2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMap2d( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
+    funcs->p_glMap2d( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -1384,7 +1384,7 @@ static NTSTATUS gl_glMap2f( void *args )
 {
     struct glMap2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMap2f( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
+    funcs->p_glMap2f( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -1392,7 +1392,7 @@ static NTSTATUS gl_glMapGrid1d( void *args )
 {
     struct glMapGrid1d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMapGrid1d( params->un, params->u1, params->u2 );
+    funcs->p_glMapGrid1d( params->un, params->u1, params->u2 );
     return STATUS_SUCCESS;
 }
 
@@ -1400,7 +1400,7 @@ static NTSTATUS gl_glMapGrid1f( void *args )
 {
     struct glMapGrid1f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMapGrid1f( params->un, params->u1, params->u2 );
+    funcs->p_glMapGrid1f( params->un, params->u1, params->u2 );
     return STATUS_SUCCESS;
 }
 
@@ -1408,7 +1408,7 @@ static NTSTATUS gl_glMapGrid2d( void *args )
 {
     struct glMapGrid2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMapGrid2d( params->un, params->u1, params->u2, params->vn, params->v1, params->v2 );
+    funcs->p_glMapGrid2d( params->un, params->u1, params->u2, params->vn, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -1416,7 +1416,7 @@ static NTSTATUS gl_glMapGrid2f( void *args )
 {
     struct glMapGrid2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMapGrid2f( params->un, params->u1, params->u2, params->vn, params->v1, params->v2 );
+    funcs->p_glMapGrid2f( params->un, params->u1, params->u2, params->vn, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -1424,7 +1424,7 @@ static NTSTATUS gl_glMaterialf( void *args )
 {
     struct glMaterialf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMaterialf( params->face, params->pname, params->param );
+    funcs->p_glMaterialf( params->face, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1432,7 +1432,7 @@ static NTSTATUS gl_glMaterialfv( void *args )
 {
     struct glMaterialfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMaterialfv( params->face, params->pname, params->params );
+    funcs->p_glMaterialfv( params->face, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1440,7 +1440,7 @@ static NTSTATUS gl_glMateriali( void *args )
 {
     struct glMateriali_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMateriali( params->face, params->pname, params->param );
+    funcs->p_glMateriali( params->face, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1448,7 +1448,7 @@ static NTSTATUS gl_glMaterialiv( void *args )
 {
     struct glMaterialiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMaterialiv( params->face, params->pname, params->params );
+    funcs->p_glMaterialiv( params->face, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -1456,7 +1456,7 @@ static NTSTATUS gl_glMatrixMode( void *args )
 {
     struct glMatrixMode_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMatrixMode( params->mode );
+    funcs->p_glMatrixMode( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -1464,7 +1464,7 @@ static NTSTATUS gl_glMultMatrixd( void *args )
 {
     struct glMultMatrixd_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMultMatrixd( params->m );
+    funcs->p_glMultMatrixd( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -1472,7 +1472,7 @@ static NTSTATUS gl_glMultMatrixf( void *args )
 {
     struct glMultMatrixf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glMultMatrixf( params->m );
+    funcs->p_glMultMatrixf( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -1480,7 +1480,7 @@ static NTSTATUS gl_glNewList( void *args )
 {
     struct glNewList_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNewList( params->list, params->mode );
+    funcs->p_glNewList( params->list, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -1488,7 +1488,7 @@ static NTSTATUS gl_glNormal3b( void *args )
 {
     struct glNormal3b_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3b( params->nx, params->ny, params->nz );
+    funcs->p_glNormal3b( params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -1496,7 +1496,7 @@ static NTSTATUS gl_glNormal3bv( void *args )
 {
     struct glNormal3bv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3bv( params->v );
+    funcs->p_glNormal3bv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1504,7 +1504,7 @@ static NTSTATUS gl_glNormal3d( void *args )
 {
     struct glNormal3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3d( params->nx, params->ny, params->nz );
+    funcs->p_glNormal3d( params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -1512,7 +1512,7 @@ static NTSTATUS gl_glNormal3dv( void *args )
 {
     struct glNormal3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3dv( params->v );
+    funcs->p_glNormal3dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1520,7 +1520,7 @@ static NTSTATUS gl_glNormal3f( void *args )
 {
     struct glNormal3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3f( params->nx, params->ny, params->nz );
+    funcs->p_glNormal3f( params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -1528,7 +1528,7 @@ static NTSTATUS gl_glNormal3fv( void *args )
 {
     struct glNormal3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3fv( params->v );
+    funcs->p_glNormal3fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1536,7 +1536,7 @@ static NTSTATUS gl_glNormal3i( void *args )
 {
     struct glNormal3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3i( params->nx, params->ny, params->nz );
+    funcs->p_glNormal3i( params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -1544,7 +1544,7 @@ static NTSTATUS gl_glNormal3iv( void *args )
 {
     struct glNormal3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3iv( params->v );
+    funcs->p_glNormal3iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1552,7 +1552,7 @@ static NTSTATUS gl_glNormal3s( void *args )
 {
     struct glNormal3s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3s( params->nx, params->ny, params->nz );
+    funcs->p_glNormal3s( params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -1560,7 +1560,7 @@ static NTSTATUS gl_glNormal3sv( void *args )
 {
     struct glNormal3sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormal3sv( params->v );
+    funcs->p_glNormal3sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1568,7 +1568,7 @@ static NTSTATUS gl_glNormalPointer( void *args )
 {
     struct glNormalPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glNormalPointer( params->type, params->stride, params->pointer );
+    funcs->p_glNormalPointer( params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -1576,7 +1576,7 @@ static NTSTATUS gl_glOrtho( void *args )
 {
     struct glOrtho_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glOrtho( params->left, params->right, params->bottom, params->top, params->zNear, params->zFar );
+    funcs->p_glOrtho( params->left, params->right, params->bottom, params->top, params->zNear, params->zFar );
     return STATUS_SUCCESS;
 }
 
@@ -1584,7 +1584,7 @@ static NTSTATUS gl_glPassThrough( void *args )
 {
     struct glPassThrough_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPassThrough( params->token );
+    funcs->p_glPassThrough( params->token );
     return STATUS_SUCCESS;
 }
 
@@ -1592,7 +1592,7 @@ static NTSTATUS gl_glPixelMapfv( void *args )
 {
     struct glPixelMapfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPixelMapfv( params->map, params->mapsize, params->values );
+    funcs->p_glPixelMapfv( params->map, params->mapsize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -1600,7 +1600,7 @@ static NTSTATUS gl_glPixelMapuiv( void *args )
 {
     struct glPixelMapuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPixelMapuiv( params->map, params->mapsize, params->values );
+    funcs->p_glPixelMapuiv( params->map, params->mapsize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -1608,7 +1608,7 @@ static NTSTATUS gl_glPixelMapusv( void *args )
 {
     struct glPixelMapusv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPixelMapusv( params->map, params->mapsize, params->values );
+    funcs->p_glPixelMapusv( params->map, params->mapsize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -1616,7 +1616,7 @@ static NTSTATUS gl_glPixelStoref( void *args )
 {
     struct glPixelStoref_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPixelStoref( params->pname, params->param );
+    funcs->p_glPixelStoref( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1624,7 +1624,7 @@ static NTSTATUS gl_glPixelStorei( void *args )
 {
     struct glPixelStorei_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPixelStorei( params->pname, params->param );
+    funcs->p_glPixelStorei( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1632,7 +1632,7 @@ static NTSTATUS gl_glPixelTransferf( void *args )
 {
     struct glPixelTransferf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPixelTransferf( params->pname, params->param );
+    funcs->p_glPixelTransferf( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1640,7 +1640,7 @@ static NTSTATUS gl_glPixelTransferi( void *args )
 {
     struct glPixelTransferi_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPixelTransferi( params->pname, params->param );
+    funcs->p_glPixelTransferi( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -1648,7 +1648,7 @@ static NTSTATUS gl_glPixelZoom( void *args )
 {
     struct glPixelZoom_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPixelZoom( params->xfactor, params->yfactor );
+    funcs->p_glPixelZoom( params->xfactor, params->yfactor );
     return STATUS_SUCCESS;
 }
 
@@ -1656,7 +1656,7 @@ static NTSTATUS gl_glPointSize( void *args )
 {
     struct glPointSize_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPointSize( params->size );
+    funcs->p_glPointSize( params->size );
     return STATUS_SUCCESS;
 }
 
@@ -1664,7 +1664,7 @@ static NTSTATUS gl_glPolygonMode( void *args )
 {
     struct glPolygonMode_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPolygonMode( params->face, params->mode );
+    funcs->p_glPolygonMode( params->face, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -1672,7 +1672,7 @@ static NTSTATUS gl_glPolygonOffset( void *args )
 {
     struct glPolygonOffset_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPolygonOffset( params->factor, params->units );
+    funcs->p_glPolygonOffset( params->factor, params->units );
     return STATUS_SUCCESS;
 }
 
@@ -1680,7 +1680,7 @@ static NTSTATUS gl_glPolygonStipple( void *args )
 {
     struct glPolygonStipple_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPolygonStipple( params->mask );
+    funcs->p_glPolygonStipple( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -1688,7 +1688,7 @@ static NTSTATUS gl_glPopAttrib( void *args )
 {
     struct glPopAttrib_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPopAttrib();
+    funcs->p_glPopAttrib();
     return STATUS_SUCCESS;
 }
 
@@ -1696,7 +1696,7 @@ static NTSTATUS gl_glPopClientAttrib( void *args )
 {
     struct glPopClientAttrib_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPopClientAttrib();
+    funcs->p_glPopClientAttrib();
     return STATUS_SUCCESS;
 }
 
@@ -1704,7 +1704,7 @@ static NTSTATUS gl_glPopMatrix( void *args )
 {
     struct glPopMatrix_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPopMatrix();
+    funcs->p_glPopMatrix();
     return STATUS_SUCCESS;
 }
 
@@ -1712,7 +1712,7 @@ static NTSTATUS gl_glPopName( void *args )
 {
     struct glPopName_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPopName();
+    funcs->p_glPopName();
     return STATUS_SUCCESS;
 }
 
@@ -1720,7 +1720,7 @@ static NTSTATUS gl_glPrioritizeTextures( void *args )
 {
     struct glPrioritizeTextures_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPrioritizeTextures( params->n, params->textures, params->priorities );
+    funcs->p_glPrioritizeTextures( params->n, params->textures, params->priorities );
     return STATUS_SUCCESS;
 }
 
@@ -1728,7 +1728,7 @@ static NTSTATUS gl_glPushAttrib( void *args )
 {
     struct glPushAttrib_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPushAttrib( params->mask );
+    funcs->p_glPushAttrib( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -1736,7 +1736,7 @@ static NTSTATUS gl_glPushClientAttrib( void *args )
 {
     struct glPushClientAttrib_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPushClientAttrib( params->mask );
+    funcs->p_glPushClientAttrib( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -1744,7 +1744,7 @@ static NTSTATUS gl_glPushMatrix( void *args )
 {
     struct glPushMatrix_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPushMatrix();
+    funcs->p_glPushMatrix();
     return STATUS_SUCCESS;
 }
 
@@ -1752,7 +1752,7 @@ static NTSTATUS gl_glPushName( void *args )
 {
     struct glPushName_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glPushName( params->name );
+    funcs->p_glPushName( params->name );
     return STATUS_SUCCESS;
 }
 
@@ -1760,7 +1760,7 @@ static NTSTATUS gl_glRasterPos2d( void *args )
 {
     struct glRasterPos2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos2d( params->x, params->y );
+    funcs->p_glRasterPos2d( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -1768,7 +1768,7 @@ static NTSTATUS gl_glRasterPos2dv( void *args )
 {
     struct glRasterPos2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos2dv( params->v );
+    funcs->p_glRasterPos2dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1776,7 +1776,7 @@ static NTSTATUS gl_glRasterPos2f( void *args )
 {
     struct glRasterPos2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos2f( params->x, params->y );
+    funcs->p_glRasterPos2f( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -1784,7 +1784,7 @@ static NTSTATUS gl_glRasterPos2fv( void *args )
 {
     struct glRasterPos2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos2fv( params->v );
+    funcs->p_glRasterPos2fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1792,7 +1792,7 @@ static NTSTATUS gl_glRasterPos2i( void *args )
 {
     struct glRasterPos2i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos2i( params->x, params->y );
+    funcs->p_glRasterPos2i( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -1800,7 +1800,7 @@ static NTSTATUS gl_glRasterPos2iv( void *args )
 {
     struct glRasterPos2iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos2iv( params->v );
+    funcs->p_glRasterPos2iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1808,7 +1808,7 @@ static NTSTATUS gl_glRasterPos2s( void *args )
 {
     struct glRasterPos2s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos2s( params->x, params->y );
+    funcs->p_glRasterPos2s( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -1816,7 +1816,7 @@ static NTSTATUS gl_glRasterPos2sv( void *args )
 {
     struct glRasterPos2sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos2sv( params->v );
+    funcs->p_glRasterPos2sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1824,7 +1824,7 @@ static NTSTATUS gl_glRasterPos3d( void *args )
 {
     struct glRasterPos3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos3d( params->x, params->y, params->z );
+    funcs->p_glRasterPos3d( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -1832,7 +1832,7 @@ static NTSTATUS gl_glRasterPos3dv( void *args )
 {
     struct glRasterPos3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos3dv( params->v );
+    funcs->p_glRasterPos3dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1840,7 +1840,7 @@ static NTSTATUS gl_glRasterPos3f( void *args )
 {
     struct glRasterPos3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos3f( params->x, params->y, params->z );
+    funcs->p_glRasterPos3f( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -1848,7 +1848,7 @@ static NTSTATUS gl_glRasterPos3fv( void *args )
 {
     struct glRasterPos3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos3fv( params->v );
+    funcs->p_glRasterPos3fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1856,7 +1856,7 @@ static NTSTATUS gl_glRasterPos3i( void *args )
 {
     struct glRasterPos3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos3i( params->x, params->y, params->z );
+    funcs->p_glRasterPos3i( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -1864,7 +1864,7 @@ static NTSTATUS gl_glRasterPos3iv( void *args )
 {
     struct glRasterPos3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos3iv( params->v );
+    funcs->p_glRasterPos3iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1872,7 +1872,7 @@ static NTSTATUS gl_glRasterPos3s( void *args )
 {
     struct glRasterPos3s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos3s( params->x, params->y, params->z );
+    funcs->p_glRasterPos3s( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -1880,7 +1880,7 @@ static NTSTATUS gl_glRasterPos3sv( void *args )
 {
     struct glRasterPos3sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos3sv( params->v );
+    funcs->p_glRasterPos3sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1888,7 +1888,7 @@ static NTSTATUS gl_glRasterPos4d( void *args )
 {
     struct glRasterPos4d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos4d( params->x, params->y, params->z, params->w );
+    funcs->p_glRasterPos4d( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -1896,7 +1896,7 @@ static NTSTATUS gl_glRasterPos4dv( void *args )
 {
     struct glRasterPos4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos4dv( params->v );
+    funcs->p_glRasterPos4dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1904,7 +1904,7 @@ static NTSTATUS gl_glRasterPos4f( void *args )
 {
     struct glRasterPos4f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos4f( params->x, params->y, params->z, params->w );
+    funcs->p_glRasterPos4f( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -1912,7 +1912,7 @@ static NTSTATUS gl_glRasterPos4fv( void *args )
 {
     struct glRasterPos4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos4fv( params->v );
+    funcs->p_glRasterPos4fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1920,7 +1920,7 @@ static NTSTATUS gl_glRasterPos4i( void *args )
 {
     struct glRasterPos4i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos4i( params->x, params->y, params->z, params->w );
+    funcs->p_glRasterPos4i( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -1928,7 +1928,7 @@ static NTSTATUS gl_glRasterPos4iv( void *args )
 {
     struct glRasterPos4iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos4iv( params->v );
+    funcs->p_glRasterPos4iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1936,7 +1936,7 @@ static NTSTATUS gl_glRasterPos4s( void *args )
 {
     struct glRasterPos4s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos4s( params->x, params->y, params->z, params->w );
+    funcs->p_glRasterPos4s( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -1944,7 +1944,7 @@ static NTSTATUS gl_glRasterPos4sv( void *args )
 {
     struct glRasterPos4sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRasterPos4sv( params->v );
+    funcs->p_glRasterPos4sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -1952,7 +1952,7 @@ static NTSTATUS gl_glReadBuffer( void *args )
 {
     struct glReadBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glReadBuffer( params->src );
+    funcs->p_glReadBuffer( params->src );
     return STATUS_SUCCESS;
 }
 
@@ -1960,7 +1960,7 @@ static NTSTATUS gl_glReadPixels( void *args )
 {
     struct glReadPixels_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glReadPixels( params->x, params->y, params->width, params->height, params->format, params->type, params->pixels );
+    funcs->p_glReadPixels( params->x, params->y, params->width, params->height, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -1968,7 +1968,7 @@ static NTSTATUS gl_glRectd( void *args )
 {
     struct glRectd_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRectd( params->x1, params->y1, params->x2, params->y2 );
+    funcs->p_glRectd( params->x1, params->y1, params->x2, params->y2 );
     return STATUS_SUCCESS;
 }
 
@@ -1976,7 +1976,7 @@ static NTSTATUS gl_glRectdv( void *args )
 {
     struct glRectdv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRectdv( params->v1, params->v2 );
+    funcs->p_glRectdv( params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -1984,7 +1984,7 @@ static NTSTATUS gl_glRectf( void *args )
 {
     struct glRectf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRectf( params->x1, params->y1, params->x2, params->y2 );
+    funcs->p_glRectf( params->x1, params->y1, params->x2, params->y2 );
     return STATUS_SUCCESS;
 }
 
@@ -1992,7 +1992,7 @@ static NTSTATUS gl_glRectfv( void *args )
 {
     struct glRectfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRectfv( params->v1, params->v2 );
+    funcs->p_glRectfv( params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -2000,7 +2000,7 @@ static NTSTATUS gl_glRecti( void *args )
 {
     struct glRecti_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRecti( params->x1, params->y1, params->x2, params->y2 );
+    funcs->p_glRecti( params->x1, params->y1, params->x2, params->y2 );
     return STATUS_SUCCESS;
 }
 
@@ -2008,7 +2008,7 @@ static NTSTATUS gl_glRectiv( void *args )
 {
     struct glRectiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRectiv( params->v1, params->v2 );
+    funcs->p_glRectiv( params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -2016,7 +2016,7 @@ static NTSTATUS gl_glRects( void *args )
 {
     struct glRects_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRects( params->x1, params->y1, params->x2, params->y2 );
+    funcs->p_glRects( params->x1, params->y1, params->x2, params->y2 );
     return STATUS_SUCCESS;
 }
 
@@ -2024,7 +2024,7 @@ static NTSTATUS gl_glRectsv( void *args )
 {
     struct glRectsv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRectsv( params->v1, params->v2 );
+    funcs->p_glRectsv( params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -2032,7 +2032,7 @@ static NTSTATUS gl_glRenderMode( void *args )
 {
     struct glRenderMode_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->gl.p_glRenderMode( params->mode );
+    params->ret = funcs->p_glRenderMode( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -2040,7 +2040,7 @@ static NTSTATUS gl_glRotated( void *args )
 {
     struct glRotated_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRotated( params->angle, params->x, params->y, params->z );
+    funcs->p_glRotated( params->angle, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2048,7 +2048,7 @@ static NTSTATUS gl_glRotatef( void *args )
 {
     struct glRotatef_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glRotatef( params->angle, params->x, params->y, params->z );
+    funcs->p_glRotatef( params->angle, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2056,7 +2056,7 @@ static NTSTATUS gl_glScaled( void *args )
 {
     struct glScaled_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glScaled( params->x, params->y, params->z );
+    funcs->p_glScaled( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2064,7 +2064,7 @@ static NTSTATUS gl_glScalef( void *args )
 {
     struct glScalef_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glScalef( params->x, params->y, params->z );
+    funcs->p_glScalef( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2072,7 +2072,7 @@ static NTSTATUS gl_glScissor( void *args )
 {
     struct glScissor_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glScissor( params->x, params->y, params->width, params->height );
+    funcs->p_glScissor( params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -2080,7 +2080,7 @@ static NTSTATUS gl_glSelectBuffer( void *args )
 {
     struct glSelectBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glSelectBuffer( params->size, params->buffer );
+    funcs->p_glSelectBuffer( params->size, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -2088,7 +2088,7 @@ static NTSTATUS gl_glShadeModel( void *args )
 {
     struct glShadeModel_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glShadeModel( params->mode );
+    funcs->p_glShadeModel( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -2096,7 +2096,7 @@ static NTSTATUS gl_glStencilFunc( void *args )
 {
     struct glStencilFunc_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glStencilFunc( params->func, params->ref, params->mask );
+    funcs->p_glStencilFunc( params->func, params->ref, params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -2104,7 +2104,7 @@ static NTSTATUS gl_glStencilMask( void *args )
 {
     struct glStencilMask_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glStencilMask( params->mask );
+    funcs->p_glStencilMask( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -2112,7 +2112,7 @@ static NTSTATUS gl_glStencilOp( void *args )
 {
     struct glStencilOp_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glStencilOp( params->fail, params->zfail, params->zpass );
+    funcs->p_glStencilOp( params->fail, params->zfail, params->zpass );
     return STATUS_SUCCESS;
 }
 
@@ -2120,7 +2120,7 @@ static NTSTATUS gl_glTexCoord1d( void *args )
 {
     struct glTexCoord1d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord1d( params->s );
+    funcs->p_glTexCoord1d( params->s );
     return STATUS_SUCCESS;
 }
 
@@ -2128,7 +2128,7 @@ static NTSTATUS gl_glTexCoord1dv( void *args )
 {
     struct glTexCoord1dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord1dv( params->v );
+    funcs->p_glTexCoord1dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2136,7 +2136,7 @@ static NTSTATUS gl_glTexCoord1f( void *args )
 {
     struct glTexCoord1f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord1f( params->s );
+    funcs->p_glTexCoord1f( params->s );
     return STATUS_SUCCESS;
 }
 
@@ -2144,7 +2144,7 @@ static NTSTATUS gl_glTexCoord1fv( void *args )
 {
     struct glTexCoord1fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord1fv( params->v );
+    funcs->p_glTexCoord1fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2152,7 +2152,7 @@ static NTSTATUS gl_glTexCoord1i( void *args )
 {
     struct glTexCoord1i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord1i( params->s );
+    funcs->p_glTexCoord1i( params->s );
     return STATUS_SUCCESS;
 }
 
@@ -2160,7 +2160,7 @@ static NTSTATUS gl_glTexCoord1iv( void *args )
 {
     struct glTexCoord1iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord1iv( params->v );
+    funcs->p_glTexCoord1iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2168,7 +2168,7 @@ static NTSTATUS gl_glTexCoord1s( void *args )
 {
     struct glTexCoord1s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord1s( params->s );
+    funcs->p_glTexCoord1s( params->s );
     return STATUS_SUCCESS;
 }
 
@@ -2176,7 +2176,7 @@ static NTSTATUS gl_glTexCoord1sv( void *args )
 {
     struct glTexCoord1sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord1sv( params->v );
+    funcs->p_glTexCoord1sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2184,7 +2184,7 @@ static NTSTATUS gl_glTexCoord2d( void *args )
 {
     struct glTexCoord2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord2d( params->s, params->t );
+    funcs->p_glTexCoord2d( params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -2192,7 +2192,7 @@ static NTSTATUS gl_glTexCoord2dv( void *args )
 {
     struct glTexCoord2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord2dv( params->v );
+    funcs->p_glTexCoord2dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2200,7 +2200,7 @@ static NTSTATUS gl_glTexCoord2f( void *args )
 {
     struct glTexCoord2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord2f( params->s, params->t );
+    funcs->p_glTexCoord2f( params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -2208,7 +2208,7 @@ static NTSTATUS gl_glTexCoord2fv( void *args )
 {
     struct glTexCoord2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord2fv( params->v );
+    funcs->p_glTexCoord2fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2216,7 +2216,7 @@ static NTSTATUS gl_glTexCoord2i( void *args )
 {
     struct glTexCoord2i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord2i( params->s, params->t );
+    funcs->p_glTexCoord2i( params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -2224,7 +2224,7 @@ static NTSTATUS gl_glTexCoord2iv( void *args )
 {
     struct glTexCoord2iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord2iv( params->v );
+    funcs->p_glTexCoord2iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2232,7 +2232,7 @@ static NTSTATUS gl_glTexCoord2s( void *args )
 {
     struct glTexCoord2s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord2s( params->s, params->t );
+    funcs->p_glTexCoord2s( params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -2240,7 +2240,7 @@ static NTSTATUS gl_glTexCoord2sv( void *args )
 {
     struct glTexCoord2sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord2sv( params->v );
+    funcs->p_glTexCoord2sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2248,7 +2248,7 @@ static NTSTATUS gl_glTexCoord3d( void *args )
 {
     struct glTexCoord3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord3d( params->s, params->t, params->r );
+    funcs->p_glTexCoord3d( params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -2256,7 +2256,7 @@ static NTSTATUS gl_glTexCoord3dv( void *args )
 {
     struct glTexCoord3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord3dv( params->v );
+    funcs->p_glTexCoord3dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2264,7 +2264,7 @@ static NTSTATUS gl_glTexCoord3f( void *args )
 {
     struct glTexCoord3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord3f( params->s, params->t, params->r );
+    funcs->p_glTexCoord3f( params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -2272,7 +2272,7 @@ static NTSTATUS gl_glTexCoord3fv( void *args )
 {
     struct glTexCoord3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord3fv( params->v );
+    funcs->p_glTexCoord3fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2280,7 +2280,7 @@ static NTSTATUS gl_glTexCoord3i( void *args )
 {
     struct glTexCoord3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord3i( params->s, params->t, params->r );
+    funcs->p_glTexCoord3i( params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -2288,7 +2288,7 @@ static NTSTATUS gl_glTexCoord3iv( void *args )
 {
     struct glTexCoord3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord3iv( params->v );
+    funcs->p_glTexCoord3iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2296,7 +2296,7 @@ static NTSTATUS gl_glTexCoord3s( void *args )
 {
     struct glTexCoord3s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord3s( params->s, params->t, params->r );
+    funcs->p_glTexCoord3s( params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -2304,7 +2304,7 @@ static NTSTATUS gl_glTexCoord3sv( void *args )
 {
     struct glTexCoord3sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord3sv( params->v );
+    funcs->p_glTexCoord3sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2312,7 +2312,7 @@ static NTSTATUS gl_glTexCoord4d( void *args )
 {
     struct glTexCoord4d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord4d( params->s, params->t, params->r, params->q );
+    funcs->p_glTexCoord4d( params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -2320,7 +2320,7 @@ static NTSTATUS gl_glTexCoord4dv( void *args )
 {
     struct glTexCoord4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord4dv( params->v );
+    funcs->p_glTexCoord4dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2328,7 +2328,7 @@ static NTSTATUS gl_glTexCoord4f( void *args )
 {
     struct glTexCoord4f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord4f( params->s, params->t, params->r, params->q );
+    funcs->p_glTexCoord4f( params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -2336,7 +2336,7 @@ static NTSTATUS gl_glTexCoord4fv( void *args )
 {
     struct glTexCoord4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord4fv( params->v );
+    funcs->p_glTexCoord4fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2344,7 +2344,7 @@ static NTSTATUS gl_glTexCoord4i( void *args )
 {
     struct glTexCoord4i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord4i( params->s, params->t, params->r, params->q );
+    funcs->p_glTexCoord4i( params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -2352,7 +2352,7 @@ static NTSTATUS gl_glTexCoord4iv( void *args )
 {
     struct glTexCoord4iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord4iv( params->v );
+    funcs->p_glTexCoord4iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2360,7 +2360,7 @@ static NTSTATUS gl_glTexCoord4s( void *args )
 {
     struct glTexCoord4s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord4s( params->s, params->t, params->r, params->q );
+    funcs->p_glTexCoord4s( params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -2368,7 +2368,7 @@ static NTSTATUS gl_glTexCoord4sv( void *args )
 {
     struct glTexCoord4sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoord4sv( params->v );
+    funcs->p_glTexCoord4sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2376,7 +2376,7 @@ static NTSTATUS gl_glTexCoordPointer( void *args )
 {
     struct glTexCoordPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexCoordPointer( params->size, params->type, params->stride, params->pointer );
+    funcs->p_glTexCoordPointer( params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -2384,7 +2384,7 @@ static NTSTATUS gl_glTexEnvf( void *args )
 {
     struct glTexEnvf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexEnvf( params->target, params->pname, params->param );
+    funcs->p_glTexEnvf( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -2392,7 +2392,7 @@ static NTSTATUS gl_glTexEnvfv( void *args )
 {
     struct glTexEnvfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexEnvfv( params->target, params->pname, params->params );
+    funcs->p_glTexEnvfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -2400,7 +2400,7 @@ static NTSTATUS gl_glTexEnvi( void *args )
 {
     struct glTexEnvi_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexEnvi( params->target, params->pname, params->param );
+    funcs->p_glTexEnvi( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -2408,7 +2408,7 @@ static NTSTATUS gl_glTexEnviv( void *args )
 {
     struct glTexEnviv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexEnviv( params->target, params->pname, params->params );
+    funcs->p_glTexEnviv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -2416,7 +2416,7 @@ static NTSTATUS gl_glTexGend( void *args )
 {
     struct glTexGend_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexGend( params->coord, params->pname, params->param );
+    funcs->p_glTexGend( params->coord, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -2424,7 +2424,7 @@ static NTSTATUS gl_glTexGendv( void *args )
 {
     struct glTexGendv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexGendv( params->coord, params->pname, params->params );
+    funcs->p_glTexGendv( params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -2432,7 +2432,7 @@ static NTSTATUS gl_glTexGenf( void *args )
 {
     struct glTexGenf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexGenf( params->coord, params->pname, params->param );
+    funcs->p_glTexGenf( params->coord, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -2440,7 +2440,7 @@ static NTSTATUS gl_glTexGenfv( void *args )
 {
     struct glTexGenfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexGenfv( params->coord, params->pname, params->params );
+    funcs->p_glTexGenfv( params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -2448,7 +2448,7 @@ static NTSTATUS gl_glTexGeni( void *args )
 {
     struct glTexGeni_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexGeni( params->coord, params->pname, params->param );
+    funcs->p_glTexGeni( params->coord, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -2456,7 +2456,7 @@ static NTSTATUS gl_glTexGeniv( void *args )
 {
     struct glTexGeniv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexGeniv( params->coord, params->pname, params->params );
+    funcs->p_glTexGeniv( params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -2464,7 +2464,7 @@ static NTSTATUS gl_glTexImage1D( void *args )
 {
     struct glTexImage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexImage1D( params->target, params->level, params->internalformat, params->width, params->border, params->format, params->type, params->pixels );
+    funcs->p_glTexImage1D( params->target, params->level, params->internalformat, params->width, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -2472,7 +2472,7 @@ static NTSTATUS gl_glTexImage2D( void *args )
 {
     struct glTexImage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexImage2D( params->target, params->level, params->internalformat, params->width, params->height, params->border, params->format, params->type, params->pixels );
+    funcs->p_glTexImage2D( params->target, params->level, params->internalformat, params->width, params->height, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -2480,7 +2480,7 @@ static NTSTATUS gl_glTexParameterf( void *args )
 {
     struct glTexParameterf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexParameterf( params->target, params->pname, params->param );
+    funcs->p_glTexParameterf( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -2488,7 +2488,7 @@ static NTSTATUS gl_glTexParameterfv( void *args )
 {
     struct glTexParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexParameterfv( params->target, params->pname, params->params );
+    funcs->p_glTexParameterfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -2496,7 +2496,7 @@ static NTSTATUS gl_glTexParameteri( void *args )
 {
     struct glTexParameteri_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexParameteri( params->target, params->pname, params->param );
+    funcs->p_glTexParameteri( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -2504,7 +2504,7 @@ static NTSTATUS gl_glTexParameteriv( void *args )
 {
     struct glTexParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexParameteriv( params->target, params->pname, params->params );
+    funcs->p_glTexParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -2512,7 +2512,7 @@ static NTSTATUS gl_glTexSubImage1D( void *args )
 {
     struct glTexSubImage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexSubImage1D( params->target, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
+    funcs->p_glTexSubImage1D( params->target, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -2520,7 +2520,7 @@ static NTSTATUS gl_glTexSubImage2D( void *args )
 {
     struct glTexSubImage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTexSubImage2D( params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
+    funcs->p_glTexSubImage2D( params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -2528,7 +2528,7 @@ static NTSTATUS gl_glTranslated( void *args )
 {
     struct glTranslated_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTranslated( params->x, params->y, params->z );
+    funcs->p_glTranslated( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2536,7 +2536,7 @@ static NTSTATUS gl_glTranslatef( void *args )
 {
     struct glTranslatef_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glTranslatef( params->x, params->y, params->z );
+    funcs->p_glTranslatef( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2544,7 +2544,7 @@ static NTSTATUS gl_glVertex2d( void *args )
 {
     struct glVertex2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex2d( params->x, params->y );
+    funcs->p_glVertex2d( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -2552,7 +2552,7 @@ static NTSTATUS gl_glVertex2dv( void *args )
 {
     struct glVertex2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex2dv( params->v );
+    funcs->p_glVertex2dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2560,7 +2560,7 @@ static NTSTATUS gl_glVertex2f( void *args )
 {
     struct glVertex2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex2f( params->x, params->y );
+    funcs->p_glVertex2f( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -2568,7 +2568,7 @@ static NTSTATUS gl_glVertex2fv( void *args )
 {
     struct glVertex2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex2fv( params->v );
+    funcs->p_glVertex2fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2576,7 +2576,7 @@ static NTSTATUS gl_glVertex2i( void *args )
 {
     struct glVertex2i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex2i( params->x, params->y );
+    funcs->p_glVertex2i( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -2584,7 +2584,7 @@ static NTSTATUS gl_glVertex2iv( void *args )
 {
     struct glVertex2iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex2iv( params->v );
+    funcs->p_glVertex2iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2592,7 +2592,7 @@ static NTSTATUS gl_glVertex2s( void *args )
 {
     struct glVertex2s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex2s( params->x, params->y );
+    funcs->p_glVertex2s( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -2600,7 +2600,7 @@ static NTSTATUS gl_glVertex2sv( void *args )
 {
     struct glVertex2sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex2sv( params->v );
+    funcs->p_glVertex2sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2608,7 +2608,7 @@ static NTSTATUS gl_glVertex3d( void *args )
 {
     struct glVertex3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex3d( params->x, params->y, params->z );
+    funcs->p_glVertex3d( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2616,7 +2616,7 @@ static NTSTATUS gl_glVertex3dv( void *args )
 {
     struct glVertex3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex3dv( params->v );
+    funcs->p_glVertex3dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2624,7 +2624,7 @@ static NTSTATUS gl_glVertex3f( void *args )
 {
     struct glVertex3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex3f( params->x, params->y, params->z );
+    funcs->p_glVertex3f( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2632,7 +2632,7 @@ static NTSTATUS gl_glVertex3fv( void *args )
 {
     struct glVertex3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex3fv( params->v );
+    funcs->p_glVertex3fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2640,7 +2640,7 @@ static NTSTATUS gl_glVertex3i( void *args )
 {
     struct glVertex3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex3i( params->x, params->y, params->z );
+    funcs->p_glVertex3i( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2648,7 +2648,7 @@ static NTSTATUS gl_glVertex3iv( void *args )
 {
     struct glVertex3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex3iv( params->v );
+    funcs->p_glVertex3iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2656,7 +2656,7 @@ static NTSTATUS gl_glVertex3s( void *args )
 {
     struct glVertex3s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex3s( params->x, params->y, params->z );
+    funcs->p_glVertex3s( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -2664,7 +2664,7 @@ static NTSTATUS gl_glVertex3sv( void *args )
 {
     struct glVertex3sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex3sv( params->v );
+    funcs->p_glVertex3sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2672,7 +2672,7 @@ static NTSTATUS gl_glVertex4d( void *args )
 {
     struct glVertex4d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex4d( params->x, params->y, params->z, params->w );
+    funcs->p_glVertex4d( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -2680,7 +2680,7 @@ static NTSTATUS gl_glVertex4dv( void *args )
 {
     struct glVertex4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex4dv( params->v );
+    funcs->p_glVertex4dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2688,7 +2688,7 @@ static NTSTATUS gl_glVertex4f( void *args )
 {
     struct glVertex4f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex4f( params->x, params->y, params->z, params->w );
+    funcs->p_glVertex4f( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -2696,7 +2696,7 @@ static NTSTATUS gl_glVertex4fv( void *args )
 {
     struct glVertex4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex4fv( params->v );
+    funcs->p_glVertex4fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2704,7 +2704,7 @@ static NTSTATUS gl_glVertex4i( void *args )
 {
     struct glVertex4i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex4i( params->x, params->y, params->z, params->w );
+    funcs->p_glVertex4i( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -2712,7 +2712,7 @@ static NTSTATUS gl_glVertex4iv( void *args )
 {
     struct glVertex4iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex4iv( params->v );
+    funcs->p_glVertex4iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2720,7 +2720,7 @@ static NTSTATUS gl_glVertex4s( void *args )
 {
     struct glVertex4s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex4s( params->x, params->y, params->z, params->w );
+    funcs->p_glVertex4s( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -2728,7 +2728,7 @@ static NTSTATUS gl_glVertex4sv( void *args )
 {
     struct glVertex4sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertex4sv( params->v );
+    funcs->p_glVertex4sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -2736,7 +2736,7 @@ static NTSTATUS gl_glVertexPointer( void *args )
 {
     struct glVertexPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glVertexPointer( params->size, params->type, params->stride, params->pointer );
+    funcs->p_glVertexPointer( params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -2744,7 +2744,7 @@ static NTSTATUS gl_glViewport( void *args )
 {
     struct glViewport_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->gl.p_glViewport( params->x, params->y, params->width, params->height );
+    funcs->p_glViewport( params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -2752,7 +2752,7 @@ static NTSTATUS ext_glAccumxOES( void *args )
 {
     struct glAccumxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glAccumxOES( params->op, params->value );
+    funcs->p_glAccumxOES( params->op, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -2760,7 +2760,7 @@ static NTSTATUS ext_glAcquireKeyedMutexWin32EXT( void *args )
 {
     struct glAcquireKeyedMutexWin32EXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glAcquireKeyedMutexWin32EXT( params->memory, params->key, params->timeout );
+    params->ret = funcs->p_glAcquireKeyedMutexWin32EXT( params->memory, params->key, params->timeout );
     return STATUS_SUCCESS;
 }
 
@@ -2768,7 +2768,7 @@ static NTSTATUS ext_glActiveProgramEXT( void *args )
 {
     struct glActiveProgramEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glActiveProgramEXT( params->program );
+    funcs->p_glActiveProgramEXT( params->program );
     return STATUS_SUCCESS;
 }
 
@@ -2776,7 +2776,7 @@ static NTSTATUS ext_glActiveShaderProgram( void *args )
 {
     struct glActiveShaderProgram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glActiveShaderProgram( params->pipeline, params->program );
+    funcs->p_glActiveShaderProgram( params->pipeline, params->program );
     return STATUS_SUCCESS;
 }
 
@@ -2784,7 +2784,7 @@ static NTSTATUS ext_glActiveStencilFaceEXT( void *args )
 {
     struct glActiveStencilFaceEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glActiveStencilFaceEXT( params->face );
+    funcs->p_glActiveStencilFaceEXT( params->face );
     return STATUS_SUCCESS;
 }
 
@@ -2792,7 +2792,7 @@ static NTSTATUS ext_glActiveTexture( void *args )
 {
     struct glActiveTexture_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glActiveTexture( params->texture );
+    funcs->p_glActiveTexture( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -2800,7 +2800,7 @@ static NTSTATUS ext_glActiveTextureARB( void *args )
 {
     struct glActiveTextureARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glActiveTextureARB( params->texture );
+    funcs->p_glActiveTextureARB( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -2808,7 +2808,7 @@ static NTSTATUS ext_glActiveVaryingNV( void *args )
 {
     struct glActiveVaryingNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glActiveVaryingNV( params->program, params->name );
+    funcs->p_glActiveVaryingNV( params->program, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -2816,7 +2816,7 @@ static NTSTATUS ext_glAlphaFragmentOp1ATI( void *args )
 {
     struct glAlphaFragmentOp1ATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glAlphaFragmentOp1ATI( params->op, params->dst, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod );
+    funcs->p_glAlphaFragmentOp1ATI( params->op, params->dst, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod );
     return STATUS_SUCCESS;
 }
 
@@ -2824,7 +2824,7 @@ static NTSTATUS ext_glAlphaFragmentOp2ATI( void *args )
 {
     struct glAlphaFragmentOp2ATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glAlphaFragmentOp2ATI( params->op, params->dst, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod, params->arg2, params->arg2Rep, params->arg2Mod );
+    funcs->p_glAlphaFragmentOp2ATI( params->op, params->dst, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod, params->arg2, params->arg2Rep, params->arg2Mod );
     return STATUS_SUCCESS;
 }
 
@@ -2832,7 +2832,7 @@ static NTSTATUS ext_glAlphaFragmentOp3ATI( void *args )
 {
     struct glAlphaFragmentOp3ATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glAlphaFragmentOp3ATI( params->op, params->dst, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod, params->arg2, params->arg2Rep, params->arg2Mod, params->arg3, params->arg3Rep, params->arg3Mod );
+    funcs->p_glAlphaFragmentOp3ATI( params->op, params->dst, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod, params->arg2, params->arg2Rep, params->arg2Mod, params->arg3, params->arg3Rep, params->arg3Mod );
     return STATUS_SUCCESS;
 }
 
@@ -2840,7 +2840,7 @@ static NTSTATUS ext_glAlphaFuncxOES( void *args )
 {
     struct glAlphaFuncxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glAlphaFuncxOES( params->func, params->ref );
+    funcs->p_glAlphaFuncxOES( params->func, params->ref );
     return STATUS_SUCCESS;
 }
 
@@ -2848,7 +2848,7 @@ static NTSTATUS ext_glAlphaToCoverageDitherControlNV( void *args )
 {
     struct glAlphaToCoverageDitherControlNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glAlphaToCoverageDitherControlNV( params->mode );
+    funcs->p_glAlphaToCoverageDitherControlNV( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -2856,7 +2856,7 @@ static NTSTATUS ext_glApplyFramebufferAttachmentCMAAINTEL( void *args )
 {
     struct glApplyFramebufferAttachmentCMAAINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glApplyFramebufferAttachmentCMAAINTEL();
+    funcs->p_glApplyFramebufferAttachmentCMAAINTEL();
     return STATUS_SUCCESS;
 }
 
@@ -2864,7 +2864,7 @@ static NTSTATUS ext_glApplyTextureEXT( void *args )
 {
     struct glApplyTextureEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glApplyTextureEXT( params->mode );
+    funcs->p_glApplyTextureEXT( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -2872,7 +2872,7 @@ static NTSTATUS ext_glAreProgramsResidentNV( void *args )
 {
     struct glAreProgramsResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glAreProgramsResidentNV( params->n, params->programs, params->residences );
+    params->ret = funcs->p_glAreProgramsResidentNV( params->n, params->programs, params->residences );
     return STATUS_SUCCESS;
 }
 
@@ -2880,7 +2880,7 @@ static NTSTATUS ext_glAreTexturesResidentEXT( void *args )
 {
     struct glAreTexturesResidentEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glAreTexturesResidentEXT( params->n, params->textures, params->residences );
+    params->ret = funcs->p_glAreTexturesResidentEXT( params->n, params->textures, params->residences );
     return STATUS_SUCCESS;
 }
 
@@ -2888,7 +2888,7 @@ static NTSTATUS ext_glArrayElementEXT( void *args )
 {
     struct glArrayElementEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glArrayElementEXT( params->i );
+    funcs->p_glArrayElementEXT( params->i );
     return STATUS_SUCCESS;
 }
 
@@ -2896,7 +2896,7 @@ static NTSTATUS ext_glArrayObjectATI( void *args )
 {
     struct glArrayObjectATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glArrayObjectATI( params->array, params->size, params->type, params->stride, params->buffer, params->offset );
+    funcs->p_glArrayObjectATI( params->array, params->size, params->type, params->stride, params->buffer, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -2904,7 +2904,7 @@ static NTSTATUS ext_glAsyncCopyBufferSubDataNVX( void *args )
 {
     struct glAsyncCopyBufferSubDataNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glAsyncCopyBufferSubDataNVX( params->waitSemaphoreCount, params->waitSemaphoreArray, params->fenceValueArray, params->readGpu, params->writeGpuMask, params->readBuffer, params->writeBuffer, params->readOffset, params->writeOffset, params->size, params->signalSemaphoreCount, params->signalSemaphoreArray, params->signalValueArray );
+    params->ret = funcs->p_glAsyncCopyBufferSubDataNVX( params->waitSemaphoreCount, params->waitSemaphoreArray, params->fenceValueArray, params->readGpu, params->writeGpuMask, params->readBuffer, params->writeBuffer, params->readOffset, params->writeOffset, params->size, params->signalSemaphoreCount, params->signalSemaphoreArray, params->signalValueArray );
     return STATUS_SUCCESS;
 }
 
@@ -2912,7 +2912,7 @@ static NTSTATUS ext_glAsyncCopyImageSubDataNVX( void *args )
 {
     struct glAsyncCopyImageSubDataNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glAsyncCopyImageSubDataNVX( params->waitSemaphoreCount, params->waitSemaphoreArray, params->waitValueArray, params->srcGpu, params->dstGpuMask, params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srcY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->srcWidth, params->srcHeight, params->srcDepth, params->signalSemaphoreCount, params->signalSemaphoreArray, params->signalValueArray );
+    params->ret = funcs->p_glAsyncCopyImageSubDataNVX( params->waitSemaphoreCount, params->waitSemaphoreArray, params->waitValueArray, params->srcGpu, params->dstGpuMask, params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srcY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->srcWidth, params->srcHeight, params->srcDepth, params->signalSemaphoreCount, params->signalSemaphoreArray, params->signalValueArray );
     return STATUS_SUCCESS;
 }
 
@@ -2920,7 +2920,7 @@ static NTSTATUS ext_glAsyncMarkerSGIX( void *args )
 {
     struct glAsyncMarkerSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glAsyncMarkerSGIX( params->marker );
+    funcs->p_glAsyncMarkerSGIX( params->marker );
     return STATUS_SUCCESS;
 }
 
@@ -2928,7 +2928,7 @@ static NTSTATUS ext_glAttachObjectARB( void *args )
 {
     struct glAttachObjectARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glAttachObjectARB( params->containerObj, params->obj );
+    funcs->p_glAttachObjectARB( params->containerObj, params->obj );
     return STATUS_SUCCESS;
 }
 
@@ -2936,7 +2936,7 @@ static NTSTATUS ext_glAttachShader( void *args )
 {
     struct glAttachShader_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glAttachShader( params->program, params->shader );
+    funcs->p_glAttachShader( params->program, params->shader );
     return STATUS_SUCCESS;
 }
 
@@ -2944,7 +2944,7 @@ static NTSTATUS ext_glBeginConditionalRender( void *args )
 {
     struct glBeginConditionalRender_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginConditionalRender( params->id, params->mode );
+    funcs->p_glBeginConditionalRender( params->id, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -2952,7 +2952,7 @@ static NTSTATUS ext_glBeginConditionalRenderNV( void *args )
 {
     struct glBeginConditionalRenderNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginConditionalRenderNV( params->id, params->mode );
+    funcs->p_glBeginConditionalRenderNV( params->id, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -2960,7 +2960,7 @@ static NTSTATUS ext_glBeginConditionalRenderNVX( void *args )
 {
     struct glBeginConditionalRenderNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginConditionalRenderNVX( params->id );
+    funcs->p_glBeginConditionalRenderNVX( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -2968,7 +2968,7 @@ static NTSTATUS ext_glBeginFragmentShaderATI( void *args )
 {
     struct glBeginFragmentShaderATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginFragmentShaderATI();
+    funcs->p_glBeginFragmentShaderATI();
     return STATUS_SUCCESS;
 }
 
@@ -2976,7 +2976,7 @@ static NTSTATUS ext_glBeginOcclusionQueryNV( void *args )
 {
     struct glBeginOcclusionQueryNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginOcclusionQueryNV( params->id );
+    funcs->p_glBeginOcclusionQueryNV( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -2984,7 +2984,7 @@ static NTSTATUS ext_glBeginPerfMonitorAMD( void *args )
 {
     struct glBeginPerfMonitorAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginPerfMonitorAMD( params->monitor );
+    funcs->p_glBeginPerfMonitorAMD( params->monitor );
     return STATUS_SUCCESS;
 }
 
@@ -2992,7 +2992,7 @@ static NTSTATUS ext_glBeginPerfQueryINTEL( void *args )
 {
     struct glBeginPerfQueryINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginPerfQueryINTEL( params->queryHandle );
+    funcs->p_glBeginPerfQueryINTEL( params->queryHandle );
     return STATUS_SUCCESS;
 }
 
@@ -3000,7 +3000,7 @@ static NTSTATUS ext_glBeginQuery( void *args )
 {
     struct glBeginQuery_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginQuery( params->target, params->id );
+    funcs->p_glBeginQuery( params->target, params->id );
     return STATUS_SUCCESS;
 }
 
@@ -3008,7 +3008,7 @@ static NTSTATUS ext_glBeginQueryARB( void *args )
 {
     struct glBeginQueryARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginQueryARB( params->target, params->id );
+    funcs->p_glBeginQueryARB( params->target, params->id );
     return STATUS_SUCCESS;
 }
 
@@ -3016,7 +3016,7 @@ static NTSTATUS ext_glBeginQueryIndexed( void *args )
 {
     struct glBeginQueryIndexed_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginQueryIndexed( params->target, params->index, params->id );
+    funcs->p_glBeginQueryIndexed( params->target, params->index, params->id );
     return STATUS_SUCCESS;
 }
 
@@ -3024,7 +3024,7 @@ static NTSTATUS ext_glBeginTransformFeedback( void *args )
 {
     struct glBeginTransformFeedback_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginTransformFeedback( params->primitiveMode );
+    funcs->p_glBeginTransformFeedback( params->primitiveMode );
     return STATUS_SUCCESS;
 }
 
@@ -3032,7 +3032,7 @@ static NTSTATUS ext_glBeginTransformFeedbackEXT( void *args )
 {
     struct glBeginTransformFeedbackEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginTransformFeedbackEXT( params->primitiveMode );
+    funcs->p_glBeginTransformFeedbackEXT( params->primitiveMode );
     return STATUS_SUCCESS;
 }
 
@@ -3040,7 +3040,7 @@ static NTSTATUS ext_glBeginTransformFeedbackNV( void *args )
 {
     struct glBeginTransformFeedbackNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginTransformFeedbackNV( params->primitiveMode );
+    funcs->p_glBeginTransformFeedbackNV( params->primitiveMode );
     return STATUS_SUCCESS;
 }
 
@@ -3048,7 +3048,7 @@ static NTSTATUS ext_glBeginVertexShaderEXT( void *args )
 {
     struct glBeginVertexShaderEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginVertexShaderEXT();
+    funcs->p_glBeginVertexShaderEXT();
     return STATUS_SUCCESS;
 }
 
@@ -3056,7 +3056,7 @@ static NTSTATUS ext_glBeginVideoCaptureNV( void *args )
 {
     struct glBeginVideoCaptureNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBeginVideoCaptureNV( params->video_capture_slot );
+    funcs->p_glBeginVideoCaptureNV( params->video_capture_slot );
     return STATUS_SUCCESS;
 }
 
@@ -3064,7 +3064,7 @@ static NTSTATUS ext_glBindAttribLocation( void *args )
 {
     struct glBindAttribLocation_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindAttribLocation( params->program, params->index, params->name );
+    funcs->p_glBindAttribLocation( params->program, params->index, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -3072,7 +3072,7 @@ static NTSTATUS ext_glBindAttribLocationARB( void *args )
 {
     struct glBindAttribLocationARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindAttribLocationARB( params->programObj, params->index, params->name );
+    funcs->p_glBindAttribLocationARB( params->programObj, params->index, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -3080,7 +3080,7 @@ static NTSTATUS ext_glBindBuffer( void *args )
 {
     struct glBindBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBuffer( params->target, params->buffer );
+    funcs->p_glBindBuffer( params->target, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -3088,7 +3088,7 @@ static NTSTATUS ext_glBindBufferARB( void *args )
 {
     struct glBindBufferARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBufferARB( params->target, params->buffer );
+    funcs->p_glBindBufferARB( params->target, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -3096,7 +3096,7 @@ static NTSTATUS ext_glBindBufferBase( void *args )
 {
     struct glBindBufferBase_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBufferBase( params->target, params->index, params->buffer );
+    funcs->p_glBindBufferBase( params->target, params->index, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -3104,7 +3104,7 @@ static NTSTATUS ext_glBindBufferBaseEXT( void *args )
 {
     struct glBindBufferBaseEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBufferBaseEXT( params->target, params->index, params->buffer );
+    funcs->p_glBindBufferBaseEXT( params->target, params->index, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -3112,7 +3112,7 @@ static NTSTATUS ext_glBindBufferBaseNV( void *args )
 {
     struct glBindBufferBaseNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBufferBaseNV( params->target, params->index, params->buffer );
+    funcs->p_glBindBufferBaseNV( params->target, params->index, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -3120,7 +3120,7 @@ static NTSTATUS ext_glBindBufferOffsetEXT( void *args )
 {
     struct glBindBufferOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBufferOffsetEXT( params->target, params->index, params->buffer, params->offset );
+    funcs->p_glBindBufferOffsetEXT( params->target, params->index, params->buffer, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -3128,7 +3128,7 @@ static NTSTATUS ext_glBindBufferOffsetNV( void *args )
 {
     struct glBindBufferOffsetNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBufferOffsetNV( params->target, params->index, params->buffer, params->offset );
+    funcs->p_glBindBufferOffsetNV( params->target, params->index, params->buffer, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -3136,7 +3136,7 @@ static NTSTATUS ext_glBindBufferRange( void *args )
 {
     struct glBindBufferRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBufferRange( params->target, params->index, params->buffer, params->offset, params->size );
+    funcs->p_glBindBufferRange( params->target, params->index, params->buffer, params->offset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -3144,7 +3144,7 @@ static NTSTATUS ext_glBindBufferRangeEXT( void *args )
 {
     struct glBindBufferRangeEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBufferRangeEXT( params->target, params->index, params->buffer, params->offset, params->size );
+    funcs->p_glBindBufferRangeEXT( params->target, params->index, params->buffer, params->offset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -3152,7 +3152,7 @@ static NTSTATUS ext_glBindBufferRangeNV( void *args )
 {
     struct glBindBufferRangeNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBufferRangeNV( params->target, params->index, params->buffer, params->offset, params->size );
+    funcs->p_glBindBufferRangeNV( params->target, params->index, params->buffer, params->offset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -3160,7 +3160,7 @@ static NTSTATUS ext_glBindBuffersBase( void *args )
 {
     struct glBindBuffersBase_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBuffersBase( params->target, params->first, params->count, params->buffers );
+    funcs->p_glBindBuffersBase( params->target, params->first, params->count, params->buffers );
     return STATUS_SUCCESS;
 }
 
@@ -3168,7 +3168,7 @@ static NTSTATUS ext_glBindBuffersRange( void *args )
 {
     struct glBindBuffersRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindBuffersRange( params->target, params->first, params->count, params->buffers, params->offsets, params->sizes );
+    funcs->p_glBindBuffersRange( params->target, params->first, params->count, params->buffers, params->offsets, params->sizes );
     return STATUS_SUCCESS;
 }
 
@@ -3176,7 +3176,7 @@ static NTSTATUS ext_glBindFragDataLocation( void *args )
 {
     struct glBindFragDataLocation_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindFragDataLocation( params->program, params->color, params->name );
+    funcs->p_glBindFragDataLocation( params->program, params->color, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -3184,7 +3184,7 @@ static NTSTATUS ext_glBindFragDataLocationEXT( void *args )
 {
     struct glBindFragDataLocationEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindFragDataLocationEXT( params->program, params->color, params->name );
+    funcs->p_glBindFragDataLocationEXT( params->program, params->color, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -3192,7 +3192,7 @@ static NTSTATUS ext_glBindFragDataLocationIndexed( void *args )
 {
     struct glBindFragDataLocationIndexed_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindFragDataLocationIndexed( params->program, params->colorNumber, params->index, params->name );
+    funcs->p_glBindFragDataLocationIndexed( params->program, params->colorNumber, params->index, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -3200,7 +3200,7 @@ static NTSTATUS ext_glBindFragmentShaderATI( void *args )
 {
     struct glBindFragmentShaderATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindFragmentShaderATI( params->id );
+    funcs->p_glBindFragmentShaderATI( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -3208,7 +3208,7 @@ static NTSTATUS ext_glBindFramebuffer( void *args )
 {
     struct glBindFramebuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindFramebuffer( params->target, params->framebuffer );
+    funcs->p_glBindFramebuffer( params->target, params->framebuffer );
     return STATUS_SUCCESS;
 }
 
@@ -3216,7 +3216,7 @@ static NTSTATUS ext_glBindFramebufferEXT( void *args )
 {
     struct glBindFramebufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindFramebufferEXT( params->target, params->framebuffer );
+    funcs->p_glBindFramebufferEXT( params->target, params->framebuffer );
     return STATUS_SUCCESS;
 }
 
@@ -3224,7 +3224,7 @@ static NTSTATUS ext_glBindImageTexture( void *args )
 {
     struct glBindImageTexture_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindImageTexture( params->unit, params->texture, params->level, params->layered, params->layer, params->access, params->format );
+    funcs->p_glBindImageTexture( params->unit, params->texture, params->level, params->layered, params->layer, params->access, params->format );
     return STATUS_SUCCESS;
 }
 
@@ -3232,7 +3232,7 @@ static NTSTATUS ext_glBindImageTextureEXT( void *args )
 {
     struct glBindImageTextureEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindImageTextureEXT( params->index, params->texture, params->level, params->layered, params->layer, params->access, params->format );
+    funcs->p_glBindImageTextureEXT( params->index, params->texture, params->level, params->layered, params->layer, params->access, params->format );
     return STATUS_SUCCESS;
 }
 
@@ -3240,7 +3240,7 @@ static NTSTATUS ext_glBindImageTextures( void *args )
 {
     struct glBindImageTextures_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindImageTextures( params->first, params->count, params->textures );
+    funcs->p_glBindImageTextures( params->first, params->count, params->textures );
     return STATUS_SUCCESS;
 }
 
@@ -3248,7 +3248,7 @@ static NTSTATUS ext_glBindLightParameterEXT( void *args )
 {
     struct glBindLightParameterEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glBindLightParameterEXT( params->light, params->value );
+    params->ret = funcs->p_glBindLightParameterEXT( params->light, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -3256,7 +3256,7 @@ static NTSTATUS ext_glBindMaterialParameterEXT( void *args )
 {
     struct glBindMaterialParameterEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glBindMaterialParameterEXT( params->face, params->value );
+    params->ret = funcs->p_glBindMaterialParameterEXT( params->face, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -3264,7 +3264,7 @@ static NTSTATUS ext_glBindMultiTextureEXT( void *args )
 {
     struct glBindMultiTextureEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindMultiTextureEXT( params->texunit, params->target, params->texture );
+    funcs->p_glBindMultiTextureEXT( params->texunit, params->target, params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -3272,7 +3272,7 @@ static NTSTATUS ext_glBindParameterEXT( void *args )
 {
     struct glBindParameterEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glBindParameterEXT( params->value );
+    params->ret = funcs->p_glBindParameterEXT( params->value );
     return STATUS_SUCCESS;
 }
 
@@ -3280,7 +3280,7 @@ static NTSTATUS ext_glBindProgramARB( void *args )
 {
     struct glBindProgramARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindProgramARB( params->target, params->program );
+    funcs->p_glBindProgramARB( params->target, params->program );
     return STATUS_SUCCESS;
 }
 
@@ -3288,7 +3288,7 @@ static NTSTATUS ext_glBindProgramNV( void *args )
 {
     struct glBindProgramNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindProgramNV( params->target, params->id );
+    funcs->p_glBindProgramNV( params->target, params->id );
     return STATUS_SUCCESS;
 }
 
@@ -3296,7 +3296,7 @@ static NTSTATUS ext_glBindProgramPipeline( void *args )
 {
     struct glBindProgramPipeline_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindProgramPipeline( params->pipeline );
+    funcs->p_glBindProgramPipeline( params->pipeline );
     return STATUS_SUCCESS;
 }
 
@@ -3304,7 +3304,7 @@ static NTSTATUS ext_glBindRenderbuffer( void *args )
 {
     struct glBindRenderbuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindRenderbuffer( params->target, params->renderbuffer );
+    funcs->p_glBindRenderbuffer( params->target, params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -3312,7 +3312,7 @@ static NTSTATUS ext_glBindRenderbufferEXT( void *args )
 {
     struct glBindRenderbufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindRenderbufferEXT( params->target, params->renderbuffer );
+    funcs->p_glBindRenderbufferEXT( params->target, params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -3320,7 +3320,7 @@ static NTSTATUS ext_glBindSampler( void *args )
 {
     struct glBindSampler_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindSampler( params->unit, params->sampler );
+    funcs->p_glBindSampler( params->unit, params->sampler );
     return STATUS_SUCCESS;
 }
 
@@ -3328,7 +3328,7 @@ static NTSTATUS ext_glBindSamplers( void *args )
 {
     struct glBindSamplers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindSamplers( params->first, params->count, params->samplers );
+    funcs->p_glBindSamplers( params->first, params->count, params->samplers );
     return STATUS_SUCCESS;
 }
 
@@ -3336,7 +3336,7 @@ static NTSTATUS ext_glBindShadingRateImageNV( void *args )
 {
     struct glBindShadingRateImageNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindShadingRateImageNV( params->texture );
+    funcs->p_glBindShadingRateImageNV( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -3344,7 +3344,7 @@ static NTSTATUS ext_glBindTexGenParameterEXT( void *args )
 {
     struct glBindTexGenParameterEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glBindTexGenParameterEXT( params->unit, params->coord, params->value );
+    params->ret = funcs->p_glBindTexGenParameterEXT( params->unit, params->coord, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -3352,7 +3352,7 @@ static NTSTATUS ext_glBindTextureEXT( void *args )
 {
     struct glBindTextureEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindTextureEXT( params->target, params->texture );
+    funcs->p_glBindTextureEXT( params->target, params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -3360,7 +3360,7 @@ static NTSTATUS ext_glBindTextureUnit( void *args )
 {
     struct glBindTextureUnit_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindTextureUnit( params->unit, params->texture );
+    funcs->p_glBindTextureUnit( params->unit, params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -3368,7 +3368,7 @@ static NTSTATUS ext_glBindTextureUnitParameterEXT( void *args )
 {
     struct glBindTextureUnitParameterEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glBindTextureUnitParameterEXT( params->unit, params->value );
+    params->ret = funcs->p_glBindTextureUnitParameterEXT( params->unit, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -3376,7 +3376,7 @@ static NTSTATUS ext_glBindTextures( void *args )
 {
     struct glBindTextures_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindTextures( params->first, params->count, params->textures );
+    funcs->p_glBindTextures( params->first, params->count, params->textures );
     return STATUS_SUCCESS;
 }
 
@@ -3384,7 +3384,7 @@ static NTSTATUS ext_glBindTransformFeedback( void *args )
 {
     struct glBindTransformFeedback_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindTransformFeedback( params->target, params->id );
+    funcs->p_glBindTransformFeedback( params->target, params->id );
     return STATUS_SUCCESS;
 }
 
@@ -3392,7 +3392,7 @@ static NTSTATUS ext_glBindTransformFeedbackNV( void *args )
 {
     struct glBindTransformFeedbackNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindTransformFeedbackNV( params->target, params->id );
+    funcs->p_glBindTransformFeedbackNV( params->target, params->id );
     return STATUS_SUCCESS;
 }
 
@@ -3400,7 +3400,7 @@ static NTSTATUS ext_glBindVertexArray( void *args )
 {
     struct glBindVertexArray_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindVertexArray( params->array );
+    funcs->p_glBindVertexArray( params->array );
     return STATUS_SUCCESS;
 }
 
@@ -3408,7 +3408,7 @@ static NTSTATUS ext_glBindVertexArrayAPPLE( void *args )
 {
     struct glBindVertexArrayAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindVertexArrayAPPLE( params->array );
+    funcs->p_glBindVertexArrayAPPLE( params->array );
     return STATUS_SUCCESS;
 }
 
@@ -3416,7 +3416,7 @@ static NTSTATUS ext_glBindVertexBuffer( void *args )
 {
     struct glBindVertexBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindVertexBuffer( params->bindingindex, params->buffer, params->offset, params->stride );
+    funcs->p_glBindVertexBuffer( params->bindingindex, params->buffer, params->offset, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -3424,7 +3424,7 @@ static NTSTATUS ext_glBindVertexBuffers( void *args )
 {
     struct glBindVertexBuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindVertexBuffers( params->first, params->count, params->buffers, params->offsets, params->strides );
+    funcs->p_glBindVertexBuffers( params->first, params->count, params->buffers, params->offsets, params->strides );
     return STATUS_SUCCESS;
 }
 
@@ -3432,7 +3432,7 @@ static NTSTATUS ext_glBindVertexShaderEXT( void *args )
 {
     struct glBindVertexShaderEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindVertexShaderEXT( params->id );
+    funcs->p_glBindVertexShaderEXT( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -3440,7 +3440,7 @@ static NTSTATUS ext_glBindVideoCaptureStreamBufferNV( void *args )
 {
     struct glBindVideoCaptureStreamBufferNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindVideoCaptureStreamBufferNV( params->video_capture_slot, params->stream, params->frame_region, params->offset );
+    funcs->p_glBindVideoCaptureStreamBufferNV( params->video_capture_slot, params->stream, params->frame_region, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -3448,7 +3448,7 @@ static NTSTATUS ext_glBindVideoCaptureStreamTextureNV( void *args )
 {
     struct glBindVideoCaptureStreamTextureNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBindVideoCaptureStreamTextureNV( params->video_capture_slot, params->stream, params->frame_region, params->target, params->texture );
+    funcs->p_glBindVideoCaptureStreamTextureNV( params->video_capture_slot, params->stream, params->frame_region, params->target, params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -3456,7 +3456,7 @@ static NTSTATUS ext_glBinormal3bEXT( void *args )
 {
     struct glBinormal3bEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3bEXT( params->bx, params->by, params->bz );
+    funcs->p_glBinormal3bEXT( params->bx, params->by, params->bz );
     return STATUS_SUCCESS;
 }
 
@@ -3464,7 +3464,7 @@ static NTSTATUS ext_glBinormal3bvEXT( void *args )
 {
     struct glBinormal3bvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3bvEXT( params->v );
+    funcs->p_glBinormal3bvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -3472,7 +3472,7 @@ static NTSTATUS ext_glBinormal3dEXT( void *args )
 {
     struct glBinormal3dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3dEXT( params->bx, params->by, params->bz );
+    funcs->p_glBinormal3dEXT( params->bx, params->by, params->bz );
     return STATUS_SUCCESS;
 }
 
@@ -3480,7 +3480,7 @@ static NTSTATUS ext_glBinormal3dvEXT( void *args )
 {
     struct glBinormal3dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3dvEXT( params->v );
+    funcs->p_glBinormal3dvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -3488,7 +3488,7 @@ static NTSTATUS ext_glBinormal3fEXT( void *args )
 {
     struct glBinormal3fEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3fEXT( params->bx, params->by, params->bz );
+    funcs->p_glBinormal3fEXT( params->bx, params->by, params->bz );
     return STATUS_SUCCESS;
 }
 
@@ -3496,7 +3496,7 @@ static NTSTATUS ext_glBinormal3fvEXT( void *args )
 {
     struct glBinormal3fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3fvEXT( params->v );
+    funcs->p_glBinormal3fvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -3504,7 +3504,7 @@ static NTSTATUS ext_glBinormal3iEXT( void *args )
 {
     struct glBinormal3iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3iEXT( params->bx, params->by, params->bz );
+    funcs->p_glBinormal3iEXT( params->bx, params->by, params->bz );
     return STATUS_SUCCESS;
 }
 
@@ -3512,7 +3512,7 @@ static NTSTATUS ext_glBinormal3ivEXT( void *args )
 {
     struct glBinormal3ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3ivEXT( params->v );
+    funcs->p_glBinormal3ivEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -3520,7 +3520,7 @@ static NTSTATUS ext_glBinormal3sEXT( void *args )
 {
     struct glBinormal3sEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3sEXT( params->bx, params->by, params->bz );
+    funcs->p_glBinormal3sEXT( params->bx, params->by, params->bz );
     return STATUS_SUCCESS;
 }
 
@@ -3528,7 +3528,7 @@ static NTSTATUS ext_glBinormal3svEXT( void *args )
 {
     struct glBinormal3svEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormal3svEXT( params->v );
+    funcs->p_glBinormal3svEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -3536,7 +3536,7 @@ static NTSTATUS ext_glBinormalPointerEXT( void *args )
 {
     struct glBinormalPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBinormalPointerEXT( params->type, params->stride, params->pointer );
+    funcs->p_glBinormalPointerEXT( params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -3544,7 +3544,7 @@ static NTSTATUS ext_glBitmapxOES( void *args )
 {
     struct glBitmapxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBitmapxOES( params->width, params->height, params->xorig, params->yorig, params->xmove, params->ymove, params->bitmap );
+    funcs->p_glBitmapxOES( params->width, params->height, params->xorig, params->yorig, params->xmove, params->ymove, params->bitmap );
     return STATUS_SUCCESS;
 }
 
@@ -3552,7 +3552,7 @@ static NTSTATUS ext_glBlendBarrierKHR( void *args )
 {
     struct glBlendBarrierKHR_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendBarrierKHR();
+    funcs->p_glBlendBarrierKHR();
     return STATUS_SUCCESS;
 }
 
@@ -3560,7 +3560,7 @@ static NTSTATUS ext_glBlendBarrierNV( void *args )
 {
     struct glBlendBarrierNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendBarrierNV();
+    funcs->p_glBlendBarrierNV();
     return STATUS_SUCCESS;
 }
 
@@ -3568,7 +3568,7 @@ static NTSTATUS ext_glBlendColor( void *args )
 {
     struct glBlendColor_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendColor( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glBlendColor( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -3576,7 +3576,7 @@ static NTSTATUS ext_glBlendColorEXT( void *args )
 {
     struct glBlendColorEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendColorEXT( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glBlendColorEXT( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -3584,7 +3584,7 @@ static NTSTATUS ext_glBlendColorxOES( void *args )
 {
     struct glBlendColorxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendColorxOES( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glBlendColorxOES( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -3592,7 +3592,7 @@ static NTSTATUS ext_glBlendEquation( void *args )
 {
     struct glBlendEquation_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquation( params->mode );
+    funcs->p_glBlendEquation( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -3600,7 +3600,7 @@ static NTSTATUS ext_glBlendEquationEXT( void *args )
 {
     struct glBlendEquationEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquationEXT( params->mode );
+    funcs->p_glBlendEquationEXT( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -3608,7 +3608,7 @@ static NTSTATUS ext_glBlendEquationIndexedAMD( void *args )
 {
     struct glBlendEquationIndexedAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquationIndexedAMD( params->buf, params->mode );
+    funcs->p_glBlendEquationIndexedAMD( params->buf, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -3616,7 +3616,7 @@ static NTSTATUS ext_glBlendEquationSeparate( void *args )
 {
     struct glBlendEquationSeparate_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquationSeparate( params->modeRGB, params->modeAlpha );
+    funcs->p_glBlendEquationSeparate( params->modeRGB, params->modeAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3624,7 +3624,7 @@ static NTSTATUS ext_glBlendEquationSeparateEXT( void *args )
 {
     struct glBlendEquationSeparateEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquationSeparateEXT( params->modeRGB, params->modeAlpha );
+    funcs->p_glBlendEquationSeparateEXT( params->modeRGB, params->modeAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3632,7 +3632,7 @@ static NTSTATUS ext_glBlendEquationSeparateIndexedAMD( void *args )
 {
     struct glBlendEquationSeparateIndexedAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquationSeparateIndexedAMD( params->buf, params->modeRGB, params->modeAlpha );
+    funcs->p_glBlendEquationSeparateIndexedAMD( params->buf, params->modeRGB, params->modeAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3640,7 +3640,7 @@ static NTSTATUS ext_glBlendEquationSeparatei( void *args )
 {
     struct glBlendEquationSeparatei_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquationSeparatei( params->buf, params->modeRGB, params->modeAlpha );
+    funcs->p_glBlendEquationSeparatei( params->buf, params->modeRGB, params->modeAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3648,7 +3648,7 @@ static NTSTATUS ext_glBlendEquationSeparateiARB( void *args )
 {
     struct glBlendEquationSeparateiARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquationSeparateiARB( params->buf, params->modeRGB, params->modeAlpha );
+    funcs->p_glBlendEquationSeparateiARB( params->buf, params->modeRGB, params->modeAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3656,7 +3656,7 @@ static NTSTATUS ext_glBlendEquationi( void *args )
 {
     struct glBlendEquationi_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquationi( params->buf, params->mode );
+    funcs->p_glBlendEquationi( params->buf, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -3664,7 +3664,7 @@ static NTSTATUS ext_glBlendEquationiARB( void *args )
 {
     struct glBlendEquationiARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendEquationiARB( params->buf, params->mode );
+    funcs->p_glBlendEquationiARB( params->buf, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -3672,7 +3672,7 @@ static NTSTATUS ext_glBlendFuncIndexedAMD( void *args )
 {
     struct glBlendFuncIndexedAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendFuncIndexedAMD( params->buf, params->src, params->dst );
+    funcs->p_glBlendFuncIndexedAMD( params->buf, params->src, params->dst );
     return STATUS_SUCCESS;
 }
 
@@ -3680,7 +3680,7 @@ static NTSTATUS ext_glBlendFuncSeparate( void *args )
 {
     struct glBlendFuncSeparate_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendFuncSeparate( params->sfactorRGB, params->dfactorRGB, params->sfactorAlpha, params->dfactorAlpha );
+    funcs->p_glBlendFuncSeparate( params->sfactorRGB, params->dfactorRGB, params->sfactorAlpha, params->dfactorAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3688,7 +3688,7 @@ static NTSTATUS ext_glBlendFuncSeparateEXT( void *args )
 {
     struct glBlendFuncSeparateEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendFuncSeparateEXT( params->sfactorRGB, params->dfactorRGB, params->sfactorAlpha, params->dfactorAlpha );
+    funcs->p_glBlendFuncSeparateEXT( params->sfactorRGB, params->dfactorRGB, params->sfactorAlpha, params->dfactorAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3696,7 +3696,7 @@ static NTSTATUS ext_glBlendFuncSeparateINGR( void *args )
 {
     struct glBlendFuncSeparateINGR_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendFuncSeparateINGR( params->sfactorRGB, params->dfactorRGB, params->sfactorAlpha, params->dfactorAlpha );
+    funcs->p_glBlendFuncSeparateINGR( params->sfactorRGB, params->dfactorRGB, params->sfactorAlpha, params->dfactorAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3704,7 +3704,7 @@ static NTSTATUS ext_glBlendFuncSeparateIndexedAMD( void *args )
 {
     struct glBlendFuncSeparateIndexedAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendFuncSeparateIndexedAMD( params->buf, params->srcRGB, params->dstRGB, params->srcAlpha, params->dstAlpha );
+    funcs->p_glBlendFuncSeparateIndexedAMD( params->buf, params->srcRGB, params->dstRGB, params->srcAlpha, params->dstAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3712,7 +3712,7 @@ static NTSTATUS ext_glBlendFuncSeparatei( void *args )
 {
     struct glBlendFuncSeparatei_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendFuncSeparatei( params->buf, params->srcRGB, params->dstRGB, params->srcAlpha, params->dstAlpha );
+    funcs->p_glBlendFuncSeparatei( params->buf, params->srcRGB, params->dstRGB, params->srcAlpha, params->dstAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3720,7 +3720,7 @@ static NTSTATUS ext_glBlendFuncSeparateiARB( void *args )
 {
     struct glBlendFuncSeparateiARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendFuncSeparateiARB( params->buf, params->srcRGB, params->dstRGB, params->srcAlpha, params->dstAlpha );
+    funcs->p_glBlendFuncSeparateiARB( params->buf, params->srcRGB, params->dstRGB, params->srcAlpha, params->dstAlpha );
     return STATUS_SUCCESS;
 }
 
@@ -3728,7 +3728,7 @@ static NTSTATUS ext_glBlendFunci( void *args )
 {
     struct glBlendFunci_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendFunci( params->buf, params->src, params->dst );
+    funcs->p_glBlendFunci( params->buf, params->src, params->dst );
     return STATUS_SUCCESS;
 }
 
@@ -3736,7 +3736,7 @@ static NTSTATUS ext_glBlendFunciARB( void *args )
 {
     struct glBlendFunciARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendFunciARB( params->buf, params->src, params->dst );
+    funcs->p_glBlendFunciARB( params->buf, params->src, params->dst );
     return STATUS_SUCCESS;
 }
 
@@ -3744,7 +3744,7 @@ static NTSTATUS ext_glBlendParameteriNV( void *args )
 {
     struct glBlendParameteriNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlendParameteriNV( params->pname, params->value );
+    funcs->p_glBlendParameteriNV( params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -3752,7 +3752,7 @@ static NTSTATUS ext_glBlitFramebuffer( void *args )
 {
     struct glBlitFramebuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlitFramebuffer( params->srcX0, params->srcY0, params->srcX1, params->srcY1, params->dstX0, params->dstY0, params->dstX1, params->dstY1, params->mask, params->filter );
+    funcs->p_glBlitFramebuffer( params->srcX0, params->srcY0, params->srcX1, params->srcY1, params->dstX0, params->dstY0, params->dstX1, params->dstY1, params->mask, params->filter );
     return STATUS_SUCCESS;
 }
 
@@ -3760,7 +3760,7 @@ static NTSTATUS ext_glBlitFramebufferEXT( void *args )
 {
     struct glBlitFramebufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlitFramebufferEXT( params->srcX0, params->srcY0, params->srcX1, params->srcY1, params->dstX0, params->dstY0, params->dstX1, params->dstY1, params->mask, params->filter );
+    funcs->p_glBlitFramebufferEXT( params->srcX0, params->srcY0, params->srcX1, params->srcY1, params->dstX0, params->dstY0, params->dstX1, params->dstY1, params->mask, params->filter );
     return STATUS_SUCCESS;
 }
 
@@ -3768,7 +3768,7 @@ static NTSTATUS ext_glBlitNamedFramebuffer( void *args )
 {
     struct glBlitNamedFramebuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBlitNamedFramebuffer( params->readFramebuffer, params->drawFramebuffer, params->srcX0, params->srcY0, params->srcX1, params->srcY1, params->dstX0, params->dstY0, params->dstX1, params->dstY1, params->mask, params->filter );
+    funcs->p_glBlitNamedFramebuffer( params->readFramebuffer, params->drawFramebuffer, params->srcX0, params->srcY0, params->srcX1, params->srcY1, params->dstX0, params->dstY0, params->dstX1, params->dstY1, params->mask, params->filter );
     return STATUS_SUCCESS;
 }
 
@@ -3776,7 +3776,7 @@ static NTSTATUS ext_glBufferAddressRangeNV( void *args )
 {
     struct glBufferAddressRangeNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferAddressRangeNV( params->pname, params->index, params->address, params->length );
+    funcs->p_glBufferAddressRangeNV( params->pname, params->index, params->address, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -3784,7 +3784,7 @@ static NTSTATUS ext_glBufferAttachMemoryNV( void *args )
 {
     struct glBufferAttachMemoryNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferAttachMemoryNV( params->target, params->memory, params->offset );
+    funcs->p_glBufferAttachMemoryNV( params->target, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -3792,7 +3792,7 @@ static NTSTATUS ext_glBufferData( void *args )
 {
     struct glBufferData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferData( params->target, params->size, params->data, params->usage );
+    funcs->p_glBufferData( params->target, params->size, params->data, params->usage );
     return STATUS_SUCCESS;
 }
 
@@ -3800,7 +3800,7 @@ static NTSTATUS ext_glBufferDataARB( void *args )
 {
     struct glBufferDataARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferDataARB( params->target, params->size, params->data, params->usage );
+    funcs->p_glBufferDataARB( params->target, params->size, params->data, params->usage );
     return STATUS_SUCCESS;
 }
 
@@ -3808,7 +3808,7 @@ static NTSTATUS ext_glBufferPageCommitmentARB( void *args )
 {
     struct glBufferPageCommitmentARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferPageCommitmentARB( params->target, params->offset, params->size, params->commit );
+    funcs->p_glBufferPageCommitmentARB( params->target, params->offset, params->size, params->commit );
     return STATUS_SUCCESS;
 }
 
@@ -3816,7 +3816,7 @@ static NTSTATUS ext_glBufferParameteriAPPLE( void *args )
 {
     struct glBufferParameteriAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferParameteriAPPLE( params->target, params->pname, params->param );
+    funcs->p_glBufferParameteriAPPLE( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -3824,7 +3824,7 @@ static NTSTATUS ext_glBufferRegionEnabled( void *args )
 {
     struct glBufferRegionEnabled_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glBufferRegionEnabled();
+    params->ret = funcs->p_glBufferRegionEnabled();
     return STATUS_SUCCESS;
 }
 
@@ -3832,7 +3832,7 @@ static NTSTATUS ext_glBufferStorage( void *args )
 {
     struct glBufferStorage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferStorage( params->target, params->size, params->data, params->flags );
+    funcs->p_glBufferStorage( params->target, params->size, params->data, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -3840,7 +3840,7 @@ static NTSTATUS ext_glBufferStorageExternalEXT( void *args )
 {
     struct glBufferStorageExternalEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferStorageExternalEXT( params->target, params->offset, params->size, params->clientBuffer, params->flags );
+    funcs->p_glBufferStorageExternalEXT( params->target, params->offset, params->size, params->clientBuffer, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -3848,7 +3848,7 @@ static NTSTATUS ext_glBufferStorageMemEXT( void *args )
 {
     struct glBufferStorageMemEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferStorageMemEXT( params->target, params->size, params->memory, params->offset );
+    funcs->p_glBufferStorageMemEXT( params->target, params->size, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -3856,7 +3856,7 @@ static NTSTATUS ext_glBufferSubData( void *args )
 {
     struct glBufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferSubData( params->target, params->offset, params->size, params->data );
+    funcs->p_glBufferSubData( params->target, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -3864,7 +3864,7 @@ static NTSTATUS ext_glBufferSubDataARB( void *args )
 {
     struct glBufferSubDataARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glBufferSubDataARB( params->target, params->offset, params->size, params->data );
+    funcs->p_glBufferSubDataARB( params->target, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -3872,7 +3872,7 @@ static NTSTATUS ext_glCallCommandListNV( void *args )
 {
     struct glCallCommandListNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCallCommandListNV( params->list );
+    funcs->p_glCallCommandListNV( params->list );
     return STATUS_SUCCESS;
 }
 
@@ -3880,7 +3880,7 @@ static NTSTATUS ext_glCheckFramebufferStatus( void *args )
 {
     struct glCheckFramebufferStatus_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCheckFramebufferStatus( params->target );
+    params->ret = funcs->p_glCheckFramebufferStatus( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -3888,7 +3888,7 @@ static NTSTATUS ext_glCheckFramebufferStatusEXT( void *args )
 {
     struct glCheckFramebufferStatusEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCheckFramebufferStatusEXT( params->target );
+    params->ret = funcs->p_glCheckFramebufferStatusEXT( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -3896,7 +3896,7 @@ static NTSTATUS ext_glCheckNamedFramebufferStatus( void *args )
 {
     struct glCheckNamedFramebufferStatus_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCheckNamedFramebufferStatus( params->framebuffer, params->target );
+    params->ret = funcs->p_glCheckNamedFramebufferStatus( params->framebuffer, params->target );
     return STATUS_SUCCESS;
 }
 
@@ -3904,7 +3904,7 @@ static NTSTATUS ext_glCheckNamedFramebufferStatusEXT( void *args )
 {
     struct glCheckNamedFramebufferStatusEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCheckNamedFramebufferStatusEXT( params->framebuffer, params->target );
+    params->ret = funcs->p_glCheckNamedFramebufferStatusEXT( params->framebuffer, params->target );
     return STATUS_SUCCESS;
 }
 
@@ -3912,7 +3912,7 @@ static NTSTATUS ext_glClampColor( void *args )
 {
     struct glClampColor_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClampColor( params->target, params->clamp );
+    funcs->p_glClampColor( params->target, params->clamp );
     return STATUS_SUCCESS;
 }
 
@@ -3920,7 +3920,7 @@ static NTSTATUS ext_glClampColorARB( void *args )
 {
     struct glClampColorARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClampColorARB( params->target, params->clamp );
+    funcs->p_glClampColorARB( params->target, params->clamp );
     return STATUS_SUCCESS;
 }
 
@@ -3928,7 +3928,7 @@ static NTSTATUS ext_glClearAccumxOES( void *args )
 {
     struct glClearAccumxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearAccumxOES( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glClearAccumxOES( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -3936,7 +3936,7 @@ static NTSTATUS ext_glClearBufferData( void *args )
 {
     struct glClearBufferData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearBufferData( params->target, params->internalformat, params->format, params->type, params->data );
+    funcs->p_glClearBufferData( params->target, params->internalformat, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -3944,7 +3944,7 @@ static NTSTATUS ext_glClearBufferSubData( void *args )
 {
     struct glClearBufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearBufferSubData( params->target, params->internalformat, params->offset, params->size, params->format, params->type, params->data );
+    funcs->p_glClearBufferSubData( params->target, params->internalformat, params->offset, params->size, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -3952,7 +3952,7 @@ static NTSTATUS ext_glClearBufferfi( void *args )
 {
     struct glClearBufferfi_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearBufferfi( params->buffer, params->drawbuffer, params->depth, params->stencil );
+    funcs->p_glClearBufferfi( params->buffer, params->drawbuffer, params->depth, params->stencil );
     return STATUS_SUCCESS;
 }
 
@@ -3960,7 +3960,7 @@ static NTSTATUS ext_glClearBufferfv( void *args )
 {
     struct glClearBufferfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearBufferfv( params->buffer, params->drawbuffer, params->value );
+    funcs->p_glClearBufferfv( params->buffer, params->drawbuffer, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -3968,7 +3968,7 @@ static NTSTATUS ext_glClearBufferiv( void *args )
 {
     struct glClearBufferiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearBufferiv( params->buffer, params->drawbuffer, params->value );
+    funcs->p_glClearBufferiv( params->buffer, params->drawbuffer, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -3976,7 +3976,7 @@ static NTSTATUS ext_glClearBufferuiv( void *args )
 {
     struct glClearBufferuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearBufferuiv( params->buffer, params->drawbuffer, params->value );
+    funcs->p_glClearBufferuiv( params->buffer, params->drawbuffer, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -3984,7 +3984,7 @@ static NTSTATUS ext_glClearColorIiEXT( void *args )
 {
     struct glClearColorIiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearColorIiEXT( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glClearColorIiEXT( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -3992,7 +3992,7 @@ static NTSTATUS ext_glClearColorIuiEXT( void *args )
 {
     struct glClearColorIuiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearColorIuiEXT( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glClearColorIuiEXT( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -4000,7 +4000,7 @@ static NTSTATUS ext_glClearColorxOES( void *args )
 {
     struct glClearColorxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearColorxOES( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glClearColorxOES( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -4008,7 +4008,7 @@ static NTSTATUS ext_glClearDepthdNV( void *args )
 {
     struct glClearDepthdNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearDepthdNV( params->depth );
+    funcs->p_glClearDepthdNV( params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -4016,7 +4016,7 @@ static NTSTATUS ext_glClearDepthf( void *args )
 {
     struct glClearDepthf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearDepthf( params->d );
+    funcs->p_glClearDepthf( params->d );
     return STATUS_SUCCESS;
 }
 
@@ -4024,7 +4024,7 @@ static NTSTATUS ext_glClearDepthfOES( void *args )
 {
     struct glClearDepthfOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearDepthfOES( params->depth );
+    funcs->p_glClearDepthfOES( params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -4032,7 +4032,7 @@ static NTSTATUS ext_glClearDepthxOES( void *args )
 {
     struct glClearDepthxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearDepthxOES( params->depth );
+    funcs->p_glClearDepthxOES( params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -4040,7 +4040,7 @@ static NTSTATUS ext_glClearNamedBufferData( void *args )
 {
     struct glClearNamedBufferData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearNamedBufferData( params->buffer, params->internalformat, params->format, params->type, params->data );
+    funcs->p_glClearNamedBufferData( params->buffer, params->internalformat, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4048,7 +4048,7 @@ static NTSTATUS ext_glClearNamedBufferDataEXT( void *args )
 {
     struct glClearNamedBufferDataEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearNamedBufferDataEXT( params->buffer, params->internalformat, params->format, params->type, params->data );
+    funcs->p_glClearNamedBufferDataEXT( params->buffer, params->internalformat, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4056,7 +4056,7 @@ static NTSTATUS ext_glClearNamedBufferSubData( void *args )
 {
     struct glClearNamedBufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearNamedBufferSubData( params->buffer, params->internalformat, params->offset, params->size, params->format, params->type, params->data );
+    funcs->p_glClearNamedBufferSubData( params->buffer, params->internalformat, params->offset, params->size, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4064,7 +4064,7 @@ static NTSTATUS ext_glClearNamedBufferSubDataEXT( void *args )
 {
     struct glClearNamedBufferSubDataEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearNamedBufferSubDataEXT( params->buffer, params->internalformat, params->offset, params->size, params->format, params->type, params->data );
+    funcs->p_glClearNamedBufferSubDataEXT( params->buffer, params->internalformat, params->offset, params->size, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4072,7 +4072,7 @@ static NTSTATUS ext_glClearNamedFramebufferfi( void *args )
 {
     struct glClearNamedFramebufferfi_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearNamedFramebufferfi( params->framebuffer, params->buffer, params->drawbuffer, params->depth, params->stencil );
+    funcs->p_glClearNamedFramebufferfi( params->framebuffer, params->buffer, params->drawbuffer, params->depth, params->stencil );
     return STATUS_SUCCESS;
 }
 
@@ -4080,7 +4080,7 @@ static NTSTATUS ext_glClearNamedFramebufferfv( void *args )
 {
     struct glClearNamedFramebufferfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearNamedFramebufferfv( params->framebuffer, params->buffer, params->drawbuffer, params->value );
+    funcs->p_glClearNamedFramebufferfv( params->framebuffer, params->buffer, params->drawbuffer, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -4088,7 +4088,7 @@ static NTSTATUS ext_glClearNamedFramebufferiv( void *args )
 {
     struct glClearNamedFramebufferiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearNamedFramebufferiv( params->framebuffer, params->buffer, params->drawbuffer, params->value );
+    funcs->p_glClearNamedFramebufferiv( params->framebuffer, params->buffer, params->drawbuffer, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -4096,7 +4096,7 @@ static NTSTATUS ext_glClearNamedFramebufferuiv( void *args )
 {
     struct glClearNamedFramebufferuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearNamedFramebufferuiv( params->framebuffer, params->buffer, params->drawbuffer, params->value );
+    funcs->p_glClearNamedFramebufferuiv( params->framebuffer, params->buffer, params->drawbuffer, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -4104,7 +4104,7 @@ static NTSTATUS ext_glClearTexImage( void *args )
 {
     struct glClearTexImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearTexImage( params->texture, params->level, params->format, params->type, params->data );
+    funcs->p_glClearTexImage( params->texture, params->level, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4112,7 +4112,7 @@ static NTSTATUS ext_glClearTexSubImage( void *args )
 {
     struct glClearTexSubImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClearTexSubImage( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->data );
+    funcs->p_glClearTexSubImage( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4120,7 +4120,7 @@ static NTSTATUS ext_glClientActiveTexture( void *args )
 {
     struct glClientActiveTexture_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClientActiveTexture( params->texture );
+    funcs->p_glClientActiveTexture( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -4128,7 +4128,7 @@ static NTSTATUS ext_glClientActiveTextureARB( void *args )
 {
     struct glClientActiveTextureARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClientActiveTextureARB( params->texture );
+    funcs->p_glClientActiveTextureARB( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -4136,7 +4136,7 @@ static NTSTATUS ext_glClientActiveVertexStreamATI( void *args )
 {
     struct glClientActiveVertexStreamATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClientActiveVertexStreamATI( params->stream );
+    funcs->p_glClientActiveVertexStreamATI( params->stream );
     return STATUS_SUCCESS;
 }
 
@@ -4144,7 +4144,7 @@ static NTSTATUS ext_glClientAttribDefaultEXT( void *args )
 {
     struct glClientAttribDefaultEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClientAttribDefaultEXT( params->mask );
+    funcs->p_glClientAttribDefaultEXT( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -4152,7 +4152,7 @@ static NTSTATUS ext_glClientWaitSemaphoreui64NVX( void *args )
 {
     struct glClientWaitSemaphoreui64NVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClientWaitSemaphoreui64NVX( params->fenceObjectCount, params->semaphoreArray, params->fenceValueArray );
+    funcs->p_glClientWaitSemaphoreui64NVX( params->fenceObjectCount, params->semaphoreArray, params->fenceValueArray );
     return STATUS_SUCCESS;
 }
 
@@ -4160,7 +4160,7 @@ NTSTATUS ext_glClientWaitSync( void *args )
 {
     struct glClientWaitSync_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glClientWaitSync( params->sync, params->flags, params->timeout );
+    params->ret = funcs->p_glClientWaitSync( params->sync, params->flags, params->timeout );
     return STATUS_SUCCESS;
 }
 
@@ -4168,7 +4168,7 @@ static NTSTATUS ext_glClipControl( void *args )
 {
     struct glClipControl_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClipControl( params->origin, params->depth );
+    funcs->p_glClipControl( params->origin, params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -4176,7 +4176,7 @@ static NTSTATUS ext_glClipPlanefOES( void *args )
 {
     struct glClipPlanefOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClipPlanefOES( params->plane, params->equation );
+    funcs->p_glClipPlanefOES( params->plane, params->equation );
     return STATUS_SUCCESS;
 }
 
@@ -4184,7 +4184,7 @@ static NTSTATUS ext_glClipPlanexOES( void *args )
 {
     struct glClipPlanexOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glClipPlanexOES( params->plane, params->equation );
+    funcs->p_glClipPlanexOES( params->plane, params->equation );
     return STATUS_SUCCESS;
 }
 
@@ -4192,7 +4192,7 @@ static NTSTATUS ext_glColor3fVertex3fSUN( void *args )
 {
     struct glColor3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor3fVertex3fSUN( params->r, params->g, params->b, params->x, params->y, params->z );
+    funcs->p_glColor3fVertex3fSUN( params->r, params->g, params->b, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -4200,7 +4200,7 @@ static NTSTATUS ext_glColor3fVertex3fvSUN( void *args )
 {
     struct glColor3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor3fVertex3fvSUN( params->c, params->v );
+    funcs->p_glColor3fVertex3fvSUN( params->c, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -4208,7 +4208,7 @@ static NTSTATUS ext_glColor3hNV( void *args )
 {
     struct glColor3hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor3hNV( params->red, params->green, params->blue );
+    funcs->p_glColor3hNV( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -4216,7 +4216,7 @@ static NTSTATUS ext_glColor3hvNV( void *args )
 {
     struct glColor3hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor3hvNV( params->v );
+    funcs->p_glColor3hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -4224,7 +4224,7 @@ static NTSTATUS ext_glColor3xOES( void *args )
 {
     struct glColor3xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor3xOES( params->red, params->green, params->blue );
+    funcs->p_glColor3xOES( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -4232,7 +4232,7 @@ static NTSTATUS ext_glColor3xvOES( void *args )
 {
     struct glColor3xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor3xvOES( params->components );
+    funcs->p_glColor3xvOES( params->components );
     return STATUS_SUCCESS;
 }
 
@@ -4240,7 +4240,7 @@ static NTSTATUS ext_glColor4fNormal3fVertex3fSUN( void *args )
 {
     struct glColor4fNormal3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4fNormal3fVertex3fSUN( params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z );
+    funcs->p_glColor4fNormal3fVertex3fSUN( params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -4248,7 +4248,7 @@ static NTSTATUS ext_glColor4fNormal3fVertex3fvSUN( void *args )
 {
     struct glColor4fNormal3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4fNormal3fVertex3fvSUN( params->c, params->n, params->v );
+    funcs->p_glColor4fNormal3fVertex3fvSUN( params->c, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -4256,7 +4256,7 @@ static NTSTATUS ext_glColor4hNV( void *args )
 {
     struct glColor4hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4hNV( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4hNV( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -4264,7 +4264,7 @@ static NTSTATUS ext_glColor4hvNV( void *args )
 {
     struct glColor4hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4hvNV( params->v );
+    funcs->p_glColor4hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -4272,7 +4272,7 @@ static NTSTATUS ext_glColor4ubVertex2fSUN( void *args )
 {
     struct glColor4ubVertex2fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4ubVertex2fSUN( params->r, params->g, params->b, params->a, params->x, params->y );
+    funcs->p_glColor4ubVertex2fSUN( params->r, params->g, params->b, params->a, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -4280,7 +4280,7 @@ static NTSTATUS ext_glColor4ubVertex2fvSUN( void *args )
 {
     struct glColor4ubVertex2fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4ubVertex2fvSUN( params->c, params->v );
+    funcs->p_glColor4ubVertex2fvSUN( params->c, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -4288,7 +4288,7 @@ static NTSTATUS ext_glColor4ubVertex3fSUN( void *args )
 {
     struct glColor4ubVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4ubVertex3fSUN( params->r, params->g, params->b, params->a, params->x, params->y, params->z );
+    funcs->p_glColor4ubVertex3fSUN( params->r, params->g, params->b, params->a, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -4296,7 +4296,7 @@ static NTSTATUS ext_glColor4ubVertex3fvSUN( void *args )
 {
     struct glColor4ubVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4ubVertex3fvSUN( params->c, params->v );
+    funcs->p_glColor4ubVertex3fvSUN( params->c, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -4304,7 +4304,7 @@ static NTSTATUS ext_glColor4xOES( void *args )
 {
     struct glColor4xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4xOES( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glColor4xOES( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -4312,7 +4312,7 @@ static NTSTATUS ext_glColor4xvOES( void *args )
 {
     struct glColor4xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColor4xvOES( params->components );
+    funcs->p_glColor4xvOES( params->components );
     return STATUS_SUCCESS;
 }
 
@@ -4320,7 +4320,7 @@ static NTSTATUS ext_glColorFormatNV( void *args )
 {
     struct glColorFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorFormatNV( params->size, params->type, params->stride );
+    funcs->p_glColorFormatNV( params->size, params->type, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -4328,7 +4328,7 @@ static NTSTATUS ext_glColorFragmentOp1ATI( void *args )
 {
     struct glColorFragmentOp1ATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorFragmentOp1ATI( params->op, params->dst, params->dstMask, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod );
+    funcs->p_glColorFragmentOp1ATI( params->op, params->dst, params->dstMask, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod );
     return STATUS_SUCCESS;
 }
 
@@ -4336,7 +4336,7 @@ static NTSTATUS ext_glColorFragmentOp2ATI( void *args )
 {
     struct glColorFragmentOp2ATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorFragmentOp2ATI( params->op, params->dst, params->dstMask, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod, params->arg2, params->arg2Rep, params->arg2Mod );
+    funcs->p_glColorFragmentOp2ATI( params->op, params->dst, params->dstMask, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod, params->arg2, params->arg2Rep, params->arg2Mod );
     return STATUS_SUCCESS;
 }
 
@@ -4344,7 +4344,7 @@ static NTSTATUS ext_glColorFragmentOp3ATI( void *args )
 {
     struct glColorFragmentOp3ATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorFragmentOp3ATI( params->op, params->dst, params->dstMask, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod, params->arg2, params->arg2Rep, params->arg2Mod, params->arg3, params->arg3Rep, params->arg3Mod );
+    funcs->p_glColorFragmentOp3ATI( params->op, params->dst, params->dstMask, params->dstMod, params->arg1, params->arg1Rep, params->arg1Mod, params->arg2, params->arg2Rep, params->arg2Mod, params->arg3, params->arg3Rep, params->arg3Mod );
     return STATUS_SUCCESS;
 }
 
@@ -4352,7 +4352,7 @@ static NTSTATUS ext_glColorMaskIndexedEXT( void *args )
 {
     struct glColorMaskIndexedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorMaskIndexedEXT( params->index, params->r, params->g, params->b, params->a );
+    funcs->p_glColorMaskIndexedEXT( params->index, params->r, params->g, params->b, params->a );
     return STATUS_SUCCESS;
 }
 
@@ -4360,7 +4360,7 @@ static NTSTATUS ext_glColorMaski( void *args )
 {
     struct glColorMaski_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorMaski( params->index, params->r, params->g, params->b, params->a );
+    funcs->p_glColorMaski( params->index, params->r, params->g, params->b, params->a );
     return STATUS_SUCCESS;
 }
 
@@ -4368,7 +4368,7 @@ static NTSTATUS ext_glColorP3ui( void *args )
 {
     struct glColorP3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorP3ui( params->type, params->color );
+    funcs->p_glColorP3ui( params->type, params->color );
     return STATUS_SUCCESS;
 }
 
@@ -4376,7 +4376,7 @@ static NTSTATUS ext_glColorP3uiv( void *args )
 {
     struct glColorP3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorP3uiv( params->type, params->color );
+    funcs->p_glColorP3uiv( params->type, params->color );
     return STATUS_SUCCESS;
 }
 
@@ -4384,7 +4384,7 @@ static NTSTATUS ext_glColorP4ui( void *args )
 {
     struct glColorP4ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorP4ui( params->type, params->color );
+    funcs->p_glColorP4ui( params->type, params->color );
     return STATUS_SUCCESS;
 }
 
@@ -4392,7 +4392,7 @@ static NTSTATUS ext_glColorP4uiv( void *args )
 {
     struct glColorP4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorP4uiv( params->type, params->color );
+    funcs->p_glColorP4uiv( params->type, params->color );
     return STATUS_SUCCESS;
 }
 
@@ -4400,7 +4400,7 @@ static NTSTATUS ext_glColorPointerEXT( void *args )
 {
     struct glColorPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorPointerEXT( params->size, params->type, params->stride, params->count, params->pointer );
+    funcs->p_glColorPointerEXT( params->size, params->type, params->stride, params->count, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -4408,7 +4408,7 @@ static NTSTATUS ext_glColorPointerListIBM( void *args )
 {
     struct glColorPointerListIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorPointerListIBM( params->size, params->type, params->stride, params->pointer, params->ptrstride );
+    funcs->p_glColorPointerListIBM( params->size, params->type, params->stride, params->pointer, params->ptrstride );
     return STATUS_SUCCESS;
 }
 
@@ -4416,7 +4416,7 @@ static NTSTATUS ext_glColorPointervINTEL( void *args )
 {
     struct glColorPointervINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorPointervINTEL( params->size, params->type, params->pointer );
+    funcs->p_glColorPointervINTEL( params->size, params->type, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -4424,7 +4424,7 @@ static NTSTATUS ext_glColorSubTable( void *args )
 {
     struct glColorSubTable_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorSubTable( params->target, params->start, params->count, params->format, params->type, params->data );
+    funcs->p_glColorSubTable( params->target, params->start, params->count, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4432,7 +4432,7 @@ static NTSTATUS ext_glColorSubTableEXT( void *args )
 {
     struct glColorSubTableEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorSubTableEXT( params->target, params->start, params->count, params->format, params->type, params->data );
+    funcs->p_glColorSubTableEXT( params->target, params->start, params->count, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4440,7 +4440,7 @@ static NTSTATUS ext_glColorTable( void *args )
 {
     struct glColorTable_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorTable( params->target, params->internalformat, params->width, params->format, params->type, params->table );
+    funcs->p_glColorTable( params->target, params->internalformat, params->width, params->format, params->type, params->table );
     return STATUS_SUCCESS;
 }
 
@@ -4448,7 +4448,7 @@ static NTSTATUS ext_glColorTableEXT( void *args )
 {
     struct glColorTableEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorTableEXT( params->target, params->internalFormat, params->width, params->format, params->type, params->table );
+    funcs->p_glColorTableEXT( params->target, params->internalFormat, params->width, params->format, params->type, params->table );
     return STATUS_SUCCESS;
 }
 
@@ -4456,7 +4456,7 @@ static NTSTATUS ext_glColorTableParameterfv( void *args )
 {
     struct glColorTableParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorTableParameterfv( params->target, params->pname, params->params );
+    funcs->p_glColorTableParameterfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4464,7 +4464,7 @@ static NTSTATUS ext_glColorTableParameterfvSGI( void *args )
 {
     struct glColorTableParameterfvSGI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorTableParameterfvSGI( params->target, params->pname, params->params );
+    funcs->p_glColorTableParameterfvSGI( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4472,7 +4472,7 @@ static NTSTATUS ext_glColorTableParameteriv( void *args )
 {
     struct glColorTableParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorTableParameteriv( params->target, params->pname, params->params );
+    funcs->p_glColorTableParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4480,7 +4480,7 @@ static NTSTATUS ext_glColorTableParameterivSGI( void *args )
 {
     struct glColorTableParameterivSGI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorTableParameterivSGI( params->target, params->pname, params->params );
+    funcs->p_glColorTableParameterivSGI( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4488,7 +4488,7 @@ static NTSTATUS ext_glColorTableSGI( void *args )
 {
     struct glColorTableSGI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glColorTableSGI( params->target, params->internalformat, params->width, params->format, params->type, params->table );
+    funcs->p_glColorTableSGI( params->target, params->internalformat, params->width, params->format, params->type, params->table );
     return STATUS_SUCCESS;
 }
 
@@ -4496,7 +4496,7 @@ static NTSTATUS ext_glCombinerInputNV( void *args )
 {
     struct glCombinerInputNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCombinerInputNV( params->stage, params->portion, params->variable, params->input, params->mapping, params->componentUsage );
+    funcs->p_glCombinerInputNV( params->stage, params->portion, params->variable, params->input, params->mapping, params->componentUsage );
     return STATUS_SUCCESS;
 }
 
@@ -4504,7 +4504,7 @@ static NTSTATUS ext_glCombinerOutputNV( void *args )
 {
     struct glCombinerOutputNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCombinerOutputNV( params->stage, params->portion, params->abOutput, params->cdOutput, params->sumOutput, params->scale, params->bias, params->abDotProduct, params->cdDotProduct, params->muxSum );
+    funcs->p_glCombinerOutputNV( params->stage, params->portion, params->abOutput, params->cdOutput, params->sumOutput, params->scale, params->bias, params->abDotProduct, params->cdDotProduct, params->muxSum );
     return STATUS_SUCCESS;
 }
 
@@ -4512,7 +4512,7 @@ static NTSTATUS ext_glCombinerParameterfNV( void *args )
 {
     struct glCombinerParameterfNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCombinerParameterfNV( params->pname, params->param );
+    funcs->p_glCombinerParameterfNV( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -4520,7 +4520,7 @@ static NTSTATUS ext_glCombinerParameterfvNV( void *args )
 {
     struct glCombinerParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCombinerParameterfvNV( params->pname, params->params );
+    funcs->p_glCombinerParameterfvNV( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4528,7 +4528,7 @@ static NTSTATUS ext_glCombinerParameteriNV( void *args )
 {
     struct glCombinerParameteriNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCombinerParameteriNV( params->pname, params->param );
+    funcs->p_glCombinerParameteriNV( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -4536,7 +4536,7 @@ static NTSTATUS ext_glCombinerParameterivNV( void *args )
 {
     struct glCombinerParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCombinerParameterivNV( params->pname, params->params );
+    funcs->p_glCombinerParameterivNV( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4544,7 +4544,7 @@ static NTSTATUS ext_glCombinerStageParameterfvNV( void *args )
 {
     struct glCombinerStageParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCombinerStageParameterfvNV( params->stage, params->pname, params->params );
+    funcs->p_glCombinerStageParameterfvNV( params->stage, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4552,7 +4552,7 @@ static NTSTATUS ext_glCommandListSegmentsNV( void *args )
 {
     struct glCommandListSegmentsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCommandListSegmentsNV( params->list, params->segments );
+    funcs->p_glCommandListSegmentsNV( params->list, params->segments );
     return STATUS_SUCCESS;
 }
 
@@ -4560,7 +4560,7 @@ static NTSTATUS ext_glCompileCommandListNV( void *args )
 {
     struct glCompileCommandListNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompileCommandListNV( params->list );
+    funcs->p_glCompileCommandListNV( params->list );
     return STATUS_SUCCESS;
 }
 
@@ -4568,7 +4568,7 @@ static NTSTATUS ext_glCompileShader( void *args )
 {
     struct glCompileShader_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompileShader( params->shader );
+    funcs->p_glCompileShader( params->shader );
     return STATUS_SUCCESS;
 }
 
@@ -4576,7 +4576,7 @@ static NTSTATUS ext_glCompileShaderARB( void *args )
 {
     struct glCompileShaderARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompileShaderARB( params->shaderObj );
+    funcs->p_glCompileShaderARB( params->shaderObj );
     return STATUS_SUCCESS;
 }
 
@@ -4584,7 +4584,7 @@ static NTSTATUS ext_glCompileShaderIncludeARB( void *args )
 {
     struct glCompileShaderIncludeARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompileShaderIncludeARB( params->shader, params->count, params->path, params->length );
+    funcs->p_glCompileShaderIncludeARB( params->shader, params->count, params->path, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -4592,7 +4592,7 @@ static NTSTATUS ext_glCompressedMultiTexImage1DEXT( void *args )
 {
     struct glCompressedMultiTexImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedMultiTexImage1DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->border, params->imageSize, params->bits );
+    funcs->p_glCompressedMultiTexImage1DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->border, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4600,7 +4600,7 @@ static NTSTATUS ext_glCompressedMultiTexImage2DEXT( void *args )
 {
     struct glCompressedMultiTexImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedMultiTexImage2DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->height, params->border, params->imageSize, params->bits );
+    funcs->p_glCompressedMultiTexImage2DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->height, params->border, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4608,7 +4608,7 @@ static NTSTATUS ext_glCompressedMultiTexImage3DEXT( void *args )
 {
     struct glCompressedMultiTexImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedMultiTexImage3DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->imageSize, params->bits );
+    funcs->p_glCompressedMultiTexImage3DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4616,7 +4616,7 @@ static NTSTATUS ext_glCompressedMultiTexSubImage1DEXT( void *args )
 {
     struct glCompressedMultiTexSubImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedMultiTexSubImage1DEXT( params->texunit, params->target, params->level, params->xoffset, params->width, params->format, params->imageSize, params->bits );
+    funcs->p_glCompressedMultiTexSubImage1DEXT( params->texunit, params->target, params->level, params->xoffset, params->width, params->format, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4624,7 +4624,7 @@ static NTSTATUS ext_glCompressedMultiTexSubImage2DEXT( void *args )
 {
     struct glCompressedMultiTexSubImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedMultiTexSubImage2DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->bits );
+    funcs->p_glCompressedMultiTexSubImage2DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4632,7 +4632,7 @@ static NTSTATUS ext_glCompressedMultiTexSubImage3DEXT( void *args )
 {
     struct glCompressedMultiTexSubImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedMultiTexSubImage3DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->bits );
+    funcs->p_glCompressedMultiTexSubImage3DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4640,7 +4640,7 @@ static NTSTATUS ext_glCompressedTexImage1D( void *args )
 {
     struct glCompressedTexImage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexImage1D( params->target, params->level, params->internalformat, params->width, params->border, params->imageSize, params->data );
+    funcs->p_glCompressedTexImage1D( params->target, params->level, params->internalformat, params->width, params->border, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4648,7 +4648,7 @@ static NTSTATUS ext_glCompressedTexImage1DARB( void *args )
 {
     struct glCompressedTexImage1DARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexImage1DARB( params->target, params->level, params->internalformat, params->width, params->border, params->imageSize, params->data );
+    funcs->p_glCompressedTexImage1DARB( params->target, params->level, params->internalformat, params->width, params->border, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4656,7 +4656,7 @@ static NTSTATUS ext_glCompressedTexImage2D( void *args )
 {
     struct glCompressedTexImage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexImage2D( params->target, params->level, params->internalformat, params->width, params->height, params->border, params->imageSize, params->data );
+    funcs->p_glCompressedTexImage2D( params->target, params->level, params->internalformat, params->width, params->height, params->border, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4664,7 +4664,7 @@ static NTSTATUS ext_glCompressedTexImage2DARB( void *args )
 {
     struct glCompressedTexImage2DARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexImage2DARB( params->target, params->level, params->internalformat, params->width, params->height, params->border, params->imageSize, params->data );
+    funcs->p_glCompressedTexImage2DARB( params->target, params->level, params->internalformat, params->width, params->height, params->border, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4672,7 +4672,7 @@ static NTSTATUS ext_glCompressedTexImage3D( void *args )
 {
     struct glCompressedTexImage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexImage3D( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->imageSize, params->data );
+    funcs->p_glCompressedTexImage3D( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4680,7 +4680,7 @@ static NTSTATUS ext_glCompressedTexImage3DARB( void *args )
 {
     struct glCompressedTexImage3DARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexImage3DARB( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->imageSize, params->data );
+    funcs->p_glCompressedTexImage3DARB( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4688,7 +4688,7 @@ static NTSTATUS ext_glCompressedTexSubImage1D( void *args )
 {
     struct glCompressedTexSubImage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexSubImage1D( params->target, params->level, params->xoffset, params->width, params->format, params->imageSize, params->data );
+    funcs->p_glCompressedTexSubImage1D( params->target, params->level, params->xoffset, params->width, params->format, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4696,7 +4696,7 @@ static NTSTATUS ext_glCompressedTexSubImage1DARB( void *args )
 {
     struct glCompressedTexSubImage1DARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexSubImage1DARB( params->target, params->level, params->xoffset, params->width, params->format, params->imageSize, params->data );
+    funcs->p_glCompressedTexSubImage1DARB( params->target, params->level, params->xoffset, params->width, params->format, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4704,7 +4704,7 @@ static NTSTATUS ext_glCompressedTexSubImage2D( void *args )
 {
     struct glCompressedTexSubImage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexSubImage2D( params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->data );
+    funcs->p_glCompressedTexSubImage2D( params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4712,7 +4712,7 @@ static NTSTATUS ext_glCompressedTexSubImage2DARB( void *args )
 {
     struct glCompressedTexSubImage2DARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexSubImage2DARB( params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->data );
+    funcs->p_glCompressedTexSubImage2DARB( params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4720,7 +4720,7 @@ static NTSTATUS ext_glCompressedTexSubImage3D( void *args )
 {
     struct glCompressedTexSubImage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexSubImage3D( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->data );
+    funcs->p_glCompressedTexSubImage3D( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4728,7 +4728,7 @@ static NTSTATUS ext_glCompressedTexSubImage3DARB( void *args )
 {
     struct glCompressedTexSubImage3DARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTexSubImage3DARB( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->data );
+    funcs->p_glCompressedTexSubImage3DARB( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4736,7 +4736,7 @@ static NTSTATUS ext_glCompressedTextureImage1DEXT( void *args )
 {
     struct glCompressedTextureImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTextureImage1DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->border, params->imageSize, params->bits );
+    funcs->p_glCompressedTextureImage1DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->border, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4744,7 +4744,7 @@ static NTSTATUS ext_glCompressedTextureImage2DEXT( void *args )
 {
     struct glCompressedTextureImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTextureImage2DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->height, params->border, params->imageSize, params->bits );
+    funcs->p_glCompressedTextureImage2DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->height, params->border, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4752,7 +4752,7 @@ static NTSTATUS ext_glCompressedTextureImage3DEXT( void *args )
 {
     struct glCompressedTextureImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTextureImage3DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->imageSize, params->bits );
+    funcs->p_glCompressedTextureImage3DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4760,7 +4760,7 @@ static NTSTATUS ext_glCompressedTextureSubImage1D( void *args )
 {
     struct glCompressedTextureSubImage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTextureSubImage1D( params->texture, params->level, params->xoffset, params->width, params->format, params->imageSize, params->data );
+    funcs->p_glCompressedTextureSubImage1D( params->texture, params->level, params->xoffset, params->width, params->format, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4768,7 +4768,7 @@ static NTSTATUS ext_glCompressedTextureSubImage1DEXT( void *args )
 {
     struct glCompressedTextureSubImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTextureSubImage1DEXT( params->texture, params->target, params->level, params->xoffset, params->width, params->format, params->imageSize, params->bits );
+    funcs->p_glCompressedTextureSubImage1DEXT( params->texture, params->target, params->level, params->xoffset, params->width, params->format, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4776,7 +4776,7 @@ static NTSTATUS ext_glCompressedTextureSubImage2D( void *args )
 {
     struct glCompressedTextureSubImage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTextureSubImage2D( params->texture, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->data );
+    funcs->p_glCompressedTextureSubImage2D( params->texture, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4784,7 +4784,7 @@ static NTSTATUS ext_glCompressedTextureSubImage2DEXT( void *args )
 {
     struct glCompressedTextureSubImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTextureSubImage2DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->bits );
+    funcs->p_glCompressedTextureSubImage2DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4792,7 +4792,7 @@ static NTSTATUS ext_glCompressedTextureSubImage3D( void *args )
 {
     struct glCompressedTextureSubImage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTextureSubImage3D( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->data );
+    funcs->p_glCompressedTextureSubImage3D( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -4800,7 +4800,7 @@ static NTSTATUS ext_glCompressedTextureSubImage3DEXT( void *args )
 {
     struct glCompressedTextureSubImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCompressedTextureSubImage3DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->bits );
+    funcs->p_glCompressedTextureSubImage3DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->imageSize, params->bits );
     return STATUS_SUCCESS;
 }
 
@@ -4808,7 +4808,7 @@ static NTSTATUS ext_glConservativeRasterParameterfNV( void *args )
 {
     struct glConservativeRasterParameterfNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConservativeRasterParameterfNV( params->pname, params->value );
+    funcs->p_glConservativeRasterParameterfNV( params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -4816,7 +4816,7 @@ static NTSTATUS ext_glConservativeRasterParameteriNV( void *args )
 {
     struct glConservativeRasterParameteriNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConservativeRasterParameteriNV( params->pname, params->param );
+    funcs->p_glConservativeRasterParameteriNV( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -4824,7 +4824,7 @@ static NTSTATUS ext_glConvolutionFilter1D( void *args )
 {
     struct glConvolutionFilter1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionFilter1D( params->target, params->internalformat, params->width, params->format, params->type, params->image );
+    funcs->p_glConvolutionFilter1D( params->target, params->internalformat, params->width, params->format, params->type, params->image );
     return STATUS_SUCCESS;
 }
 
@@ -4832,7 +4832,7 @@ static NTSTATUS ext_glConvolutionFilter1DEXT( void *args )
 {
     struct glConvolutionFilter1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionFilter1DEXT( params->target, params->internalformat, params->width, params->format, params->type, params->image );
+    funcs->p_glConvolutionFilter1DEXT( params->target, params->internalformat, params->width, params->format, params->type, params->image );
     return STATUS_SUCCESS;
 }
 
@@ -4840,7 +4840,7 @@ static NTSTATUS ext_glConvolutionFilter2D( void *args )
 {
     struct glConvolutionFilter2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionFilter2D( params->target, params->internalformat, params->width, params->height, params->format, params->type, params->image );
+    funcs->p_glConvolutionFilter2D( params->target, params->internalformat, params->width, params->height, params->format, params->type, params->image );
     return STATUS_SUCCESS;
 }
 
@@ -4848,7 +4848,7 @@ static NTSTATUS ext_glConvolutionFilter2DEXT( void *args )
 {
     struct glConvolutionFilter2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionFilter2DEXT( params->target, params->internalformat, params->width, params->height, params->format, params->type, params->image );
+    funcs->p_glConvolutionFilter2DEXT( params->target, params->internalformat, params->width, params->height, params->format, params->type, params->image );
     return STATUS_SUCCESS;
 }
 
@@ -4856,7 +4856,7 @@ static NTSTATUS ext_glConvolutionParameterf( void *args )
 {
     struct glConvolutionParameterf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameterf( params->target, params->pname, params->params );
+    funcs->p_glConvolutionParameterf( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4864,7 +4864,7 @@ static NTSTATUS ext_glConvolutionParameterfEXT( void *args )
 {
     struct glConvolutionParameterfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameterfEXT( params->target, params->pname, params->params );
+    funcs->p_glConvolutionParameterfEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4872,7 +4872,7 @@ static NTSTATUS ext_glConvolutionParameterfv( void *args )
 {
     struct glConvolutionParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameterfv( params->target, params->pname, params->params );
+    funcs->p_glConvolutionParameterfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4880,7 +4880,7 @@ static NTSTATUS ext_glConvolutionParameterfvEXT( void *args )
 {
     struct glConvolutionParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameterfvEXT( params->target, params->pname, params->params );
+    funcs->p_glConvolutionParameterfvEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4888,7 +4888,7 @@ static NTSTATUS ext_glConvolutionParameteri( void *args )
 {
     struct glConvolutionParameteri_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameteri( params->target, params->pname, params->params );
+    funcs->p_glConvolutionParameteri( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4896,7 +4896,7 @@ static NTSTATUS ext_glConvolutionParameteriEXT( void *args )
 {
     struct glConvolutionParameteriEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameteriEXT( params->target, params->pname, params->params );
+    funcs->p_glConvolutionParameteriEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4904,7 +4904,7 @@ static NTSTATUS ext_glConvolutionParameteriv( void *args )
 {
     struct glConvolutionParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameteriv( params->target, params->pname, params->params );
+    funcs->p_glConvolutionParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4912,7 +4912,7 @@ static NTSTATUS ext_glConvolutionParameterivEXT( void *args )
 {
     struct glConvolutionParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameterivEXT( params->target, params->pname, params->params );
+    funcs->p_glConvolutionParameterivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4920,7 +4920,7 @@ static NTSTATUS ext_glConvolutionParameterxOES( void *args )
 {
     struct glConvolutionParameterxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameterxOES( params->target, params->pname, params->param );
+    funcs->p_glConvolutionParameterxOES( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -4928,7 +4928,7 @@ static NTSTATUS ext_glConvolutionParameterxvOES( void *args )
 {
     struct glConvolutionParameterxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glConvolutionParameterxvOES( params->target, params->pname, params->params );
+    funcs->p_glConvolutionParameterxvOES( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -4936,7 +4936,7 @@ static NTSTATUS ext_glCopyBufferSubData( void *args )
 {
     struct glCopyBufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyBufferSubData( params->readTarget, params->writeTarget, params->readOffset, params->writeOffset, params->size );
+    funcs->p_glCopyBufferSubData( params->readTarget, params->writeTarget, params->readOffset, params->writeOffset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -4944,7 +4944,7 @@ static NTSTATUS ext_glCopyColorSubTable( void *args )
 {
     struct glCopyColorSubTable_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyColorSubTable( params->target, params->start, params->x, params->y, params->width );
+    funcs->p_glCopyColorSubTable( params->target, params->start, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -4952,7 +4952,7 @@ static NTSTATUS ext_glCopyColorSubTableEXT( void *args )
 {
     struct glCopyColorSubTableEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyColorSubTableEXT( params->target, params->start, params->x, params->y, params->width );
+    funcs->p_glCopyColorSubTableEXT( params->target, params->start, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -4960,7 +4960,7 @@ static NTSTATUS ext_glCopyColorTable( void *args )
 {
     struct glCopyColorTable_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyColorTable( params->target, params->internalformat, params->x, params->y, params->width );
+    funcs->p_glCopyColorTable( params->target, params->internalformat, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -4968,7 +4968,7 @@ static NTSTATUS ext_glCopyColorTableSGI( void *args )
 {
     struct glCopyColorTableSGI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyColorTableSGI( params->target, params->internalformat, params->x, params->y, params->width );
+    funcs->p_glCopyColorTableSGI( params->target, params->internalformat, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -4976,7 +4976,7 @@ static NTSTATUS ext_glCopyConvolutionFilter1D( void *args )
 {
     struct glCopyConvolutionFilter1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyConvolutionFilter1D( params->target, params->internalformat, params->x, params->y, params->width );
+    funcs->p_glCopyConvolutionFilter1D( params->target, params->internalformat, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -4984,7 +4984,7 @@ static NTSTATUS ext_glCopyConvolutionFilter1DEXT( void *args )
 {
     struct glCopyConvolutionFilter1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyConvolutionFilter1DEXT( params->target, params->internalformat, params->x, params->y, params->width );
+    funcs->p_glCopyConvolutionFilter1DEXT( params->target, params->internalformat, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -4992,7 +4992,7 @@ static NTSTATUS ext_glCopyConvolutionFilter2D( void *args )
 {
     struct glCopyConvolutionFilter2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyConvolutionFilter2D( params->target, params->internalformat, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyConvolutionFilter2D( params->target, params->internalformat, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5000,7 +5000,7 @@ static NTSTATUS ext_glCopyConvolutionFilter2DEXT( void *args )
 {
     struct glCopyConvolutionFilter2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyConvolutionFilter2DEXT( params->target, params->internalformat, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyConvolutionFilter2DEXT( params->target, params->internalformat, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5008,7 +5008,7 @@ static NTSTATUS ext_glCopyImageSubData( void *args )
 {
     struct glCopyImageSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyImageSubData( params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srcY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->srcWidth, params->srcHeight, params->srcDepth );
+    funcs->p_glCopyImageSubData( params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srcY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->srcWidth, params->srcHeight, params->srcDepth );
     return STATUS_SUCCESS;
 }
 
@@ -5016,7 +5016,7 @@ static NTSTATUS ext_glCopyImageSubDataNV( void *args )
 {
     struct glCopyImageSubDataNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyImageSubDataNV( params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srcY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->width, params->height, params->depth );
+    funcs->p_glCopyImageSubDataNV( params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srcY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->width, params->height, params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -5024,7 +5024,7 @@ static NTSTATUS ext_glCopyMultiTexImage1DEXT( void *args )
 {
     struct glCopyMultiTexImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyMultiTexImage1DEXT( params->texunit, params->target, params->level, params->internalformat, params->x, params->y, params->width, params->border );
+    funcs->p_glCopyMultiTexImage1DEXT( params->texunit, params->target, params->level, params->internalformat, params->x, params->y, params->width, params->border );
     return STATUS_SUCCESS;
 }
 
@@ -5032,7 +5032,7 @@ static NTSTATUS ext_glCopyMultiTexImage2DEXT( void *args )
 {
     struct glCopyMultiTexImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyMultiTexImage2DEXT( params->texunit, params->target, params->level, params->internalformat, params->x, params->y, params->width, params->height, params->border );
+    funcs->p_glCopyMultiTexImage2DEXT( params->texunit, params->target, params->level, params->internalformat, params->x, params->y, params->width, params->height, params->border );
     return STATUS_SUCCESS;
 }
 
@@ -5040,7 +5040,7 @@ static NTSTATUS ext_glCopyMultiTexSubImage1DEXT( void *args )
 {
     struct glCopyMultiTexSubImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyMultiTexSubImage1DEXT( params->texunit, params->target, params->level, params->xoffset, params->x, params->y, params->width );
+    funcs->p_glCopyMultiTexSubImage1DEXT( params->texunit, params->target, params->level, params->xoffset, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -5048,7 +5048,7 @@ static NTSTATUS ext_glCopyMultiTexSubImage2DEXT( void *args )
 {
     struct glCopyMultiTexSubImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyMultiTexSubImage2DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyMultiTexSubImage2DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5056,7 +5056,7 @@ static NTSTATUS ext_glCopyMultiTexSubImage3DEXT( void *args )
 {
     struct glCopyMultiTexSubImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyMultiTexSubImage3DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyMultiTexSubImage3DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5064,7 +5064,7 @@ static NTSTATUS ext_glCopyNamedBufferSubData( void *args )
 {
     struct glCopyNamedBufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyNamedBufferSubData( params->readBuffer, params->writeBuffer, params->readOffset, params->writeOffset, params->size );
+    funcs->p_glCopyNamedBufferSubData( params->readBuffer, params->writeBuffer, params->readOffset, params->writeOffset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -5072,7 +5072,7 @@ static NTSTATUS ext_glCopyPathNV( void *args )
 {
     struct glCopyPathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyPathNV( params->resultPath, params->srcPath );
+    funcs->p_glCopyPathNV( params->resultPath, params->srcPath );
     return STATUS_SUCCESS;
 }
 
@@ -5080,7 +5080,7 @@ static NTSTATUS ext_glCopyTexImage1DEXT( void *args )
 {
     struct glCopyTexImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTexImage1DEXT( params->target, params->level, params->internalformat, params->x, params->y, params->width, params->border );
+    funcs->p_glCopyTexImage1DEXT( params->target, params->level, params->internalformat, params->x, params->y, params->width, params->border );
     return STATUS_SUCCESS;
 }
 
@@ -5088,7 +5088,7 @@ static NTSTATUS ext_glCopyTexImage2DEXT( void *args )
 {
     struct glCopyTexImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTexImage2DEXT( params->target, params->level, params->internalformat, params->x, params->y, params->width, params->height, params->border );
+    funcs->p_glCopyTexImage2DEXT( params->target, params->level, params->internalformat, params->x, params->y, params->width, params->height, params->border );
     return STATUS_SUCCESS;
 }
 
@@ -5096,7 +5096,7 @@ static NTSTATUS ext_glCopyTexSubImage1DEXT( void *args )
 {
     struct glCopyTexSubImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTexSubImage1DEXT( params->target, params->level, params->xoffset, params->x, params->y, params->width );
+    funcs->p_glCopyTexSubImage1DEXT( params->target, params->level, params->xoffset, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -5104,7 +5104,7 @@ static NTSTATUS ext_glCopyTexSubImage2DEXT( void *args )
 {
     struct glCopyTexSubImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTexSubImage2DEXT( params->target, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyTexSubImage2DEXT( params->target, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5112,7 +5112,7 @@ static NTSTATUS ext_glCopyTexSubImage3D( void *args )
 {
     struct glCopyTexSubImage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTexSubImage3D( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyTexSubImage3D( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5120,7 +5120,7 @@ static NTSTATUS ext_glCopyTexSubImage3DEXT( void *args )
 {
     struct glCopyTexSubImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTexSubImage3DEXT( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyTexSubImage3DEXT( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5128,7 +5128,7 @@ static NTSTATUS ext_glCopyTextureImage1DEXT( void *args )
 {
     struct glCopyTextureImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTextureImage1DEXT( params->texture, params->target, params->level, params->internalformat, params->x, params->y, params->width, params->border );
+    funcs->p_glCopyTextureImage1DEXT( params->texture, params->target, params->level, params->internalformat, params->x, params->y, params->width, params->border );
     return STATUS_SUCCESS;
 }
 
@@ -5136,7 +5136,7 @@ static NTSTATUS ext_glCopyTextureImage2DEXT( void *args )
 {
     struct glCopyTextureImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTextureImage2DEXT( params->texture, params->target, params->level, params->internalformat, params->x, params->y, params->width, params->height, params->border );
+    funcs->p_glCopyTextureImage2DEXT( params->texture, params->target, params->level, params->internalformat, params->x, params->y, params->width, params->height, params->border );
     return STATUS_SUCCESS;
 }
 
@@ -5144,7 +5144,7 @@ static NTSTATUS ext_glCopyTextureSubImage1D( void *args )
 {
     struct glCopyTextureSubImage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTextureSubImage1D( params->texture, params->level, params->xoffset, params->x, params->y, params->width );
+    funcs->p_glCopyTextureSubImage1D( params->texture, params->level, params->xoffset, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -5152,7 +5152,7 @@ static NTSTATUS ext_glCopyTextureSubImage1DEXT( void *args )
 {
     struct glCopyTextureSubImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTextureSubImage1DEXT( params->texture, params->target, params->level, params->xoffset, params->x, params->y, params->width );
+    funcs->p_glCopyTextureSubImage1DEXT( params->texture, params->target, params->level, params->xoffset, params->x, params->y, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -5160,7 +5160,7 @@ static NTSTATUS ext_glCopyTextureSubImage2D( void *args )
 {
     struct glCopyTextureSubImage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTextureSubImage2D( params->texture, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyTextureSubImage2D( params->texture, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5168,7 +5168,7 @@ static NTSTATUS ext_glCopyTextureSubImage2DEXT( void *args )
 {
     struct glCopyTextureSubImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTextureSubImage2DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyTextureSubImage2DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5176,7 +5176,7 @@ static NTSTATUS ext_glCopyTextureSubImage3D( void *args )
 {
     struct glCopyTextureSubImage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTextureSubImage3D( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyTextureSubImage3D( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5184,7 +5184,7 @@ static NTSTATUS ext_glCopyTextureSubImage3DEXT( void *args )
 {
     struct glCopyTextureSubImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCopyTextureSubImage3DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
+    funcs->p_glCopyTextureSubImage3DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -5192,7 +5192,7 @@ static NTSTATUS ext_glCoverFillPathInstancedNV( void *args )
 {
     struct glCoverFillPathInstancedNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCoverFillPathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->coverMode, params->transformType, params->transformValues );
+    funcs->p_glCoverFillPathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->coverMode, params->transformType, params->transformValues );
     return STATUS_SUCCESS;
 }
 
@@ -5200,7 +5200,7 @@ static NTSTATUS ext_glCoverFillPathNV( void *args )
 {
     struct glCoverFillPathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCoverFillPathNV( params->path, params->coverMode );
+    funcs->p_glCoverFillPathNV( params->path, params->coverMode );
     return STATUS_SUCCESS;
 }
 
@@ -5208,7 +5208,7 @@ static NTSTATUS ext_glCoverStrokePathInstancedNV( void *args )
 {
     struct glCoverStrokePathInstancedNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCoverStrokePathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->coverMode, params->transformType, params->transformValues );
+    funcs->p_glCoverStrokePathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->coverMode, params->transformType, params->transformValues );
     return STATUS_SUCCESS;
 }
 
@@ -5216,7 +5216,7 @@ static NTSTATUS ext_glCoverStrokePathNV( void *args )
 {
     struct glCoverStrokePathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCoverStrokePathNV( params->path, params->coverMode );
+    funcs->p_glCoverStrokePathNV( params->path, params->coverMode );
     return STATUS_SUCCESS;
 }
 
@@ -5224,7 +5224,7 @@ static NTSTATUS ext_glCoverageModulationNV( void *args )
 {
     struct glCoverageModulationNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCoverageModulationNV( params->components );
+    funcs->p_glCoverageModulationNV( params->components );
     return STATUS_SUCCESS;
 }
 
@@ -5232,7 +5232,7 @@ static NTSTATUS ext_glCoverageModulationTableNV( void *args )
 {
     struct glCoverageModulationTableNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCoverageModulationTableNV( params->n, params->v );
+    funcs->p_glCoverageModulationTableNV( params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -5240,7 +5240,7 @@ static NTSTATUS ext_glCreateBuffers( void *args )
 {
     struct glCreateBuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateBuffers( params->n, params->buffers );
+    funcs->p_glCreateBuffers( params->n, params->buffers );
     return STATUS_SUCCESS;
 }
 
@@ -5248,7 +5248,7 @@ static NTSTATUS ext_glCreateCommandListsNV( void *args )
 {
     struct glCreateCommandListsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateCommandListsNV( params->n, params->lists );
+    funcs->p_glCreateCommandListsNV( params->n, params->lists );
     return STATUS_SUCCESS;
 }
 
@@ -5256,7 +5256,7 @@ static NTSTATUS ext_glCreateFramebuffers( void *args )
 {
     struct glCreateFramebuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateFramebuffers( params->n, params->framebuffers );
+    funcs->p_glCreateFramebuffers( params->n, params->framebuffers );
     return STATUS_SUCCESS;
 }
 
@@ -5264,7 +5264,7 @@ static NTSTATUS ext_glCreateMemoryObjectsEXT( void *args )
 {
     struct glCreateMemoryObjectsEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateMemoryObjectsEXT( params->n, params->memoryObjects );
+    funcs->p_glCreateMemoryObjectsEXT( params->n, params->memoryObjects );
     return STATUS_SUCCESS;
 }
 
@@ -5272,7 +5272,7 @@ static NTSTATUS ext_glCreatePerfQueryINTEL( void *args )
 {
     struct glCreatePerfQueryINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreatePerfQueryINTEL( params->queryId, params->queryHandle );
+    funcs->p_glCreatePerfQueryINTEL( params->queryId, params->queryHandle );
     return STATUS_SUCCESS;
 }
 
@@ -5280,7 +5280,7 @@ static NTSTATUS ext_glCreateProgram( void *args )
 {
     struct glCreateProgram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCreateProgram();
+    params->ret = funcs->p_glCreateProgram();
     return STATUS_SUCCESS;
 }
 
@@ -5288,7 +5288,7 @@ static NTSTATUS ext_glCreateProgramObjectARB( void *args )
 {
     struct glCreateProgramObjectARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCreateProgramObjectARB();
+    params->ret = funcs->p_glCreateProgramObjectARB();
     return STATUS_SUCCESS;
 }
 
@@ -5296,7 +5296,7 @@ static NTSTATUS ext_glCreateProgramPipelines( void *args )
 {
     struct glCreateProgramPipelines_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateProgramPipelines( params->n, params->pipelines );
+    funcs->p_glCreateProgramPipelines( params->n, params->pipelines );
     return STATUS_SUCCESS;
 }
 
@@ -5304,7 +5304,7 @@ static NTSTATUS ext_glCreateProgressFenceNVX( void *args )
 {
     struct glCreateProgressFenceNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCreateProgressFenceNVX();
+    params->ret = funcs->p_glCreateProgressFenceNVX();
     return STATUS_SUCCESS;
 }
 
@@ -5312,7 +5312,7 @@ static NTSTATUS ext_glCreateQueries( void *args )
 {
     struct glCreateQueries_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateQueries( params->target, params->n, params->ids );
+    funcs->p_glCreateQueries( params->target, params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -5320,7 +5320,7 @@ static NTSTATUS ext_glCreateRenderbuffers( void *args )
 {
     struct glCreateRenderbuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateRenderbuffers( params->n, params->renderbuffers );
+    funcs->p_glCreateRenderbuffers( params->n, params->renderbuffers );
     return STATUS_SUCCESS;
 }
 
@@ -5328,7 +5328,7 @@ static NTSTATUS ext_glCreateSamplers( void *args )
 {
     struct glCreateSamplers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateSamplers( params->n, params->samplers );
+    funcs->p_glCreateSamplers( params->n, params->samplers );
     return STATUS_SUCCESS;
 }
 
@@ -5336,7 +5336,7 @@ static NTSTATUS ext_glCreateShader( void *args )
 {
     struct glCreateShader_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCreateShader( params->type );
+    params->ret = funcs->p_glCreateShader( params->type );
     return STATUS_SUCCESS;
 }
 
@@ -5344,7 +5344,7 @@ static NTSTATUS ext_glCreateShaderObjectARB( void *args )
 {
     struct glCreateShaderObjectARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCreateShaderObjectARB( params->shaderType );
+    params->ret = funcs->p_glCreateShaderObjectARB( params->shaderType );
     return STATUS_SUCCESS;
 }
 
@@ -5352,7 +5352,7 @@ static NTSTATUS ext_glCreateShaderProgramEXT( void *args )
 {
     struct glCreateShaderProgramEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCreateShaderProgramEXT( params->type, params->string );
+    params->ret = funcs->p_glCreateShaderProgramEXT( params->type, params->string );
     return STATUS_SUCCESS;
 }
 
@@ -5360,7 +5360,7 @@ static NTSTATUS ext_glCreateShaderProgramv( void *args )
 {
     struct glCreateShaderProgramv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCreateShaderProgramv( params->type, params->count, params->strings );
+    params->ret = funcs->p_glCreateShaderProgramv( params->type, params->count, params->strings );
     return STATUS_SUCCESS;
 }
 
@@ -5368,7 +5368,7 @@ static NTSTATUS ext_glCreateStatesNV( void *args )
 {
     struct glCreateStatesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateStatesNV( params->n, params->states );
+    funcs->p_glCreateStatesNV( params->n, params->states );
     return STATUS_SUCCESS;
 }
 
@@ -5376,7 +5376,7 @@ static NTSTATUS ext_glCreateSyncFromCLeventARB( void *args )
 {
     struct glCreateSyncFromCLeventARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glCreateSyncFromCLeventARB( params->context, params->event, params->flags );
+    params->ret = funcs->p_glCreateSyncFromCLeventARB( params->context, params->event, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -5384,7 +5384,7 @@ static NTSTATUS ext_glCreateTextures( void *args )
 {
     struct glCreateTextures_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateTextures( params->target, params->n, params->textures );
+    funcs->p_glCreateTextures( params->target, params->n, params->textures );
     return STATUS_SUCCESS;
 }
 
@@ -5392,7 +5392,7 @@ static NTSTATUS ext_glCreateTransformFeedbacks( void *args )
 {
     struct glCreateTransformFeedbacks_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateTransformFeedbacks( params->n, params->ids );
+    funcs->p_glCreateTransformFeedbacks( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -5400,7 +5400,7 @@ static NTSTATUS ext_glCreateVertexArrays( void *args )
 {
     struct glCreateVertexArrays_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCreateVertexArrays( params->n, params->arrays );
+    funcs->p_glCreateVertexArrays( params->n, params->arrays );
     return STATUS_SUCCESS;
 }
 
@@ -5408,7 +5408,7 @@ static NTSTATUS ext_glCullParameterdvEXT( void *args )
 {
     struct glCullParameterdvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCullParameterdvEXT( params->pname, params->params );
+    funcs->p_glCullParameterdvEXT( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -5416,7 +5416,7 @@ static NTSTATUS ext_glCullParameterfvEXT( void *args )
 {
     struct glCullParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCullParameterfvEXT( params->pname, params->params );
+    funcs->p_glCullParameterfvEXT( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -5424,7 +5424,7 @@ static NTSTATUS ext_glCurrentPaletteMatrixARB( void *args )
 {
     struct glCurrentPaletteMatrixARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glCurrentPaletteMatrixARB( params->index );
+    funcs->p_glCurrentPaletteMatrixARB( params->index );
     return STATUS_SUCCESS;
 }
 
@@ -5432,7 +5432,7 @@ static NTSTATUS ext_glDebugMessageControl( void *args )
 {
     struct glDebugMessageControl_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDebugMessageControl( params->source, params->type, params->severity, params->count, params->ids, params->enabled );
+    funcs->p_glDebugMessageControl( params->source, params->type, params->severity, params->count, params->ids, params->enabled );
     return STATUS_SUCCESS;
 }
 
@@ -5440,7 +5440,7 @@ static NTSTATUS ext_glDebugMessageControlARB( void *args )
 {
     struct glDebugMessageControlARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDebugMessageControlARB( params->source, params->type, params->severity, params->count, params->ids, params->enabled );
+    funcs->p_glDebugMessageControlARB( params->source, params->type, params->severity, params->count, params->ids, params->enabled );
     return STATUS_SUCCESS;
 }
 
@@ -5448,7 +5448,7 @@ static NTSTATUS ext_glDebugMessageEnableAMD( void *args )
 {
     struct glDebugMessageEnableAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDebugMessageEnableAMD( params->category, params->severity, params->count, params->ids, params->enabled );
+    funcs->p_glDebugMessageEnableAMD( params->category, params->severity, params->count, params->ids, params->enabled );
     return STATUS_SUCCESS;
 }
 
@@ -5456,7 +5456,7 @@ static NTSTATUS ext_glDebugMessageInsert( void *args )
 {
     struct glDebugMessageInsert_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDebugMessageInsert( params->source, params->type, params->id, params->severity, params->length, params->buf );
+    funcs->p_glDebugMessageInsert( params->source, params->type, params->id, params->severity, params->length, params->buf );
     return STATUS_SUCCESS;
 }
 
@@ -5464,7 +5464,7 @@ static NTSTATUS ext_glDebugMessageInsertAMD( void *args )
 {
     struct glDebugMessageInsertAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDebugMessageInsertAMD( params->category, params->severity, params->id, params->length, params->buf );
+    funcs->p_glDebugMessageInsertAMD( params->category, params->severity, params->id, params->length, params->buf );
     return STATUS_SUCCESS;
 }
 
@@ -5472,7 +5472,7 @@ static NTSTATUS ext_glDebugMessageInsertARB( void *args )
 {
     struct glDebugMessageInsertARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDebugMessageInsertARB( params->source, params->type, params->id, params->severity, params->length, params->buf );
+    funcs->p_glDebugMessageInsertARB( params->source, params->type, params->id, params->severity, params->length, params->buf );
     return STATUS_SUCCESS;
 }
 
@@ -5480,7 +5480,7 @@ static NTSTATUS ext_glDeformSGIX( void *args )
 {
     struct glDeformSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeformSGIX( params->mask );
+    funcs->p_glDeformSGIX( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -5488,7 +5488,7 @@ static NTSTATUS ext_glDeformationMap3dSGIX( void *args )
 {
     struct glDeformationMap3dSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeformationMap3dSGIX( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->w1, params->w2, params->wstride, params->worder, params->points );
+    funcs->p_glDeformationMap3dSGIX( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->w1, params->w2, params->wstride, params->worder, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -5496,7 +5496,7 @@ static NTSTATUS ext_glDeformationMap3fSGIX( void *args )
 {
     struct glDeformationMap3fSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeformationMap3fSGIX( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->w1, params->w2, params->wstride, params->worder, params->points );
+    funcs->p_glDeformationMap3fSGIX( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->w1, params->w2, params->wstride, params->worder, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -5504,7 +5504,7 @@ static NTSTATUS ext_glDeleteAsyncMarkersSGIX( void *args )
 {
     struct glDeleteAsyncMarkersSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteAsyncMarkersSGIX( params->marker, params->range );
+    funcs->p_glDeleteAsyncMarkersSGIX( params->marker, params->range );
     return STATUS_SUCCESS;
 }
 
@@ -5512,7 +5512,7 @@ static NTSTATUS ext_glDeleteBufferRegion( void *args )
 {
     struct glDeleteBufferRegion_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteBufferRegion( params->region );
+    funcs->p_glDeleteBufferRegion( params->region );
     return STATUS_SUCCESS;
 }
 
@@ -5520,7 +5520,7 @@ static NTSTATUS ext_glDeleteBuffers( void *args )
 {
     struct glDeleteBuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteBuffers( params->n, params->buffers );
+    funcs->p_glDeleteBuffers( params->n, params->buffers );
     return STATUS_SUCCESS;
 }
 
@@ -5528,7 +5528,7 @@ static NTSTATUS ext_glDeleteBuffersARB( void *args )
 {
     struct glDeleteBuffersARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteBuffersARB( params->n, params->buffers );
+    funcs->p_glDeleteBuffersARB( params->n, params->buffers );
     return STATUS_SUCCESS;
 }
 
@@ -5536,7 +5536,7 @@ static NTSTATUS ext_glDeleteCommandListsNV( void *args )
 {
     struct glDeleteCommandListsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteCommandListsNV( params->n, params->lists );
+    funcs->p_glDeleteCommandListsNV( params->n, params->lists );
     return STATUS_SUCCESS;
 }
 
@@ -5544,7 +5544,7 @@ static NTSTATUS ext_glDeleteFencesAPPLE( void *args )
 {
     struct glDeleteFencesAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteFencesAPPLE( params->n, params->fences );
+    funcs->p_glDeleteFencesAPPLE( params->n, params->fences );
     return STATUS_SUCCESS;
 }
 
@@ -5552,7 +5552,7 @@ static NTSTATUS ext_glDeleteFencesNV( void *args )
 {
     struct glDeleteFencesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteFencesNV( params->n, params->fences );
+    funcs->p_glDeleteFencesNV( params->n, params->fences );
     return STATUS_SUCCESS;
 }
 
@@ -5560,7 +5560,7 @@ static NTSTATUS ext_glDeleteFragmentShaderATI( void *args )
 {
     struct glDeleteFragmentShaderATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteFragmentShaderATI( params->id );
+    funcs->p_glDeleteFragmentShaderATI( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -5568,7 +5568,7 @@ static NTSTATUS ext_glDeleteFramebuffers( void *args )
 {
     struct glDeleteFramebuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteFramebuffers( params->n, params->framebuffers );
+    funcs->p_glDeleteFramebuffers( params->n, params->framebuffers );
     return STATUS_SUCCESS;
 }
 
@@ -5576,7 +5576,7 @@ static NTSTATUS ext_glDeleteFramebuffersEXT( void *args )
 {
     struct glDeleteFramebuffersEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteFramebuffersEXT( params->n, params->framebuffers );
+    funcs->p_glDeleteFramebuffersEXT( params->n, params->framebuffers );
     return STATUS_SUCCESS;
 }
 
@@ -5584,7 +5584,7 @@ static NTSTATUS ext_glDeleteMemoryObjectsEXT( void *args )
 {
     struct glDeleteMemoryObjectsEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteMemoryObjectsEXT( params->n, params->memoryObjects );
+    funcs->p_glDeleteMemoryObjectsEXT( params->n, params->memoryObjects );
     return STATUS_SUCCESS;
 }
 
@@ -5592,7 +5592,7 @@ static NTSTATUS ext_glDeleteNamedStringARB( void *args )
 {
     struct glDeleteNamedStringARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteNamedStringARB( params->namelen, params->name );
+    funcs->p_glDeleteNamedStringARB( params->namelen, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -5600,7 +5600,7 @@ static NTSTATUS ext_glDeleteNamesAMD( void *args )
 {
     struct glDeleteNamesAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteNamesAMD( params->identifier, params->num, params->names );
+    funcs->p_glDeleteNamesAMD( params->identifier, params->num, params->names );
     return STATUS_SUCCESS;
 }
 
@@ -5608,7 +5608,7 @@ static NTSTATUS ext_glDeleteObjectARB( void *args )
 {
     struct glDeleteObjectARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteObjectARB( params->obj );
+    funcs->p_glDeleteObjectARB( params->obj );
     return STATUS_SUCCESS;
 }
 
@@ -5616,7 +5616,7 @@ static NTSTATUS ext_glDeleteObjectBufferATI( void *args )
 {
     struct glDeleteObjectBufferATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteObjectBufferATI( params->buffer );
+    funcs->p_glDeleteObjectBufferATI( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -5624,7 +5624,7 @@ static NTSTATUS ext_glDeleteOcclusionQueriesNV( void *args )
 {
     struct glDeleteOcclusionQueriesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteOcclusionQueriesNV( params->n, params->ids );
+    funcs->p_glDeleteOcclusionQueriesNV( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -5632,7 +5632,7 @@ static NTSTATUS ext_glDeletePathsNV( void *args )
 {
     struct glDeletePathsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeletePathsNV( params->path, params->range );
+    funcs->p_glDeletePathsNV( params->path, params->range );
     return STATUS_SUCCESS;
 }
 
@@ -5640,7 +5640,7 @@ static NTSTATUS ext_glDeletePerfMonitorsAMD( void *args )
 {
     struct glDeletePerfMonitorsAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeletePerfMonitorsAMD( params->n, params->monitors );
+    funcs->p_glDeletePerfMonitorsAMD( params->n, params->monitors );
     return STATUS_SUCCESS;
 }
 
@@ -5648,7 +5648,7 @@ static NTSTATUS ext_glDeletePerfQueryINTEL( void *args )
 {
     struct glDeletePerfQueryINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeletePerfQueryINTEL( params->queryHandle );
+    funcs->p_glDeletePerfQueryINTEL( params->queryHandle );
     return STATUS_SUCCESS;
 }
 
@@ -5656,7 +5656,7 @@ static NTSTATUS ext_glDeleteProgram( void *args )
 {
     struct glDeleteProgram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteProgram( params->program );
+    funcs->p_glDeleteProgram( params->program );
     return STATUS_SUCCESS;
 }
 
@@ -5664,7 +5664,7 @@ static NTSTATUS ext_glDeleteProgramPipelines( void *args )
 {
     struct glDeleteProgramPipelines_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteProgramPipelines( params->n, params->pipelines );
+    funcs->p_glDeleteProgramPipelines( params->n, params->pipelines );
     return STATUS_SUCCESS;
 }
 
@@ -5672,7 +5672,7 @@ static NTSTATUS ext_glDeleteProgramsARB( void *args )
 {
     struct glDeleteProgramsARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteProgramsARB( params->n, params->programs );
+    funcs->p_glDeleteProgramsARB( params->n, params->programs );
     return STATUS_SUCCESS;
 }
 
@@ -5680,7 +5680,7 @@ static NTSTATUS ext_glDeleteProgramsNV( void *args )
 {
     struct glDeleteProgramsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteProgramsNV( params->n, params->programs );
+    funcs->p_glDeleteProgramsNV( params->n, params->programs );
     return STATUS_SUCCESS;
 }
 
@@ -5688,7 +5688,7 @@ static NTSTATUS ext_glDeleteQueries( void *args )
 {
     struct glDeleteQueries_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteQueries( params->n, params->ids );
+    funcs->p_glDeleteQueries( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -5696,7 +5696,7 @@ static NTSTATUS ext_glDeleteQueriesARB( void *args )
 {
     struct glDeleteQueriesARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteQueriesARB( params->n, params->ids );
+    funcs->p_glDeleteQueriesARB( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -5704,7 +5704,7 @@ static NTSTATUS ext_glDeleteQueryResourceTagNV( void *args )
 {
     struct glDeleteQueryResourceTagNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteQueryResourceTagNV( params->n, params->tagIds );
+    funcs->p_glDeleteQueryResourceTagNV( params->n, params->tagIds );
     return STATUS_SUCCESS;
 }
 
@@ -5712,7 +5712,7 @@ static NTSTATUS ext_glDeleteRenderbuffers( void *args )
 {
     struct glDeleteRenderbuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteRenderbuffers( params->n, params->renderbuffers );
+    funcs->p_glDeleteRenderbuffers( params->n, params->renderbuffers );
     return STATUS_SUCCESS;
 }
 
@@ -5720,7 +5720,7 @@ static NTSTATUS ext_glDeleteRenderbuffersEXT( void *args )
 {
     struct glDeleteRenderbuffersEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteRenderbuffersEXT( params->n, params->renderbuffers );
+    funcs->p_glDeleteRenderbuffersEXT( params->n, params->renderbuffers );
     return STATUS_SUCCESS;
 }
 
@@ -5728,7 +5728,7 @@ static NTSTATUS ext_glDeleteSamplers( void *args )
 {
     struct glDeleteSamplers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteSamplers( params->count, params->samplers );
+    funcs->p_glDeleteSamplers( params->count, params->samplers );
     return STATUS_SUCCESS;
 }
 
@@ -5736,7 +5736,7 @@ static NTSTATUS ext_glDeleteSemaphoresEXT( void *args )
 {
     struct glDeleteSemaphoresEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteSemaphoresEXT( params->n, params->semaphores );
+    funcs->p_glDeleteSemaphoresEXT( params->n, params->semaphores );
     return STATUS_SUCCESS;
 }
 
@@ -5744,7 +5744,7 @@ static NTSTATUS ext_glDeleteShader( void *args )
 {
     struct glDeleteShader_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteShader( params->shader );
+    funcs->p_glDeleteShader( params->shader );
     return STATUS_SUCCESS;
 }
 
@@ -5752,7 +5752,7 @@ static NTSTATUS ext_glDeleteStatesNV( void *args )
 {
     struct glDeleteStatesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteStatesNV( params->n, params->states );
+    funcs->p_glDeleteStatesNV( params->n, params->states );
     return STATUS_SUCCESS;
 }
 
@@ -5760,7 +5760,7 @@ NTSTATUS ext_glDeleteSync( void *args )
 {
     struct glDeleteSync_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteSync( params->sync );
+    funcs->p_glDeleteSync( params->sync );
     return STATUS_SUCCESS;
 }
 
@@ -5768,7 +5768,7 @@ static NTSTATUS ext_glDeleteTexturesEXT( void *args )
 {
     struct glDeleteTexturesEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteTexturesEXT( params->n, params->textures );
+    funcs->p_glDeleteTexturesEXT( params->n, params->textures );
     return STATUS_SUCCESS;
 }
 
@@ -5776,7 +5776,7 @@ static NTSTATUS ext_glDeleteTransformFeedbacks( void *args )
 {
     struct glDeleteTransformFeedbacks_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteTransformFeedbacks( params->n, params->ids );
+    funcs->p_glDeleteTransformFeedbacks( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -5784,7 +5784,7 @@ static NTSTATUS ext_glDeleteTransformFeedbacksNV( void *args )
 {
     struct glDeleteTransformFeedbacksNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteTransformFeedbacksNV( params->n, params->ids );
+    funcs->p_glDeleteTransformFeedbacksNV( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -5792,7 +5792,7 @@ static NTSTATUS ext_glDeleteVertexArrays( void *args )
 {
     struct glDeleteVertexArrays_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteVertexArrays( params->n, params->arrays );
+    funcs->p_glDeleteVertexArrays( params->n, params->arrays );
     return STATUS_SUCCESS;
 }
 
@@ -5800,7 +5800,7 @@ static NTSTATUS ext_glDeleteVertexArraysAPPLE( void *args )
 {
     struct glDeleteVertexArraysAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteVertexArraysAPPLE( params->n, params->arrays );
+    funcs->p_glDeleteVertexArraysAPPLE( params->n, params->arrays );
     return STATUS_SUCCESS;
 }
 
@@ -5808,7 +5808,7 @@ static NTSTATUS ext_glDeleteVertexShaderEXT( void *args )
 {
     struct glDeleteVertexShaderEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDeleteVertexShaderEXT( params->id );
+    funcs->p_glDeleteVertexShaderEXT( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -5816,7 +5816,7 @@ static NTSTATUS ext_glDepthBoundsEXT( void *args )
 {
     struct glDepthBoundsEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthBoundsEXT( params->zmin, params->zmax );
+    funcs->p_glDepthBoundsEXT( params->zmin, params->zmax );
     return STATUS_SUCCESS;
 }
 
@@ -5824,7 +5824,7 @@ static NTSTATUS ext_glDepthBoundsdNV( void *args )
 {
     struct glDepthBoundsdNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthBoundsdNV( params->zmin, params->zmax );
+    funcs->p_glDepthBoundsdNV( params->zmin, params->zmax );
     return STATUS_SUCCESS;
 }
 
@@ -5832,7 +5832,7 @@ static NTSTATUS ext_glDepthRangeArraydvNV( void *args )
 {
     struct glDepthRangeArraydvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthRangeArraydvNV( params->first, params->count, params->v );
+    funcs->p_glDepthRangeArraydvNV( params->first, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -5840,7 +5840,7 @@ static NTSTATUS ext_glDepthRangeArrayv( void *args )
 {
     struct glDepthRangeArrayv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthRangeArrayv( params->first, params->count, params->v );
+    funcs->p_glDepthRangeArrayv( params->first, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -5848,7 +5848,7 @@ static NTSTATUS ext_glDepthRangeIndexed( void *args )
 {
     struct glDepthRangeIndexed_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthRangeIndexed( params->index, params->n, params->f );
+    funcs->p_glDepthRangeIndexed( params->index, params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -5856,7 +5856,7 @@ static NTSTATUS ext_glDepthRangeIndexeddNV( void *args )
 {
     struct glDepthRangeIndexeddNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthRangeIndexeddNV( params->index, params->n, params->f );
+    funcs->p_glDepthRangeIndexeddNV( params->index, params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -5864,7 +5864,7 @@ static NTSTATUS ext_glDepthRangedNV( void *args )
 {
     struct glDepthRangedNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthRangedNV( params->zNear, params->zFar );
+    funcs->p_glDepthRangedNV( params->zNear, params->zFar );
     return STATUS_SUCCESS;
 }
 
@@ -5872,7 +5872,7 @@ static NTSTATUS ext_glDepthRangef( void *args )
 {
     struct glDepthRangef_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthRangef( params->n, params->f );
+    funcs->p_glDepthRangef( params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -5880,7 +5880,7 @@ static NTSTATUS ext_glDepthRangefOES( void *args )
 {
     struct glDepthRangefOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthRangefOES( params->n, params->f );
+    funcs->p_glDepthRangefOES( params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -5888,7 +5888,7 @@ static NTSTATUS ext_glDepthRangexOES( void *args )
 {
     struct glDepthRangexOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDepthRangexOES( params->n, params->f );
+    funcs->p_glDepthRangexOES( params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -5896,7 +5896,7 @@ static NTSTATUS ext_glDetachObjectARB( void *args )
 {
     struct glDetachObjectARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDetachObjectARB( params->containerObj, params->attachedObj );
+    funcs->p_glDetachObjectARB( params->containerObj, params->attachedObj );
     return STATUS_SUCCESS;
 }
 
@@ -5904,7 +5904,7 @@ static NTSTATUS ext_glDetachShader( void *args )
 {
     struct glDetachShader_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDetachShader( params->program, params->shader );
+    funcs->p_glDetachShader( params->program, params->shader );
     return STATUS_SUCCESS;
 }
 
@@ -5912,7 +5912,7 @@ static NTSTATUS ext_glDetailTexFuncSGIS( void *args )
 {
     struct glDetailTexFuncSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDetailTexFuncSGIS( params->target, params->n, params->points );
+    funcs->p_glDetailTexFuncSGIS( params->target, params->n, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -5920,7 +5920,7 @@ static NTSTATUS ext_glDisableClientStateIndexedEXT( void *args )
 {
     struct glDisableClientStateIndexedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableClientStateIndexedEXT( params->array, params->index );
+    funcs->p_glDisableClientStateIndexedEXT( params->array, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -5928,7 +5928,7 @@ static NTSTATUS ext_glDisableClientStateiEXT( void *args )
 {
     struct glDisableClientStateiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableClientStateiEXT( params->array, params->index );
+    funcs->p_glDisableClientStateiEXT( params->array, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -5936,7 +5936,7 @@ static NTSTATUS ext_glDisableIndexedEXT( void *args )
 {
     struct glDisableIndexedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableIndexedEXT( params->target, params->index );
+    funcs->p_glDisableIndexedEXT( params->target, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -5944,7 +5944,7 @@ static NTSTATUS ext_glDisableVariantClientStateEXT( void *args )
 {
     struct glDisableVariantClientStateEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableVariantClientStateEXT( params->id );
+    funcs->p_glDisableVariantClientStateEXT( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -5952,7 +5952,7 @@ static NTSTATUS ext_glDisableVertexArrayAttrib( void *args )
 {
     struct glDisableVertexArrayAttrib_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableVertexArrayAttrib( params->vaobj, params->index );
+    funcs->p_glDisableVertexArrayAttrib( params->vaobj, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -5960,7 +5960,7 @@ static NTSTATUS ext_glDisableVertexArrayAttribEXT( void *args )
 {
     struct glDisableVertexArrayAttribEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableVertexArrayAttribEXT( params->vaobj, params->index );
+    funcs->p_glDisableVertexArrayAttribEXT( params->vaobj, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -5968,7 +5968,7 @@ static NTSTATUS ext_glDisableVertexArrayEXT( void *args )
 {
     struct glDisableVertexArrayEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableVertexArrayEXT( params->vaobj, params->array );
+    funcs->p_glDisableVertexArrayEXT( params->vaobj, params->array );
     return STATUS_SUCCESS;
 }
 
@@ -5976,7 +5976,7 @@ static NTSTATUS ext_glDisableVertexAttribAPPLE( void *args )
 {
     struct glDisableVertexAttribAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableVertexAttribAPPLE( params->index, params->pname );
+    funcs->p_glDisableVertexAttribAPPLE( params->index, params->pname );
     return STATUS_SUCCESS;
 }
 
@@ -5984,7 +5984,7 @@ static NTSTATUS ext_glDisableVertexAttribArray( void *args )
 {
     struct glDisableVertexAttribArray_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableVertexAttribArray( params->index );
+    funcs->p_glDisableVertexAttribArray( params->index );
     return STATUS_SUCCESS;
 }
 
@@ -5992,7 +5992,7 @@ static NTSTATUS ext_glDisableVertexAttribArrayARB( void *args )
 {
     struct glDisableVertexAttribArrayARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisableVertexAttribArrayARB( params->index );
+    funcs->p_glDisableVertexAttribArrayARB( params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6000,7 +6000,7 @@ static NTSTATUS ext_glDisablei( void *args )
 {
     struct glDisablei_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDisablei( params->target, params->index );
+    funcs->p_glDisablei( params->target, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6008,7 +6008,7 @@ static NTSTATUS ext_glDispatchCompute( void *args )
 {
     struct glDispatchCompute_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDispatchCompute( params->num_groups_x, params->num_groups_y, params->num_groups_z );
+    funcs->p_glDispatchCompute( params->num_groups_x, params->num_groups_y, params->num_groups_z );
     return STATUS_SUCCESS;
 }
 
@@ -6016,7 +6016,7 @@ static NTSTATUS ext_glDispatchComputeGroupSizeARB( void *args )
 {
     struct glDispatchComputeGroupSizeARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDispatchComputeGroupSizeARB( params->num_groups_x, params->num_groups_y, params->num_groups_z, params->group_size_x, params->group_size_y, params->group_size_z );
+    funcs->p_glDispatchComputeGroupSizeARB( params->num_groups_x, params->num_groups_y, params->num_groups_z, params->group_size_x, params->group_size_y, params->group_size_z );
     return STATUS_SUCCESS;
 }
 
@@ -6024,7 +6024,7 @@ static NTSTATUS ext_glDispatchComputeIndirect( void *args )
 {
     struct glDispatchComputeIndirect_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDispatchComputeIndirect( params->indirect );
+    funcs->p_glDispatchComputeIndirect( params->indirect );
     return STATUS_SUCCESS;
 }
 
@@ -6032,7 +6032,7 @@ static NTSTATUS ext_glDrawArraysEXT( void *args )
 {
     struct glDrawArraysEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawArraysEXT( params->mode, params->first, params->count );
+    funcs->p_glDrawArraysEXT( params->mode, params->first, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6040,7 +6040,7 @@ static NTSTATUS ext_glDrawArraysIndirect( void *args )
 {
     struct glDrawArraysIndirect_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawArraysIndirect( params->mode, params->indirect );
+    funcs->p_glDrawArraysIndirect( params->mode, params->indirect );
     return STATUS_SUCCESS;
 }
 
@@ -6048,7 +6048,7 @@ static NTSTATUS ext_glDrawArraysInstanced( void *args )
 {
     struct glDrawArraysInstanced_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawArraysInstanced( params->mode, params->first, params->count, params->instancecount );
+    funcs->p_glDrawArraysInstanced( params->mode, params->first, params->count, params->instancecount );
     return STATUS_SUCCESS;
 }
 
@@ -6056,7 +6056,7 @@ static NTSTATUS ext_glDrawArraysInstancedARB( void *args )
 {
     struct glDrawArraysInstancedARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawArraysInstancedARB( params->mode, params->first, params->count, params->primcount );
+    funcs->p_glDrawArraysInstancedARB( params->mode, params->first, params->count, params->primcount );
     return STATUS_SUCCESS;
 }
 
@@ -6064,7 +6064,7 @@ static NTSTATUS ext_glDrawArraysInstancedBaseInstance( void *args )
 {
     struct glDrawArraysInstancedBaseInstance_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawArraysInstancedBaseInstance( params->mode, params->first, params->count, params->instancecount, params->baseinstance );
+    funcs->p_glDrawArraysInstancedBaseInstance( params->mode, params->first, params->count, params->instancecount, params->baseinstance );
     return STATUS_SUCCESS;
 }
 
@@ -6072,7 +6072,7 @@ static NTSTATUS ext_glDrawArraysInstancedEXT( void *args )
 {
     struct glDrawArraysInstancedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawArraysInstancedEXT( params->mode, params->start, params->count, params->primcount );
+    funcs->p_glDrawArraysInstancedEXT( params->mode, params->start, params->count, params->primcount );
     return STATUS_SUCCESS;
 }
 
@@ -6080,7 +6080,7 @@ static NTSTATUS ext_glDrawBufferRegion( void *args )
 {
     struct glDrawBufferRegion_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawBufferRegion( params->region, params->x, params->y, params->width, params->height, params->xDest, params->yDest );
+    funcs->p_glDrawBufferRegion( params->region, params->x, params->y, params->width, params->height, params->xDest, params->yDest );
     return STATUS_SUCCESS;
 }
 
@@ -6088,7 +6088,7 @@ static NTSTATUS ext_glDrawBuffers( void *args )
 {
     struct glDrawBuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawBuffers( params->n, params->bufs );
+    funcs->p_glDrawBuffers( params->n, params->bufs );
     return STATUS_SUCCESS;
 }
 
@@ -6096,7 +6096,7 @@ static NTSTATUS ext_glDrawBuffersARB( void *args )
 {
     struct glDrawBuffersARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawBuffersARB( params->n, params->bufs );
+    funcs->p_glDrawBuffersARB( params->n, params->bufs );
     return STATUS_SUCCESS;
 }
 
@@ -6104,7 +6104,7 @@ static NTSTATUS ext_glDrawBuffersATI( void *args )
 {
     struct glDrawBuffersATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawBuffersATI( params->n, params->bufs );
+    funcs->p_glDrawBuffersATI( params->n, params->bufs );
     return STATUS_SUCCESS;
 }
 
@@ -6112,7 +6112,7 @@ static NTSTATUS ext_glDrawCommandsAddressNV( void *args )
 {
     struct glDrawCommandsAddressNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawCommandsAddressNV( params->primitiveMode, params->indirects, params->sizes, params->count );
+    funcs->p_glDrawCommandsAddressNV( params->primitiveMode, params->indirects, params->sizes, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6120,7 +6120,7 @@ static NTSTATUS ext_glDrawCommandsNV( void *args )
 {
     struct glDrawCommandsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawCommandsNV( params->primitiveMode, params->buffer, params->indirects, params->sizes, params->count );
+    funcs->p_glDrawCommandsNV( params->primitiveMode, params->buffer, params->indirects, params->sizes, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6128,7 +6128,7 @@ static NTSTATUS ext_glDrawCommandsStatesAddressNV( void *args )
 {
     struct glDrawCommandsStatesAddressNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawCommandsStatesAddressNV( params->indirects, params->sizes, params->states, params->fbos, params->count );
+    funcs->p_glDrawCommandsStatesAddressNV( params->indirects, params->sizes, params->states, params->fbos, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6136,7 +6136,7 @@ static NTSTATUS ext_glDrawCommandsStatesNV( void *args )
 {
     struct glDrawCommandsStatesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawCommandsStatesNV( params->buffer, params->indirects, params->sizes, params->states, params->fbos, params->count );
+    funcs->p_glDrawCommandsStatesNV( params->buffer, params->indirects, params->sizes, params->states, params->fbos, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6144,7 +6144,7 @@ static NTSTATUS ext_glDrawElementArrayAPPLE( void *args )
 {
     struct glDrawElementArrayAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementArrayAPPLE( params->mode, params->first, params->count );
+    funcs->p_glDrawElementArrayAPPLE( params->mode, params->first, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6152,7 +6152,7 @@ static NTSTATUS ext_glDrawElementArrayATI( void *args )
 {
     struct glDrawElementArrayATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementArrayATI( params->mode, params->count );
+    funcs->p_glDrawElementArrayATI( params->mode, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6160,7 +6160,7 @@ static NTSTATUS ext_glDrawElementsBaseVertex( void *args )
 {
     struct glDrawElementsBaseVertex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementsBaseVertex( params->mode, params->count, params->type, params->indices, params->basevertex );
+    funcs->p_glDrawElementsBaseVertex( params->mode, params->count, params->type, params->indices, params->basevertex );
     return STATUS_SUCCESS;
 }
 
@@ -6168,7 +6168,7 @@ static NTSTATUS ext_glDrawElementsIndirect( void *args )
 {
     struct glDrawElementsIndirect_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementsIndirect( params->mode, params->type, params->indirect );
+    funcs->p_glDrawElementsIndirect( params->mode, params->type, params->indirect );
     return STATUS_SUCCESS;
 }
 
@@ -6176,7 +6176,7 @@ static NTSTATUS ext_glDrawElementsInstanced( void *args )
 {
     struct glDrawElementsInstanced_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementsInstanced( params->mode, params->count, params->type, params->indices, params->instancecount );
+    funcs->p_glDrawElementsInstanced( params->mode, params->count, params->type, params->indices, params->instancecount );
     return STATUS_SUCCESS;
 }
 
@@ -6184,7 +6184,7 @@ static NTSTATUS ext_glDrawElementsInstancedARB( void *args )
 {
     struct glDrawElementsInstancedARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementsInstancedARB( params->mode, params->count, params->type, params->indices, params->primcount );
+    funcs->p_glDrawElementsInstancedARB( params->mode, params->count, params->type, params->indices, params->primcount );
     return STATUS_SUCCESS;
 }
 
@@ -6192,7 +6192,7 @@ static NTSTATUS ext_glDrawElementsInstancedBaseInstance( void *args )
 {
     struct glDrawElementsInstancedBaseInstance_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementsInstancedBaseInstance( params->mode, params->count, params->type, params->indices, params->instancecount, params->baseinstance );
+    funcs->p_glDrawElementsInstancedBaseInstance( params->mode, params->count, params->type, params->indices, params->instancecount, params->baseinstance );
     return STATUS_SUCCESS;
 }
 
@@ -6200,7 +6200,7 @@ static NTSTATUS ext_glDrawElementsInstancedBaseVertex( void *args )
 {
     struct glDrawElementsInstancedBaseVertex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementsInstancedBaseVertex( params->mode, params->count, params->type, params->indices, params->instancecount, params->basevertex );
+    funcs->p_glDrawElementsInstancedBaseVertex( params->mode, params->count, params->type, params->indices, params->instancecount, params->basevertex );
     return STATUS_SUCCESS;
 }
 
@@ -6208,7 +6208,7 @@ static NTSTATUS ext_glDrawElementsInstancedBaseVertexBaseInstance( void *args )
 {
     struct glDrawElementsInstancedBaseVertexBaseInstance_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementsInstancedBaseVertexBaseInstance( params->mode, params->count, params->type, params->indices, params->instancecount, params->basevertex, params->baseinstance );
+    funcs->p_glDrawElementsInstancedBaseVertexBaseInstance( params->mode, params->count, params->type, params->indices, params->instancecount, params->basevertex, params->baseinstance );
     return STATUS_SUCCESS;
 }
 
@@ -6216,7 +6216,7 @@ static NTSTATUS ext_glDrawElementsInstancedEXT( void *args )
 {
     struct glDrawElementsInstancedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawElementsInstancedEXT( params->mode, params->count, params->type, params->indices, params->primcount );
+    funcs->p_glDrawElementsInstancedEXT( params->mode, params->count, params->type, params->indices, params->primcount );
     return STATUS_SUCCESS;
 }
 
@@ -6224,7 +6224,7 @@ static NTSTATUS ext_glDrawMeshArraysSUN( void *args )
 {
     struct glDrawMeshArraysSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawMeshArraysSUN( params->mode, params->first, params->count, params->width );
+    funcs->p_glDrawMeshArraysSUN( params->mode, params->first, params->count, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -6232,7 +6232,7 @@ static NTSTATUS ext_glDrawMeshTasksIndirectNV( void *args )
 {
     struct glDrawMeshTasksIndirectNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawMeshTasksIndirectNV( params->indirect );
+    funcs->p_glDrawMeshTasksIndirectNV( params->indirect );
     return STATUS_SUCCESS;
 }
 
@@ -6240,7 +6240,7 @@ static NTSTATUS ext_glDrawMeshTasksNV( void *args )
 {
     struct glDrawMeshTasksNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawMeshTasksNV( params->first, params->count );
+    funcs->p_glDrawMeshTasksNV( params->first, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6248,7 +6248,7 @@ static NTSTATUS ext_glDrawRangeElementArrayAPPLE( void *args )
 {
     struct glDrawRangeElementArrayAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawRangeElementArrayAPPLE( params->mode, params->start, params->end, params->first, params->count );
+    funcs->p_glDrawRangeElementArrayAPPLE( params->mode, params->start, params->end, params->first, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6256,7 +6256,7 @@ static NTSTATUS ext_glDrawRangeElementArrayATI( void *args )
 {
     struct glDrawRangeElementArrayATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawRangeElementArrayATI( params->mode, params->start, params->end, params->count );
+    funcs->p_glDrawRangeElementArrayATI( params->mode, params->start, params->end, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -6264,7 +6264,7 @@ static NTSTATUS ext_glDrawRangeElements( void *args )
 {
     struct glDrawRangeElements_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawRangeElements( params->mode, params->start, params->end, params->count, params->type, params->indices );
+    funcs->p_glDrawRangeElements( params->mode, params->start, params->end, params->count, params->type, params->indices );
     return STATUS_SUCCESS;
 }
 
@@ -6272,7 +6272,7 @@ static NTSTATUS ext_glDrawRangeElementsBaseVertex( void *args )
 {
     struct glDrawRangeElementsBaseVertex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawRangeElementsBaseVertex( params->mode, params->start, params->end, params->count, params->type, params->indices, params->basevertex );
+    funcs->p_glDrawRangeElementsBaseVertex( params->mode, params->start, params->end, params->count, params->type, params->indices, params->basevertex );
     return STATUS_SUCCESS;
 }
 
@@ -6280,7 +6280,7 @@ static NTSTATUS ext_glDrawRangeElementsEXT( void *args )
 {
     struct glDrawRangeElementsEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawRangeElementsEXT( params->mode, params->start, params->end, params->count, params->type, params->indices );
+    funcs->p_glDrawRangeElementsEXT( params->mode, params->start, params->end, params->count, params->type, params->indices );
     return STATUS_SUCCESS;
 }
 
@@ -6288,7 +6288,7 @@ static NTSTATUS ext_glDrawTextureNV( void *args )
 {
     struct glDrawTextureNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawTextureNV( params->texture, params->sampler, params->x0, params->y0, params->x1, params->y1, params->z, params->s0, params->t0, params->s1, params->t1 );
+    funcs->p_glDrawTextureNV( params->texture, params->sampler, params->x0, params->y0, params->x1, params->y1, params->z, params->s0, params->t0, params->s1, params->t1 );
     return STATUS_SUCCESS;
 }
 
@@ -6296,7 +6296,7 @@ static NTSTATUS ext_glDrawTransformFeedback( void *args )
 {
     struct glDrawTransformFeedback_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawTransformFeedback( params->mode, params->id );
+    funcs->p_glDrawTransformFeedback( params->mode, params->id );
     return STATUS_SUCCESS;
 }
 
@@ -6304,7 +6304,7 @@ static NTSTATUS ext_glDrawTransformFeedbackInstanced( void *args )
 {
     struct glDrawTransformFeedbackInstanced_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawTransformFeedbackInstanced( params->mode, params->id, params->instancecount );
+    funcs->p_glDrawTransformFeedbackInstanced( params->mode, params->id, params->instancecount );
     return STATUS_SUCCESS;
 }
 
@@ -6312,7 +6312,7 @@ static NTSTATUS ext_glDrawTransformFeedbackNV( void *args )
 {
     struct glDrawTransformFeedbackNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawTransformFeedbackNV( params->mode, params->id );
+    funcs->p_glDrawTransformFeedbackNV( params->mode, params->id );
     return STATUS_SUCCESS;
 }
 
@@ -6320,7 +6320,7 @@ static NTSTATUS ext_glDrawTransformFeedbackStream( void *args )
 {
     struct glDrawTransformFeedbackStream_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawTransformFeedbackStream( params->mode, params->id, params->stream );
+    funcs->p_glDrawTransformFeedbackStream( params->mode, params->id, params->stream );
     return STATUS_SUCCESS;
 }
 
@@ -6328,7 +6328,7 @@ static NTSTATUS ext_glDrawTransformFeedbackStreamInstanced( void *args )
 {
     struct glDrawTransformFeedbackStreamInstanced_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawTransformFeedbackStreamInstanced( params->mode, params->id, params->stream, params->instancecount );
+    funcs->p_glDrawTransformFeedbackStreamInstanced( params->mode, params->id, params->stream, params->instancecount );
     return STATUS_SUCCESS;
 }
 
@@ -6336,7 +6336,7 @@ static NTSTATUS ext_glDrawVkImageNV( void *args )
 {
     struct glDrawVkImageNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glDrawVkImageNV( params->vkImage, params->sampler, params->x0, params->y0, params->x1, params->y1, params->z, params->s0, params->t0, params->s1, params->t1 );
+    funcs->p_glDrawVkImageNV( params->vkImage, params->sampler, params->x0, params->y0, params->x1, params->y1, params->z, params->s0, params->t0, params->s1, params->t1 );
     return STATUS_SUCCESS;
 }
 
@@ -6344,7 +6344,7 @@ static NTSTATUS ext_glEGLImageTargetTexStorageEXT( void *args )
 {
     struct glEGLImageTargetTexStorageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEGLImageTargetTexStorageEXT( params->target, params->image, params->attrib_list );
+    funcs->p_glEGLImageTargetTexStorageEXT( params->target, params->image, params->attrib_list );
     return STATUS_SUCCESS;
 }
 
@@ -6352,7 +6352,7 @@ static NTSTATUS ext_glEGLImageTargetTextureStorageEXT( void *args )
 {
     struct glEGLImageTargetTextureStorageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEGLImageTargetTextureStorageEXT( params->texture, params->image, params->attrib_list );
+    funcs->p_glEGLImageTargetTextureStorageEXT( params->texture, params->image, params->attrib_list );
     return STATUS_SUCCESS;
 }
 
@@ -6360,7 +6360,7 @@ static NTSTATUS ext_glEdgeFlagFormatNV( void *args )
 {
     struct glEdgeFlagFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEdgeFlagFormatNV( params->stride );
+    funcs->p_glEdgeFlagFormatNV( params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -6368,7 +6368,7 @@ static NTSTATUS ext_glEdgeFlagPointerEXT( void *args )
 {
     struct glEdgeFlagPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEdgeFlagPointerEXT( params->stride, params->count, params->pointer );
+    funcs->p_glEdgeFlagPointerEXT( params->stride, params->count, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -6376,7 +6376,7 @@ static NTSTATUS ext_glEdgeFlagPointerListIBM( void *args )
 {
     struct glEdgeFlagPointerListIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEdgeFlagPointerListIBM( params->stride, params->pointer, params->ptrstride );
+    funcs->p_glEdgeFlagPointerListIBM( params->stride, params->pointer, params->ptrstride );
     return STATUS_SUCCESS;
 }
 
@@ -6384,7 +6384,7 @@ static NTSTATUS ext_glElementPointerAPPLE( void *args )
 {
     struct glElementPointerAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glElementPointerAPPLE( params->type, params->pointer );
+    funcs->p_glElementPointerAPPLE( params->type, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -6392,7 +6392,7 @@ static NTSTATUS ext_glElementPointerATI( void *args )
 {
     struct glElementPointerATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glElementPointerATI( params->type, params->pointer );
+    funcs->p_glElementPointerATI( params->type, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -6400,7 +6400,7 @@ static NTSTATUS ext_glEnableClientStateIndexedEXT( void *args )
 {
     struct glEnableClientStateIndexedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableClientStateIndexedEXT( params->array, params->index );
+    funcs->p_glEnableClientStateIndexedEXT( params->array, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6408,7 +6408,7 @@ static NTSTATUS ext_glEnableClientStateiEXT( void *args )
 {
     struct glEnableClientStateiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableClientStateiEXT( params->array, params->index );
+    funcs->p_glEnableClientStateiEXT( params->array, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6416,7 +6416,7 @@ static NTSTATUS ext_glEnableIndexedEXT( void *args )
 {
     struct glEnableIndexedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableIndexedEXT( params->target, params->index );
+    funcs->p_glEnableIndexedEXT( params->target, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6424,7 +6424,7 @@ static NTSTATUS ext_glEnableVariantClientStateEXT( void *args )
 {
     struct glEnableVariantClientStateEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableVariantClientStateEXT( params->id );
+    funcs->p_glEnableVariantClientStateEXT( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -6432,7 +6432,7 @@ static NTSTATUS ext_glEnableVertexArrayAttrib( void *args )
 {
     struct glEnableVertexArrayAttrib_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableVertexArrayAttrib( params->vaobj, params->index );
+    funcs->p_glEnableVertexArrayAttrib( params->vaobj, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6440,7 +6440,7 @@ static NTSTATUS ext_glEnableVertexArrayAttribEXT( void *args )
 {
     struct glEnableVertexArrayAttribEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableVertexArrayAttribEXT( params->vaobj, params->index );
+    funcs->p_glEnableVertexArrayAttribEXT( params->vaobj, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6448,7 +6448,7 @@ static NTSTATUS ext_glEnableVertexArrayEXT( void *args )
 {
     struct glEnableVertexArrayEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableVertexArrayEXT( params->vaobj, params->array );
+    funcs->p_glEnableVertexArrayEXT( params->vaobj, params->array );
     return STATUS_SUCCESS;
 }
 
@@ -6456,7 +6456,7 @@ static NTSTATUS ext_glEnableVertexAttribAPPLE( void *args )
 {
     struct glEnableVertexAttribAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableVertexAttribAPPLE( params->index, params->pname );
+    funcs->p_glEnableVertexAttribAPPLE( params->index, params->pname );
     return STATUS_SUCCESS;
 }
 
@@ -6464,7 +6464,7 @@ static NTSTATUS ext_glEnableVertexAttribArray( void *args )
 {
     struct glEnableVertexAttribArray_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableVertexAttribArray( params->index );
+    funcs->p_glEnableVertexAttribArray( params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6472,7 +6472,7 @@ static NTSTATUS ext_glEnableVertexAttribArrayARB( void *args )
 {
     struct glEnableVertexAttribArrayARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnableVertexAttribArrayARB( params->index );
+    funcs->p_glEnableVertexAttribArrayARB( params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6480,7 +6480,7 @@ static NTSTATUS ext_glEnablei( void *args )
 {
     struct glEnablei_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEnablei( params->target, params->index );
+    funcs->p_glEnablei( params->target, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6488,7 +6488,7 @@ static NTSTATUS ext_glEndConditionalRender( void *args )
 {
     struct glEndConditionalRender_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndConditionalRender();
+    funcs->p_glEndConditionalRender();
     return STATUS_SUCCESS;
 }
 
@@ -6496,7 +6496,7 @@ static NTSTATUS ext_glEndConditionalRenderNV( void *args )
 {
     struct glEndConditionalRenderNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndConditionalRenderNV();
+    funcs->p_glEndConditionalRenderNV();
     return STATUS_SUCCESS;
 }
 
@@ -6504,7 +6504,7 @@ static NTSTATUS ext_glEndConditionalRenderNVX( void *args )
 {
     struct glEndConditionalRenderNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndConditionalRenderNVX();
+    funcs->p_glEndConditionalRenderNVX();
     return STATUS_SUCCESS;
 }
 
@@ -6512,7 +6512,7 @@ static NTSTATUS ext_glEndFragmentShaderATI( void *args )
 {
     struct glEndFragmentShaderATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndFragmentShaderATI();
+    funcs->p_glEndFragmentShaderATI();
     return STATUS_SUCCESS;
 }
 
@@ -6520,7 +6520,7 @@ static NTSTATUS ext_glEndOcclusionQueryNV( void *args )
 {
     struct glEndOcclusionQueryNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndOcclusionQueryNV();
+    funcs->p_glEndOcclusionQueryNV();
     return STATUS_SUCCESS;
 }
 
@@ -6528,7 +6528,7 @@ static NTSTATUS ext_glEndPerfMonitorAMD( void *args )
 {
     struct glEndPerfMonitorAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndPerfMonitorAMD( params->monitor );
+    funcs->p_glEndPerfMonitorAMD( params->monitor );
     return STATUS_SUCCESS;
 }
 
@@ -6536,7 +6536,7 @@ static NTSTATUS ext_glEndPerfQueryINTEL( void *args )
 {
     struct glEndPerfQueryINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndPerfQueryINTEL( params->queryHandle );
+    funcs->p_glEndPerfQueryINTEL( params->queryHandle );
     return STATUS_SUCCESS;
 }
 
@@ -6544,7 +6544,7 @@ static NTSTATUS ext_glEndQuery( void *args )
 {
     struct glEndQuery_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndQuery( params->target );
+    funcs->p_glEndQuery( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -6552,7 +6552,7 @@ static NTSTATUS ext_glEndQueryARB( void *args )
 {
     struct glEndQueryARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndQueryARB( params->target );
+    funcs->p_glEndQueryARB( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -6560,7 +6560,7 @@ static NTSTATUS ext_glEndQueryIndexed( void *args )
 {
     struct glEndQueryIndexed_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndQueryIndexed( params->target, params->index );
+    funcs->p_glEndQueryIndexed( params->target, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -6568,7 +6568,7 @@ static NTSTATUS ext_glEndTransformFeedback( void *args )
 {
     struct glEndTransformFeedback_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndTransformFeedback();
+    funcs->p_glEndTransformFeedback();
     return STATUS_SUCCESS;
 }
 
@@ -6576,7 +6576,7 @@ static NTSTATUS ext_glEndTransformFeedbackEXT( void *args )
 {
     struct glEndTransformFeedbackEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndTransformFeedbackEXT();
+    funcs->p_glEndTransformFeedbackEXT();
     return STATUS_SUCCESS;
 }
 
@@ -6584,7 +6584,7 @@ static NTSTATUS ext_glEndTransformFeedbackNV( void *args )
 {
     struct glEndTransformFeedbackNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndTransformFeedbackNV();
+    funcs->p_glEndTransformFeedbackNV();
     return STATUS_SUCCESS;
 }
 
@@ -6592,7 +6592,7 @@ static NTSTATUS ext_glEndVertexShaderEXT( void *args )
 {
     struct glEndVertexShaderEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndVertexShaderEXT();
+    funcs->p_glEndVertexShaderEXT();
     return STATUS_SUCCESS;
 }
 
@@ -6600,7 +6600,7 @@ static NTSTATUS ext_glEndVideoCaptureNV( void *args )
 {
     struct glEndVideoCaptureNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEndVideoCaptureNV( params->video_capture_slot );
+    funcs->p_glEndVideoCaptureNV( params->video_capture_slot );
     return STATUS_SUCCESS;
 }
 
@@ -6608,7 +6608,7 @@ static NTSTATUS ext_glEvalCoord1xOES( void *args )
 {
     struct glEvalCoord1xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEvalCoord1xOES( params->u );
+    funcs->p_glEvalCoord1xOES( params->u );
     return STATUS_SUCCESS;
 }
 
@@ -6616,7 +6616,7 @@ static NTSTATUS ext_glEvalCoord1xvOES( void *args )
 {
     struct glEvalCoord1xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEvalCoord1xvOES( params->coords );
+    funcs->p_glEvalCoord1xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -6624,7 +6624,7 @@ static NTSTATUS ext_glEvalCoord2xOES( void *args )
 {
     struct glEvalCoord2xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEvalCoord2xOES( params->u, params->v );
+    funcs->p_glEvalCoord2xOES( params->u, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -6632,7 +6632,7 @@ static NTSTATUS ext_glEvalCoord2xvOES( void *args )
 {
     struct glEvalCoord2xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEvalCoord2xvOES( params->coords );
+    funcs->p_glEvalCoord2xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -6640,7 +6640,7 @@ static NTSTATUS ext_glEvalMapsNV( void *args )
 {
     struct glEvalMapsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEvalMapsNV( params->target, params->mode );
+    funcs->p_glEvalMapsNV( params->target, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -6648,7 +6648,7 @@ static NTSTATUS ext_glEvaluateDepthValuesARB( void *args )
 {
     struct glEvaluateDepthValuesARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glEvaluateDepthValuesARB();
+    funcs->p_glEvaluateDepthValuesARB();
     return STATUS_SUCCESS;
 }
 
@@ -6656,7 +6656,7 @@ static NTSTATUS ext_glExecuteProgramNV( void *args )
 {
     struct glExecuteProgramNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glExecuteProgramNV( params->target, params->id, params->params );
+    funcs->p_glExecuteProgramNV( params->target, params->id, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -6664,7 +6664,7 @@ static NTSTATUS ext_glExtractComponentEXT( void *args )
 {
     struct glExtractComponentEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glExtractComponentEXT( params->res, params->src, params->num );
+    funcs->p_glExtractComponentEXT( params->res, params->src, params->num );
     return STATUS_SUCCESS;
 }
 
@@ -6672,7 +6672,7 @@ static NTSTATUS ext_glFeedbackBufferxOES( void *args )
 {
     struct glFeedbackBufferxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFeedbackBufferxOES( params->n, params->type, params->buffer );
+    funcs->p_glFeedbackBufferxOES( params->n, params->type, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -6680,7 +6680,7 @@ NTSTATUS ext_glFenceSync( void *args )
 {
     struct glFenceSync_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glFenceSync( params->condition, params->flags );
+    params->ret = funcs->p_glFenceSync( params->condition, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -6688,7 +6688,7 @@ static NTSTATUS ext_glFinalCombinerInputNV( void *args )
 {
     struct glFinalCombinerInputNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFinalCombinerInputNV( params->variable, params->input, params->mapping, params->componentUsage );
+    funcs->p_glFinalCombinerInputNV( params->variable, params->input, params->mapping, params->componentUsage );
     return STATUS_SUCCESS;
 }
 
@@ -6696,7 +6696,7 @@ static NTSTATUS ext_glFinishAsyncSGIX( void *args )
 {
     struct glFinishAsyncSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glFinishAsyncSGIX( params->markerp );
+    params->ret = funcs->p_glFinishAsyncSGIX( params->markerp );
     return STATUS_SUCCESS;
 }
 
@@ -6704,7 +6704,7 @@ static NTSTATUS ext_glFinishFenceAPPLE( void *args )
 {
     struct glFinishFenceAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFinishFenceAPPLE( params->fence );
+    funcs->p_glFinishFenceAPPLE( params->fence );
     return STATUS_SUCCESS;
 }
 
@@ -6712,7 +6712,7 @@ static NTSTATUS ext_glFinishFenceNV( void *args )
 {
     struct glFinishFenceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFinishFenceNV( params->fence );
+    funcs->p_glFinishFenceNV( params->fence );
     return STATUS_SUCCESS;
 }
 
@@ -6720,7 +6720,7 @@ static NTSTATUS ext_glFinishObjectAPPLE( void *args )
 {
     struct glFinishObjectAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFinishObjectAPPLE( params->object, params->name );
+    funcs->p_glFinishObjectAPPLE( params->object, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -6728,7 +6728,7 @@ static NTSTATUS ext_glFinishTextureSUNX( void *args )
 {
     struct glFinishTextureSUNX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFinishTextureSUNX();
+    funcs->p_glFinishTextureSUNX();
     return STATUS_SUCCESS;
 }
 
@@ -6736,7 +6736,7 @@ static NTSTATUS ext_glFlushMappedBufferRange( void *args )
 {
     struct glFlushMappedBufferRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFlushMappedBufferRange( params->target, params->offset, params->length );
+    funcs->p_glFlushMappedBufferRange( params->target, params->offset, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -6744,7 +6744,7 @@ static NTSTATUS ext_glFlushMappedBufferRangeAPPLE( void *args )
 {
     struct glFlushMappedBufferRangeAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFlushMappedBufferRangeAPPLE( params->target, params->offset, params->size );
+    funcs->p_glFlushMappedBufferRangeAPPLE( params->target, params->offset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -6752,7 +6752,7 @@ static NTSTATUS ext_glFlushMappedNamedBufferRange( void *args )
 {
     struct glFlushMappedNamedBufferRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFlushMappedNamedBufferRange( params->buffer, params->offset, params->length );
+    funcs->p_glFlushMappedNamedBufferRange( params->buffer, params->offset, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -6760,7 +6760,7 @@ static NTSTATUS ext_glFlushMappedNamedBufferRangeEXT( void *args )
 {
     struct glFlushMappedNamedBufferRangeEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFlushMappedNamedBufferRangeEXT( params->buffer, params->offset, params->length );
+    funcs->p_glFlushMappedNamedBufferRangeEXT( params->buffer, params->offset, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -6768,7 +6768,7 @@ static NTSTATUS ext_glFlushPixelDataRangeNV( void *args )
 {
     struct glFlushPixelDataRangeNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFlushPixelDataRangeNV( params->target );
+    funcs->p_glFlushPixelDataRangeNV( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -6776,7 +6776,7 @@ static NTSTATUS ext_glFlushRasterSGIX( void *args )
 {
     struct glFlushRasterSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFlushRasterSGIX();
+    funcs->p_glFlushRasterSGIX();
     return STATUS_SUCCESS;
 }
 
@@ -6784,7 +6784,7 @@ static NTSTATUS ext_glFlushStaticDataIBM( void *args )
 {
     struct glFlushStaticDataIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFlushStaticDataIBM( params->target );
+    funcs->p_glFlushStaticDataIBM( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -6792,7 +6792,7 @@ static NTSTATUS ext_glFlushVertexArrayRangeAPPLE( void *args )
 {
     struct glFlushVertexArrayRangeAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFlushVertexArrayRangeAPPLE( params->length, params->pointer );
+    funcs->p_glFlushVertexArrayRangeAPPLE( params->length, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -6800,7 +6800,7 @@ static NTSTATUS ext_glFlushVertexArrayRangeNV( void *args )
 {
     struct glFlushVertexArrayRangeNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFlushVertexArrayRangeNV();
+    funcs->p_glFlushVertexArrayRangeNV();
     return STATUS_SUCCESS;
 }
 
@@ -6808,7 +6808,7 @@ static NTSTATUS ext_glFogCoordFormatNV( void *args )
 {
     struct glFogCoordFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordFormatNV( params->type, params->stride );
+    funcs->p_glFogCoordFormatNV( params->type, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -6816,7 +6816,7 @@ static NTSTATUS ext_glFogCoordPointer( void *args )
 {
     struct glFogCoordPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordPointer( params->type, params->stride, params->pointer );
+    funcs->p_glFogCoordPointer( params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -6824,7 +6824,7 @@ static NTSTATUS ext_glFogCoordPointerEXT( void *args )
 {
     struct glFogCoordPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordPointerEXT( params->type, params->stride, params->pointer );
+    funcs->p_glFogCoordPointerEXT( params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -6832,7 +6832,7 @@ static NTSTATUS ext_glFogCoordPointerListIBM( void *args )
 {
     struct glFogCoordPointerListIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordPointerListIBM( params->type, params->stride, params->pointer, params->ptrstride );
+    funcs->p_glFogCoordPointerListIBM( params->type, params->stride, params->pointer, params->ptrstride );
     return STATUS_SUCCESS;
 }
 
@@ -6840,7 +6840,7 @@ static NTSTATUS ext_glFogCoordd( void *args )
 {
     struct glFogCoordd_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordd( params->coord );
+    funcs->p_glFogCoordd( params->coord );
     return STATUS_SUCCESS;
 }
 
@@ -6848,7 +6848,7 @@ static NTSTATUS ext_glFogCoorddEXT( void *args )
 {
     struct glFogCoorddEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoorddEXT( params->coord );
+    funcs->p_glFogCoorddEXT( params->coord );
     return STATUS_SUCCESS;
 }
 
@@ -6856,7 +6856,7 @@ static NTSTATUS ext_glFogCoorddv( void *args )
 {
     struct glFogCoorddv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoorddv( params->coord );
+    funcs->p_glFogCoorddv( params->coord );
     return STATUS_SUCCESS;
 }
 
@@ -6864,7 +6864,7 @@ static NTSTATUS ext_glFogCoorddvEXT( void *args )
 {
     struct glFogCoorddvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoorddvEXT( params->coord );
+    funcs->p_glFogCoorddvEXT( params->coord );
     return STATUS_SUCCESS;
 }
 
@@ -6872,7 +6872,7 @@ static NTSTATUS ext_glFogCoordf( void *args )
 {
     struct glFogCoordf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordf( params->coord );
+    funcs->p_glFogCoordf( params->coord );
     return STATUS_SUCCESS;
 }
 
@@ -6880,7 +6880,7 @@ static NTSTATUS ext_glFogCoordfEXT( void *args )
 {
     struct glFogCoordfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordfEXT( params->coord );
+    funcs->p_glFogCoordfEXT( params->coord );
     return STATUS_SUCCESS;
 }
 
@@ -6888,7 +6888,7 @@ static NTSTATUS ext_glFogCoordfv( void *args )
 {
     struct glFogCoordfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordfv( params->coord );
+    funcs->p_glFogCoordfv( params->coord );
     return STATUS_SUCCESS;
 }
 
@@ -6896,7 +6896,7 @@ static NTSTATUS ext_glFogCoordfvEXT( void *args )
 {
     struct glFogCoordfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordfvEXT( params->coord );
+    funcs->p_glFogCoordfvEXT( params->coord );
     return STATUS_SUCCESS;
 }
 
@@ -6904,7 +6904,7 @@ static NTSTATUS ext_glFogCoordhNV( void *args )
 {
     struct glFogCoordhNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordhNV( params->fog );
+    funcs->p_glFogCoordhNV( params->fog );
     return STATUS_SUCCESS;
 }
 
@@ -6912,7 +6912,7 @@ static NTSTATUS ext_glFogCoordhvNV( void *args )
 {
     struct glFogCoordhvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogCoordhvNV( params->fog );
+    funcs->p_glFogCoordhvNV( params->fog );
     return STATUS_SUCCESS;
 }
 
@@ -6920,7 +6920,7 @@ static NTSTATUS ext_glFogFuncSGIS( void *args )
 {
     struct glFogFuncSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogFuncSGIS( params->n, params->points );
+    funcs->p_glFogFuncSGIS( params->n, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -6928,7 +6928,7 @@ static NTSTATUS ext_glFogxOES( void *args )
 {
     struct glFogxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogxOES( params->pname, params->param );
+    funcs->p_glFogxOES( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -6936,7 +6936,7 @@ static NTSTATUS ext_glFogxvOES( void *args )
 {
     struct glFogxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFogxvOES( params->pname, params->param );
+    funcs->p_glFogxvOES( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -6944,7 +6944,7 @@ static NTSTATUS ext_glFragmentColorMaterialSGIX( void *args )
 {
     struct glFragmentColorMaterialSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentColorMaterialSGIX( params->face, params->mode );
+    funcs->p_glFragmentColorMaterialSGIX( params->face, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -6952,7 +6952,7 @@ static NTSTATUS ext_glFragmentCoverageColorNV( void *args )
 {
     struct glFragmentCoverageColorNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentCoverageColorNV( params->color );
+    funcs->p_glFragmentCoverageColorNV( params->color );
     return STATUS_SUCCESS;
 }
 
@@ -6960,7 +6960,7 @@ static NTSTATUS ext_glFragmentLightModelfSGIX( void *args )
 {
     struct glFragmentLightModelfSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentLightModelfSGIX( params->pname, params->param );
+    funcs->p_glFragmentLightModelfSGIX( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -6968,7 +6968,7 @@ static NTSTATUS ext_glFragmentLightModelfvSGIX( void *args )
 {
     struct glFragmentLightModelfvSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentLightModelfvSGIX( params->pname, params->params );
+    funcs->p_glFragmentLightModelfvSGIX( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -6976,7 +6976,7 @@ static NTSTATUS ext_glFragmentLightModeliSGIX( void *args )
 {
     struct glFragmentLightModeliSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentLightModeliSGIX( params->pname, params->param );
+    funcs->p_glFragmentLightModeliSGIX( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -6984,7 +6984,7 @@ static NTSTATUS ext_glFragmentLightModelivSGIX( void *args )
 {
     struct glFragmentLightModelivSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentLightModelivSGIX( params->pname, params->params );
+    funcs->p_glFragmentLightModelivSGIX( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -6992,7 +6992,7 @@ static NTSTATUS ext_glFragmentLightfSGIX( void *args )
 {
     struct glFragmentLightfSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentLightfSGIX( params->light, params->pname, params->param );
+    funcs->p_glFragmentLightfSGIX( params->light, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -7000,7 +7000,7 @@ static NTSTATUS ext_glFragmentLightfvSGIX( void *args )
 {
     struct glFragmentLightfvSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentLightfvSGIX( params->light, params->pname, params->params );
+    funcs->p_glFragmentLightfvSGIX( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7008,7 +7008,7 @@ static NTSTATUS ext_glFragmentLightiSGIX( void *args )
 {
     struct glFragmentLightiSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentLightiSGIX( params->light, params->pname, params->param );
+    funcs->p_glFragmentLightiSGIX( params->light, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -7016,7 +7016,7 @@ static NTSTATUS ext_glFragmentLightivSGIX( void *args )
 {
     struct glFragmentLightivSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentLightivSGIX( params->light, params->pname, params->params );
+    funcs->p_glFragmentLightivSGIX( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7024,7 +7024,7 @@ static NTSTATUS ext_glFragmentMaterialfSGIX( void *args )
 {
     struct glFragmentMaterialfSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentMaterialfSGIX( params->face, params->pname, params->param );
+    funcs->p_glFragmentMaterialfSGIX( params->face, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -7032,7 +7032,7 @@ static NTSTATUS ext_glFragmentMaterialfvSGIX( void *args )
 {
     struct glFragmentMaterialfvSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentMaterialfvSGIX( params->face, params->pname, params->params );
+    funcs->p_glFragmentMaterialfvSGIX( params->face, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7040,7 +7040,7 @@ static NTSTATUS ext_glFragmentMaterialiSGIX( void *args )
 {
     struct glFragmentMaterialiSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentMaterialiSGIX( params->face, params->pname, params->param );
+    funcs->p_glFragmentMaterialiSGIX( params->face, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -7048,7 +7048,7 @@ static NTSTATUS ext_glFragmentMaterialivSGIX( void *args )
 {
     struct glFragmentMaterialivSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFragmentMaterialivSGIX( params->face, params->pname, params->params );
+    funcs->p_glFragmentMaterialivSGIX( params->face, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7056,7 +7056,7 @@ static NTSTATUS ext_glFrameTerminatorGREMEDY( void *args )
 {
     struct glFrameTerminatorGREMEDY_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFrameTerminatorGREMEDY();
+    funcs->p_glFrameTerminatorGREMEDY();
     return STATUS_SUCCESS;
 }
 
@@ -7064,7 +7064,7 @@ static NTSTATUS ext_glFrameZoomSGIX( void *args )
 {
     struct glFrameZoomSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFrameZoomSGIX( params->factor );
+    funcs->p_glFrameZoomSGIX( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -7072,7 +7072,7 @@ static NTSTATUS ext_glFramebufferDrawBufferEXT( void *args )
 {
     struct glFramebufferDrawBufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferDrawBufferEXT( params->framebuffer, params->mode );
+    funcs->p_glFramebufferDrawBufferEXT( params->framebuffer, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -7080,7 +7080,7 @@ static NTSTATUS ext_glFramebufferDrawBuffersEXT( void *args )
 {
     struct glFramebufferDrawBuffersEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferDrawBuffersEXT( params->framebuffer, params->n, params->bufs );
+    funcs->p_glFramebufferDrawBuffersEXT( params->framebuffer, params->n, params->bufs );
     return STATUS_SUCCESS;
 }
 
@@ -7088,7 +7088,7 @@ static NTSTATUS ext_glFramebufferFetchBarrierEXT( void *args )
 {
     struct glFramebufferFetchBarrierEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferFetchBarrierEXT();
+    funcs->p_glFramebufferFetchBarrierEXT();
     return STATUS_SUCCESS;
 }
 
@@ -7096,7 +7096,7 @@ static NTSTATUS ext_glFramebufferParameteri( void *args )
 {
     struct glFramebufferParameteri_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferParameteri( params->target, params->pname, params->param );
+    funcs->p_glFramebufferParameteri( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -7104,7 +7104,7 @@ static NTSTATUS ext_glFramebufferParameteriMESA( void *args )
 {
     struct glFramebufferParameteriMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferParameteriMESA( params->target, params->pname, params->param );
+    funcs->p_glFramebufferParameteriMESA( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -7112,7 +7112,7 @@ static NTSTATUS ext_glFramebufferReadBufferEXT( void *args )
 {
     struct glFramebufferReadBufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferReadBufferEXT( params->framebuffer, params->mode );
+    funcs->p_glFramebufferReadBufferEXT( params->framebuffer, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -7120,7 +7120,7 @@ static NTSTATUS ext_glFramebufferRenderbuffer( void *args )
 {
     struct glFramebufferRenderbuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferRenderbuffer( params->target, params->attachment, params->renderbuffertarget, params->renderbuffer );
+    funcs->p_glFramebufferRenderbuffer( params->target, params->attachment, params->renderbuffertarget, params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -7128,7 +7128,7 @@ static NTSTATUS ext_glFramebufferRenderbufferEXT( void *args )
 {
     struct glFramebufferRenderbufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferRenderbufferEXT( params->target, params->attachment, params->renderbuffertarget, params->renderbuffer );
+    funcs->p_glFramebufferRenderbufferEXT( params->target, params->attachment, params->renderbuffertarget, params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -7136,7 +7136,7 @@ static NTSTATUS ext_glFramebufferSampleLocationsfvARB( void *args )
 {
     struct glFramebufferSampleLocationsfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferSampleLocationsfvARB( params->target, params->start, params->count, params->v );
+    funcs->p_glFramebufferSampleLocationsfvARB( params->target, params->start, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -7144,7 +7144,7 @@ static NTSTATUS ext_glFramebufferSampleLocationsfvNV( void *args )
 {
     struct glFramebufferSampleLocationsfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferSampleLocationsfvNV( params->target, params->start, params->count, params->v );
+    funcs->p_glFramebufferSampleLocationsfvNV( params->target, params->start, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -7152,7 +7152,7 @@ static NTSTATUS ext_glFramebufferSamplePositionsfvAMD( void *args )
 {
     struct glFramebufferSamplePositionsfvAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferSamplePositionsfvAMD( params->target, params->numsamples, params->pixelindex, params->values );
+    funcs->p_glFramebufferSamplePositionsfvAMD( params->target, params->numsamples, params->pixelindex, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -7160,7 +7160,7 @@ static NTSTATUS ext_glFramebufferTexture( void *args )
 {
     struct glFramebufferTexture_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTexture( params->target, params->attachment, params->texture, params->level );
+    funcs->p_glFramebufferTexture( params->target, params->attachment, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -7168,7 +7168,7 @@ static NTSTATUS ext_glFramebufferTexture1D( void *args )
 {
     struct glFramebufferTexture1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTexture1D( params->target, params->attachment, params->textarget, params->texture, params->level );
+    funcs->p_glFramebufferTexture1D( params->target, params->attachment, params->textarget, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -7176,7 +7176,7 @@ static NTSTATUS ext_glFramebufferTexture1DEXT( void *args )
 {
     struct glFramebufferTexture1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTexture1DEXT( params->target, params->attachment, params->textarget, params->texture, params->level );
+    funcs->p_glFramebufferTexture1DEXT( params->target, params->attachment, params->textarget, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -7184,7 +7184,7 @@ static NTSTATUS ext_glFramebufferTexture2D( void *args )
 {
     struct glFramebufferTexture2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTexture2D( params->target, params->attachment, params->textarget, params->texture, params->level );
+    funcs->p_glFramebufferTexture2D( params->target, params->attachment, params->textarget, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -7192,7 +7192,7 @@ static NTSTATUS ext_glFramebufferTexture2DEXT( void *args )
 {
     struct glFramebufferTexture2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTexture2DEXT( params->target, params->attachment, params->textarget, params->texture, params->level );
+    funcs->p_glFramebufferTexture2DEXT( params->target, params->attachment, params->textarget, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -7200,7 +7200,7 @@ static NTSTATUS ext_glFramebufferTexture3D( void *args )
 {
     struct glFramebufferTexture3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTexture3D( params->target, params->attachment, params->textarget, params->texture, params->level, params->zoffset );
+    funcs->p_glFramebufferTexture3D( params->target, params->attachment, params->textarget, params->texture, params->level, params->zoffset );
     return STATUS_SUCCESS;
 }
 
@@ -7208,7 +7208,7 @@ static NTSTATUS ext_glFramebufferTexture3DEXT( void *args )
 {
     struct glFramebufferTexture3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTexture3DEXT( params->target, params->attachment, params->textarget, params->texture, params->level, params->zoffset );
+    funcs->p_glFramebufferTexture3DEXT( params->target, params->attachment, params->textarget, params->texture, params->level, params->zoffset );
     return STATUS_SUCCESS;
 }
 
@@ -7216,7 +7216,7 @@ static NTSTATUS ext_glFramebufferTextureARB( void *args )
 {
     struct glFramebufferTextureARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTextureARB( params->target, params->attachment, params->texture, params->level );
+    funcs->p_glFramebufferTextureARB( params->target, params->attachment, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -7224,7 +7224,7 @@ static NTSTATUS ext_glFramebufferTextureEXT( void *args )
 {
     struct glFramebufferTextureEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTextureEXT( params->target, params->attachment, params->texture, params->level );
+    funcs->p_glFramebufferTextureEXT( params->target, params->attachment, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -7232,7 +7232,7 @@ static NTSTATUS ext_glFramebufferTextureFaceARB( void *args )
 {
     struct glFramebufferTextureFaceARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTextureFaceARB( params->target, params->attachment, params->texture, params->level, params->face );
+    funcs->p_glFramebufferTextureFaceARB( params->target, params->attachment, params->texture, params->level, params->face );
     return STATUS_SUCCESS;
 }
 
@@ -7240,7 +7240,7 @@ static NTSTATUS ext_glFramebufferTextureFaceEXT( void *args )
 {
     struct glFramebufferTextureFaceEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTextureFaceEXT( params->target, params->attachment, params->texture, params->level, params->face );
+    funcs->p_glFramebufferTextureFaceEXT( params->target, params->attachment, params->texture, params->level, params->face );
     return STATUS_SUCCESS;
 }
 
@@ -7248,7 +7248,7 @@ static NTSTATUS ext_glFramebufferTextureLayer( void *args )
 {
     struct glFramebufferTextureLayer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTextureLayer( params->target, params->attachment, params->texture, params->level, params->layer );
+    funcs->p_glFramebufferTextureLayer( params->target, params->attachment, params->texture, params->level, params->layer );
     return STATUS_SUCCESS;
 }
 
@@ -7256,7 +7256,7 @@ static NTSTATUS ext_glFramebufferTextureLayerARB( void *args )
 {
     struct glFramebufferTextureLayerARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTextureLayerARB( params->target, params->attachment, params->texture, params->level, params->layer );
+    funcs->p_glFramebufferTextureLayerARB( params->target, params->attachment, params->texture, params->level, params->layer );
     return STATUS_SUCCESS;
 }
 
@@ -7264,7 +7264,7 @@ static NTSTATUS ext_glFramebufferTextureLayerEXT( void *args )
 {
     struct glFramebufferTextureLayerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTextureLayerEXT( params->target, params->attachment, params->texture, params->level, params->layer );
+    funcs->p_glFramebufferTextureLayerEXT( params->target, params->attachment, params->texture, params->level, params->layer );
     return STATUS_SUCCESS;
 }
 
@@ -7272,7 +7272,7 @@ static NTSTATUS ext_glFramebufferTextureMultiviewOVR( void *args )
 {
     struct glFramebufferTextureMultiviewOVR_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFramebufferTextureMultiviewOVR( params->target, params->attachment, params->texture, params->level, params->baseViewIndex, params->numViews );
+    funcs->p_glFramebufferTextureMultiviewOVR( params->target, params->attachment, params->texture, params->level, params->baseViewIndex, params->numViews );
     return STATUS_SUCCESS;
 }
 
@@ -7280,7 +7280,7 @@ static NTSTATUS ext_glFreeObjectBufferATI( void *args )
 {
     struct glFreeObjectBufferATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFreeObjectBufferATI( params->buffer );
+    funcs->p_glFreeObjectBufferATI( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -7288,7 +7288,7 @@ static NTSTATUS ext_glFrustumfOES( void *args )
 {
     struct glFrustumfOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFrustumfOES( params->l, params->r, params->b, params->t, params->n, params->f );
+    funcs->p_glFrustumfOES( params->l, params->r, params->b, params->t, params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -7296,7 +7296,7 @@ static NTSTATUS ext_glFrustumxOES( void *args )
 {
     struct glFrustumxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glFrustumxOES( params->l, params->r, params->b, params->t, params->n, params->f );
+    funcs->p_glFrustumxOES( params->l, params->r, params->b, params->t, params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -7304,7 +7304,7 @@ static NTSTATUS ext_glGenAsyncMarkersSGIX( void *args )
 {
     struct glGenAsyncMarkersSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGenAsyncMarkersSGIX( params->range );
+    params->ret = funcs->p_glGenAsyncMarkersSGIX( params->range );
     return STATUS_SUCCESS;
 }
 
@@ -7312,7 +7312,7 @@ static NTSTATUS ext_glGenBuffers( void *args )
 {
     struct glGenBuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenBuffers( params->n, params->buffers );
+    funcs->p_glGenBuffers( params->n, params->buffers );
     return STATUS_SUCCESS;
 }
 
@@ -7320,7 +7320,7 @@ static NTSTATUS ext_glGenBuffersARB( void *args )
 {
     struct glGenBuffersARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenBuffersARB( params->n, params->buffers );
+    funcs->p_glGenBuffersARB( params->n, params->buffers );
     return STATUS_SUCCESS;
 }
 
@@ -7328,7 +7328,7 @@ static NTSTATUS ext_glGenFencesAPPLE( void *args )
 {
     struct glGenFencesAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenFencesAPPLE( params->n, params->fences );
+    funcs->p_glGenFencesAPPLE( params->n, params->fences );
     return STATUS_SUCCESS;
 }
 
@@ -7336,7 +7336,7 @@ static NTSTATUS ext_glGenFencesNV( void *args )
 {
     struct glGenFencesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenFencesNV( params->n, params->fences );
+    funcs->p_glGenFencesNV( params->n, params->fences );
     return STATUS_SUCCESS;
 }
 
@@ -7344,7 +7344,7 @@ static NTSTATUS ext_glGenFragmentShadersATI( void *args )
 {
     struct glGenFragmentShadersATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGenFragmentShadersATI( params->range );
+    params->ret = funcs->p_glGenFragmentShadersATI( params->range );
     return STATUS_SUCCESS;
 }
 
@@ -7352,7 +7352,7 @@ static NTSTATUS ext_glGenFramebuffers( void *args )
 {
     struct glGenFramebuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenFramebuffers( params->n, params->framebuffers );
+    funcs->p_glGenFramebuffers( params->n, params->framebuffers );
     return STATUS_SUCCESS;
 }
 
@@ -7360,7 +7360,7 @@ static NTSTATUS ext_glGenFramebuffersEXT( void *args )
 {
     struct glGenFramebuffersEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenFramebuffersEXT( params->n, params->framebuffers );
+    funcs->p_glGenFramebuffersEXT( params->n, params->framebuffers );
     return STATUS_SUCCESS;
 }
 
@@ -7368,7 +7368,7 @@ static NTSTATUS ext_glGenNamesAMD( void *args )
 {
     struct glGenNamesAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenNamesAMD( params->identifier, params->num, params->names );
+    funcs->p_glGenNamesAMD( params->identifier, params->num, params->names );
     return STATUS_SUCCESS;
 }
 
@@ -7376,7 +7376,7 @@ static NTSTATUS ext_glGenOcclusionQueriesNV( void *args )
 {
     struct glGenOcclusionQueriesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenOcclusionQueriesNV( params->n, params->ids );
+    funcs->p_glGenOcclusionQueriesNV( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -7384,7 +7384,7 @@ static NTSTATUS ext_glGenPathsNV( void *args )
 {
     struct glGenPathsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGenPathsNV( params->range );
+    params->ret = funcs->p_glGenPathsNV( params->range );
     return STATUS_SUCCESS;
 }
 
@@ -7392,7 +7392,7 @@ static NTSTATUS ext_glGenPerfMonitorsAMD( void *args )
 {
     struct glGenPerfMonitorsAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenPerfMonitorsAMD( params->n, params->monitors );
+    funcs->p_glGenPerfMonitorsAMD( params->n, params->monitors );
     return STATUS_SUCCESS;
 }
 
@@ -7400,7 +7400,7 @@ static NTSTATUS ext_glGenProgramPipelines( void *args )
 {
     struct glGenProgramPipelines_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenProgramPipelines( params->n, params->pipelines );
+    funcs->p_glGenProgramPipelines( params->n, params->pipelines );
     return STATUS_SUCCESS;
 }
 
@@ -7408,7 +7408,7 @@ static NTSTATUS ext_glGenProgramsARB( void *args )
 {
     struct glGenProgramsARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenProgramsARB( params->n, params->programs );
+    funcs->p_glGenProgramsARB( params->n, params->programs );
     return STATUS_SUCCESS;
 }
 
@@ -7416,7 +7416,7 @@ static NTSTATUS ext_glGenProgramsNV( void *args )
 {
     struct glGenProgramsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenProgramsNV( params->n, params->programs );
+    funcs->p_glGenProgramsNV( params->n, params->programs );
     return STATUS_SUCCESS;
 }
 
@@ -7424,7 +7424,7 @@ static NTSTATUS ext_glGenQueries( void *args )
 {
     struct glGenQueries_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenQueries( params->n, params->ids );
+    funcs->p_glGenQueries( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -7432,7 +7432,7 @@ static NTSTATUS ext_glGenQueriesARB( void *args )
 {
     struct glGenQueriesARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenQueriesARB( params->n, params->ids );
+    funcs->p_glGenQueriesARB( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -7440,7 +7440,7 @@ static NTSTATUS ext_glGenQueryResourceTagNV( void *args )
 {
     struct glGenQueryResourceTagNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenQueryResourceTagNV( params->n, params->tagIds );
+    funcs->p_glGenQueryResourceTagNV( params->n, params->tagIds );
     return STATUS_SUCCESS;
 }
 
@@ -7448,7 +7448,7 @@ static NTSTATUS ext_glGenRenderbuffers( void *args )
 {
     struct glGenRenderbuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenRenderbuffers( params->n, params->renderbuffers );
+    funcs->p_glGenRenderbuffers( params->n, params->renderbuffers );
     return STATUS_SUCCESS;
 }
 
@@ -7456,7 +7456,7 @@ static NTSTATUS ext_glGenRenderbuffersEXT( void *args )
 {
     struct glGenRenderbuffersEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenRenderbuffersEXT( params->n, params->renderbuffers );
+    funcs->p_glGenRenderbuffersEXT( params->n, params->renderbuffers );
     return STATUS_SUCCESS;
 }
 
@@ -7464,7 +7464,7 @@ static NTSTATUS ext_glGenSamplers( void *args )
 {
     struct glGenSamplers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenSamplers( params->count, params->samplers );
+    funcs->p_glGenSamplers( params->count, params->samplers );
     return STATUS_SUCCESS;
 }
 
@@ -7472,7 +7472,7 @@ static NTSTATUS ext_glGenSemaphoresEXT( void *args )
 {
     struct glGenSemaphoresEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenSemaphoresEXT( params->n, params->semaphores );
+    funcs->p_glGenSemaphoresEXT( params->n, params->semaphores );
     return STATUS_SUCCESS;
 }
 
@@ -7480,7 +7480,7 @@ static NTSTATUS ext_glGenSymbolsEXT( void *args )
 {
     struct glGenSymbolsEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGenSymbolsEXT( params->datatype, params->storagetype, params->range, params->components );
+    params->ret = funcs->p_glGenSymbolsEXT( params->datatype, params->storagetype, params->range, params->components );
     return STATUS_SUCCESS;
 }
 
@@ -7488,7 +7488,7 @@ static NTSTATUS ext_glGenTexturesEXT( void *args )
 {
     struct glGenTexturesEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenTexturesEXT( params->n, params->textures );
+    funcs->p_glGenTexturesEXT( params->n, params->textures );
     return STATUS_SUCCESS;
 }
 
@@ -7496,7 +7496,7 @@ static NTSTATUS ext_glGenTransformFeedbacks( void *args )
 {
     struct glGenTransformFeedbacks_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenTransformFeedbacks( params->n, params->ids );
+    funcs->p_glGenTransformFeedbacks( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -7504,7 +7504,7 @@ static NTSTATUS ext_glGenTransformFeedbacksNV( void *args )
 {
     struct glGenTransformFeedbacksNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenTransformFeedbacksNV( params->n, params->ids );
+    funcs->p_glGenTransformFeedbacksNV( params->n, params->ids );
     return STATUS_SUCCESS;
 }
 
@@ -7512,7 +7512,7 @@ static NTSTATUS ext_glGenVertexArrays( void *args )
 {
     struct glGenVertexArrays_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenVertexArrays( params->n, params->arrays );
+    funcs->p_glGenVertexArrays( params->n, params->arrays );
     return STATUS_SUCCESS;
 }
 
@@ -7520,7 +7520,7 @@ static NTSTATUS ext_glGenVertexArraysAPPLE( void *args )
 {
     struct glGenVertexArraysAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenVertexArraysAPPLE( params->n, params->arrays );
+    funcs->p_glGenVertexArraysAPPLE( params->n, params->arrays );
     return STATUS_SUCCESS;
 }
 
@@ -7528,7 +7528,7 @@ static NTSTATUS ext_glGenVertexShadersEXT( void *args )
 {
     struct glGenVertexShadersEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGenVertexShadersEXT( params->range );
+    params->ret = funcs->p_glGenVertexShadersEXT( params->range );
     return STATUS_SUCCESS;
 }
 
@@ -7536,7 +7536,7 @@ static NTSTATUS ext_glGenerateMipmap( void *args )
 {
     struct glGenerateMipmap_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenerateMipmap( params->target );
+    funcs->p_glGenerateMipmap( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -7544,7 +7544,7 @@ static NTSTATUS ext_glGenerateMipmapEXT( void *args )
 {
     struct glGenerateMipmapEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenerateMipmapEXT( params->target );
+    funcs->p_glGenerateMipmapEXT( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -7552,7 +7552,7 @@ static NTSTATUS ext_glGenerateMultiTexMipmapEXT( void *args )
 {
     struct glGenerateMultiTexMipmapEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenerateMultiTexMipmapEXT( params->texunit, params->target );
+    funcs->p_glGenerateMultiTexMipmapEXT( params->texunit, params->target );
     return STATUS_SUCCESS;
 }
 
@@ -7560,7 +7560,7 @@ static NTSTATUS ext_glGenerateTextureMipmap( void *args )
 {
     struct glGenerateTextureMipmap_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenerateTextureMipmap( params->texture );
+    funcs->p_glGenerateTextureMipmap( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -7568,7 +7568,7 @@ static NTSTATUS ext_glGenerateTextureMipmapEXT( void *args )
 {
     struct glGenerateTextureMipmapEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGenerateTextureMipmapEXT( params->texture, params->target );
+    funcs->p_glGenerateTextureMipmapEXT( params->texture, params->target );
     return STATUS_SUCCESS;
 }
 
@@ -7576,7 +7576,7 @@ static NTSTATUS ext_glGetActiveAtomicCounterBufferiv( void *args )
 {
     struct glGetActiveAtomicCounterBufferiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveAtomicCounterBufferiv( params->program, params->bufferIndex, params->pname, params->params );
+    funcs->p_glGetActiveAtomicCounterBufferiv( params->program, params->bufferIndex, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7584,7 +7584,7 @@ static NTSTATUS ext_glGetActiveAttrib( void *args )
 {
     struct glGetActiveAttrib_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveAttrib( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
+    funcs->p_glGetActiveAttrib( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -7592,7 +7592,7 @@ static NTSTATUS ext_glGetActiveAttribARB( void *args )
 {
     struct glGetActiveAttribARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveAttribARB( params->programObj, params->index, params->maxLength, params->length, params->size, params->type, params->name );
+    funcs->p_glGetActiveAttribARB( params->programObj, params->index, params->maxLength, params->length, params->size, params->type, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -7600,7 +7600,7 @@ static NTSTATUS ext_glGetActiveSubroutineName( void *args )
 {
     struct glGetActiveSubroutineName_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveSubroutineName( params->program, params->shadertype, params->index, params->bufSize, params->length, params->name );
+    funcs->p_glGetActiveSubroutineName( params->program, params->shadertype, params->index, params->bufSize, params->length, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -7608,7 +7608,7 @@ static NTSTATUS ext_glGetActiveSubroutineUniformName( void *args )
 {
     struct glGetActiveSubroutineUniformName_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveSubroutineUniformName( params->program, params->shadertype, params->index, params->bufSize, params->length, params->name );
+    funcs->p_glGetActiveSubroutineUniformName( params->program, params->shadertype, params->index, params->bufSize, params->length, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -7616,7 +7616,7 @@ static NTSTATUS ext_glGetActiveSubroutineUniformiv( void *args )
 {
     struct glGetActiveSubroutineUniformiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveSubroutineUniformiv( params->program, params->shadertype, params->index, params->pname, params->values );
+    funcs->p_glGetActiveSubroutineUniformiv( params->program, params->shadertype, params->index, params->pname, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -7624,7 +7624,7 @@ static NTSTATUS ext_glGetActiveUniform( void *args )
 {
     struct glGetActiveUniform_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveUniform( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
+    funcs->p_glGetActiveUniform( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -7632,7 +7632,7 @@ static NTSTATUS ext_glGetActiveUniformARB( void *args )
 {
     struct glGetActiveUniformARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveUniformARB( params->programObj, params->index, params->maxLength, params->length, params->size, params->type, params->name );
+    funcs->p_glGetActiveUniformARB( params->programObj, params->index, params->maxLength, params->length, params->size, params->type, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -7640,7 +7640,7 @@ static NTSTATUS ext_glGetActiveUniformBlockName( void *args )
 {
     struct glGetActiveUniformBlockName_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveUniformBlockName( params->program, params->uniformBlockIndex, params->bufSize, params->length, params->uniformBlockName );
+    funcs->p_glGetActiveUniformBlockName( params->program, params->uniformBlockIndex, params->bufSize, params->length, params->uniformBlockName );
     return STATUS_SUCCESS;
 }
 
@@ -7648,7 +7648,7 @@ static NTSTATUS ext_glGetActiveUniformBlockiv( void *args )
 {
     struct glGetActiveUniformBlockiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveUniformBlockiv( params->program, params->uniformBlockIndex, params->pname, params->params );
+    funcs->p_glGetActiveUniformBlockiv( params->program, params->uniformBlockIndex, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7656,7 +7656,7 @@ static NTSTATUS ext_glGetActiveUniformName( void *args )
 {
     struct glGetActiveUniformName_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveUniformName( params->program, params->uniformIndex, params->bufSize, params->length, params->uniformName );
+    funcs->p_glGetActiveUniformName( params->program, params->uniformIndex, params->bufSize, params->length, params->uniformName );
     return STATUS_SUCCESS;
 }
 
@@ -7664,7 +7664,7 @@ static NTSTATUS ext_glGetActiveUniformsiv( void *args )
 {
     struct glGetActiveUniformsiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveUniformsiv( params->program, params->uniformCount, params->uniformIndices, params->pname, params->params );
+    funcs->p_glGetActiveUniformsiv( params->program, params->uniformCount, params->uniformIndices, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7672,7 +7672,7 @@ static NTSTATUS ext_glGetActiveVaryingNV( void *args )
 {
     struct glGetActiveVaryingNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetActiveVaryingNV( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
+    funcs->p_glGetActiveVaryingNV( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -7680,7 +7680,7 @@ static NTSTATUS ext_glGetArrayObjectfvATI( void *args )
 {
     struct glGetArrayObjectfvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetArrayObjectfvATI( params->array, params->pname, params->params );
+    funcs->p_glGetArrayObjectfvATI( params->array, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7688,7 +7688,7 @@ static NTSTATUS ext_glGetArrayObjectivATI( void *args )
 {
     struct glGetArrayObjectivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetArrayObjectivATI( params->array, params->pname, params->params );
+    funcs->p_glGetArrayObjectivATI( params->array, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7696,7 +7696,7 @@ static NTSTATUS ext_glGetAttachedObjectsARB( void *args )
 {
     struct glGetAttachedObjectsARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetAttachedObjectsARB( params->containerObj, params->maxCount, params->count, params->obj );
+    funcs->p_glGetAttachedObjectsARB( params->containerObj, params->maxCount, params->count, params->obj );
     return STATUS_SUCCESS;
 }
 
@@ -7704,7 +7704,7 @@ static NTSTATUS ext_glGetAttachedShaders( void *args )
 {
     struct glGetAttachedShaders_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetAttachedShaders( params->program, params->maxCount, params->count, params->shaders );
+    funcs->p_glGetAttachedShaders( params->program, params->maxCount, params->count, params->shaders );
     return STATUS_SUCCESS;
 }
 
@@ -7712,7 +7712,7 @@ static NTSTATUS ext_glGetAttribLocation( void *args )
 {
     struct glGetAttribLocation_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetAttribLocation( params->program, params->name );
+    params->ret = funcs->p_glGetAttribLocation( params->program, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -7720,7 +7720,7 @@ static NTSTATUS ext_glGetAttribLocationARB( void *args )
 {
     struct glGetAttribLocationARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetAttribLocationARB( params->programObj, params->name );
+    params->ret = funcs->p_glGetAttribLocationARB( params->programObj, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -7728,7 +7728,7 @@ static NTSTATUS ext_glGetBooleanIndexedvEXT( void *args )
 {
     struct glGetBooleanIndexedvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBooleanIndexedvEXT( params->target, params->index, params->data );
+    funcs->p_glGetBooleanIndexedvEXT( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -7736,7 +7736,7 @@ static NTSTATUS ext_glGetBooleani_v( void *args )
 {
     struct glGetBooleani_v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBooleani_v( params->target, params->index, params->data );
+    funcs->p_glGetBooleani_v( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -7744,7 +7744,7 @@ static NTSTATUS ext_glGetBufferParameteri64v( void *args )
 {
     struct glGetBufferParameteri64v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBufferParameteri64v( params->target, params->pname, params->params );
+    funcs->p_glGetBufferParameteri64v( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7752,7 +7752,7 @@ static NTSTATUS ext_glGetBufferParameteriv( void *args )
 {
     struct glGetBufferParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBufferParameteriv( params->target, params->pname, params->params );
+    funcs->p_glGetBufferParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7760,7 +7760,7 @@ static NTSTATUS ext_glGetBufferParameterivARB( void *args )
 {
     struct glGetBufferParameterivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBufferParameterivARB( params->target, params->pname, params->params );
+    funcs->p_glGetBufferParameterivARB( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7768,7 +7768,7 @@ static NTSTATUS ext_glGetBufferParameterui64vNV( void *args )
 {
     struct glGetBufferParameterui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBufferParameterui64vNV( params->target, params->pname, params->params );
+    funcs->p_glGetBufferParameterui64vNV( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7776,7 +7776,7 @@ NTSTATUS ext_glGetBufferPointerv( void *args )
 {
     struct glGetBufferPointerv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBufferPointerv( params->target, params->pname, params->params );
+    funcs->p_glGetBufferPointerv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7784,7 +7784,7 @@ NTSTATUS ext_glGetBufferPointervARB( void *args )
 {
     struct glGetBufferPointervARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBufferPointervARB( params->target, params->pname, params->params );
+    funcs->p_glGetBufferPointervARB( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7792,7 +7792,7 @@ static NTSTATUS ext_glGetBufferSubData( void *args )
 {
     struct glGetBufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBufferSubData( params->target, params->offset, params->size, params->data );
+    funcs->p_glGetBufferSubData( params->target, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -7800,7 +7800,7 @@ static NTSTATUS ext_glGetBufferSubDataARB( void *args )
 {
     struct glGetBufferSubDataARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetBufferSubDataARB( params->target, params->offset, params->size, params->data );
+    funcs->p_glGetBufferSubDataARB( params->target, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -7808,7 +7808,7 @@ static NTSTATUS ext_glGetClipPlanefOES( void *args )
 {
     struct glGetClipPlanefOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetClipPlanefOES( params->plane, params->equation );
+    funcs->p_glGetClipPlanefOES( params->plane, params->equation );
     return STATUS_SUCCESS;
 }
 
@@ -7816,7 +7816,7 @@ static NTSTATUS ext_glGetClipPlanexOES( void *args )
 {
     struct glGetClipPlanexOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetClipPlanexOES( params->plane, params->equation );
+    funcs->p_glGetClipPlanexOES( params->plane, params->equation );
     return STATUS_SUCCESS;
 }
 
@@ -7824,7 +7824,7 @@ static NTSTATUS ext_glGetColorTable( void *args )
 {
     struct glGetColorTable_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetColorTable( params->target, params->format, params->type, params->table );
+    funcs->p_glGetColorTable( params->target, params->format, params->type, params->table );
     return STATUS_SUCCESS;
 }
 
@@ -7832,7 +7832,7 @@ static NTSTATUS ext_glGetColorTableEXT( void *args )
 {
     struct glGetColorTableEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetColorTableEXT( params->target, params->format, params->type, params->data );
+    funcs->p_glGetColorTableEXT( params->target, params->format, params->type, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -7840,7 +7840,7 @@ static NTSTATUS ext_glGetColorTableParameterfv( void *args )
 {
     struct glGetColorTableParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetColorTableParameterfv( params->target, params->pname, params->params );
+    funcs->p_glGetColorTableParameterfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7848,7 +7848,7 @@ static NTSTATUS ext_glGetColorTableParameterfvEXT( void *args )
 {
     struct glGetColorTableParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetColorTableParameterfvEXT( params->target, params->pname, params->params );
+    funcs->p_glGetColorTableParameterfvEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7856,7 +7856,7 @@ static NTSTATUS ext_glGetColorTableParameterfvSGI( void *args )
 {
     struct glGetColorTableParameterfvSGI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetColorTableParameterfvSGI( params->target, params->pname, params->params );
+    funcs->p_glGetColorTableParameterfvSGI( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7864,7 +7864,7 @@ static NTSTATUS ext_glGetColorTableParameteriv( void *args )
 {
     struct glGetColorTableParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetColorTableParameteriv( params->target, params->pname, params->params );
+    funcs->p_glGetColorTableParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7872,7 +7872,7 @@ static NTSTATUS ext_glGetColorTableParameterivEXT( void *args )
 {
     struct glGetColorTableParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetColorTableParameterivEXT( params->target, params->pname, params->params );
+    funcs->p_glGetColorTableParameterivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7880,7 +7880,7 @@ static NTSTATUS ext_glGetColorTableParameterivSGI( void *args )
 {
     struct glGetColorTableParameterivSGI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetColorTableParameterivSGI( params->target, params->pname, params->params );
+    funcs->p_glGetColorTableParameterivSGI( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7888,7 +7888,7 @@ static NTSTATUS ext_glGetColorTableSGI( void *args )
 {
     struct glGetColorTableSGI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetColorTableSGI( params->target, params->format, params->type, params->table );
+    funcs->p_glGetColorTableSGI( params->target, params->format, params->type, params->table );
     return STATUS_SUCCESS;
 }
 
@@ -7896,7 +7896,7 @@ static NTSTATUS ext_glGetCombinerInputParameterfvNV( void *args )
 {
     struct glGetCombinerInputParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCombinerInputParameterfvNV( params->stage, params->portion, params->variable, params->pname, params->params );
+    funcs->p_glGetCombinerInputParameterfvNV( params->stage, params->portion, params->variable, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7904,7 +7904,7 @@ static NTSTATUS ext_glGetCombinerInputParameterivNV( void *args )
 {
     struct glGetCombinerInputParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCombinerInputParameterivNV( params->stage, params->portion, params->variable, params->pname, params->params );
+    funcs->p_glGetCombinerInputParameterivNV( params->stage, params->portion, params->variable, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7912,7 +7912,7 @@ static NTSTATUS ext_glGetCombinerOutputParameterfvNV( void *args )
 {
     struct glGetCombinerOutputParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCombinerOutputParameterfvNV( params->stage, params->portion, params->pname, params->params );
+    funcs->p_glGetCombinerOutputParameterfvNV( params->stage, params->portion, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7920,7 +7920,7 @@ static NTSTATUS ext_glGetCombinerOutputParameterivNV( void *args )
 {
     struct glGetCombinerOutputParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCombinerOutputParameterivNV( params->stage, params->portion, params->pname, params->params );
+    funcs->p_glGetCombinerOutputParameterivNV( params->stage, params->portion, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7928,7 +7928,7 @@ static NTSTATUS ext_glGetCombinerStageParameterfvNV( void *args )
 {
     struct glGetCombinerStageParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCombinerStageParameterfvNV( params->stage, params->pname, params->params );
+    funcs->p_glGetCombinerStageParameterfvNV( params->stage, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -7936,7 +7936,7 @@ static NTSTATUS ext_glGetCommandHeaderNV( void *args )
 {
     struct glGetCommandHeaderNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetCommandHeaderNV( params->tokenID, params->size );
+    params->ret = funcs->p_glGetCommandHeaderNV( params->tokenID, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -7944,7 +7944,7 @@ static NTSTATUS ext_glGetCompressedMultiTexImageEXT( void *args )
 {
     struct glGetCompressedMultiTexImageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCompressedMultiTexImageEXT( params->texunit, params->target, params->lod, params->img );
+    funcs->p_glGetCompressedMultiTexImageEXT( params->texunit, params->target, params->lod, params->img );
     return STATUS_SUCCESS;
 }
 
@@ -7952,7 +7952,7 @@ static NTSTATUS ext_glGetCompressedTexImage( void *args )
 {
     struct glGetCompressedTexImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCompressedTexImage( params->target, params->level, params->img );
+    funcs->p_glGetCompressedTexImage( params->target, params->level, params->img );
     return STATUS_SUCCESS;
 }
 
@@ -7960,7 +7960,7 @@ static NTSTATUS ext_glGetCompressedTexImageARB( void *args )
 {
     struct glGetCompressedTexImageARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCompressedTexImageARB( params->target, params->level, params->img );
+    funcs->p_glGetCompressedTexImageARB( params->target, params->level, params->img );
     return STATUS_SUCCESS;
 }
 
@@ -7968,7 +7968,7 @@ static NTSTATUS ext_glGetCompressedTextureImage( void *args )
 {
     struct glGetCompressedTextureImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCompressedTextureImage( params->texture, params->level, params->bufSize, params->pixels );
+    funcs->p_glGetCompressedTextureImage( params->texture, params->level, params->bufSize, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -7976,7 +7976,7 @@ static NTSTATUS ext_glGetCompressedTextureImageEXT( void *args )
 {
     struct glGetCompressedTextureImageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCompressedTextureImageEXT( params->texture, params->target, params->lod, params->img );
+    funcs->p_glGetCompressedTextureImageEXT( params->texture, params->target, params->lod, params->img );
     return STATUS_SUCCESS;
 }
 
@@ -7984,7 +7984,7 @@ static NTSTATUS ext_glGetCompressedTextureSubImage( void *args )
 {
     struct glGetCompressedTextureSubImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCompressedTextureSubImage( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->bufSize, params->pixels );
+    funcs->p_glGetCompressedTextureSubImage( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->bufSize, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -7992,7 +7992,7 @@ static NTSTATUS ext_glGetConvolutionFilter( void *args )
 {
     struct glGetConvolutionFilter_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetConvolutionFilter( params->target, params->format, params->type, params->image );
+    funcs->p_glGetConvolutionFilter( params->target, params->format, params->type, params->image );
     return STATUS_SUCCESS;
 }
 
@@ -8000,7 +8000,7 @@ static NTSTATUS ext_glGetConvolutionFilterEXT( void *args )
 {
     struct glGetConvolutionFilterEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetConvolutionFilterEXT( params->target, params->format, params->type, params->image );
+    funcs->p_glGetConvolutionFilterEXT( params->target, params->format, params->type, params->image );
     return STATUS_SUCCESS;
 }
 
@@ -8008,7 +8008,7 @@ static NTSTATUS ext_glGetConvolutionParameterfv( void *args )
 {
     struct glGetConvolutionParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetConvolutionParameterfv( params->target, params->pname, params->params );
+    funcs->p_glGetConvolutionParameterfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8016,7 +8016,7 @@ static NTSTATUS ext_glGetConvolutionParameterfvEXT( void *args )
 {
     struct glGetConvolutionParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetConvolutionParameterfvEXT( params->target, params->pname, params->params );
+    funcs->p_glGetConvolutionParameterfvEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8024,7 +8024,7 @@ static NTSTATUS ext_glGetConvolutionParameteriv( void *args )
 {
     struct glGetConvolutionParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetConvolutionParameteriv( params->target, params->pname, params->params );
+    funcs->p_glGetConvolutionParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8032,7 +8032,7 @@ static NTSTATUS ext_glGetConvolutionParameterivEXT( void *args )
 {
     struct glGetConvolutionParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetConvolutionParameterivEXT( params->target, params->pname, params->params );
+    funcs->p_glGetConvolutionParameterivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8040,7 +8040,7 @@ static NTSTATUS ext_glGetConvolutionParameterxvOES( void *args )
 {
     struct glGetConvolutionParameterxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetConvolutionParameterxvOES( params->target, params->pname, params->params );
+    funcs->p_glGetConvolutionParameterxvOES( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8048,7 +8048,7 @@ static NTSTATUS ext_glGetCoverageModulationTableNV( void *args )
 {
     struct glGetCoverageModulationTableNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetCoverageModulationTableNV( params->bufSize, params->v );
+    funcs->p_glGetCoverageModulationTableNV( params->bufSize, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -8056,7 +8056,7 @@ static NTSTATUS ext_glGetDebugMessageLog( void *args )
 {
     struct glGetDebugMessageLog_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetDebugMessageLog( params->count, params->bufSize, params->sources, params->types, params->ids, params->severities, params->lengths, params->messageLog );
+    params->ret = funcs->p_glGetDebugMessageLog( params->count, params->bufSize, params->sources, params->types, params->ids, params->severities, params->lengths, params->messageLog );
     return STATUS_SUCCESS;
 }
 
@@ -8064,7 +8064,7 @@ static NTSTATUS ext_glGetDebugMessageLogAMD( void *args )
 {
     struct glGetDebugMessageLogAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetDebugMessageLogAMD( params->count, params->bufSize, params->categories, params->severities, params->ids, params->lengths, params->message );
+    params->ret = funcs->p_glGetDebugMessageLogAMD( params->count, params->bufSize, params->categories, params->severities, params->ids, params->lengths, params->message );
     return STATUS_SUCCESS;
 }
 
@@ -8072,7 +8072,7 @@ static NTSTATUS ext_glGetDebugMessageLogARB( void *args )
 {
     struct glGetDebugMessageLogARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetDebugMessageLogARB( params->count, params->bufSize, params->sources, params->types, params->ids, params->severities, params->lengths, params->messageLog );
+    params->ret = funcs->p_glGetDebugMessageLogARB( params->count, params->bufSize, params->sources, params->types, params->ids, params->severities, params->lengths, params->messageLog );
     return STATUS_SUCCESS;
 }
 
@@ -8080,7 +8080,7 @@ static NTSTATUS ext_glGetDetailTexFuncSGIS( void *args )
 {
     struct glGetDetailTexFuncSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetDetailTexFuncSGIS( params->target, params->points );
+    funcs->p_glGetDetailTexFuncSGIS( params->target, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -8088,7 +8088,7 @@ static NTSTATUS ext_glGetDoubleIndexedvEXT( void *args )
 {
     struct glGetDoubleIndexedvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetDoubleIndexedvEXT( params->target, params->index, params->data );
+    funcs->p_glGetDoubleIndexedvEXT( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8096,7 +8096,7 @@ static NTSTATUS ext_glGetDoublei_v( void *args )
 {
     struct glGetDoublei_v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetDoublei_v( params->target, params->index, params->data );
+    funcs->p_glGetDoublei_v( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8104,7 +8104,7 @@ static NTSTATUS ext_glGetDoublei_vEXT( void *args )
 {
     struct glGetDoublei_vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetDoublei_vEXT( params->pname, params->index, params->params );
+    funcs->p_glGetDoublei_vEXT( params->pname, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8112,7 +8112,7 @@ static NTSTATUS ext_glGetFenceivNV( void *args )
 {
     struct glGetFenceivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFenceivNV( params->fence, params->pname, params->params );
+    funcs->p_glGetFenceivNV( params->fence, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8120,7 +8120,7 @@ static NTSTATUS ext_glGetFinalCombinerInputParameterfvNV( void *args )
 {
     struct glGetFinalCombinerInputParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFinalCombinerInputParameterfvNV( params->variable, params->pname, params->params );
+    funcs->p_glGetFinalCombinerInputParameterfvNV( params->variable, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8128,7 +8128,7 @@ static NTSTATUS ext_glGetFinalCombinerInputParameterivNV( void *args )
 {
     struct glGetFinalCombinerInputParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFinalCombinerInputParameterivNV( params->variable, params->pname, params->params );
+    funcs->p_glGetFinalCombinerInputParameterivNV( params->variable, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8136,7 +8136,7 @@ static NTSTATUS ext_glGetFirstPerfQueryIdINTEL( void *args )
 {
     struct glGetFirstPerfQueryIdINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFirstPerfQueryIdINTEL( params->queryId );
+    funcs->p_glGetFirstPerfQueryIdINTEL( params->queryId );
     return STATUS_SUCCESS;
 }
 
@@ -8144,7 +8144,7 @@ static NTSTATUS ext_glGetFixedvOES( void *args )
 {
     struct glGetFixedvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFixedvOES( params->pname, params->params );
+    funcs->p_glGetFixedvOES( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8152,7 +8152,7 @@ static NTSTATUS ext_glGetFloatIndexedvEXT( void *args )
 {
     struct glGetFloatIndexedvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFloatIndexedvEXT( params->target, params->index, params->data );
+    funcs->p_glGetFloatIndexedvEXT( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8160,7 +8160,7 @@ static NTSTATUS ext_glGetFloati_v( void *args )
 {
     struct glGetFloati_v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFloati_v( params->target, params->index, params->data );
+    funcs->p_glGetFloati_v( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8168,7 +8168,7 @@ static NTSTATUS ext_glGetFloati_vEXT( void *args )
 {
     struct glGetFloati_vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFloati_vEXT( params->pname, params->index, params->params );
+    funcs->p_glGetFloati_vEXT( params->pname, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8176,7 +8176,7 @@ static NTSTATUS ext_glGetFogFuncSGIS( void *args )
 {
     struct glGetFogFuncSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFogFuncSGIS( params->points );
+    funcs->p_glGetFogFuncSGIS( params->points );
     return STATUS_SUCCESS;
 }
 
@@ -8184,7 +8184,7 @@ static NTSTATUS ext_glGetFragDataIndex( void *args )
 {
     struct glGetFragDataIndex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetFragDataIndex( params->program, params->name );
+    params->ret = funcs->p_glGetFragDataIndex( params->program, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -8192,7 +8192,7 @@ static NTSTATUS ext_glGetFragDataLocation( void *args )
 {
     struct glGetFragDataLocation_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetFragDataLocation( params->program, params->name );
+    params->ret = funcs->p_glGetFragDataLocation( params->program, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -8200,7 +8200,7 @@ static NTSTATUS ext_glGetFragDataLocationEXT( void *args )
 {
     struct glGetFragDataLocationEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetFragDataLocationEXT( params->program, params->name );
+    params->ret = funcs->p_glGetFragDataLocationEXT( params->program, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -8208,7 +8208,7 @@ static NTSTATUS ext_glGetFragmentLightfvSGIX( void *args )
 {
     struct glGetFragmentLightfvSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFragmentLightfvSGIX( params->light, params->pname, params->params );
+    funcs->p_glGetFragmentLightfvSGIX( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8216,7 +8216,7 @@ static NTSTATUS ext_glGetFragmentLightivSGIX( void *args )
 {
     struct glGetFragmentLightivSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFragmentLightivSGIX( params->light, params->pname, params->params );
+    funcs->p_glGetFragmentLightivSGIX( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8224,7 +8224,7 @@ static NTSTATUS ext_glGetFragmentMaterialfvSGIX( void *args )
 {
     struct glGetFragmentMaterialfvSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFragmentMaterialfvSGIX( params->face, params->pname, params->params );
+    funcs->p_glGetFragmentMaterialfvSGIX( params->face, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8232,7 +8232,7 @@ static NTSTATUS ext_glGetFragmentMaterialivSGIX( void *args )
 {
     struct glGetFragmentMaterialivSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFragmentMaterialivSGIX( params->face, params->pname, params->params );
+    funcs->p_glGetFragmentMaterialivSGIX( params->face, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8240,7 +8240,7 @@ static NTSTATUS ext_glGetFramebufferAttachmentParameteriv( void *args )
 {
     struct glGetFramebufferAttachmentParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFramebufferAttachmentParameteriv( params->target, params->attachment, params->pname, params->params );
+    funcs->p_glGetFramebufferAttachmentParameteriv( params->target, params->attachment, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8248,7 +8248,7 @@ static NTSTATUS ext_glGetFramebufferAttachmentParameterivEXT( void *args )
 {
     struct glGetFramebufferAttachmentParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFramebufferAttachmentParameterivEXT( params->target, params->attachment, params->pname, params->params );
+    funcs->p_glGetFramebufferAttachmentParameterivEXT( params->target, params->attachment, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8256,7 +8256,7 @@ static NTSTATUS ext_glGetFramebufferParameterfvAMD( void *args )
 {
     struct glGetFramebufferParameterfvAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFramebufferParameterfvAMD( params->target, params->pname, params->numsamples, params->pixelindex, params->size, params->values );
+    funcs->p_glGetFramebufferParameterfvAMD( params->target, params->pname, params->numsamples, params->pixelindex, params->size, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -8264,7 +8264,7 @@ static NTSTATUS ext_glGetFramebufferParameteriv( void *args )
 {
     struct glGetFramebufferParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFramebufferParameteriv( params->target, params->pname, params->params );
+    funcs->p_glGetFramebufferParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8272,7 +8272,7 @@ static NTSTATUS ext_glGetFramebufferParameterivEXT( void *args )
 {
     struct glGetFramebufferParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFramebufferParameterivEXT( params->framebuffer, params->pname, params->params );
+    funcs->p_glGetFramebufferParameterivEXT( params->framebuffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8280,7 +8280,7 @@ static NTSTATUS ext_glGetFramebufferParameterivMESA( void *args )
 {
     struct glGetFramebufferParameterivMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetFramebufferParameterivMESA( params->target, params->pname, params->params );
+    funcs->p_glGetFramebufferParameterivMESA( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8288,7 +8288,7 @@ static NTSTATUS ext_glGetGraphicsResetStatus( void *args )
 {
     struct glGetGraphicsResetStatus_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetGraphicsResetStatus();
+    params->ret = funcs->p_glGetGraphicsResetStatus();
     return STATUS_SUCCESS;
 }
 
@@ -8296,7 +8296,7 @@ static NTSTATUS ext_glGetGraphicsResetStatusARB( void *args )
 {
     struct glGetGraphicsResetStatusARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetGraphicsResetStatusARB();
+    params->ret = funcs->p_glGetGraphicsResetStatusARB();
     return STATUS_SUCCESS;
 }
 
@@ -8304,7 +8304,7 @@ static NTSTATUS ext_glGetHandleARB( void *args )
 {
     struct glGetHandleARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetHandleARB( params->pname );
+    params->ret = funcs->p_glGetHandleARB( params->pname );
     return STATUS_SUCCESS;
 }
 
@@ -8312,7 +8312,7 @@ static NTSTATUS ext_glGetHistogram( void *args )
 {
     struct glGetHistogram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetHistogram( params->target, params->reset, params->format, params->type, params->values );
+    funcs->p_glGetHistogram( params->target, params->reset, params->format, params->type, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -8320,7 +8320,7 @@ static NTSTATUS ext_glGetHistogramEXT( void *args )
 {
     struct glGetHistogramEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetHistogramEXT( params->target, params->reset, params->format, params->type, params->values );
+    funcs->p_glGetHistogramEXT( params->target, params->reset, params->format, params->type, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -8328,7 +8328,7 @@ static NTSTATUS ext_glGetHistogramParameterfv( void *args )
 {
     struct glGetHistogramParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetHistogramParameterfv( params->target, params->pname, params->params );
+    funcs->p_glGetHistogramParameterfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8336,7 +8336,7 @@ static NTSTATUS ext_glGetHistogramParameterfvEXT( void *args )
 {
     struct glGetHistogramParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetHistogramParameterfvEXT( params->target, params->pname, params->params );
+    funcs->p_glGetHistogramParameterfvEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8344,7 +8344,7 @@ static NTSTATUS ext_glGetHistogramParameteriv( void *args )
 {
     struct glGetHistogramParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetHistogramParameteriv( params->target, params->pname, params->params );
+    funcs->p_glGetHistogramParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8352,7 +8352,7 @@ static NTSTATUS ext_glGetHistogramParameterivEXT( void *args )
 {
     struct glGetHistogramParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetHistogramParameterivEXT( params->target, params->pname, params->params );
+    funcs->p_glGetHistogramParameterivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8360,7 +8360,7 @@ static NTSTATUS ext_glGetHistogramParameterxvOES( void *args )
 {
     struct glGetHistogramParameterxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetHistogramParameterxvOES( params->target, params->pname, params->params );
+    funcs->p_glGetHistogramParameterxvOES( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8368,7 +8368,7 @@ static NTSTATUS ext_glGetImageHandleARB( void *args )
 {
     struct glGetImageHandleARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetImageHandleARB( params->texture, params->level, params->layered, params->layer, params->format );
+    params->ret = funcs->p_glGetImageHandleARB( params->texture, params->level, params->layered, params->layer, params->format );
     return STATUS_SUCCESS;
 }
 
@@ -8376,7 +8376,7 @@ static NTSTATUS ext_glGetImageHandleNV( void *args )
 {
     struct glGetImageHandleNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetImageHandleNV( params->texture, params->level, params->layered, params->layer, params->format );
+    params->ret = funcs->p_glGetImageHandleNV( params->texture, params->level, params->layered, params->layer, params->format );
     return STATUS_SUCCESS;
 }
 
@@ -8384,7 +8384,7 @@ static NTSTATUS ext_glGetImageTransformParameterfvHP( void *args )
 {
     struct glGetImageTransformParameterfvHP_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetImageTransformParameterfvHP( params->target, params->pname, params->params );
+    funcs->p_glGetImageTransformParameterfvHP( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8392,7 +8392,7 @@ static NTSTATUS ext_glGetImageTransformParameterivHP( void *args )
 {
     struct glGetImageTransformParameterivHP_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetImageTransformParameterivHP( params->target, params->pname, params->params );
+    funcs->p_glGetImageTransformParameterivHP( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8400,7 +8400,7 @@ static NTSTATUS ext_glGetInfoLogARB( void *args )
 {
     struct glGetInfoLogARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetInfoLogARB( params->obj, params->maxLength, params->length, params->infoLog );
+    funcs->p_glGetInfoLogARB( params->obj, params->maxLength, params->length, params->infoLog );
     return STATUS_SUCCESS;
 }
 
@@ -8408,7 +8408,7 @@ static NTSTATUS ext_glGetInstrumentsSGIX( void *args )
 {
     struct glGetInstrumentsSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetInstrumentsSGIX();
+    params->ret = funcs->p_glGetInstrumentsSGIX();
     return STATUS_SUCCESS;
 }
 
@@ -8416,7 +8416,7 @@ static NTSTATUS ext_glGetInteger64i_v( void *args )
 {
     struct glGetInteger64i_v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetInteger64i_v( params->target, params->index, params->data );
+    funcs->p_glGetInteger64i_v( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8424,7 +8424,7 @@ static NTSTATUS ext_glGetInteger64v( void *args )
 {
     struct glGetInteger64v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetInteger64v( params->pname, params->data );
+    funcs->p_glGetInteger64v( params->pname, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8432,7 +8432,7 @@ static NTSTATUS ext_glGetIntegerIndexedvEXT( void *args )
 {
     struct glGetIntegerIndexedvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetIntegerIndexedvEXT( params->target, params->index, params->data );
+    funcs->p_glGetIntegerIndexedvEXT( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8440,7 +8440,7 @@ static NTSTATUS ext_glGetIntegeri_v( void *args )
 {
     struct glGetIntegeri_v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetIntegeri_v( params->target, params->index, params->data );
+    funcs->p_glGetIntegeri_v( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8448,7 +8448,7 @@ static NTSTATUS ext_glGetIntegerui64i_vNV( void *args )
 {
     struct glGetIntegerui64i_vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetIntegerui64i_vNV( params->value, params->index, params->result );
+    funcs->p_glGetIntegerui64i_vNV( params->value, params->index, params->result );
     return STATUS_SUCCESS;
 }
 
@@ -8456,7 +8456,7 @@ static NTSTATUS ext_glGetIntegerui64vNV( void *args )
 {
     struct glGetIntegerui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetIntegerui64vNV( params->value, params->result );
+    funcs->p_glGetIntegerui64vNV( params->value, params->result );
     return STATUS_SUCCESS;
 }
 
@@ -8464,7 +8464,7 @@ static NTSTATUS ext_glGetInternalformatSampleivNV( void *args )
 {
     struct glGetInternalformatSampleivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetInternalformatSampleivNV( params->target, params->internalformat, params->samples, params->pname, params->count, params->params );
+    funcs->p_glGetInternalformatSampleivNV( params->target, params->internalformat, params->samples, params->pname, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8472,7 +8472,7 @@ static NTSTATUS ext_glGetInternalformati64v( void *args )
 {
     struct glGetInternalformati64v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetInternalformati64v( params->target, params->internalformat, params->pname, params->count, params->params );
+    funcs->p_glGetInternalformati64v( params->target, params->internalformat, params->pname, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8480,7 +8480,7 @@ static NTSTATUS ext_glGetInternalformativ( void *args )
 {
     struct glGetInternalformativ_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetInternalformativ( params->target, params->internalformat, params->pname, params->count, params->params );
+    funcs->p_glGetInternalformativ( params->target, params->internalformat, params->pname, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8488,7 +8488,7 @@ static NTSTATUS ext_glGetInvariantBooleanvEXT( void *args )
 {
     struct glGetInvariantBooleanvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetInvariantBooleanvEXT( params->id, params->value, params->data );
+    funcs->p_glGetInvariantBooleanvEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8496,7 +8496,7 @@ static NTSTATUS ext_glGetInvariantFloatvEXT( void *args )
 {
     struct glGetInvariantFloatvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetInvariantFloatvEXT( params->id, params->value, params->data );
+    funcs->p_glGetInvariantFloatvEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8504,7 +8504,7 @@ static NTSTATUS ext_glGetInvariantIntegervEXT( void *args )
 {
     struct glGetInvariantIntegervEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetInvariantIntegervEXT( params->id, params->value, params->data );
+    funcs->p_glGetInvariantIntegervEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8512,7 +8512,7 @@ static NTSTATUS ext_glGetLightxOES( void *args )
 {
     struct glGetLightxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetLightxOES( params->light, params->pname, params->params );
+    funcs->p_glGetLightxOES( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8520,7 +8520,7 @@ static NTSTATUS ext_glGetListParameterfvSGIX( void *args )
 {
     struct glGetListParameterfvSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetListParameterfvSGIX( params->list, params->pname, params->params );
+    funcs->p_glGetListParameterfvSGIX( params->list, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8528,7 +8528,7 @@ static NTSTATUS ext_glGetListParameterivSGIX( void *args )
 {
     struct glGetListParameterivSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetListParameterivSGIX( params->list, params->pname, params->params );
+    funcs->p_glGetListParameterivSGIX( params->list, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8536,7 +8536,7 @@ static NTSTATUS ext_glGetLocalConstantBooleanvEXT( void *args )
 {
     struct glGetLocalConstantBooleanvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetLocalConstantBooleanvEXT( params->id, params->value, params->data );
+    funcs->p_glGetLocalConstantBooleanvEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8544,7 +8544,7 @@ static NTSTATUS ext_glGetLocalConstantFloatvEXT( void *args )
 {
     struct glGetLocalConstantFloatvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetLocalConstantFloatvEXT( params->id, params->value, params->data );
+    funcs->p_glGetLocalConstantFloatvEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8552,7 +8552,7 @@ static NTSTATUS ext_glGetLocalConstantIntegervEXT( void *args )
 {
     struct glGetLocalConstantIntegervEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetLocalConstantIntegervEXT( params->id, params->value, params->data );
+    funcs->p_glGetLocalConstantIntegervEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8560,7 +8560,7 @@ static NTSTATUS ext_glGetMapAttribParameterfvNV( void *args )
 {
     struct glGetMapAttribParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMapAttribParameterfvNV( params->target, params->index, params->pname, params->params );
+    funcs->p_glGetMapAttribParameterfvNV( params->target, params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8568,7 +8568,7 @@ static NTSTATUS ext_glGetMapAttribParameterivNV( void *args )
 {
     struct glGetMapAttribParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMapAttribParameterivNV( params->target, params->index, params->pname, params->params );
+    funcs->p_glGetMapAttribParameterivNV( params->target, params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8576,7 +8576,7 @@ static NTSTATUS ext_glGetMapControlPointsNV( void *args )
 {
     struct glGetMapControlPointsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMapControlPointsNV( params->target, params->index, params->type, params->ustride, params->vstride, params->packed, params->points );
+    funcs->p_glGetMapControlPointsNV( params->target, params->index, params->type, params->ustride, params->vstride, params->packed, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -8584,7 +8584,7 @@ static NTSTATUS ext_glGetMapParameterfvNV( void *args )
 {
     struct glGetMapParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMapParameterfvNV( params->target, params->pname, params->params );
+    funcs->p_glGetMapParameterfvNV( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8592,7 +8592,7 @@ static NTSTATUS ext_glGetMapParameterivNV( void *args )
 {
     struct glGetMapParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMapParameterivNV( params->target, params->pname, params->params );
+    funcs->p_glGetMapParameterivNV( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8600,7 +8600,7 @@ static NTSTATUS ext_glGetMapxvOES( void *args )
 {
     struct glGetMapxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMapxvOES( params->target, params->query, params->v );
+    funcs->p_glGetMapxvOES( params->target, params->query, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -8608,7 +8608,7 @@ static NTSTATUS ext_glGetMaterialxOES( void *args )
 {
     struct glGetMaterialxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMaterialxOES( params->face, params->pname, params->param );
+    funcs->p_glGetMaterialxOES( params->face, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -8616,7 +8616,7 @@ static NTSTATUS ext_glGetMemoryObjectDetachedResourcesuivNV( void *args )
 {
     struct glGetMemoryObjectDetachedResourcesuivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMemoryObjectDetachedResourcesuivNV( params->memory, params->pname, params->first, params->count, params->params );
+    funcs->p_glGetMemoryObjectDetachedResourcesuivNV( params->memory, params->pname, params->first, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8624,7 +8624,7 @@ static NTSTATUS ext_glGetMemoryObjectParameterivEXT( void *args )
 {
     struct glGetMemoryObjectParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMemoryObjectParameterivEXT( params->memoryObject, params->pname, params->params );
+    funcs->p_glGetMemoryObjectParameterivEXT( params->memoryObject, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8632,7 +8632,7 @@ static NTSTATUS ext_glGetMinmax( void *args )
 {
     struct glGetMinmax_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMinmax( params->target, params->reset, params->format, params->type, params->values );
+    funcs->p_glGetMinmax( params->target, params->reset, params->format, params->type, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -8640,7 +8640,7 @@ static NTSTATUS ext_glGetMinmaxEXT( void *args )
 {
     struct glGetMinmaxEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMinmaxEXT( params->target, params->reset, params->format, params->type, params->values );
+    funcs->p_glGetMinmaxEXT( params->target, params->reset, params->format, params->type, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -8648,7 +8648,7 @@ static NTSTATUS ext_glGetMinmaxParameterfv( void *args )
 {
     struct glGetMinmaxParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMinmaxParameterfv( params->target, params->pname, params->params );
+    funcs->p_glGetMinmaxParameterfv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8656,7 +8656,7 @@ static NTSTATUS ext_glGetMinmaxParameterfvEXT( void *args )
 {
     struct glGetMinmaxParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMinmaxParameterfvEXT( params->target, params->pname, params->params );
+    funcs->p_glGetMinmaxParameterfvEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8664,7 +8664,7 @@ static NTSTATUS ext_glGetMinmaxParameteriv( void *args )
 {
     struct glGetMinmaxParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMinmaxParameteriv( params->target, params->pname, params->params );
+    funcs->p_glGetMinmaxParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8672,7 +8672,7 @@ static NTSTATUS ext_glGetMinmaxParameterivEXT( void *args )
 {
     struct glGetMinmaxParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMinmaxParameterivEXT( params->target, params->pname, params->params );
+    funcs->p_glGetMinmaxParameterivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8680,7 +8680,7 @@ static NTSTATUS ext_glGetMultiTexEnvfvEXT( void *args )
 {
     struct glGetMultiTexEnvfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexEnvfvEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glGetMultiTexEnvfvEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8688,7 +8688,7 @@ static NTSTATUS ext_glGetMultiTexEnvivEXT( void *args )
 {
     struct glGetMultiTexEnvivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexEnvivEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glGetMultiTexEnvivEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8696,7 +8696,7 @@ static NTSTATUS ext_glGetMultiTexGendvEXT( void *args )
 {
     struct glGetMultiTexGendvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexGendvEXT( params->texunit, params->coord, params->pname, params->params );
+    funcs->p_glGetMultiTexGendvEXT( params->texunit, params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8704,7 +8704,7 @@ static NTSTATUS ext_glGetMultiTexGenfvEXT( void *args )
 {
     struct glGetMultiTexGenfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexGenfvEXT( params->texunit, params->coord, params->pname, params->params );
+    funcs->p_glGetMultiTexGenfvEXT( params->texunit, params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8712,7 +8712,7 @@ static NTSTATUS ext_glGetMultiTexGenivEXT( void *args )
 {
     struct glGetMultiTexGenivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexGenivEXT( params->texunit, params->coord, params->pname, params->params );
+    funcs->p_glGetMultiTexGenivEXT( params->texunit, params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8720,7 +8720,7 @@ static NTSTATUS ext_glGetMultiTexImageEXT( void *args )
 {
     struct glGetMultiTexImageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexImageEXT( params->texunit, params->target, params->level, params->format, params->type, params->pixels );
+    funcs->p_glGetMultiTexImageEXT( params->texunit, params->target, params->level, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -8728,7 +8728,7 @@ static NTSTATUS ext_glGetMultiTexLevelParameterfvEXT( void *args )
 {
     struct glGetMultiTexLevelParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexLevelParameterfvEXT( params->texunit, params->target, params->level, params->pname, params->params );
+    funcs->p_glGetMultiTexLevelParameterfvEXT( params->texunit, params->target, params->level, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8736,7 +8736,7 @@ static NTSTATUS ext_glGetMultiTexLevelParameterivEXT( void *args )
 {
     struct glGetMultiTexLevelParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexLevelParameterivEXT( params->texunit, params->target, params->level, params->pname, params->params );
+    funcs->p_glGetMultiTexLevelParameterivEXT( params->texunit, params->target, params->level, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8744,7 +8744,7 @@ static NTSTATUS ext_glGetMultiTexParameterIivEXT( void *args )
 {
     struct glGetMultiTexParameterIivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexParameterIivEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glGetMultiTexParameterIivEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8752,7 +8752,7 @@ static NTSTATUS ext_glGetMultiTexParameterIuivEXT( void *args )
 {
     struct glGetMultiTexParameterIuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexParameterIuivEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glGetMultiTexParameterIuivEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8760,7 +8760,7 @@ static NTSTATUS ext_glGetMultiTexParameterfvEXT( void *args )
 {
     struct glGetMultiTexParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexParameterfvEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glGetMultiTexParameterfvEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8768,7 +8768,7 @@ static NTSTATUS ext_glGetMultiTexParameterivEXT( void *args )
 {
     struct glGetMultiTexParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultiTexParameterivEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glGetMultiTexParameterivEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8776,7 +8776,7 @@ static NTSTATUS ext_glGetMultisamplefv( void *args )
 {
     struct glGetMultisamplefv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultisamplefv( params->pname, params->index, params->val );
+    funcs->p_glGetMultisamplefv( params->pname, params->index, params->val );
     return STATUS_SUCCESS;
 }
 
@@ -8784,7 +8784,7 @@ static NTSTATUS ext_glGetMultisamplefvNV( void *args )
 {
     struct glGetMultisamplefvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetMultisamplefvNV( params->pname, params->index, params->val );
+    funcs->p_glGetMultisamplefvNV( params->pname, params->index, params->val );
     return STATUS_SUCCESS;
 }
 
@@ -8792,7 +8792,7 @@ static NTSTATUS ext_glGetNamedBufferParameteri64v( void *args )
 {
     struct glGetNamedBufferParameteri64v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedBufferParameteri64v( params->buffer, params->pname, params->params );
+    funcs->p_glGetNamedBufferParameteri64v( params->buffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8800,7 +8800,7 @@ static NTSTATUS ext_glGetNamedBufferParameteriv( void *args )
 {
     struct glGetNamedBufferParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedBufferParameteriv( params->buffer, params->pname, params->params );
+    funcs->p_glGetNamedBufferParameteriv( params->buffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8808,7 +8808,7 @@ static NTSTATUS ext_glGetNamedBufferParameterivEXT( void *args )
 {
     struct glGetNamedBufferParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedBufferParameterivEXT( params->buffer, params->pname, params->params );
+    funcs->p_glGetNamedBufferParameterivEXT( params->buffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8816,7 +8816,7 @@ static NTSTATUS ext_glGetNamedBufferParameterui64vNV( void *args )
 {
     struct glGetNamedBufferParameterui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedBufferParameterui64vNV( params->buffer, params->pname, params->params );
+    funcs->p_glGetNamedBufferParameterui64vNV( params->buffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8824,7 +8824,7 @@ NTSTATUS ext_glGetNamedBufferPointerv( void *args )
 {
     struct glGetNamedBufferPointerv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedBufferPointerv( params->buffer, params->pname, params->params );
+    funcs->p_glGetNamedBufferPointerv( params->buffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8832,7 +8832,7 @@ NTSTATUS ext_glGetNamedBufferPointervEXT( void *args )
 {
     struct glGetNamedBufferPointervEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedBufferPointervEXT( params->buffer, params->pname, params->params );
+    funcs->p_glGetNamedBufferPointervEXT( params->buffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8840,7 +8840,7 @@ static NTSTATUS ext_glGetNamedBufferSubData( void *args )
 {
     struct glGetNamedBufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedBufferSubData( params->buffer, params->offset, params->size, params->data );
+    funcs->p_glGetNamedBufferSubData( params->buffer, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8848,7 +8848,7 @@ static NTSTATUS ext_glGetNamedBufferSubDataEXT( void *args )
 {
     struct glGetNamedBufferSubDataEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedBufferSubDataEXT( params->buffer, params->offset, params->size, params->data );
+    funcs->p_glGetNamedBufferSubDataEXT( params->buffer, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -8856,7 +8856,7 @@ static NTSTATUS ext_glGetNamedFramebufferAttachmentParameteriv( void *args )
 {
     struct glGetNamedFramebufferAttachmentParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedFramebufferAttachmentParameteriv( params->framebuffer, params->attachment, params->pname, params->params );
+    funcs->p_glGetNamedFramebufferAttachmentParameteriv( params->framebuffer, params->attachment, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8864,7 +8864,7 @@ static NTSTATUS ext_glGetNamedFramebufferAttachmentParameterivEXT( void *args )
 {
     struct glGetNamedFramebufferAttachmentParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedFramebufferAttachmentParameterivEXT( params->framebuffer, params->attachment, params->pname, params->params );
+    funcs->p_glGetNamedFramebufferAttachmentParameterivEXT( params->framebuffer, params->attachment, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8872,7 +8872,7 @@ static NTSTATUS ext_glGetNamedFramebufferParameterfvAMD( void *args )
 {
     struct glGetNamedFramebufferParameterfvAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedFramebufferParameterfvAMD( params->framebuffer, params->pname, params->numsamples, params->pixelindex, params->size, params->values );
+    funcs->p_glGetNamedFramebufferParameterfvAMD( params->framebuffer, params->pname, params->numsamples, params->pixelindex, params->size, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -8880,7 +8880,7 @@ static NTSTATUS ext_glGetNamedFramebufferParameteriv( void *args )
 {
     struct glGetNamedFramebufferParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedFramebufferParameteriv( params->framebuffer, params->pname, params->param );
+    funcs->p_glGetNamedFramebufferParameteriv( params->framebuffer, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -8888,7 +8888,7 @@ static NTSTATUS ext_glGetNamedFramebufferParameterivEXT( void *args )
 {
     struct glGetNamedFramebufferParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedFramebufferParameterivEXT( params->framebuffer, params->pname, params->params );
+    funcs->p_glGetNamedFramebufferParameterivEXT( params->framebuffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8896,7 +8896,7 @@ static NTSTATUS ext_glGetNamedProgramLocalParameterIivEXT( void *args )
 {
     struct glGetNamedProgramLocalParameterIivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedProgramLocalParameterIivEXT( params->program, params->target, params->index, params->params );
+    funcs->p_glGetNamedProgramLocalParameterIivEXT( params->program, params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8904,7 +8904,7 @@ static NTSTATUS ext_glGetNamedProgramLocalParameterIuivEXT( void *args )
 {
     struct glGetNamedProgramLocalParameterIuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedProgramLocalParameterIuivEXT( params->program, params->target, params->index, params->params );
+    funcs->p_glGetNamedProgramLocalParameterIuivEXT( params->program, params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8912,7 +8912,7 @@ static NTSTATUS ext_glGetNamedProgramLocalParameterdvEXT( void *args )
 {
     struct glGetNamedProgramLocalParameterdvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedProgramLocalParameterdvEXT( params->program, params->target, params->index, params->params );
+    funcs->p_glGetNamedProgramLocalParameterdvEXT( params->program, params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8920,7 +8920,7 @@ static NTSTATUS ext_glGetNamedProgramLocalParameterfvEXT( void *args )
 {
     struct glGetNamedProgramLocalParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedProgramLocalParameterfvEXT( params->program, params->target, params->index, params->params );
+    funcs->p_glGetNamedProgramLocalParameterfvEXT( params->program, params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8928,7 +8928,7 @@ static NTSTATUS ext_glGetNamedProgramStringEXT( void *args )
 {
     struct glGetNamedProgramStringEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedProgramStringEXT( params->program, params->target, params->pname, params->string );
+    funcs->p_glGetNamedProgramStringEXT( params->program, params->target, params->pname, params->string );
     return STATUS_SUCCESS;
 }
 
@@ -8936,7 +8936,7 @@ static NTSTATUS ext_glGetNamedProgramivEXT( void *args )
 {
     struct glGetNamedProgramivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedProgramivEXT( params->program, params->target, params->pname, params->params );
+    funcs->p_glGetNamedProgramivEXT( params->program, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8944,7 +8944,7 @@ static NTSTATUS ext_glGetNamedRenderbufferParameteriv( void *args )
 {
     struct glGetNamedRenderbufferParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedRenderbufferParameteriv( params->renderbuffer, params->pname, params->params );
+    funcs->p_glGetNamedRenderbufferParameteriv( params->renderbuffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8952,7 +8952,7 @@ static NTSTATUS ext_glGetNamedRenderbufferParameterivEXT( void *args )
 {
     struct glGetNamedRenderbufferParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedRenderbufferParameterivEXT( params->renderbuffer, params->pname, params->params );
+    funcs->p_glGetNamedRenderbufferParameterivEXT( params->renderbuffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8960,7 +8960,7 @@ static NTSTATUS ext_glGetNamedStringARB( void *args )
 {
     struct glGetNamedStringARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedStringARB( params->namelen, params->name, params->bufSize, params->stringlen, params->string );
+    funcs->p_glGetNamedStringARB( params->namelen, params->name, params->bufSize, params->stringlen, params->string );
     return STATUS_SUCCESS;
 }
 
@@ -8968,7 +8968,7 @@ static NTSTATUS ext_glGetNamedStringivARB( void *args )
 {
     struct glGetNamedStringivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNamedStringivARB( params->namelen, params->name, params->pname, params->params );
+    funcs->p_glGetNamedStringivARB( params->namelen, params->name, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8976,7 +8976,7 @@ static NTSTATUS ext_glGetNextPerfQueryIdINTEL( void *args )
 {
     struct glGetNextPerfQueryIdINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetNextPerfQueryIdINTEL( params->queryId, params->nextQueryId );
+    funcs->p_glGetNextPerfQueryIdINTEL( params->queryId, params->nextQueryId );
     return STATUS_SUCCESS;
 }
 
@@ -8984,7 +8984,7 @@ static NTSTATUS ext_glGetObjectBufferfvATI( void *args )
 {
     struct glGetObjectBufferfvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetObjectBufferfvATI( params->buffer, params->pname, params->params );
+    funcs->p_glGetObjectBufferfvATI( params->buffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -8992,7 +8992,7 @@ static NTSTATUS ext_glGetObjectBufferivATI( void *args )
 {
     struct glGetObjectBufferivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetObjectBufferivATI( params->buffer, params->pname, params->params );
+    funcs->p_glGetObjectBufferivATI( params->buffer, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9000,7 +9000,7 @@ static NTSTATUS ext_glGetObjectLabel( void *args )
 {
     struct glGetObjectLabel_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetObjectLabel( params->identifier, params->name, params->bufSize, params->length, params->label );
+    funcs->p_glGetObjectLabel( params->identifier, params->name, params->bufSize, params->length, params->label );
     return STATUS_SUCCESS;
 }
 
@@ -9008,7 +9008,7 @@ static NTSTATUS ext_glGetObjectLabelEXT( void *args )
 {
     struct glGetObjectLabelEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetObjectLabelEXT( params->type, params->object, params->bufSize, params->length, params->label );
+    funcs->p_glGetObjectLabelEXT( params->type, params->object, params->bufSize, params->length, params->label );
     return STATUS_SUCCESS;
 }
 
@@ -9016,7 +9016,7 @@ static NTSTATUS ext_glGetObjectParameterfvARB( void *args )
 {
     struct glGetObjectParameterfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetObjectParameterfvARB( params->obj, params->pname, params->params );
+    funcs->p_glGetObjectParameterfvARB( params->obj, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9024,7 +9024,7 @@ static NTSTATUS ext_glGetObjectParameterivAPPLE( void *args )
 {
     struct glGetObjectParameterivAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetObjectParameterivAPPLE( params->objectType, params->name, params->pname, params->params );
+    funcs->p_glGetObjectParameterivAPPLE( params->objectType, params->name, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9032,7 +9032,7 @@ static NTSTATUS ext_glGetObjectParameterivARB( void *args )
 {
     struct glGetObjectParameterivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetObjectParameterivARB( params->obj, params->pname, params->params );
+    funcs->p_glGetObjectParameterivARB( params->obj, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9040,7 +9040,7 @@ static NTSTATUS ext_glGetObjectPtrLabel( void *args )
 {
     struct glGetObjectPtrLabel_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetObjectPtrLabel( params->ptr, params->bufSize, params->length, params->label );
+    funcs->p_glGetObjectPtrLabel( params->ptr, params->bufSize, params->length, params->label );
     return STATUS_SUCCESS;
 }
 
@@ -9048,7 +9048,7 @@ static NTSTATUS ext_glGetOcclusionQueryivNV( void *args )
 {
     struct glGetOcclusionQueryivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetOcclusionQueryivNV( params->id, params->pname, params->params );
+    funcs->p_glGetOcclusionQueryivNV( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9056,7 +9056,7 @@ static NTSTATUS ext_glGetOcclusionQueryuivNV( void *args )
 {
     struct glGetOcclusionQueryuivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetOcclusionQueryuivNV( params->id, params->pname, params->params );
+    funcs->p_glGetOcclusionQueryuivNV( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9064,7 +9064,7 @@ static NTSTATUS ext_glGetPathColorGenfvNV( void *args )
 {
     struct glGetPathColorGenfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathColorGenfvNV( params->color, params->pname, params->value );
+    funcs->p_glGetPathColorGenfvNV( params->color, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -9072,7 +9072,7 @@ static NTSTATUS ext_glGetPathColorGenivNV( void *args )
 {
     struct glGetPathColorGenivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathColorGenivNV( params->color, params->pname, params->value );
+    funcs->p_glGetPathColorGenivNV( params->color, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -9080,7 +9080,7 @@ static NTSTATUS ext_glGetPathCommandsNV( void *args )
 {
     struct glGetPathCommandsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathCommandsNV( params->path, params->commands );
+    funcs->p_glGetPathCommandsNV( params->path, params->commands );
     return STATUS_SUCCESS;
 }
 
@@ -9088,7 +9088,7 @@ static NTSTATUS ext_glGetPathCoordsNV( void *args )
 {
     struct glGetPathCoordsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathCoordsNV( params->path, params->coords );
+    funcs->p_glGetPathCoordsNV( params->path, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -9096,7 +9096,7 @@ static NTSTATUS ext_glGetPathDashArrayNV( void *args )
 {
     struct glGetPathDashArrayNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathDashArrayNV( params->path, params->dashArray );
+    funcs->p_glGetPathDashArrayNV( params->path, params->dashArray );
     return STATUS_SUCCESS;
 }
 
@@ -9104,7 +9104,7 @@ static NTSTATUS ext_glGetPathLengthNV( void *args )
 {
     struct glGetPathLengthNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetPathLengthNV( params->path, params->startSegment, params->numSegments );
+    params->ret = funcs->p_glGetPathLengthNV( params->path, params->startSegment, params->numSegments );
     return STATUS_SUCCESS;
 }
 
@@ -9112,7 +9112,7 @@ static NTSTATUS ext_glGetPathMetricRangeNV( void *args )
 {
     struct glGetPathMetricRangeNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathMetricRangeNV( params->metricQueryMask, params->firstPathName, params->numPaths, params->stride, params->metrics );
+    funcs->p_glGetPathMetricRangeNV( params->metricQueryMask, params->firstPathName, params->numPaths, params->stride, params->metrics );
     return STATUS_SUCCESS;
 }
 
@@ -9120,7 +9120,7 @@ static NTSTATUS ext_glGetPathMetricsNV( void *args )
 {
     struct glGetPathMetricsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathMetricsNV( params->metricQueryMask, params->numPaths, params->pathNameType, params->paths, params->pathBase, params->stride, params->metrics );
+    funcs->p_glGetPathMetricsNV( params->metricQueryMask, params->numPaths, params->pathNameType, params->paths, params->pathBase, params->stride, params->metrics );
     return STATUS_SUCCESS;
 }
 
@@ -9128,7 +9128,7 @@ static NTSTATUS ext_glGetPathParameterfvNV( void *args )
 {
     struct glGetPathParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathParameterfvNV( params->path, params->pname, params->value );
+    funcs->p_glGetPathParameterfvNV( params->path, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -9136,7 +9136,7 @@ static NTSTATUS ext_glGetPathParameterivNV( void *args )
 {
     struct glGetPathParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathParameterivNV( params->path, params->pname, params->value );
+    funcs->p_glGetPathParameterivNV( params->path, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -9144,7 +9144,7 @@ static NTSTATUS ext_glGetPathSpacingNV( void *args )
 {
     struct glGetPathSpacingNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathSpacingNV( params->pathListMode, params->numPaths, params->pathNameType, params->paths, params->pathBase, params->advanceScale, params->kerningScale, params->transformType, params->returnedSpacing );
+    funcs->p_glGetPathSpacingNV( params->pathListMode, params->numPaths, params->pathNameType, params->paths, params->pathBase, params->advanceScale, params->kerningScale, params->transformType, params->returnedSpacing );
     return STATUS_SUCCESS;
 }
 
@@ -9152,7 +9152,7 @@ static NTSTATUS ext_glGetPathTexGenfvNV( void *args )
 {
     struct glGetPathTexGenfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathTexGenfvNV( params->texCoordSet, params->pname, params->value );
+    funcs->p_glGetPathTexGenfvNV( params->texCoordSet, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -9160,7 +9160,7 @@ static NTSTATUS ext_glGetPathTexGenivNV( void *args )
 {
     struct glGetPathTexGenivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPathTexGenivNV( params->texCoordSet, params->pname, params->value );
+    funcs->p_glGetPathTexGenivNV( params->texCoordSet, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -9168,7 +9168,7 @@ static NTSTATUS ext_glGetPerfCounterInfoINTEL( void *args )
 {
     struct glGetPerfCounterInfoINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfCounterInfoINTEL( params->queryId, params->counterId, params->counterNameLength, params->counterName, params->counterDescLength, params->counterDesc, params->counterOffset, params->counterDataSize, params->counterTypeEnum, params->counterDataTypeEnum, params->rawCounterMaxValue );
+    funcs->p_glGetPerfCounterInfoINTEL( params->queryId, params->counterId, params->counterNameLength, params->counterName, params->counterDescLength, params->counterDesc, params->counterOffset, params->counterDataSize, params->counterTypeEnum, params->counterDataTypeEnum, params->rawCounterMaxValue );
     return STATUS_SUCCESS;
 }
 
@@ -9176,7 +9176,7 @@ static NTSTATUS ext_glGetPerfMonitorCounterDataAMD( void *args )
 {
     struct glGetPerfMonitorCounterDataAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfMonitorCounterDataAMD( params->monitor, params->pname, params->dataSize, params->data, params->bytesWritten );
+    funcs->p_glGetPerfMonitorCounterDataAMD( params->monitor, params->pname, params->dataSize, params->data, params->bytesWritten );
     return STATUS_SUCCESS;
 }
 
@@ -9184,7 +9184,7 @@ static NTSTATUS ext_glGetPerfMonitorCounterInfoAMD( void *args )
 {
     struct glGetPerfMonitorCounterInfoAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfMonitorCounterInfoAMD( params->group, params->counter, params->pname, params->data );
+    funcs->p_glGetPerfMonitorCounterInfoAMD( params->group, params->counter, params->pname, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -9192,7 +9192,7 @@ static NTSTATUS ext_glGetPerfMonitorCounterStringAMD( void *args )
 {
     struct glGetPerfMonitorCounterStringAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfMonitorCounterStringAMD( params->group, params->counter, params->bufSize, params->length, params->counterString );
+    funcs->p_glGetPerfMonitorCounterStringAMD( params->group, params->counter, params->bufSize, params->length, params->counterString );
     return STATUS_SUCCESS;
 }
 
@@ -9200,7 +9200,7 @@ static NTSTATUS ext_glGetPerfMonitorCountersAMD( void *args )
 {
     struct glGetPerfMonitorCountersAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfMonitorCountersAMD( params->group, params->numCounters, params->maxActiveCounters, params->counterSize, params->counters );
+    funcs->p_glGetPerfMonitorCountersAMD( params->group, params->numCounters, params->maxActiveCounters, params->counterSize, params->counters );
     return STATUS_SUCCESS;
 }
 
@@ -9208,7 +9208,7 @@ static NTSTATUS ext_glGetPerfMonitorGroupStringAMD( void *args )
 {
     struct glGetPerfMonitorGroupStringAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfMonitorGroupStringAMD( params->group, params->bufSize, params->length, params->groupString );
+    funcs->p_glGetPerfMonitorGroupStringAMD( params->group, params->bufSize, params->length, params->groupString );
     return STATUS_SUCCESS;
 }
 
@@ -9216,7 +9216,7 @@ static NTSTATUS ext_glGetPerfMonitorGroupsAMD( void *args )
 {
     struct glGetPerfMonitorGroupsAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfMonitorGroupsAMD( params->numGroups, params->groupsSize, params->groups );
+    funcs->p_glGetPerfMonitorGroupsAMD( params->numGroups, params->groupsSize, params->groups );
     return STATUS_SUCCESS;
 }
 
@@ -9224,7 +9224,7 @@ static NTSTATUS ext_glGetPerfQueryDataINTEL( void *args )
 {
     struct glGetPerfQueryDataINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfQueryDataINTEL( params->queryHandle, params->flags, params->dataSize, params->data, params->bytesWritten );
+    funcs->p_glGetPerfQueryDataINTEL( params->queryHandle, params->flags, params->dataSize, params->data, params->bytesWritten );
     return STATUS_SUCCESS;
 }
 
@@ -9232,7 +9232,7 @@ static NTSTATUS ext_glGetPerfQueryIdByNameINTEL( void *args )
 {
     struct glGetPerfQueryIdByNameINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfQueryIdByNameINTEL( params->queryName, params->queryId );
+    funcs->p_glGetPerfQueryIdByNameINTEL( params->queryName, params->queryId );
     return STATUS_SUCCESS;
 }
 
@@ -9240,7 +9240,7 @@ static NTSTATUS ext_glGetPerfQueryInfoINTEL( void *args )
 {
     struct glGetPerfQueryInfoINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPerfQueryInfoINTEL( params->queryId, params->queryNameLength, params->queryName, params->dataSize, params->noCounters, params->noInstances, params->capsMask );
+    funcs->p_glGetPerfQueryInfoINTEL( params->queryId, params->queryNameLength, params->queryName, params->dataSize, params->noCounters, params->noInstances, params->capsMask );
     return STATUS_SUCCESS;
 }
 
@@ -9248,7 +9248,7 @@ static NTSTATUS ext_glGetPixelMapxv( void *args )
 {
     struct glGetPixelMapxv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPixelMapxv( params->map, params->size, params->values );
+    funcs->p_glGetPixelMapxv( params->map, params->size, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -9256,7 +9256,7 @@ static NTSTATUS ext_glGetPixelTexGenParameterfvSGIS( void *args )
 {
     struct glGetPixelTexGenParameterfvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPixelTexGenParameterfvSGIS( params->pname, params->params );
+    funcs->p_glGetPixelTexGenParameterfvSGIS( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9264,7 +9264,7 @@ static NTSTATUS ext_glGetPixelTexGenParameterivSGIS( void *args )
 {
     struct glGetPixelTexGenParameterivSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPixelTexGenParameterivSGIS( params->pname, params->params );
+    funcs->p_glGetPixelTexGenParameterivSGIS( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9272,7 +9272,7 @@ static NTSTATUS ext_glGetPixelTransformParameterfvEXT( void *args )
 {
     struct glGetPixelTransformParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPixelTransformParameterfvEXT( params->target, params->pname, params->params );
+    funcs->p_glGetPixelTransformParameterfvEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9280,7 +9280,7 @@ static NTSTATUS ext_glGetPixelTransformParameterivEXT( void *args )
 {
     struct glGetPixelTransformParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPixelTransformParameterivEXT( params->target, params->pname, params->params );
+    funcs->p_glGetPixelTransformParameterivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9288,7 +9288,7 @@ static NTSTATUS ext_glGetPointerIndexedvEXT( void *args )
 {
     struct glGetPointerIndexedvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPointerIndexedvEXT( params->target, params->index, params->data );
+    funcs->p_glGetPointerIndexedvEXT( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -9296,7 +9296,7 @@ static NTSTATUS ext_glGetPointeri_vEXT( void *args )
 {
     struct glGetPointeri_vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPointeri_vEXT( params->pname, params->index, params->params );
+    funcs->p_glGetPointeri_vEXT( params->pname, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9304,7 +9304,7 @@ static NTSTATUS ext_glGetPointervEXT( void *args )
 {
     struct glGetPointervEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetPointervEXT( params->pname, params->params );
+    funcs->p_glGetPointervEXT( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9312,7 +9312,7 @@ static NTSTATUS ext_glGetProgramBinary( void *args )
 {
     struct glGetProgramBinary_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramBinary( params->program, params->bufSize, params->length, params->binaryFormat, params->binary );
+    funcs->p_glGetProgramBinary( params->program, params->bufSize, params->length, params->binaryFormat, params->binary );
     return STATUS_SUCCESS;
 }
 
@@ -9320,7 +9320,7 @@ static NTSTATUS ext_glGetProgramEnvParameterIivNV( void *args )
 {
     struct glGetProgramEnvParameterIivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramEnvParameterIivNV( params->target, params->index, params->params );
+    funcs->p_glGetProgramEnvParameterIivNV( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9328,7 +9328,7 @@ static NTSTATUS ext_glGetProgramEnvParameterIuivNV( void *args )
 {
     struct glGetProgramEnvParameterIuivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramEnvParameterIuivNV( params->target, params->index, params->params );
+    funcs->p_glGetProgramEnvParameterIuivNV( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9336,7 +9336,7 @@ static NTSTATUS ext_glGetProgramEnvParameterdvARB( void *args )
 {
     struct glGetProgramEnvParameterdvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramEnvParameterdvARB( params->target, params->index, params->params );
+    funcs->p_glGetProgramEnvParameterdvARB( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9344,7 +9344,7 @@ static NTSTATUS ext_glGetProgramEnvParameterfvARB( void *args )
 {
     struct glGetProgramEnvParameterfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramEnvParameterfvARB( params->target, params->index, params->params );
+    funcs->p_glGetProgramEnvParameterfvARB( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9352,7 +9352,7 @@ static NTSTATUS ext_glGetProgramInfoLog( void *args )
 {
     struct glGetProgramInfoLog_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramInfoLog( params->program, params->bufSize, params->length, params->infoLog );
+    funcs->p_glGetProgramInfoLog( params->program, params->bufSize, params->length, params->infoLog );
     return STATUS_SUCCESS;
 }
 
@@ -9360,7 +9360,7 @@ static NTSTATUS ext_glGetProgramInterfaceiv( void *args )
 {
     struct glGetProgramInterfaceiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramInterfaceiv( params->program, params->programInterface, params->pname, params->params );
+    funcs->p_glGetProgramInterfaceiv( params->program, params->programInterface, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9368,7 +9368,7 @@ static NTSTATUS ext_glGetProgramLocalParameterIivNV( void *args )
 {
     struct glGetProgramLocalParameterIivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramLocalParameterIivNV( params->target, params->index, params->params );
+    funcs->p_glGetProgramLocalParameterIivNV( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9376,7 +9376,7 @@ static NTSTATUS ext_glGetProgramLocalParameterIuivNV( void *args )
 {
     struct glGetProgramLocalParameterIuivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramLocalParameterIuivNV( params->target, params->index, params->params );
+    funcs->p_glGetProgramLocalParameterIuivNV( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9384,7 +9384,7 @@ static NTSTATUS ext_glGetProgramLocalParameterdvARB( void *args )
 {
     struct glGetProgramLocalParameterdvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramLocalParameterdvARB( params->target, params->index, params->params );
+    funcs->p_glGetProgramLocalParameterdvARB( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9392,7 +9392,7 @@ static NTSTATUS ext_glGetProgramLocalParameterfvARB( void *args )
 {
     struct glGetProgramLocalParameterfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramLocalParameterfvARB( params->target, params->index, params->params );
+    funcs->p_glGetProgramLocalParameterfvARB( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9400,7 +9400,7 @@ static NTSTATUS ext_glGetProgramNamedParameterdvNV( void *args )
 {
     struct glGetProgramNamedParameterdvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramNamedParameterdvNV( params->id, params->len, params->name, params->params );
+    funcs->p_glGetProgramNamedParameterdvNV( params->id, params->len, params->name, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9408,7 +9408,7 @@ static NTSTATUS ext_glGetProgramNamedParameterfvNV( void *args )
 {
     struct glGetProgramNamedParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramNamedParameterfvNV( params->id, params->len, params->name, params->params );
+    funcs->p_glGetProgramNamedParameterfvNV( params->id, params->len, params->name, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9416,7 +9416,7 @@ static NTSTATUS ext_glGetProgramParameterdvNV( void *args )
 {
     struct glGetProgramParameterdvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramParameterdvNV( params->target, params->index, params->pname, params->params );
+    funcs->p_glGetProgramParameterdvNV( params->target, params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9424,7 +9424,7 @@ static NTSTATUS ext_glGetProgramParameterfvNV( void *args )
 {
     struct glGetProgramParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramParameterfvNV( params->target, params->index, params->pname, params->params );
+    funcs->p_glGetProgramParameterfvNV( params->target, params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9432,7 +9432,7 @@ static NTSTATUS ext_glGetProgramPipelineInfoLog( void *args )
 {
     struct glGetProgramPipelineInfoLog_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramPipelineInfoLog( params->pipeline, params->bufSize, params->length, params->infoLog );
+    funcs->p_glGetProgramPipelineInfoLog( params->pipeline, params->bufSize, params->length, params->infoLog );
     return STATUS_SUCCESS;
 }
 
@@ -9440,7 +9440,7 @@ static NTSTATUS ext_glGetProgramPipelineiv( void *args )
 {
     struct glGetProgramPipelineiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramPipelineiv( params->pipeline, params->pname, params->params );
+    funcs->p_glGetProgramPipelineiv( params->pipeline, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9448,7 +9448,7 @@ static NTSTATUS ext_glGetProgramResourceIndex( void *args )
 {
     struct glGetProgramResourceIndex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetProgramResourceIndex( params->program, params->programInterface, params->name );
+    params->ret = funcs->p_glGetProgramResourceIndex( params->program, params->programInterface, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -9456,7 +9456,7 @@ static NTSTATUS ext_glGetProgramResourceLocation( void *args )
 {
     struct glGetProgramResourceLocation_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetProgramResourceLocation( params->program, params->programInterface, params->name );
+    params->ret = funcs->p_glGetProgramResourceLocation( params->program, params->programInterface, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -9464,7 +9464,7 @@ static NTSTATUS ext_glGetProgramResourceLocationIndex( void *args )
 {
     struct glGetProgramResourceLocationIndex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetProgramResourceLocationIndex( params->program, params->programInterface, params->name );
+    params->ret = funcs->p_glGetProgramResourceLocationIndex( params->program, params->programInterface, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -9472,7 +9472,7 @@ static NTSTATUS ext_glGetProgramResourceName( void *args )
 {
     struct glGetProgramResourceName_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramResourceName( params->program, params->programInterface, params->index, params->bufSize, params->length, params->name );
+    funcs->p_glGetProgramResourceName( params->program, params->programInterface, params->index, params->bufSize, params->length, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -9480,7 +9480,7 @@ static NTSTATUS ext_glGetProgramResourcefvNV( void *args )
 {
     struct glGetProgramResourcefvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramResourcefvNV( params->program, params->programInterface, params->index, params->propCount, params->props, params->count, params->length, params->params );
+    funcs->p_glGetProgramResourcefvNV( params->program, params->programInterface, params->index, params->propCount, params->props, params->count, params->length, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9488,7 +9488,7 @@ static NTSTATUS ext_glGetProgramResourceiv( void *args )
 {
     struct glGetProgramResourceiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramResourceiv( params->program, params->programInterface, params->index, params->propCount, params->props, params->count, params->length, params->params );
+    funcs->p_glGetProgramResourceiv( params->program, params->programInterface, params->index, params->propCount, params->props, params->count, params->length, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9496,7 +9496,7 @@ static NTSTATUS ext_glGetProgramStageiv( void *args )
 {
     struct glGetProgramStageiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramStageiv( params->program, params->shadertype, params->pname, params->values );
+    funcs->p_glGetProgramStageiv( params->program, params->shadertype, params->pname, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -9504,7 +9504,7 @@ static NTSTATUS ext_glGetProgramStringARB( void *args )
 {
     struct glGetProgramStringARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramStringARB( params->target, params->pname, params->string );
+    funcs->p_glGetProgramStringARB( params->target, params->pname, params->string );
     return STATUS_SUCCESS;
 }
 
@@ -9512,7 +9512,7 @@ static NTSTATUS ext_glGetProgramStringNV( void *args )
 {
     struct glGetProgramStringNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramStringNV( params->id, params->pname, params->program );
+    funcs->p_glGetProgramStringNV( params->id, params->pname, params->program );
     return STATUS_SUCCESS;
 }
 
@@ -9520,7 +9520,7 @@ static NTSTATUS ext_glGetProgramSubroutineParameteruivNV( void *args )
 {
     struct glGetProgramSubroutineParameteruivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramSubroutineParameteruivNV( params->target, params->index, params->param );
+    funcs->p_glGetProgramSubroutineParameteruivNV( params->target, params->index, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -9528,7 +9528,7 @@ static NTSTATUS ext_glGetProgramiv( void *args )
 {
     struct glGetProgramiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramiv( params->program, params->pname, params->params );
+    funcs->p_glGetProgramiv( params->program, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9536,7 +9536,7 @@ static NTSTATUS ext_glGetProgramivARB( void *args )
 {
     struct glGetProgramivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramivARB( params->target, params->pname, params->params );
+    funcs->p_glGetProgramivARB( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9544,7 +9544,7 @@ static NTSTATUS ext_glGetProgramivNV( void *args )
 {
     struct glGetProgramivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetProgramivNV( params->id, params->pname, params->params );
+    funcs->p_glGetProgramivNV( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9552,7 +9552,7 @@ static NTSTATUS ext_glGetQueryBufferObjecti64v( void *args )
 {
     struct glGetQueryBufferObjecti64v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryBufferObjecti64v( params->id, params->buffer, params->pname, params->offset );
+    funcs->p_glGetQueryBufferObjecti64v( params->id, params->buffer, params->pname, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -9560,7 +9560,7 @@ static NTSTATUS ext_glGetQueryBufferObjectiv( void *args )
 {
     struct glGetQueryBufferObjectiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryBufferObjectiv( params->id, params->buffer, params->pname, params->offset );
+    funcs->p_glGetQueryBufferObjectiv( params->id, params->buffer, params->pname, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -9568,7 +9568,7 @@ static NTSTATUS ext_glGetQueryBufferObjectui64v( void *args )
 {
     struct glGetQueryBufferObjectui64v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryBufferObjectui64v( params->id, params->buffer, params->pname, params->offset );
+    funcs->p_glGetQueryBufferObjectui64v( params->id, params->buffer, params->pname, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -9576,7 +9576,7 @@ static NTSTATUS ext_glGetQueryBufferObjectuiv( void *args )
 {
     struct glGetQueryBufferObjectuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryBufferObjectuiv( params->id, params->buffer, params->pname, params->offset );
+    funcs->p_glGetQueryBufferObjectuiv( params->id, params->buffer, params->pname, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -9584,7 +9584,7 @@ static NTSTATUS ext_glGetQueryIndexediv( void *args )
 {
     struct glGetQueryIndexediv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryIndexediv( params->target, params->index, params->pname, params->params );
+    funcs->p_glGetQueryIndexediv( params->target, params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9592,7 +9592,7 @@ static NTSTATUS ext_glGetQueryObjecti64v( void *args )
 {
     struct glGetQueryObjecti64v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryObjecti64v( params->id, params->pname, params->params );
+    funcs->p_glGetQueryObjecti64v( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9600,7 +9600,7 @@ static NTSTATUS ext_glGetQueryObjecti64vEXT( void *args )
 {
     struct glGetQueryObjecti64vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryObjecti64vEXT( params->id, params->pname, params->params );
+    funcs->p_glGetQueryObjecti64vEXT( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9608,7 +9608,7 @@ static NTSTATUS ext_glGetQueryObjectiv( void *args )
 {
     struct glGetQueryObjectiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryObjectiv( params->id, params->pname, params->params );
+    funcs->p_glGetQueryObjectiv( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9616,7 +9616,7 @@ static NTSTATUS ext_glGetQueryObjectivARB( void *args )
 {
     struct glGetQueryObjectivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryObjectivARB( params->id, params->pname, params->params );
+    funcs->p_glGetQueryObjectivARB( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9624,7 +9624,7 @@ static NTSTATUS ext_glGetQueryObjectui64v( void *args )
 {
     struct glGetQueryObjectui64v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryObjectui64v( params->id, params->pname, params->params );
+    funcs->p_glGetQueryObjectui64v( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9632,7 +9632,7 @@ static NTSTATUS ext_glGetQueryObjectui64vEXT( void *args )
 {
     struct glGetQueryObjectui64vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryObjectui64vEXT( params->id, params->pname, params->params );
+    funcs->p_glGetQueryObjectui64vEXT( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9640,7 +9640,7 @@ static NTSTATUS ext_glGetQueryObjectuiv( void *args )
 {
     struct glGetQueryObjectuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryObjectuiv( params->id, params->pname, params->params );
+    funcs->p_glGetQueryObjectuiv( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9648,7 +9648,7 @@ static NTSTATUS ext_glGetQueryObjectuivARB( void *args )
 {
     struct glGetQueryObjectuivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryObjectuivARB( params->id, params->pname, params->params );
+    funcs->p_glGetQueryObjectuivARB( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9656,7 +9656,7 @@ static NTSTATUS ext_glGetQueryiv( void *args )
 {
     struct glGetQueryiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryiv( params->target, params->pname, params->params );
+    funcs->p_glGetQueryiv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9664,7 +9664,7 @@ static NTSTATUS ext_glGetQueryivARB( void *args )
 {
     struct glGetQueryivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetQueryivARB( params->target, params->pname, params->params );
+    funcs->p_glGetQueryivARB( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9672,7 +9672,7 @@ static NTSTATUS ext_glGetRenderbufferParameteriv( void *args )
 {
     struct glGetRenderbufferParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetRenderbufferParameteriv( params->target, params->pname, params->params );
+    funcs->p_glGetRenderbufferParameteriv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9680,7 +9680,7 @@ static NTSTATUS ext_glGetRenderbufferParameterivEXT( void *args )
 {
     struct glGetRenderbufferParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetRenderbufferParameterivEXT( params->target, params->pname, params->params );
+    funcs->p_glGetRenderbufferParameterivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9688,7 +9688,7 @@ static NTSTATUS ext_glGetSamplerParameterIiv( void *args )
 {
     struct glGetSamplerParameterIiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetSamplerParameterIiv( params->sampler, params->pname, params->params );
+    funcs->p_glGetSamplerParameterIiv( params->sampler, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9696,7 +9696,7 @@ static NTSTATUS ext_glGetSamplerParameterIuiv( void *args )
 {
     struct glGetSamplerParameterIuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetSamplerParameterIuiv( params->sampler, params->pname, params->params );
+    funcs->p_glGetSamplerParameterIuiv( params->sampler, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9704,7 +9704,7 @@ static NTSTATUS ext_glGetSamplerParameterfv( void *args )
 {
     struct glGetSamplerParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetSamplerParameterfv( params->sampler, params->pname, params->params );
+    funcs->p_glGetSamplerParameterfv( params->sampler, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9712,7 +9712,7 @@ static NTSTATUS ext_glGetSamplerParameteriv( void *args )
 {
     struct glGetSamplerParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetSamplerParameteriv( params->sampler, params->pname, params->params );
+    funcs->p_glGetSamplerParameteriv( params->sampler, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9720,7 +9720,7 @@ static NTSTATUS ext_glGetSemaphoreParameterui64vEXT( void *args )
 {
     struct glGetSemaphoreParameterui64vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetSemaphoreParameterui64vEXT( params->semaphore, params->pname, params->params );
+    funcs->p_glGetSemaphoreParameterui64vEXT( params->semaphore, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9728,7 +9728,7 @@ static NTSTATUS ext_glGetSeparableFilter( void *args )
 {
     struct glGetSeparableFilter_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetSeparableFilter( params->target, params->format, params->type, params->row, params->column, params->span );
+    funcs->p_glGetSeparableFilter( params->target, params->format, params->type, params->row, params->column, params->span );
     return STATUS_SUCCESS;
 }
 
@@ -9736,7 +9736,7 @@ static NTSTATUS ext_glGetSeparableFilterEXT( void *args )
 {
     struct glGetSeparableFilterEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetSeparableFilterEXT( params->target, params->format, params->type, params->row, params->column, params->span );
+    funcs->p_glGetSeparableFilterEXT( params->target, params->format, params->type, params->row, params->column, params->span );
     return STATUS_SUCCESS;
 }
 
@@ -9744,7 +9744,7 @@ static NTSTATUS ext_glGetShaderInfoLog( void *args )
 {
     struct glGetShaderInfoLog_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetShaderInfoLog( params->shader, params->bufSize, params->length, params->infoLog );
+    funcs->p_glGetShaderInfoLog( params->shader, params->bufSize, params->length, params->infoLog );
     return STATUS_SUCCESS;
 }
 
@@ -9752,7 +9752,7 @@ static NTSTATUS ext_glGetShaderPrecisionFormat( void *args )
 {
     struct glGetShaderPrecisionFormat_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetShaderPrecisionFormat( params->shadertype, params->precisiontype, params->range, params->precision );
+    funcs->p_glGetShaderPrecisionFormat( params->shadertype, params->precisiontype, params->range, params->precision );
     return STATUS_SUCCESS;
 }
 
@@ -9760,7 +9760,7 @@ static NTSTATUS ext_glGetShaderSource( void *args )
 {
     struct glGetShaderSource_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetShaderSource( params->shader, params->bufSize, params->length, params->source );
+    funcs->p_glGetShaderSource( params->shader, params->bufSize, params->length, params->source );
     return STATUS_SUCCESS;
 }
 
@@ -9768,7 +9768,7 @@ static NTSTATUS ext_glGetShaderSourceARB( void *args )
 {
     struct glGetShaderSourceARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetShaderSourceARB( params->obj, params->maxLength, params->length, params->source );
+    funcs->p_glGetShaderSourceARB( params->obj, params->maxLength, params->length, params->source );
     return STATUS_SUCCESS;
 }
 
@@ -9776,7 +9776,7 @@ static NTSTATUS ext_glGetShaderiv( void *args )
 {
     struct glGetShaderiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetShaderiv( params->shader, params->pname, params->params );
+    funcs->p_glGetShaderiv( params->shader, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9784,7 +9784,7 @@ static NTSTATUS ext_glGetShadingRateImagePaletteNV( void *args )
 {
     struct glGetShadingRateImagePaletteNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetShadingRateImagePaletteNV( params->viewport, params->entry, params->rate );
+    funcs->p_glGetShadingRateImagePaletteNV( params->viewport, params->entry, params->rate );
     return STATUS_SUCCESS;
 }
 
@@ -9792,7 +9792,7 @@ static NTSTATUS ext_glGetShadingRateSampleLocationivNV( void *args )
 {
     struct glGetShadingRateSampleLocationivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetShadingRateSampleLocationivNV( params->rate, params->samples, params->index, params->location );
+    funcs->p_glGetShadingRateSampleLocationivNV( params->rate, params->samples, params->index, params->location );
     return STATUS_SUCCESS;
 }
 
@@ -9800,7 +9800,7 @@ static NTSTATUS ext_glGetSharpenTexFuncSGIS( void *args )
 {
     struct glGetSharpenTexFuncSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetSharpenTexFuncSGIS( params->target, params->points );
+    funcs->p_glGetSharpenTexFuncSGIS( params->target, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -9808,7 +9808,7 @@ static NTSTATUS ext_glGetStageIndexNV( void *args )
 {
     struct glGetStageIndexNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetStageIndexNV( params->shadertype );
+    params->ret = funcs->p_glGetStageIndexNV( params->shadertype );
     return STATUS_SUCCESS;
 }
 
@@ -9816,7 +9816,7 @@ static NTSTATUS ext_glGetSubroutineIndex( void *args )
 {
     struct glGetSubroutineIndex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetSubroutineIndex( params->program, params->shadertype, params->name );
+    params->ret = funcs->p_glGetSubroutineIndex( params->program, params->shadertype, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -9824,7 +9824,7 @@ static NTSTATUS ext_glGetSubroutineUniformLocation( void *args )
 {
     struct glGetSubroutineUniformLocation_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetSubroutineUniformLocation( params->program, params->shadertype, params->name );
+    params->ret = funcs->p_glGetSubroutineUniformLocation( params->program, params->shadertype, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -9832,7 +9832,7 @@ NTSTATUS ext_glGetSynciv( void *args )
 {
     struct glGetSynciv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetSynciv( params->sync, params->pname, params->count, params->length, params->values );
+    funcs->p_glGetSynciv( params->sync, params->pname, params->count, params->length, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -9840,7 +9840,7 @@ static NTSTATUS ext_glGetTexBumpParameterfvATI( void *args )
 {
     struct glGetTexBumpParameterfvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexBumpParameterfvATI( params->pname, params->param );
+    funcs->p_glGetTexBumpParameterfvATI( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -9848,7 +9848,7 @@ static NTSTATUS ext_glGetTexBumpParameterivATI( void *args )
 {
     struct glGetTexBumpParameterivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexBumpParameterivATI( params->pname, params->param );
+    funcs->p_glGetTexBumpParameterivATI( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -9856,7 +9856,7 @@ static NTSTATUS ext_glGetTexEnvxvOES( void *args )
 {
     struct glGetTexEnvxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexEnvxvOES( params->target, params->pname, params->params );
+    funcs->p_glGetTexEnvxvOES( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9864,7 +9864,7 @@ static NTSTATUS ext_glGetTexFilterFuncSGIS( void *args )
 {
     struct glGetTexFilterFuncSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexFilterFuncSGIS( params->target, params->filter, params->weights );
+    funcs->p_glGetTexFilterFuncSGIS( params->target, params->filter, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -9872,7 +9872,7 @@ static NTSTATUS ext_glGetTexGenxvOES( void *args )
 {
     struct glGetTexGenxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexGenxvOES( params->coord, params->pname, params->params );
+    funcs->p_glGetTexGenxvOES( params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9880,7 +9880,7 @@ static NTSTATUS ext_glGetTexLevelParameterxvOES( void *args )
 {
     struct glGetTexLevelParameterxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexLevelParameterxvOES( params->target, params->level, params->pname, params->params );
+    funcs->p_glGetTexLevelParameterxvOES( params->target, params->level, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9888,7 +9888,7 @@ static NTSTATUS ext_glGetTexParameterIiv( void *args )
 {
     struct glGetTexParameterIiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexParameterIiv( params->target, params->pname, params->params );
+    funcs->p_glGetTexParameterIiv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9896,7 +9896,7 @@ static NTSTATUS ext_glGetTexParameterIivEXT( void *args )
 {
     struct glGetTexParameterIivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexParameterIivEXT( params->target, params->pname, params->params );
+    funcs->p_glGetTexParameterIivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9904,7 +9904,7 @@ static NTSTATUS ext_glGetTexParameterIuiv( void *args )
 {
     struct glGetTexParameterIuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexParameterIuiv( params->target, params->pname, params->params );
+    funcs->p_glGetTexParameterIuiv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9912,7 +9912,7 @@ static NTSTATUS ext_glGetTexParameterIuivEXT( void *args )
 {
     struct glGetTexParameterIuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexParameterIuivEXT( params->target, params->pname, params->params );
+    funcs->p_glGetTexParameterIuivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9920,7 +9920,7 @@ static NTSTATUS ext_glGetTexParameterPointervAPPLE( void *args )
 {
     struct glGetTexParameterPointervAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexParameterPointervAPPLE( params->target, params->pname, params->params );
+    funcs->p_glGetTexParameterPointervAPPLE( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9928,7 +9928,7 @@ static NTSTATUS ext_glGetTexParameterxvOES( void *args )
 {
     struct glGetTexParameterxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTexParameterxvOES( params->target, params->pname, params->params );
+    funcs->p_glGetTexParameterxvOES( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9936,7 +9936,7 @@ static NTSTATUS ext_glGetTextureHandleARB( void *args )
 {
     struct glGetTextureHandleARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetTextureHandleARB( params->texture );
+    params->ret = funcs->p_glGetTextureHandleARB( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -9944,7 +9944,7 @@ static NTSTATUS ext_glGetTextureHandleNV( void *args )
 {
     struct glGetTextureHandleNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetTextureHandleNV( params->texture );
+    params->ret = funcs->p_glGetTextureHandleNV( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -9952,7 +9952,7 @@ static NTSTATUS ext_glGetTextureImage( void *args )
 {
     struct glGetTextureImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureImage( params->texture, params->level, params->format, params->type, params->bufSize, params->pixels );
+    funcs->p_glGetTextureImage( params->texture, params->level, params->format, params->type, params->bufSize, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -9960,7 +9960,7 @@ static NTSTATUS ext_glGetTextureImageEXT( void *args )
 {
     struct glGetTextureImageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureImageEXT( params->texture, params->target, params->level, params->format, params->type, params->pixels );
+    funcs->p_glGetTextureImageEXT( params->texture, params->target, params->level, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -9968,7 +9968,7 @@ static NTSTATUS ext_glGetTextureLevelParameterfv( void *args )
 {
     struct glGetTextureLevelParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureLevelParameterfv( params->texture, params->level, params->pname, params->params );
+    funcs->p_glGetTextureLevelParameterfv( params->texture, params->level, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9976,7 +9976,7 @@ static NTSTATUS ext_glGetTextureLevelParameterfvEXT( void *args )
 {
     struct glGetTextureLevelParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureLevelParameterfvEXT( params->texture, params->target, params->level, params->pname, params->params );
+    funcs->p_glGetTextureLevelParameterfvEXT( params->texture, params->target, params->level, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9984,7 +9984,7 @@ static NTSTATUS ext_glGetTextureLevelParameteriv( void *args )
 {
     struct glGetTextureLevelParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureLevelParameteriv( params->texture, params->level, params->pname, params->params );
+    funcs->p_glGetTextureLevelParameteriv( params->texture, params->level, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -9992,7 +9992,7 @@ static NTSTATUS ext_glGetTextureLevelParameterivEXT( void *args )
 {
     struct glGetTextureLevelParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureLevelParameterivEXT( params->texture, params->target, params->level, params->pname, params->params );
+    funcs->p_glGetTextureLevelParameterivEXT( params->texture, params->target, params->level, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10000,7 +10000,7 @@ static NTSTATUS ext_glGetTextureParameterIiv( void *args )
 {
     struct glGetTextureParameterIiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureParameterIiv( params->texture, params->pname, params->params );
+    funcs->p_glGetTextureParameterIiv( params->texture, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10008,7 +10008,7 @@ static NTSTATUS ext_glGetTextureParameterIivEXT( void *args )
 {
     struct glGetTextureParameterIivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureParameterIivEXT( params->texture, params->target, params->pname, params->params );
+    funcs->p_glGetTextureParameterIivEXT( params->texture, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10016,7 +10016,7 @@ static NTSTATUS ext_glGetTextureParameterIuiv( void *args )
 {
     struct glGetTextureParameterIuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureParameterIuiv( params->texture, params->pname, params->params );
+    funcs->p_glGetTextureParameterIuiv( params->texture, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10024,7 +10024,7 @@ static NTSTATUS ext_glGetTextureParameterIuivEXT( void *args )
 {
     struct glGetTextureParameterIuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureParameterIuivEXT( params->texture, params->target, params->pname, params->params );
+    funcs->p_glGetTextureParameterIuivEXT( params->texture, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10032,7 +10032,7 @@ static NTSTATUS ext_glGetTextureParameterfv( void *args )
 {
     struct glGetTextureParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureParameterfv( params->texture, params->pname, params->params );
+    funcs->p_glGetTextureParameterfv( params->texture, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10040,7 +10040,7 @@ static NTSTATUS ext_glGetTextureParameterfvEXT( void *args )
 {
     struct glGetTextureParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureParameterfvEXT( params->texture, params->target, params->pname, params->params );
+    funcs->p_glGetTextureParameterfvEXT( params->texture, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10048,7 +10048,7 @@ static NTSTATUS ext_glGetTextureParameteriv( void *args )
 {
     struct glGetTextureParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureParameteriv( params->texture, params->pname, params->params );
+    funcs->p_glGetTextureParameteriv( params->texture, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10056,7 +10056,7 @@ static NTSTATUS ext_glGetTextureParameterivEXT( void *args )
 {
     struct glGetTextureParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureParameterivEXT( params->texture, params->target, params->pname, params->params );
+    funcs->p_glGetTextureParameterivEXT( params->texture, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10064,7 +10064,7 @@ static NTSTATUS ext_glGetTextureSamplerHandleARB( void *args )
 {
     struct glGetTextureSamplerHandleARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetTextureSamplerHandleARB( params->texture, params->sampler );
+    params->ret = funcs->p_glGetTextureSamplerHandleARB( params->texture, params->sampler );
     return STATUS_SUCCESS;
 }
 
@@ -10072,7 +10072,7 @@ static NTSTATUS ext_glGetTextureSamplerHandleNV( void *args )
 {
     struct glGetTextureSamplerHandleNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetTextureSamplerHandleNV( params->texture, params->sampler );
+    params->ret = funcs->p_glGetTextureSamplerHandleNV( params->texture, params->sampler );
     return STATUS_SUCCESS;
 }
 
@@ -10080,7 +10080,7 @@ static NTSTATUS ext_glGetTextureSubImage( void *args )
 {
     struct glGetTextureSubImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTextureSubImage( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->bufSize, params->pixels );
+    funcs->p_glGetTextureSubImage( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->bufSize, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -10088,7 +10088,7 @@ static NTSTATUS ext_glGetTrackMatrixivNV( void *args )
 {
     struct glGetTrackMatrixivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTrackMatrixivNV( params->target, params->address, params->pname, params->params );
+    funcs->p_glGetTrackMatrixivNV( params->target, params->address, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10096,7 +10096,7 @@ static NTSTATUS ext_glGetTransformFeedbackVarying( void *args )
 {
     struct glGetTransformFeedbackVarying_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTransformFeedbackVarying( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
+    funcs->p_glGetTransformFeedbackVarying( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -10104,7 +10104,7 @@ static NTSTATUS ext_glGetTransformFeedbackVaryingEXT( void *args )
 {
     struct glGetTransformFeedbackVaryingEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTransformFeedbackVaryingEXT( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
+    funcs->p_glGetTransformFeedbackVaryingEXT( params->program, params->index, params->bufSize, params->length, params->size, params->type, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -10112,7 +10112,7 @@ static NTSTATUS ext_glGetTransformFeedbackVaryingNV( void *args )
 {
     struct glGetTransformFeedbackVaryingNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTransformFeedbackVaryingNV( params->program, params->index, params->location );
+    funcs->p_glGetTransformFeedbackVaryingNV( params->program, params->index, params->location );
     return STATUS_SUCCESS;
 }
 
@@ -10120,7 +10120,7 @@ static NTSTATUS ext_glGetTransformFeedbacki64_v( void *args )
 {
     struct glGetTransformFeedbacki64_v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTransformFeedbacki64_v( params->xfb, params->pname, params->index, params->param );
+    funcs->p_glGetTransformFeedbacki64_v( params->xfb, params->pname, params->index, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10128,7 +10128,7 @@ static NTSTATUS ext_glGetTransformFeedbacki_v( void *args )
 {
     struct glGetTransformFeedbacki_v_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTransformFeedbacki_v( params->xfb, params->pname, params->index, params->param );
+    funcs->p_glGetTransformFeedbacki_v( params->xfb, params->pname, params->index, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10136,7 +10136,7 @@ static NTSTATUS ext_glGetTransformFeedbackiv( void *args )
 {
     struct glGetTransformFeedbackiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetTransformFeedbackiv( params->xfb, params->pname, params->param );
+    funcs->p_glGetTransformFeedbackiv( params->xfb, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10144,7 +10144,7 @@ static NTSTATUS ext_glGetUniformBlockIndex( void *args )
 {
     struct glGetUniformBlockIndex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetUniformBlockIndex( params->program, params->uniformBlockName );
+    params->ret = funcs->p_glGetUniformBlockIndex( params->program, params->uniformBlockName );
     return STATUS_SUCCESS;
 }
 
@@ -10152,7 +10152,7 @@ static NTSTATUS ext_glGetUniformBufferSizeEXT( void *args )
 {
     struct glGetUniformBufferSizeEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetUniformBufferSizeEXT( params->program, params->location );
+    params->ret = funcs->p_glGetUniformBufferSizeEXT( params->program, params->location );
     return STATUS_SUCCESS;
 }
 
@@ -10160,7 +10160,7 @@ static NTSTATUS ext_glGetUniformIndices( void *args )
 {
     struct glGetUniformIndices_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformIndices( params->program, params->uniformCount, params->uniformNames, params->uniformIndices );
+    funcs->p_glGetUniformIndices( params->program, params->uniformCount, params->uniformNames, params->uniformIndices );
     return STATUS_SUCCESS;
 }
 
@@ -10168,7 +10168,7 @@ static NTSTATUS ext_glGetUniformLocation( void *args )
 {
     struct glGetUniformLocation_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetUniformLocation( params->program, params->name );
+    params->ret = funcs->p_glGetUniformLocation( params->program, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -10176,7 +10176,7 @@ static NTSTATUS ext_glGetUniformLocationARB( void *args )
 {
     struct glGetUniformLocationARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetUniformLocationARB( params->programObj, params->name );
+    params->ret = funcs->p_glGetUniformLocationARB( params->programObj, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -10184,7 +10184,7 @@ static NTSTATUS ext_glGetUniformOffsetEXT( void *args )
 {
     struct glGetUniformOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetUniformOffsetEXT( params->program, params->location );
+    params->ret = funcs->p_glGetUniformOffsetEXT( params->program, params->location );
     return STATUS_SUCCESS;
 }
 
@@ -10192,7 +10192,7 @@ static NTSTATUS ext_glGetUniformSubroutineuiv( void *args )
 {
     struct glGetUniformSubroutineuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformSubroutineuiv( params->shadertype, params->location, params->params );
+    funcs->p_glGetUniformSubroutineuiv( params->shadertype, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10200,7 +10200,7 @@ static NTSTATUS ext_glGetUniformdv( void *args )
 {
     struct glGetUniformdv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformdv( params->program, params->location, params->params );
+    funcs->p_glGetUniformdv( params->program, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10208,7 +10208,7 @@ static NTSTATUS ext_glGetUniformfv( void *args )
 {
     struct glGetUniformfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformfv( params->program, params->location, params->params );
+    funcs->p_glGetUniformfv( params->program, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10216,7 +10216,7 @@ static NTSTATUS ext_glGetUniformfvARB( void *args )
 {
     struct glGetUniformfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformfvARB( params->programObj, params->location, params->params );
+    funcs->p_glGetUniformfvARB( params->programObj, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10224,7 +10224,7 @@ static NTSTATUS ext_glGetUniformi64vARB( void *args )
 {
     struct glGetUniformi64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformi64vARB( params->program, params->location, params->params );
+    funcs->p_glGetUniformi64vARB( params->program, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10232,7 +10232,7 @@ static NTSTATUS ext_glGetUniformi64vNV( void *args )
 {
     struct glGetUniformi64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformi64vNV( params->program, params->location, params->params );
+    funcs->p_glGetUniformi64vNV( params->program, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10240,7 +10240,7 @@ static NTSTATUS ext_glGetUniformiv( void *args )
 {
     struct glGetUniformiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformiv( params->program, params->location, params->params );
+    funcs->p_glGetUniformiv( params->program, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10248,7 +10248,7 @@ static NTSTATUS ext_glGetUniformivARB( void *args )
 {
     struct glGetUniformivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformivARB( params->programObj, params->location, params->params );
+    funcs->p_glGetUniformivARB( params->programObj, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10256,7 +10256,7 @@ static NTSTATUS ext_glGetUniformui64vARB( void *args )
 {
     struct glGetUniformui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformui64vARB( params->program, params->location, params->params );
+    funcs->p_glGetUniformui64vARB( params->program, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10264,7 +10264,7 @@ static NTSTATUS ext_glGetUniformui64vNV( void *args )
 {
     struct glGetUniformui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformui64vNV( params->program, params->location, params->params );
+    funcs->p_glGetUniformui64vNV( params->program, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10272,7 +10272,7 @@ static NTSTATUS ext_glGetUniformuiv( void *args )
 {
     struct glGetUniformuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformuiv( params->program, params->location, params->params );
+    funcs->p_glGetUniformuiv( params->program, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10280,7 +10280,7 @@ static NTSTATUS ext_glGetUniformuivEXT( void *args )
 {
     struct glGetUniformuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUniformuivEXT( params->program, params->location, params->params );
+    funcs->p_glGetUniformuivEXT( params->program, params->location, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10288,7 +10288,7 @@ static NTSTATUS ext_glGetUnsignedBytei_vEXT( void *args )
 {
     struct glGetUnsignedBytei_vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUnsignedBytei_vEXT( params->target, params->index, params->data );
+    funcs->p_glGetUnsignedBytei_vEXT( params->target, params->index, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -10296,7 +10296,7 @@ static NTSTATUS ext_glGetUnsignedBytevEXT( void *args )
 {
     struct glGetUnsignedBytevEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetUnsignedBytevEXT( params->pname, params->data );
+    funcs->p_glGetUnsignedBytevEXT( params->pname, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -10304,7 +10304,7 @@ static NTSTATUS ext_glGetVariantArrayObjectfvATI( void *args )
 {
     struct glGetVariantArrayObjectfvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVariantArrayObjectfvATI( params->id, params->pname, params->params );
+    funcs->p_glGetVariantArrayObjectfvATI( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10312,7 +10312,7 @@ static NTSTATUS ext_glGetVariantArrayObjectivATI( void *args )
 {
     struct glGetVariantArrayObjectivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVariantArrayObjectivATI( params->id, params->pname, params->params );
+    funcs->p_glGetVariantArrayObjectivATI( params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10320,7 +10320,7 @@ static NTSTATUS ext_glGetVariantBooleanvEXT( void *args )
 {
     struct glGetVariantBooleanvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVariantBooleanvEXT( params->id, params->value, params->data );
+    funcs->p_glGetVariantBooleanvEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -10328,7 +10328,7 @@ static NTSTATUS ext_glGetVariantFloatvEXT( void *args )
 {
     struct glGetVariantFloatvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVariantFloatvEXT( params->id, params->value, params->data );
+    funcs->p_glGetVariantFloatvEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -10336,7 +10336,7 @@ static NTSTATUS ext_glGetVariantIntegervEXT( void *args )
 {
     struct glGetVariantIntegervEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVariantIntegervEXT( params->id, params->value, params->data );
+    funcs->p_glGetVariantIntegervEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -10344,7 +10344,7 @@ static NTSTATUS ext_glGetVariantPointervEXT( void *args )
 {
     struct glGetVariantPointervEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVariantPointervEXT( params->id, params->value, params->data );
+    funcs->p_glGetVariantPointervEXT( params->id, params->value, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -10352,7 +10352,7 @@ static NTSTATUS ext_glGetVaryingLocationNV( void *args )
 {
     struct glGetVaryingLocationNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetVaryingLocationNV( params->program, params->name );
+    params->ret = funcs->p_glGetVaryingLocationNV( params->program, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -10360,7 +10360,7 @@ static NTSTATUS ext_glGetVertexArrayIndexed64iv( void *args )
 {
     struct glGetVertexArrayIndexed64iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexArrayIndexed64iv( params->vaobj, params->index, params->pname, params->param );
+    funcs->p_glGetVertexArrayIndexed64iv( params->vaobj, params->index, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10368,7 +10368,7 @@ static NTSTATUS ext_glGetVertexArrayIndexediv( void *args )
 {
     struct glGetVertexArrayIndexediv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexArrayIndexediv( params->vaobj, params->index, params->pname, params->param );
+    funcs->p_glGetVertexArrayIndexediv( params->vaobj, params->index, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10376,7 +10376,7 @@ static NTSTATUS ext_glGetVertexArrayIntegeri_vEXT( void *args )
 {
     struct glGetVertexArrayIntegeri_vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexArrayIntegeri_vEXT( params->vaobj, params->index, params->pname, params->param );
+    funcs->p_glGetVertexArrayIntegeri_vEXT( params->vaobj, params->index, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10384,7 +10384,7 @@ static NTSTATUS ext_glGetVertexArrayIntegervEXT( void *args )
 {
     struct glGetVertexArrayIntegervEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexArrayIntegervEXT( params->vaobj, params->pname, params->param );
+    funcs->p_glGetVertexArrayIntegervEXT( params->vaobj, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10392,7 +10392,7 @@ static NTSTATUS ext_glGetVertexArrayPointeri_vEXT( void *args )
 {
     struct glGetVertexArrayPointeri_vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexArrayPointeri_vEXT( params->vaobj, params->index, params->pname, params->param );
+    funcs->p_glGetVertexArrayPointeri_vEXT( params->vaobj, params->index, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10400,7 +10400,7 @@ static NTSTATUS ext_glGetVertexArrayPointervEXT( void *args )
 {
     struct glGetVertexArrayPointervEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexArrayPointervEXT( params->vaobj, params->pname, params->param );
+    funcs->p_glGetVertexArrayPointervEXT( params->vaobj, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10408,7 +10408,7 @@ static NTSTATUS ext_glGetVertexArrayiv( void *args )
 {
     struct glGetVertexArrayiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexArrayiv( params->vaobj, params->pname, params->param );
+    funcs->p_glGetVertexArrayiv( params->vaobj, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -10416,7 +10416,7 @@ static NTSTATUS ext_glGetVertexAttribArrayObjectfvATI( void *args )
 {
     struct glGetVertexAttribArrayObjectfvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribArrayObjectfvATI( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribArrayObjectfvATI( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10424,7 +10424,7 @@ static NTSTATUS ext_glGetVertexAttribArrayObjectivATI( void *args )
 {
     struct glGetVertexAttribArrayObjectivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribArrayObjectivATI( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribArrayObjectivATI( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10432,7 +10432,7 @@ static NTSTATUS ext_glGetVertexAttribIiv( void *args )
 {
     struct glGetVertexAttribIiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribIiv( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribIiv( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10440,7 +10440,7 @@ static NTSTATUS ext_glGetVertexAttribIivEXT( void *args )
 {
     struct glGetVertexAttribIivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribIivEXT( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribIivEXT( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10448,7 +10448,7 @@ static NTSTATUS ext_glGetVertexAttribIuiv( void *args )
 {
     struct glGetVertexAttribIuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribIuiv( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribIuiv( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10456,7 +10456,7 @@ static NTSTATUS ext_glGetVertexAttribIuivEXT( void *args )
 {
     struct glGetVertexAttribIuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribIuivEXT( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribIuivEXT( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10464,7 +10464,7 @@ static NTSTATUS ext_glGetVertexAttribLdv( void *args )
 {
     struct glGetVertexAttribLdv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribLdv( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribLdv( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10472,7 +10472,7 @@ static NTSTATUS ext_glGetVertexAttribLdvEXT( void *args )
 {
     struct glGetVertexAttribLdvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribLdvEXT( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribLdvEXT( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10480,7 +10480,7 @@ static NTSTATUS ext_glGetVertexAttribLi64vNV( void *args )
 {
     struct glGetVertexAttribLi64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribLi64vNV( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribLi64vNV( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10488,7 +10488,7 @@ static NTSTATUS ext_glGetVertexAttribLui64vARB( void *args )
 {
     struct glGetVertexAttribLui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribLui64vARB( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribLui64vARB( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10496,7 +10496,7 @@ static NTSTATUS ext_glGetVertexAttribLui64vNV( void *args )
 {
     struct glGetVertexAttribLui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribLui64vNV( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribLui64vNV( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10504,7 +10504,7 @@ static NTSTATUS ext_glGetVertexAttribPointerv( void *args )
 {
     struct glGetVertexAttribPointerv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribPointerv( params->index, params->pname, params->pointer );
+    funcs->p_glGetVertexAttribPointerv( params->index, params->pname, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -10512,7 +10512,7 @@ static NTSTATUS ext_glGetVertexAttribPointervARB( void *args )
 {
     struct glGetVertexAttribPointervARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribPointervARB( params->index, params->pname, params->pointer );
+    funcs->p_glGetVertexAttribPointervARB( params->index, params->pname, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -10520,7 +10520,7 @@ static NTSTATUS ext_glGetVertexAttribPointervNV( void *args )
 {
     struct glGetVertexAttribPointervNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribPointervNV( params->index, params->pname, params->pointer );
+    funcs->p_glGetVertexAttribPointervNV( params->index, params->pname, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -10528,7 +10528,7 @@ static NTSTATUS ext_glGetVertexAttribdv( void *args )
 {
     struct glGetVertexAttribdv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribdv( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribdv( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10536,7 +10536,7 @@ static NTSTATUS ext_glGetVertexAttribdvARB( void *args )
 {
     struct glGetVertexAttribdvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribdvARB( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribdvARB( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10544,7 +10544,7 @@ static NTSTATUS ext_glGetVertexAttribdvNV( void *args )
 {
     struct glGetVertexAttribdvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribdvNV( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribdvNV( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10552,7 +10552,7 @@ static NTSTATUS ext_glGetVertexAttribfv( void *args )
 {
     struct glGetVertexAttribfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribfv( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribfv( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10560,7 +10560,7 @@ static NTSTATUS ext_glGetVertexAttribfvARB( void *args )
 {
     struct glGetVertexAttribfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribfvARB( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribfvARB( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10568,7 +10568,7 @@ static NTSTATUS ext_glGetVertexAttribfvNV( void *args )
 {
     struct glGetVertexAttribfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribfvNV( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribfvNV( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10576,7 +10576,7 @@ static NTSTATUS ext_glGetVertexAttribiv( void *args )
 {
     struct glGetVertexAttribiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribiv( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribiv( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10584,7 +10584,7 @@ static NTSTATUS ext_glGetVertexAttribivARB( void *args )
 {
     struct glGetVertexAttribivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribivARB( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribivARB( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10592,7 +10592,7 @@ static NTSTATUS ext_glGetVertexAttribivNV( void *args )
 {
     struct glGetVertexAttribivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVertexAttribivNV( params->index, params->pname, params->params );
+    funcs->p_glGetVertexAttribivNV( params->index, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10600,7 +10600,7 @@ static NTSTATUS ext_glGetVideoCaptureStreamdvNV( void *args )
 {
     struct glGetVideoCaptureStreamdvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVideoCaptureStreamdvNV( params->video_capture_slot, params->stream, params->pname, params->params );
+    funcs->p_glGetVideoCaptureStreamdvNV( params->video_capture_slot, params->stream, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10608,7 +10608,7 @@ static NTSTATUS ext_glGetVideoCaptureStreamfvNV( void *args )
 {
     struct glGetVideoCaptureStreamfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVideoCaptureStreamfvNV( params->video_capture_slot, params->stream, params->pname, params->params );
+    funcs->p_glGetVideoCaptureStreamfvNV( params->video_capture_slot, params->stream, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10616,7 +10616,7 @@ static NTSTATUS ext_glGetVideoCaptureStreamivNV( void *args )
 {
     struct glGetVideoCaptureStreamivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVideoCaptureStreamivNV( params->video_capture_slot, params->stream, params->pname, params->params );
+    funcs->p_glGetVideoCaptureStreamivNV( params->video_capture_slot, params->stream, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10624,7 +10624,7 @@ static NTSTATUS ext_glGetVideoCaptureivNV( void *args )
 {
     struct glGetVideoCaptureivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVideoCaptureivNV( params->video_capture_slot, params->pname, params->params );
+    funcs->p_glGetVideoCaptureivNV( params->video_capture_slot, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10632,7 +10632,7 @@ static NTSTATUS ext_glGetVideoi64vNV( void *args )
 {
     struct glGetVideoi64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVideoi64vNV( params->video_slot, params->pname, params->params );
+    funcs->p_glGetVideoi64vNV( params->video_slot, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10640,7 +10640,7 @@ static NTSTATUS ext_glGetVideoivNV( void *args )
 {
     struct glGetVideoivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVideoivNV( params->video_slot, params->pname, params->params );
+    funcs->p_glGetVideoivNV( params->video_slot, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10648,7 +10648,7 @@ static NTSTATUS ext_glGetVideoui64vNV( void *args )
 {
     struct glGetVideoui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVideoui64vNV( params->video_slot, params->pname, params->params );
+    funcs->p_glGetVideoui64vNV( params->video_slot, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10656,7 +10656,7 @@ static NTSTATUS ext_glGetVideouivNV( void *args )
 {
     struct glGetVideouivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetVideouivNV( params->video_slot, params->pname, params->params );
+    funcs->p_glGetVideouivNV( params->video_slot, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10664,7 +10664,7 @@ static NTSTATUS ext_glGetVkProcAddrNV( void *args )
 {
     struct glGetVkProcAddrNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glGetVkProcAddrNV( params->name );
+    params->ret = funcs->p_glGetVkProcAddrNV( params->name );
     return STATUS_SUCCESS;
 }
 
@@ -10672,7 +10672,7 @@ static NTSTATUS ext_glGetnColorTable( void *args )
 {
     struct glGetnColorTable_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnColorTable( params->target, params->format, params->type, params->bufSize, params->table );
+    funcs->p_glGetnColorTable( params->target, params->format, params->type, params->bufSize, params->table );
     return STATUS_SUCCESS;
 }
 
@@ -10680,7 +10680,7 @@ static NTSTATUS ext_glGetnColorTableARB( void *args )
 {
     struct glGetnColorTableARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnColorTableARB( params->target, params->format, params->type, params->bufSize, params->table );
+    funcs->p_glGetnColorTableARB( params->target, params->format, params->type, params->bufSize, params->table );
     return STATUS_SUCCESS;
 }
 
@@ -10688,7 +10688,7 @@ static NTSTATUS ext_glGetnCompressedTexImage( void *args )
 {
     struct glGetnCompressedTexImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnCompressedTexImage( params->target, params->lod, params->bufSize, params->pixels );
+    funcs->p_glGetnCompressedTexImage( params->target, params->lod, params->bufSize, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -10696,7 +10696,7 @@ static NTSTATUS ext_glGetnCompressedTexImageARB( void *args )
 {
     struct glGetnCompressedTexImageARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnCompressedTexImageARB( params->target, params->lod, params->bufSize, params->img );
+    funcs->p_glGetnCompressedTexImageARB( params->target, params->lod, params->bufSize, params->img );
     return STATUS_SUCCESS;
 }
 
@@ -10704,7 +10704,7 @@ static NTSTATUS ext_glGetnConvolutionFilter( void *args )
 {
     struct glGetnConvolutionFilter_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnConvolutionFilter( params->target, params->format, params->type, params->bufSize, params->image );
+    funcs->p_glGetnConvolutionFilter( params->target, params->format, params->type, params->bufSize, params->image );
     return STATUS_SUCCESS;
 }
 
@@ -10712,7 +10712,7 @@ static NTSTATUS ext_glGetnConvolutionFilterARB( void *args )
 {
     struct glGetnConvolutionFilterARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnConvolutionFilterARB( params->target, params->format, params->type, params->bufSize, params->image );
+    funcs->p_glGetnConvolutionFilterARB( params->target, params->format, params->type, params->bufSize, params->image );
     return STATUS_SUCCESS;
 }
 
@@ -10720,7 +10720,7 @@ static NTSTATUS ext_glGetnHistogram( void *args )
 {
     struct glGetnHistogram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnHistogram( params->target, params->reset, params->format, params->type, params->bufSize, params->values );
+    funcs->p_glGetnHistogram( params->target, params->reset, params->format, params->type, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10728,7 +10728,7 @@ static NTSTATUS ext_glGetnHistogramARB( void *args )
 {
     struct glGetnHistogramARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnHistogramARB( params->target, params->reset, params->format, params->type, params->bufSize, params->values );
+    funcs->p_glGetnHistogramARB( params->target, params->reset, params->format, params->type, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10736,7 +10736,7 @@ static NTSTATUS ext_glGetnMapdv( void *args )
 {
     struct glGetnMapdv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnMapdv( params->target, params->query, params->bufSize, params->v );
+    funcs->p_glGetnMapdv( params->target, params->query, params->bufSize, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -10744,7 +10744,7 @@ static NTSTATUS ext_glGetnMapdvARB( void *args )
 {
     struct glGetnMapdvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnMapdvARB( params->target, params->query, params->bufSize, params->v );
+    funcs->p_glGetnMapdvARB( params->target, params->query, params->bufSize, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -10752,7 +10752,7 @@ static NTSTATUS ext_glGetnMapfv( void *args )
 {
     struct glGetnMapfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnMapfv( params->target, params->query, params->bufSize, params->v );
+    funcs->p_glGetnMapfv( params->target, params->query, params->bufSize, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -10760,7 +10760,7 @@ static NTSTATUS ext_glGetnMapfvARB( void *args )
 {
     struct glGetnMapfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnMapfvARB( params->target, params->query, params->bufSize, params->v );
+    funcs->p_glGetnMapfvARB( params->target, params->query, params->bufSize, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -10768,7 +10768,7 @@ static NTSTATUS ext_glGetnMapiv( void *args )
 {
     struct glGetnMapiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnMapiv( params->target, params->query, params->bufSize, params->v );
+    funcs->p_glGetnMapiv( params->target, params->query, params->bufSize, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -10776,7 +10776,7 @@ static NTSTATUS ext_glGetnMapivARB( void *args )
 {
     struct glGetnMapivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnMapivARB( params->target, params->query, params->bufSize, params->v );
+    funcs->p_glGetnMapivARB( params->target, params->query, params->bufSize, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -10784,7 +10784,7 @@ static NTSTATUS ext_glGetnMinmax( void *args )
 {
     struct glGetnMinmax_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnMinmax( params->target, params->reset, params->format, params->type, params->bufSize, params->values );
+    funcs->p_glGetnMinmax( params->target, params->reset, params->format, params->type, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10792,7 +10792,7 @@ static NTSTATUS ext_glGetnMinmaxARB( void *args )
 {
     struct glGetnMinmaxARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnMinmaxARB( params->target, params->reset, params->format, params->type, params->bufSize, params->values );
+    funcs->p_glGetnMinmaxARB( params->target, params->reset, params->format, params->type, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10800,7 +10800,7 @@ static NTSTATUS ext_glGetnPixelMapfv( void *args )
 {
     struct glGetnPixelMapfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnPixelMapfv( params->map, params->bufSize, params->values );
+    funcs->p_glGetnPixelMapfv( params->map, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10808,7 +10808,7 @@ static NTSTATUS ext_glGetnPixelMapfvARB( void *args )
 {
     struct glGetnPixelMapfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnPixelMapfvARB( params->map, params->bufSize, params->values );
+    funcs->p_glGetnPixelMapfvARB( params->map, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10816,7 +10816,7 @@ static NTSTATUS ext_glGetnPixelMapuiv( void *args )
 {
     struct glGetnPixelMapuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnPixelMapuiv( params->map, params->bufSize, params->values );
+    funcs->p_glGetnPixelMapuiv( params->map, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10824,7 +10824,7 @@ static NTSTATUS ext_glGetnPixelMapuivARB( void *args )
 {
     struct glGetnPixelMapuivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnPixelMapuivARB( params->map, params->bufSize, params->values );
+    funcs->p_glGetnPixelMapuivARB( params->map, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10832,7 +10832,7 @@ static NTSTATUS ext_glGetnPixelMapusv( void *args )
 {
     struct glGetnPixelMapusv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnPixelMapusv( params->map, params->bufSize, params->values );
+    funcs->p_glGetnPixelMapusv( params->map, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10840,7 +10840,7 @@ static NTSTATUS ext_glGetnPixelMapusvARB( void *args )
 {
     struct glGetnPixelMapusvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnPixelMapusvARB( params->map, params->bufSize, params->values );
+    funcs->p_glGetnPixelMapusvARB( params->map, params->bufSize, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -10848,7 +10848,7 @@ static NTSTATUS ext_glGetnPolygonStipple( void *args )
 {
     struct glGetnPolygonStipple_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnPolygonStipple( params->bufSize, params->pattern );
+    funcs->p_glGetnPolygonStipple( params->bufSize, params->pattern );
     return STATUS_SUCCESS;
 }
 
@@ -10856,7 +10856,7 @@ static NTSTATUS ext_glGetnPolygonStippleARB( void *args )
 {
     struct glGetnPolygonStippleARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnPolygonStippleARB( params->bufSize, params->pattern );
+    funcs->p_glGetnPolygonStippleARB( params->bufSize, params->pattern );
     return STATUS_SUCCESS;
 }
 
@@ -10864,7 +10864,7 @@ static NTSTATUS ext_glGetnSeparableFilter( void *args )
 {
     struct glGetnSeparableFilter_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnSeparableFilter( params->target, params->format, params->type, params->rowBufSize, params->row, params->columnBufSize, params->column, params->span );
+    funcs->p_glGetnSeparableFilter( params->target, params->format, params->type, params->rowBufSize, params->row, params->columnBufSize, params->column, params->span );
     return STATUS_SUCCESS;
 }
 
@@ -10872,7 +10872,7 @@ static NTSTATUS ext_glGetnSeparableFilterARB( void *args )
 {
     struct glGetnSeparableFilterARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnSeparableFilterARB( params->target, params->format, params->type, params->rowBufSize, params->row, params->columnBufSize, params->column, params->span );
+    funcs->p_glGetnSeparableFilterARB( params->target, params->format, params->type, params->rowBufSize, params->row, params->columnBufSize, params->column, params->span );
     return STATUS_SUCCESS;
 }
 
@@ -10880,7 +10880,7 @@ static NTSTATUS ext_glGetnTexImage( void *args )
 {
     struct glGetnTexImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnTexImage( params->target, params->level, params->format, params->type, params->bufSize, params->pixels );
+    funcs->p_glGetnTexImage( params->target, params->level, params->format, params->type, params->bufSize, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -10888,7 +10888,7 @@ static NTSTATUS ext_glGetnTexImageARB( void *args )
 {
     struct glGetnTexImageARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnTexImageARB( params->target, params->level, params->format, params->type, params->bufSize, params->img );
+    funcs->p_glGetnTexImageARB( params->target, params->level, params->format, params->type, params->bufSize, params->img );
     return STATUS_SUCCESS;
 }
 
@@ -10896,7 +10896,7 @@ static NTSTATUS ext_glGetnUniformdv( void *args )
 {
     struct glGetnUniformdv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformdv( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformdv( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10904,7 +10904,7 @@ static NTSTATUS ext_glGetnUniformdvARB( void *args )
 {
     struct glGetnUniformdvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformdvARB( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformdvARB( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10912,7 +10912,7 @@ static NTSTATUS ext_glGetnUniformfv( void *args )
 {
     struct glGetnUniformfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformfv( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformfv( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10920,7 +10920,7 @@ static NTSTATUS ext_glGetnUniformfvARB( void *args )
 {
     struct glGetnUniformfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformfvARB( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformfvARB( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10928,7 +10928,7 @@ static NTSTATUS ext_glGetnUniformi64vARB( void *args )
 {
     struct glGetnUniformi64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformi64vARB( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformi64vARB( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10936,7 +10936,7 @@ static NTSTATUS ext_glGetnUniformiv( void *args )
 {
     struct glGetnUniformiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformiv( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformiv( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10944,7 +10944,7 @@ static NTSTATUS ext_glGetnUniformivARB( void *args )
 {
     struct glGetnUniformivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformivARB( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformivARB( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10952,7 +10952,7 @@ static NTSTATUS ext_glGetnUniformui64vARB( void *args )
 {
     struct glGetnUniformui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformui64vARB( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformui64vARB( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10960,7 +10960,7 @@ static NTSTATUS ext_glGetnUniformuiv( void *args )
 {
     struct glGetnUniformuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformuiv( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformuiv( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10968,7 +10968,7 @@ static NTSTATUS ext_glGetnUniformuivARB( void *args )
 {
     struct glGetnUniformuivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGetnUniformuivARB( params->program, params->location, params->bufSize, params->params );
+    funcs->p_glGetnUniformuivARB( params->program, params->location, params->bufSize, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -10976,7 +10976,7 @@ static NTSTATUS ext_glGlobalAlphaFactorbSUN( void *args )
 {
     struct glGlobalAlphaFactorbSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGlobalAlphaFactorbSUN( params->factor );
+    funcs->p_glGlobalAlphaFactorbSUN( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -10984,7 +10984,7 @@ static NTSTATUS ext_glGlobalAlphaFactordSUN( void *args )
 {
     struct glGlobalAlphaFactordSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGlobalAlphaFactordSUN( params->factor );
+    funcs->p_glGlobalAlphaFactordSUN( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -10992,7 +10992,7 @@ static NTSTATUS ext_glGlobalAlphaFactorfSUN( void *args )
 {
     struct glGlobalAlphaFactorfSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGlobalAlphaFactorfSUN( params->factor );
+    funcs->p_glGlobalAlphaFactorfSUN( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -11000,7 +11000,7 @@ static NTSTATUS ext_glGlobalAlphaFactoriSUN( void *args )
 {
     struct glGlobalAlphaFactoriSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGlobalAlphaFactoriSUN( params->factor );
+    funcs->p_glGlobalAlphaFactoriSUN( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -11008,7 +11008,7 @@ static NTSTATUS ext_glGlobalAlphaFactorsSUN( void *args )
 {
     struct glGlobalAlphaFactorsSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGlobalAlphaFactorsSUN( params->factor );
+    funcs->p_glGlobalAlphaFactorsSUN( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -11016,7 +11016,7 @@ static NTSTATUS ext_glGlobalAlphaFactorubSUN( void *args )
 {
     struct glGlobalAlphaFactorubSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGlobalAlphaFactorubSUN( params->factor );
+    funcs->p_glGlobalAlphaFactorubSUN( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -11024,7 +11024,7 @@ static NTSTATUS ext_glGlobalAlphaFactoruiSUN( void *args )
 {
     struct glGlobalAlphaFactoruiSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGlobalAlphaFactoruiSUN( params->factor );
+    funcs->p_glGlobalAlphaFactoruiSUN( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -11032,7 +11032,7 @@ static NTSTATUS ext_glGlobalAlphaFactorusSUN( void *args )
 {
     struct glGlobalAlphaFactorusSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glGlobalAlphaFactorusSUN( params->factor );
+    funcs->p_glGlobalAlphaFactorusSUN( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -11040,7 +11040,7 @@ static NTSTATUS ext_glHintPGI( void *args )
 {
     struct glHintPGI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glHintPGI( params->target, params->mode );
+    funcs->p_glHintPGI( params->target, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -11048,7 +11048,7 @@ static NTSTATUS ext_glHistogram( void *args )
 {
     struct glHistogram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glHistogram( params->target, params->width, params->internalformat, params->sink );
+    funcs->p_glHistogram( params->target, params->width, params->internalformat, params->sink );
     return STATUS_SUCCESS;
 }
 
@@ -11056,7 +11056,7 @@ static NTSTATUS ext_glHistogramEXT( void *args )
 {
     struct glHistogramEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glHistogramEXT( params->target, params->width, params->internalformat, params->sink );
+    funcs->p_glHistogramEXT( params->target, params->width, params->internalformat, params->sink );
     return STATUS_SUCCESS;
 }
 
@@ -11064,7 +11064,7 @@ static NTSTATUS ext_glIglooInterfaceSGIX( void *args )
 {
     struct glIglooInterfaceSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glIglooInterfaceSGIX( params->pname, params->params );
+    funcs->p_glIglooInterfaceSGIX( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -11072,7 +11072,7 @@ static NTSTATUS ext_glImageTransformParameterfHP( void *args )
 {
     struct glImageTransformParameterfHP_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImageTransformParameterfHP( params->target, params->pname, params->param );
+    funcs->p_glImageTransformParameterfHP( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -11080,7 +11080,7 @@ static NTSTATUS ext_glImageTransformParameterfvHP( void *args )
 {
     struct glImageTransformParameterfvHP_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImageTransformParameterfvHP( params->target, params->pname, params->params );
+    funcs->p_glImageTransformParameterfvHP( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -11088,7 +11088,7 @@ static NTSTATUS ext_glImageTransformParameteriHP( void *args )
 {
     struct glImageTransformParameteriHP_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImageTransformParameteriHP( params->target, params->pname, params->param );
+    funcs->p_glImageTransformParameteriHP( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -11096,7 +11096,7 @@ static NTSTATUS ext_glImageTransformParameterivHP( void *args )
 {
     struct glImageTransformParameterivHP_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImageTransformParameterivHP( params->target, params->pname, params->params );
+    funcs->p_glImageTransformParameterivHP( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -11104,7 +11104,7 @@ static NTSTATUS ext_glImportMemoryFdEXT( void *args )
 {
     struct glImportMemoryFdEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImportMemoryFdEXT( params->memory, params->size, params->handleType, params->fd );
+    funcs->p_glImportMemoryFdEXT( params->memory, params->size, params->handleType, params->fd );
     return STATUS_SUCCESS;
 }
 
@@ -11112,7 +11112,7 @@ static NTSTATUS ext_glImportMemoryWin32HandleEXT( void *args )
 {
     struct glImportMemoryWin32HandleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImportMemoryWin32HandleEXT( params->memory, params->size, params->handleType, params->handle );
+    funcs->p_glImportMemoryWin32HandleEXT( params->memory, params->size, params->handleType, params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11120,7 +11120,7 @@ static NTSTATUS ext_glImportMemoryWin32NameEXT( void *args )
 {
     struct glImportMemoryWin32NameEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImportMemoryWin32NameEXT( params->memory, params->size, params->handleType, params->name );
+    funcs->p_glImportMemoryWin32NameEXT( params->memory, params->size, params->handleType, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -11128,7 +11128,7 @@ static NTSTATUS ext_glImportSemaphoreFdEXT( void *args )
 {
     struct glImportSemaphoreFdEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImportSemaphoreFdEXT( params->semaphore, params->handleType, params->fd );
+    funcs->p_glImportSemaphoreFdEXT( params->semaphore, params->handleType, params->fd );
     return STATUS_SUCCESS;
 }
 
@@ -11136,7 +11136,7 @@ static NTSTATUS ext_glImportSemaphoreWin32HandleEXT( void *args )
 {
     struct glImportSemaphoreWin32HandleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImportSemaphoreWin32HandleEXT( params->semaphore, params->handleType, params->handle );
+    funcs->p_glImportSemaphoreWin32HandleEXT( params->semaphore, params->handleType, params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11144,7 +11144,7 @@ static NTSTATUS ext_glImportSemaphoreWin32NameEXT( void *args )
 {
     struct glImportSemaphoreWin32NameEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glImportSemaphoreWin32NameEXT( params->semaphore, params->handleType, params->name );
+    funcs->p_glImportSemaphoreWin32NameEXT( params->semaphore, params->handleType, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -11152,7 +11152,7 @@ static NTSTATUS ext_glImportSyncEXT( void *args )
 {
     struct glImportSyncEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glImportSyncEXT( params->external_sync_type, params->external_sync, params->flags );
+    params->ret = funcs->p_glImportSyncEXT( params->external_sync_type, params->external_sync, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -11160,7 +11160,7 @@ static NTSTATUS ext_glIndexFormatNV( void *args )
 {
     struct glIndexFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glIndexFormatNV( params->type, params->stride );
+    funcs->p_glIndexFormatNV( params->type, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -11168,7 +11168,7 @@ static NTSTATUS ext_glIndexFuncEXT( void *args )
 {
     struct glIndexFuncEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glIndexFuncEXT( params->func, params->ref );
+    funcs->p_glIndexFuncEXT( params->func, params->ref );
     return STATUS_SUCCESS;
 }
 
@@ -11176,7 +11176,7 @@ static NTSTATUS ext_glIndexMaterialEXT( void *args )
 {
     struct glIndexMaterialEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glIndexMaterialEXT( params->face, params->mode );
+    funcs->p_glIndexMaterialEXT( params->face, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -11184,7 +11184,7 @@ static NTSTATUS ext_glIndexPointerEXT( void *args )
 {
     struct glIndexPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glIndexPointerEXT( params->type, params->stride, params->count, params->pointer );
+    funcs->p_glIndexPointerEXT( params->type, params->stride, params->count, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -11192,7 +11192,7 @@ static NTSTATUS ext_glIndexPointerListIBM( void *args )
 {
     struct glIndexPointerListIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glIndexPointerListIBM( params->type, params->stride, params->pointer, params->ptrstride );
+    funcs->p_glIndexPointerListIBM( params->type, params->stride, params->pointer, params->ptrstride );
     return STATUS_SUCCESS;
 }
 
@@ -11200,7 +11200,7 @@ static NTSTATUS ext_glIndexxOES( void *args )
 {
     struct glIndexxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glIndexxOES( params->component );
+    funcs->p_glIndexxOES( params->component );
     return STATUS_SUCCESS;
 }
 
@@ -11208,7 +11208,7 @@ static NTSTATUS ext_glIndexxvOES( void *args )
 {
     struct glIndexxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glIndexxvOES( params->component );
+    funcs->p_glIndexxvOES( params->component );
     return STATUS_SUCCESS;
 }
 
@@ -11216,7 +11216,7 @@ static NTSTATUS ext_glInsertComponentEXT( void *args )
 {
     struct glInsertComponentEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInsertComponentEXT( params->res, params->src, params->num );
+    funcs->p_glInsertComponentEXT( params->res, params->src, params->num );
     return STATUS_SUCCESS;
 }
 
@@ -11224,7 +11224,7 @@ static NTSTATUS ext_glInsertEventMarkerEXT( void *args )
 {
     struct glInsertEventMarkerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInsertEventMarkerEXT( params->length, params->marker );
+    funcs->p_glInsertEventMarkerEXT( params->length, params->marker );
     return STATUS_SUCCESS;
 }
 
@@ -11232,7 +11232,7 @@ static NTSTATUS ext_glInstrumentsBufferSGIX( void *args )
 {
     struct glInstrumentsBufferSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInstrumentsBufferSGIX( params->size, params->buffer );
+    funcs->p_glInstrumentsBufferSGIX( params->size, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -11240,7 +11240,7 @@ static NTSTATUS ext_glInterpolatePathsNV( void *args )
 {
     struct glInterpolatePathsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInterpolatePathsNV( params->resultPath, params->pathA, params->pathB, params->weight );
+    funcs->p_glInterpolatePathsNV( params->resultPath, params->pathA, params->pathB, params->weight );
     return STATUS_SUCCESS;
 }
 
@@ -11248,7 +11248,7 @@ static NTSTATUS ext_glInvalidateBufferData( void *args )
 {
     struct glInvalidateBufferData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInvalidateBufferData( params->buffer );
+    funcs->p_glInvalidateBufferData( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -11256,7 +11256,7 @@ static NTSTATUS ext_glInvalidateBufferSubData( void *args )
 {
     struct glInvalidateBufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInvalidateBufferSubData( params->buffer, params->offset, params->length );
+    funcs->p_glInvalidateBufferSubData( params->buffer, params->offset, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -11264,7 +11264,7 @@ static NTSTATUS ext_glInvalidateFramebuffer( void *args )
 {
     struct glInvalidateFramebuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInvalidateFramebuffer( params->target, params->numAttachments, params->attachments );
+    funcs->p_glInvalidateFramebuffer( params->target, params->numAttachments, params->attachments );
     return STATUS_SUCCESS;
 }
 
@@ -11272,7 +11272,7 @@ static NTSTATUS ext_glInvalidateNamedFramebufferData( void *args )
 {
     struct glInvalidateNamedFramebufferData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInvalidateNamedFramebufferData( params->framebuffer, params->numAttachments, params->attachments );
+    funcs->p_glInvalidateNamedFramebufferData( params->framebuffer, params->numAttachments, params->attachments );
     return STATUS_SUCCESS;
 }
 
@@ -11280,7 +11280,7 @@ static NTSTATUS ext_glInvalidateNamedFramebufferSubData( void *args )
 {
     struct glInvalidateNamedFramebufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInvalidateNamedFramebufferSubData( params->framebuffer, params->numAttachments, params->attachments, params->x, params->y, params->width, params->height );
+    funcs->p_glInvalidateNamedFramebufferSubData( params->framebuffer, params->numAttachments, params->attachments, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -11288,7 +11288,7 @@ static NTSTATUS ext_glInvalidateSubFramebuffer( void *args )
 {
     struct glInvalidateSubFramebuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInvalidateSubFramebuffer( params->target, params->numAttachments, params->attachments, params->x, params->y, params->width, params->height );
+    funcs->p_glInvalidateSubFramebuffer( params->target, params->numAttachments, params->attachments, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -11296,7 +11296,7 @@ static NTSTATUS ext_glInvalidateTexImage( void *args )
 {
     struct glInvalidateTexImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInvalidateTexImage( params->texture, params->level );
+    funcs->p_glInvalidateTexImage( params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -11304,7 +11304,7 @@ static NTSTATUS ext_glInvalidateTexSubImage( void *args )
 {
     struct glInvalidateTexSubImage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glInvalidateTexSubImage( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth );
+    funcs->p_glInvalidateTexSubImage( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -11312,7 +11312,7 @@ static NTSTATUS ext_glIsAsyncMarkerSGIX( void *args )
 {
     struct glIsAsyncMarkerSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsAsyncMarkerSGIX( params->marker );
+    params->ret = funcs->p_glIsAsyncMarkerSGIX( params->marker );
     return STATUS_SUCCESS;
 }
 
@@ -11320,7 +11320,7 @@ static NTSTATUS ext_glIsBuffer( void *args )
 {
     struct glIsBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsBuffer( params->buffer );
+    params->ret = funcs->p_glIsBuffer( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -11328,7 +11328,7 @@ static NTSTATUS ext_glIsBufferARB( void *args )
 {
     struct glIsBufferARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsBufferARB( params->buffer );
+    params->ret = funcs->p_glIsBufferARB( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -11336,7 +11336,7 @@ static NTSTATUS ext_glIsBufferResidentNV( void *args )
 {
     struct glIsBufferResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsBufferResidentNV( params->target );
+    params->ret = funcs->p_glIsBufferResidentNV( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -11344,7 +11344,7 @@ static NTSTATUS ext_glIsCommandListNV( void *args )
 {
     struct glIsCommandListNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsCommandListNV( params->list );
+    params->ret = funcs->p_glIsCommandListNV( params->list );
     return STATUS_SUCCESS;
 }
 
@@ -11352,7 +11352,7 @@ static NTSTATUS ext_glIsEnabledIndexedEXT( void *args )
 {
     struct glIsEnabledIndexedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsEnabledIndexedEXT( params->target, params->index );
+    params->ret = funcs->p_glIsEnabledIndexedEXT( params->target, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -11360,7 +11360,7 @@ static NTSTATUS ext_glIsEnabledi( void *args )
 {
     struct glIsEnabledi_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsEnabledi( params->target, params->index );
+    params->ret = funcs->p_glIsEnabledi( params->target, params->index );
     return STATUS_SUCCESS;
 }
 
@@ -11368,7 +11368,7 @@ static NTSTATUS ext_glIsFenceAPPLE( void *args )
 {
     struct glIsFenceAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsFenceAPPLE( params->fence );
+    params->ret = funcs->p_glIsFenceAPPLE( params->fence );
     return STATUS_SUCCESS;
 }
 
@@ -11376,7 +11376,7 @@ static NTSTATUS ext_glIsFenceNV( void *args )
 {
     struct glIsFenceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsFenceNV( params->fence );
+    params->ret = funcs->p_glIsFenceNV( params->fence );
     return STATUS_SUCCESS;
 }
 
@@ -11384,7 +11384,7 @@ static NTSTATUS ext_glIsFramebuffer( void *args )
 {
     struct glIsFramebuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsFramebuffer( params->framebuffer );
+    params->ret = funcs->p_glIsFramebuffer( params->framebuffer );
     return STATUS_SUCCESS;
 }
 
@@ -11392,7 +11392,7 @@ static NTSTATUS ext_glIsFramebufferEXT( void *args )
 {
     struct glIsFramebufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsFramebufferEXT( params->framebuffer );
+    params->ret = funcs->p_glIsFramebufferEXT( params->framebuffer );
     return STATUS_SUCCESS;
 }
 
@@ -11400,7 +11400,7 @@ static NTSTATUS ext_glIsImageHandleResidentARB( void *args )
 {
     struct glIsImageHandleResidentARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsImageHandleResidentARB( params->handle );
+    params->ret = funcs->p_glIsImageHandleResidentARB( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11408,7 +11408,7 @@ static NTSTATUS ext_glIsImageHandleResidentNV( void *args )
 {
     struct glIsImageHandleResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsImageHandleResidentNV( params->handle );
+    params->ret = funcs->p_glIsImageHandleResidentNV( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11416,7 +11416,7 @@ static NTSTATUS ext_glIsMemoryObjectEXT( void *args )
 {
     struct glIsMemoryObjectEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsMemoryObjectEXT( params->memoryObject );
+    params->ret = funcs->p_glIsMemoryObjectEXT( params->memoryObject );
     return STATUS_SUCCESS;
 }
 
@@ -11424,7 +11424,7 @@ static NTSTATUS ext_glIsNameAMD( void *args )
 {
     struct glIsNameAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsNameAMD( params->identifier, params->name );
+    params->ret = funcs->p_glIsNameAMD( params->identifier, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -11432,7 +11432,7 @@ static NTSTATUS ext_glIsNamedBufferResidentNV( void *args )
 {
     struct glIsNamedBufferResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsNamedBufferResidentNV( params->buffer );
+    params->ret = funcs->p_glIsNamedBufferResidentNV( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -11440,7 +11440,7 @@ static NTSTATUS ext_glIsNamedStringARB( void *args )
 {
     struct glIsNamedStringARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsNamedStringARB( params->namelen, params->name );
+    params->ret = funcs->p_glIsNamedStringARB( params->namelen, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -11448,7 +11448,7 @@ static NTSTATUS ext_glIsObjectBufferATI( void *args )
 {
     struct glIsObjectBufferATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsObjectBufferATI( params->buffer );
+    params->ret = funcs->p_glIsObjectBufferATI( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -11456,7 +11456,7 @@ static NTSTATUS ext_glIsOcclusionQueryNV( void *args )
 {
     struct glIsOcclusionQueryNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsOcclusionQueryNV( params->id );
+    params->ret = funcs->p_glIsOcclusionQueryNV( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -11464,7 +11464,7 @@ static NTSTATUS ext_glIsPathNV( void *args )
 {
     struct glIsPathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsPathNV( params->path );
+    params->ret = funcs->p_glIsPathNV( params->path );
     return STATUS_SUCCESS;
 }
 
@@ -11472,7 +11472,7 @@ static NTSTATUS ext_glIsPointInFillPathNV( void *args )
 {
     struct glIsPointInFillPathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsPointInFillPathNV( params->path, params->mask, params->x, params->y );
+    params->ret = funcs->p_glIsPointInFillPathNV( params->path, params->mask, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -11480,7 +11480,7 @@ static NTSTATUS ext_glIsPointInStrokePathNV( void *args )
 {
     struct glIsPointInStrokePathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsPointInStrokePathNV( params->path, params->x, params->y );
+    params->ret = funcs->p_glIsPointInStrokePathNV( params->path, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -11488,7 +11488,7 @@ static NTSTATUS ext_glIsProgram( void *args )
 {
     struct glIsProgram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsProgram( params->program );
+    params->ret = funcs->p_glIsProgram( params->program );
     return STATUS_SUCCESS;
 }
 
@@ -11496,7 +11496,7 @@ static NTSTATUS ext_glIsProgramARB( void *args )
 {
     struct glIsProgramARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsProgramARB( params->program );
+    params->ret = funcs->p_glIsProgramARB( params->program );
     return STATUS_SUCCESS;
 }
 
@@ -11504,7 +11504,7 @@ static NTSTATUS ext_glIsProgramNV( void *args )
 {
     struct glIsProgramNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsProgramNV( params->id );
+    params->ret = funcs->p_glIsProgramNV( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -11512,7 +11512,7 @@ static NTSTATUS ext_glIsProgramPipeline( void *args )
 {
     struct glIsProgramPipeline_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsProgramPipeline( params->pipeline );
+    params->ret = funcs->p_glIsProgramPipeline( params->pipeline );
     return STATUS_SUCCESS;
 }
 
@@ -11520,7 +11520,7 @@ static NTSTATUS ext_glIsQuery( void *args )
 {
     struct glIsQuery_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsQuery( params->id );
+    params->ret = funcs->p_glIsQuery( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -11528,7 +11528,7 @@ static NTSTATUS ext_glIsQueryARB( void *args )
 {
     struct glIsQueryARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsQueryARB( params->id );
+    params->ret = funcs->p_glIsQueryARB( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -11536,7 +11536,7 @@ static NTSTATUS ext_glIsRenderbuffer( void *args )
 {
     struct glIsRenderbuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsRenderbuffer( params->renderbuffer );
+    params->ret = funcs->p_glIsRenderbuffer( params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -11544,7 +11544,7 @@ static NTSTATUS ext_glIsRenderbufferEXT( void *args )
 {
     struct glIsRenderbufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsRenderbufferEXT( params->renderbuffer );
+    params->ret = funcs->p_glIsRenderbufferEXT( params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -11552,7 +11552,7 @@ static NTSTATUS ext_glIsSampler( void *args )
 {
     struct glIsSampler_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsSampler( params->sampler );
+    params->ret = funcs->p_glIsSampler( params->sampler );
     return STATUS_SUCCESS;
 }
 
@@ -11560,7 +11560,7 @@ static NTSTATUS ext_glIsSemaphoreEXT( void *args )
 {
     struct glIsSemaphoreEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsSemaphoreEXT( params->semaphore );
+    params->ret = funcs->p_glIsSemaphoreEXT( params->semaphore );
     return STATUS_SUCCESS;
 }
 
@@ -11568,7 +11568,7 @@ static NTSTATUS ext_glIsShader( void *args )
 {
     struct glIsShader_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsShader( params->shader );
+    params->ret = funcs->p_glIsShader( params->shader );
     return STATUS_SUCCESS;
 }
 
@@ -11576,7 +11576,7 @@ static NTSTATUS ext_glIsStateNV( void *args )
 {
     struct glIsStateNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsStateNV( params->state );
+    params->ret = funcs->p_glIsStateNV( params->state );
     return STATUS_SUCCESS;
 }
 
@@ -11584,7 +11584,7 @@ NTSTATUS ext_glIsSync( void *args )
 {
     struct glIsSync_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsSync( params->sync );
+    params->ret = funcs->p_glIsSync( params->sync );
     return STATUS_SUCCESS;
 }
 
@@ -11592,7 +11592,7 @@ static NTSTATUS ext_glIsTextureEXT( void *args )
 {
     struct glIsTextureEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsTextureEXT( params->texture );
+    params->ret = funcs->p_glIsTextureEXT( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -11600,7 +11600,7 @@ static NTSTATUS ext_glIsTextureHandleResidentARB( void *args )
 {
     struct glIsTextureHandleResidentARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsTextureHandleResidentARB( params->handle );
+    params->ret = funcs->p_glIsTextureHandleResidentARB( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11608,7 +11608,7 @@ static NTSTATUS ext_glIsTextureHandleResidentNV( void *args )
 {
     struct glIsTextureHandleResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsTextureHandleResidentNV( params->handle );
+    params->ret = funcs->p_glIsTextureHandleResidentNV( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11616,7 +11616,7 @@ static NTSTATUS ext_glIsTransformFeedback( void *args )
 {
     struct glIsTransformFeedback_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsTransformFeedback( params->id );
+    params->ret = funcs->p_glIsTransformFeedback( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -11624,7 +11624,7 @@ static NTSTATUS ext_glIsTransformFeedbackNV( void *args )
 {
     struct glIsTransformFeedbackNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsTransformFeedbackNV( params->id );
+    params->ret = funcs->p_glIsTransformFeedbackNV( params->id );
     return STATUS_SUCCESS;
 }
 
@@ -11632,7 +11632,7 @@ static NTSTATUS ext_glIsVariantEnabledEXT( void *args )
 {
     struct glIsVariantEnabledEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsVariantEnabledEXT( params->id, params->cap );
+    params->ret = funcs->p_glIsVariantEnabledEXT( params->id, params->cap );
     return STATUS_SUCCESS;
 }
 
@@ -11640,7 +11640,7 @@ static NTSTATUS ext_glIsVertexArray( void *args )
 {
     struct glIsVertexArray_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsVertexArray( params->array );
+    params->ret = funcs->p_glIsVertexArray( params->array );
     return STATUS_SUCCESS;
 }
 
@@ -11648,7 +11648,7 @@ static NTSTATUS ext_glIsVertexArrayAPPLE( void *args )
 {
     struct glIsVertexArrayAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsVertexArrayAPPLE( params->array );
+    params->ret = funcs->p_glIsVertexArrayAPPLE( params->array );
     return STATUS_SUCCESS;
 }
 
@@ -11656,7 +11656,7 @@ static NTSTATUS ext_glIsVertexAttribEnabledAPPLE( void *args )
 {
     struct glIsVertexAttribEnabledAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glIsVertexAttribEnabledAPPLE( params->index, params->pname );
+    params->ret = funcs->p_glIsVertexAttribEnabledAPPLE( params->index, params->pname );
     return STATUS_SUCCESS;
 }
 
@@ -11664,7 +11664,7 @@ static NTSTATUS ext_glLGPUCopyImageSubDataNVX( void *args )
 {
     struct glLGPUCopyImageSubDataNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLGPUCopyImageSubDataNVX( params->sourceGpu, params->destinationGpuMask, params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srxY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->width, params->height, params->depth );
+    funcs->p_glLGPUCopyImageSubDataNVX( params->sourceGpu, params->destinationGpuMask, params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srxY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->width, params->height, params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -11672,7 +11672,7 @@ static NTSTATUS ext_glLGPUInterlockNVX( void *args )
 {
     struct glLGPUInterlockNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLGPUInterlockNVX();
+    funcs->p_glLGPUInterlockNVX();
     return STATUS_SUCCESS;
 }
 
@@ -11680,7 +11680,7 @@ static NTSTATUS ext_glLGPUNamedBufferSubDataNVX( void *args )
 {
     struct glLGPUNamedBufferSubDataNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLGPUNamedBufferSubDataNVX( params->gpuMask, params->buffer, params->offset, params->size, params->data );
+    funcs->p_glLGPUNamedBufferSubDataNVX( params->gpuMask, params->buffer, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -11688,7 +11688,7 @@ static NTSTATUS ext_glLabelObjectEXT( void *args )
 {
     struct glLabelObjectEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLabelObjectEXT( params->type, params->object, params->length, params->label );
+    funcs->p_glLabelObjectEXT( params->type, params->object, params->length, params->label );
     return STATUS_SUCCESS;
 }
 
@@ -11696,7 +11696,7 @@ static NTSTATUS ext_glLightEnviSGIX( void *args )
 {
     struct glLightEnviSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLightEnviSGIX( params->pname, params->param );
+    funcs->p_glLightEnviSGIX( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -11704,7 +11704,7 @@ static NTSTATUS ext_glLightModelxOES( void *args )
 {
     struct glLightModelxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLightModelxOES( params->pname, params->param );
+    funcs->p_glLightModelxOES( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -11712,7 +11712,7 @@ static NTSTATUS ext_glLightModelxvOES( void *args )
 {
     struct glLightModelxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLightModelxvOES( params->pname, params->param );
+    funcs->p_glLightModelxvOES( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -11720,7 +11720,7 @@ static NTSTATUS ext_glLightxOES( void *args )
 {
     struct glLightxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLightxOES( params->light, params->pname, params->param );
+    funcs->p_glLightxOES( params->light, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -11728,7 +11728,7 @@ static NTSTATUS ext_glLightxvOES( void *args )
 {
     struct glLightxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLightxvOES( params->light, params->pname, params->params );
+    funcs->p_glLightxvOES( params->light, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -11736,7 +11736,7 @@ static NTSTATUS ext_glLineWidthxOES( void *args )
 {
     struct glLineWidthxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLineWidthxOES( params->width );
+    funcs->p_glLineWidthxOES( params->width );
     return STATUS_SUCCESS;
 }
 
@@ -11744,7 +11744,7 @@ static NTSTATUS ext_glLinkProgram( void *args )
 {
     struct glLinkProgram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLinkProgram( params->program );
+    funcs->p_glLinkProgram( params->program );
     return STATUS_SUCCESS;
 }
 
@@ -11752,7 +11752,7 @@ static NTSTATUS ext_glLinkProgramARB( void *args )
 {
     struct glLinkProgramARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLinkProgramARB( params->programObj );
+    funcs->p_glLinkProgramARB( params->programObj );
     return STATUS_SUCCESS;
 }
 
@@ -11760,7 +11760,7 @@ static NTSTATUS ext_glListDrawCommandsStatesClientNV( void *args )
 {
     struct glListDrawCommandsStatesClientNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glListDrawCommandsStatesClientNV( params->list, params->segment, params->indirects, params->sizes, params->states, params->fbos, params->count );
+    funcs->p_glListDrawCommandsStatesClientNV( params->list, params->segment, params->indirects, params->sizes, params->states, params->fbos, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -11768,7 +11768,7 @@ static NTSTATUS ext_glListParameterfSGIX( void *args )
 {
     struct glListParameterfSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glListParameterfSGIX( params->list, params->pname, params->param );
+    funcs->p_glListParameterfSGIX( params->list, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -11776,7 +11776,7 @@ static NTSTATUS ext_glListParameterfvSGIX( void *args )
 {
     struct glListParameterfvSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glListParameterfvSGIX( params->list, params->pname, params->params );
+    funcs->p_glListParameterfvSGIX( params->list, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -11784,7 +11784,7 @@ static NTSTATUS ext_glListParameteriSGIX( void *args )
 {
     struct glListParameteriSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glListParameteriSGIX( params->list, params->pname, params->param );
+    funcs->p_glListParameteriSGIX( params->list, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -11792,7 +11792,7 @@ static NTSTATUS ext_glListParameterivSGIX( void *args )
 {
     struct glListParameterivSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glListParameterivSGIX( params->list, params->pname, params->params );
+    funcs->p_glListParameterivSGIX( params->list, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -11800,7 +11800,7 @@ static NTSTATUS ext_glLoadIdentityDeformationMapSGIX( void *args )
 {
     struct glLoadIdentityDeformationMapSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLoadIdentityDeformationMapSGIX( params->mask );
+    funcs->p_glLoadIdentityDeformationMapSGIX( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -11808,7 +11808,7 @@ static NTSTATUS ext_glLoadMatrixxOES( void *args )
 {
     struct glLoadMatrixxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLoadMatrixxOES( params->m );
+    funcs->p_glLoadMatrixxOES( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -11816,7 +11816,7 @@ static NTSTATUS ext_glLoadProgramNV( void *args )
 {
     struct glLoadProgramNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLoadProgramNV( params->target, params->id, params->len, params->program );
+    funcs->p_glLoadProgramNV( params->target, params->id, params->len, params->program );
     return STATUS_SUCCESS;
 }
 
@@ -11824,7 +11824,7 @@ static NTSTATUS ext_glLoadTransposeMatrixd( void *args )
 {
     struct glLoadTransposeMatrixd_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLoadTransposeMatrixd( params->m );
+    funcs->p_glLoadTransposeMatrixd( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -11832,7 +11832,7 @@ static NTSTATUS ext_glLoadTransposeMatrixdARB( void *args )
 {
     struct glLoadTransposeMatrixdARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLoadTransposeMatrixdARB( params->m );
+    funcs->p_glLoadTransposeMatrixdARB( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -11840,7 +11840,7 @@ static NTSTATUS ext_glLoadTransposeMatrixf( void *args )
 {
     struct glLoadTransposeMatrixf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLoadTransposeMatrixf( params->m );
+    funcs->p_glLoadTransposeMatrixf( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -11848,7 +11848,7 @@ static NTSTATUS ext_glLoadTransposeMatrixfARB( void *args )
 {
     struct glLoadTransposeMatrixfARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLoadTransposeMatrixfARB( params->m );
+    funcs->p_glLoadTransposeMatrixfARB( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -11856,7 +11856,7 @@ static NTSTATUS ext_glLoadTransposeMatrixxOES( void *args )
 {
     struct glLoadTransposeMatrixxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLoadTransposeMatrixxOES( params->m );
+    funcs->p_glLoadTransposeMatrixxOES( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -11864,7 +11864,7 @@ static NTSTATUS ext_glLockArraysEXT( void *args )
 {
     struct glLockArraysEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glLockArraysEXT( params->first, params->count );
+    funcs->p_glLockArraysEXT( params->first, params->count );
     return STATUS_SUCCESS;
 }
 
@@ -11872,7 +11872,7 @@ static NTSTATUS ext_glMTexCoord2fSGIS( void *args )
 {
     struct glMTexCoord2fSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMTexCoord2fSGIS( params->target, params->s, params->t );
+    funcs->p_glMTexCoord2fSGIS( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -11880,7 +11880,7 @@ static NTSTATUS ext_glMTexCoord2fvSGIS( void *args )
 {
     struct glMTexCoord2fvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMTexCoord2fvSGIS( params->target, params->v );
+    funcs->p_glMTexCoord2fvSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -11888,7 +11888,7 @@ static NTSTATUS ext_glMakeBufferNonResidentNV( void *args )
 {
     struct glMakeBufferNonResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeBufferNonResidentNV( params->target );
+    funcs->p_glMakeBufferNonResidentNV( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -11896,7 +11896,7 @@ static NTSTATUS ext_glMakeBufferResidentNV( void *args )
 {
     struct glMakeBufferResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeBufferResidentNV( params->target, params->access );
+    funcs->p_glMakeBufferResidentNV( params->target, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -11904,7 +11904,7 @@ static NTSTATUS ext_glMakeImageHandleNonResidentARB( void *args )
 {
     struct glMakeImageHandleNonResidentARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeImageHandleNonResidentARB( params->handle );
+    funcs->p_glMakeImageHandleNonResidentARB( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11912,7 +11912,7 @@ static NTSTATUS ext_glMakeImageHandleNonResidentNV( void *args )
 {
     struct glMakeImageHandleNonResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeImageHandleNonResidentNV( params->handle );
+    funcs->p_glMakeImageHandleNonResidentNV( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11920,7 +11920,7 @@ static NTSTATUS ext_glMakeImageHandleResidentARB( void *args )
 {
     struct glMakeImageHandleResidentARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeImageHandleResidentARB( params->handle, params->access );
+    funcs->p_glMakeImageHandleResidentARB( params->handle, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -11928,7 +11928,7 @@ static NTSTATUS ext_glMakeImageHandleResidentNV( void *args )
 {
     struct glMakeImageHandleResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeImageHandleResidentNV( params->handle, params->access );
+    funcs->p_glMakeImageHandleResidentNV( params->handle, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -11936,7 +11936,7 @@ static NTSTATUS ext_glMakeNamedBufferNonResidentNV( void *args )
 {
     struct glMakeNamedBufferNonResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeNamedBufferNonResidentNV( params->buffer );
+    funcs->p_glMakeNamedBufferNonResidentNV( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -11944,7 +11944,7 @@ static NTSTATUS ext_glMakeNamedBufferResidentNV( void *args )
 {
     struct glMakeNamedBufferResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeNamedBufferResidentNV( params->buffer, params->access );
+    funcs->p_glMakeNamedBufferResidentNV( params->buffer, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -11952,7 +11952,7 @@ static NTSTATUS ext_glMakeTextureHandleNonResidentARB( void *args )
 {
     struct glMakeTextureHandleNonResidentARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeTextureHandleNonResidentARB( params->handle );
+    funcs->p_glMakeTextureHandleNonResidentARB( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11960,7 +11960,7 @@ static NTSTATUS ext_glMakeTextureHandleNonResidentNV( void *args )
 {
     struct glMakeTextureHandleNonResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeTextureHandleNonResidentNV( params->handle );
+    funcs->p_glMakeTextureHandleNonResidentNV( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11968,7 +11968,7 @@ static NTSTATUS ext_glMakeTextureHandleResidentARB( void *args )
 {
     struct glMakeTextureHandleResidentARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeTextureHandleResidentARB( params->handle );
+    funcs->p_glMakeTextureHandleResidentARB( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11976,7 +11976,7 @@ static NTSTATUS ext_glMakeTextureHandleResidentNV( void *args )
 {
     struct glMakeTextureHandleResidentNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMakeTextureHandleResidentNV( params->handle );
+    funcs->p_glMakeTextureHandleResidentNV( params->handle );
     return STATUS_SUCCESS;
 }
 
@@ -11984,7 +11984,7 @@ static NTSTATUS ext_glMap1xOES( void *args )
 {
     struct glMap1xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMap1xOES( params->target, params->u1, params->u2, params->stride, params->order, params->points );
+    funcs->p_glMap1xOES( params->target, params->u1, params->u2, params->stride, params->order, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -11992,7 +11992,7 @@ static NTSTATUS ext_glMap2xOES( void *args )
 {
     struct glMap2xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMap2xOES( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
+    funcs->p_glMap2xOES( params->target, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -12000,7 +12000,7 @@ NTSTATUS ext_glMapBuffer( void *args )
 {
     struct glMapBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glMapBuffer( params->target, params->access );
+    params->ret = funcs->p_glMapBuffer( params->target, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -12008,7 +12008,7 @@ NTSTATUS ext_glMapBufferARB( void *args )
 {
     struct glMapBufferARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glMapBufferARB( params->target, params->access );
+    params->ret = funcs->p_glMapBufferARB( params->target, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -12016,7 +12016,7 @@ NTSTATUS ext_glMapBufferRange( void *args )
 {
     struct glMapBufferRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glMapBufferRange( params->target, params->offset, params->length, params->access );
+    params->ret = funcs->p_glMapBufferRange( params->target, params->offset, params->length, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -12024,7 +12024,7 @@ static NTSTATUS ext_glMapControlPointsNV( void *args )
 {
     struct glMapControlPointsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMapControlPointsNV( params->target, params->index, params->type, params->ustride, params->vstride, params->uorder, params->vorder, params->packed, params->points );
+    funcs->p_glMapControlPointsNV( params->target, params->index, params->type, params->ustride, params->vstride, params->uorder, params->vorder, params->packed, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -12032,7 +12032,7 @@ static NTSTATUS ext_glMapGrid1xOES( void *args )
 {
     struct glMapGrid1xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMapGrid1xOES( params->n, params->u1, params->u2 );
+    funcs->p_glMapGrid1xOES( params->n, params->u1, params->u2 );
     return STATUS_SUCCESS;
 }
 
@@ -12040,7 +12040,7 @@ static NTSTATUS ext_glMapGrid2xOES( void *args )
 {
     struct glMapGrid2xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMapGrid2xOES( params->n, params->u1, params->u2, params->v1, params->v2 );
+    funcs->p_glMapGrid2xOES( params->n, params->u1, params->u2, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -12048,7 +12048,7 @@ NTSTATUS ext_glMapNamedBuffer( void *args )
 {
     struct glMapNamedBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glMapNamedBuffer( params->buffer, params->access );
+    params->ret = funcs->p_glMapNamedBuffer( params->buffer, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -12056,7 +12056,7 @@ NTSTATUS ext_glMapNamedBufferEXT( void *args )
 {
     struct glMapNamedBufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glMapNamedBufferEXT( params->buffer, params->access );
+    params->ret = funcs->p_glMapNamedBufferEXT( params->buffer, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -12064,7 +12064,7 @@ NTSTATUS ext_glMapNamedBufferRange( void *args )
 {
     struct glMapNamedBufferRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glMapNamedBufferRange( params->buffer, params->offset, params->length, params->access );
+    params->ret = funcs->p_glMapNamedBufferRange( params->buffer, params->offset, params->length, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -12072,7 +12072,7 @@ NTSTATUS ext_glMapNamedBufferRangeEXT( void *args )
 {
     struct glMapNamedBufferRangeEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glMapNamedBufferRangeEXT( params->buffer, params->offset, params->length, params->access );
+    params->ret = funcs->p_glMapNamedBufferRangeEXT( params->buffer, params->offset, params->length, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -12080,7 +12080,7 @@ static NTSTATUS ext_glMapObjectBufferATI( void *args )
 {
     struct glMapObjectBufferATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glMapObjectBufferATI( params->buffer );
+    params->ret = funcs->p_glMapObjectBufferATI( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -12088,7 +12088,7 @@ static NTSTATUS ext_glMapParameterfvNV( void *args )
 {
     struct glMapParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMapParameterfvNV( params->target, params->pname, params->params );
+    funcs->p_glMapParameterfvNV( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -12096,7 +12096,7 @@ static NTSTATUS ext_glMapParameterivNV( void *args )
 {
     struct glMapParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMapParameterivNV( params->target, params->pname, params->params );
+    funcs->p_glMapParameterivNV( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -12104,7 +12104,7 @@ static NTSTATUS ext_glMapTexture2DINTEL( void *args )
 {
     struct glMapTexture2DINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glMapTexture2DINTEL( params->texture, params->level, params->access, params->stride, params->layout );
+    params->ret = funcs->p_glMapTexture2DINTEL( params->texture, params->level, params->access, params->stride, params->layout );
     return STATUS_SUCCESS;
 }
 
@@ -12112,7 +12112,7 @@ static NTSTATUS ext_glMapVertexAttrib1dAPPLE( void *args )
 {
     struct glMapVertexAttrib1dAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMapVertexAttrib1dAPPLE( params->index, params->size, params->u1, params->u2, params->stride, params->order, params->points );
+    funcs->p_glMapVertexAttrib1dAPPLE( params->index, params->size, params->u1, params->u2, params->stride, params->order, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -12120,7 +12120,7 @@ static NTSTATUS ext_glMapVertexAttrib1fAPPLE( void *args )
 {
     struct glMapVertexAttrib1fAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMapVertexAttrib1fAPPLE( params->index, params->size, params->u1, params->u2, params->stride, params->order, params->points );
+    funcs->p_glMapVertexAttrib1fAPPLE( params->index, params->size, params->u1, params->u2, params->stride, params->order, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -12128,7 +12128,7 @@ static NTSTATUS ext_glMapVertexAttrib2dAPPLE( void *args )
 {
     struct glMapVertexAttrib2dAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMapVertexAttrib2dAPPLE( params->index, params->size, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
+    funcs->p_glMapVertexAttrib2dAPPLE( params->index, params->size, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -12136,7 +12136,7 @@ static NTSTATUS ext_glMapVertexAttrib2fAPPLE( void *args )
 {
     struct glMapVertexAttrib2fAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMapVertexAttrib2fAPPLE( params->index, params->size, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
+    funcs->p_glMapVertexAttrib2fAPPLE( params->index, params->size, params->u1, params->u2, params->ustride, params->uorder, params->v1, params->v2, params->vstride, params->vorder, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -12144,7 +12144,7 @@ static NTSTATUS ext_glMaterialxOES( void *args )
 {
     struct glMaterialxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMaterialxOES( params->face, params->pname, params->param );
+    funcs->p_glMaterialxOES( params->face, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -12152,7 +12152,7 @@ static NTSTATUS ext_glMaterialxvOES( void *args )
 {
     struct glMaterialxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMaterialxvOES( params->face, params->pname, params->param );
+    funcs->p_glMaterialxvOES( params->face, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -12160,7 +12160,7 @@ static NTSTATUS ext_glMatrixFrustumEXT( void *args )
 {
     struct glMatrixFrustumEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixFrustumEXT( params->mode, params->left, params->right, params->bottom, params->top, params->zNear, params->zFar );
+    funcs->p_glMatrixFrustumEXT( params->mode, params->left, params->right, params->bottom, params->top, params->zNear, params->zFar );
     return STATUS_SUCCESS;
 }
 
@@ -12168,7 +12168,7 @@ static NTSTATUS ext_glMatrixIndexPointerARB( void *args )
 {
     struct glMatrixIndexPointerARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixIndexPointerARB( params->size, params->type, params->stride, params->pointer );
+    funcs->p_glMatrixIndexPointerARB( params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -12176,7 +12176,7 @@ static NTSTATUS ext_glMatrixIndexubvARB( void *args )
 {
     struct glMatrixIndexubvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixIndexubvARB( params->size, params->indices );
+    funcs->p_glMatrixIndexubvARB( params->size, params->indices );
     return STATUS_SUCCESS;
 }
 
@@ -12184,7 +12184,7 @@ static NTSTATUS ext_glMatrixIndexuivARB( void *args )
 {
     struct glMatrixIndexuivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixIndexuivARB( params->size, params->indices );
+    funcs->p_glMatrixIndexuivARB( params->size, params->indices );
     return STATUS_SUCCESS;
 }
 
@@ -12192,7 +12192,7 @@ static NTSTATUS ext_glMatrixIndexusvARB( void *args )
 {
     struct glMatrixIndexusvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixIndexusvARB( params->size, params->indices );
+    funcs->p_glMatrixIndexusvARB( params->size, params->indices );
     return STATUS_SUCCESS;
 }
 
@@ -12200,7 +12200,7 @@ static NTSTATUS ext_glMatrixLoad3x2fNV( void *args )
 {
     struct glMatrixLoad3x2fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixLoad3x2fNV( params->matrixMode, params->m );
+    funcs->p_glMatrixLoad3x2fNV( params->matrixMode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12208,7 +12208,7 @@ static NTSTATUS ext_glMatrixLoad3x3fNV( void *args )
 {
     struct glMatrixLoad3x3fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixLoad3x3fNV( params->matrixMode, params->m );
+    funcs->p_glMatrixLoad3x3fNV( params->matrixMode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12216,7 +12216,7 @@ static NTSTATUS ext_glMatrixLoadIdentityEXT( void *args )
 {
     struct glMatrixLoadIdentityEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixLoadIdentityEXT( params->mode );
+    funcs->p_glMatrixLoadIdentityEXT( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -12224,7 +12224,7 @@ static NTSTATUS ext_glMatrixLoadTranspose3x3fNV( void *args )
 {
     struct glMatrixLoadTranspose3x3fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixLoadTranspose3x3fNV( params->matrixMode, params->m );
+    funcs->p_glMatrixLoadTranspose3x3fNV( params->matrixMode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12232,7 +12232,7 @@ static NTSTATUS ext_glMatrixLoadTransposedEXT( void *args )
 {
     struct glMatrixLoadTransposedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixLoadTransposedEXT( params->mode, params->m );
+    funcs->p_glMatrixLoadTransposedEXT( params->mode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12240,7 +12240,7 @@ static NTSTATUS ext_glMatrixLoadTransposefEXT( void *args )
 {
     struct glMatrixLoadTransposefEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixLoadTransposefEXT( params->mode, params->m );
+    funcs->p_glMatrixLoadTransposefEXT( params->mode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12248,7 +12248,7 @@ static NTSTATUS ext_glMatrixLoaddEXT( void *args )
 {
     struct glMatrixLoaddEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixLoaddEXT( params->mode, params->m );
+    funcs->p_glMatrixLoaddEXT( params->mode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12256,7 +12256,7 @@ static NTSTATUS ext_glMatrixLoadfEXT( void *args )
 {
     struct glMatrixLoadfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixLoadfEXT( params->mode, params->m );
+    funcs->p_glMatrixLoadfEXT( params->mode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12264,7 +12264,7 @@ static NTSTATUS ext_glMatrixMult3x2fNV( void *args )
 {
     struct glMatrixMult3x2fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixMult3x2fNV( params->matrixMode, params->m );
+    funcs->p_glMatrixMult3x2fNV( params->matrixMode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12272,7 +12272,7 @@ static NTSTATUS ext_glMatrixMult3x3fNV( void *args )
 {
     struct glMatrixMult3x3fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixMult3x3fNV( params->matrixMode, params->m );
+    funcs->p_glMatrixMult3x3fNV( params->matrixMode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12280,7 +12280,7 @@ static NTSTATUS ext_glMatrixMultTranspose3x3fNV( void *args )
 {
     struct glMatrixMultTranspose3x3fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixMultTranspose3x3fNV( params->matrixMode, params->m );
+    funcs->p_glMatrixMultTranspose3x3fNV( params->matrixMode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12288,7 +12288,7 @@ static NTSTATUS ext_glMatrixMultTransposedEXT( void *args )
 {
     struct glMatrixMultTransposedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixMultTransposedEXT( params->mode, params->m );
+    funcs->p_glMatrixMultTransposedEXT( params->mode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12296,7 +12296,7 @@ static NTSTATUS ext_glMatrixMultTransposefEXT( void *args )
 {
     struct glMatrixMultTransposefEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixMultTransposefEXT( params->mode, params->m );
+    funcs->p_glMatrixMultTransposefEXT( params->mode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12304,7 +12304,7 @@ static NTSTATUS ext_glMatrixMultdEXT( void *args )
 {
     struct glMatrixMultdEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixMultdEXT( params->mode, params->m );
+    funcs->p_glMatrixMultdEXT( params->mode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12312,7 +12312,7 @@ static NTSTATUS ext_glMatrixMultfEXT( void *args )
 {
     struct glMatrixMultfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixMultfEXT( params->mode, params->m );
+    funcs->p_glMatrixMultfEXT( params->mode, params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12320,7 +12320,7 @@ static NTSTATUS ext_glMatrixOrthoEXT( void *args )
 {
     struct glMatrixOrthoEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixOrthoEXT( params->mode, params->left, params->right, params->bottom, params->top, params->zNear, params->zFar );
+    funcs->p_glMatrixOrthoEXT( params->mode, params->left, params->right, params->bottom, params->top, params->zNear, params->zFar );
     return STATUS_SUCCESS;
 }
 
@@ -12328,7 +12328,7 @@ static NTSTATUS ext_glMatrixPopEXT( void *args )
 {
     struct glMatrixPopEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixPopEXT( params->mode );
+    funcs->p_glMatrixPopEXT( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -12336,7 +12336,7 @@ static NTSTATUS ext_glMatrixPushEXT( void *args )
 {
     struct glMatrixPushEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixPushEXT( params->mode );
+    funcs->p_glMatrixPushEXT( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -12344,7 +12344,7 @@ static NTSTATUS ext_glMatrixRotatedEXT( void *args )
 {
     struct glMatrixRotatedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixRotatedEXT( params->mode, params->angle, params->x, params->y, params->z );
+    funcs->p_glMatrixRotatedEXT( params->mode, params->angle, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -12352,7 +12352,7 @@ static NTSTATUS ext_glMatrixRotatefEXT( void *args )
 {
     struct glMatrixRotatefEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixRotatefEXT( params->mode, params->angle, params->x, params->y, params->z );
+    funcs->p_glMatrixRotatefEXT( params->mode, params->angle, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -12360,7 +12360,7 @@ static NTSTATUS ext_glMatrixScaledEXT( void *args )
 {
     struct glMatrixScaledEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixScaledEXT( params->mode, params->x, params->y, params->z );
+    funcs->p_glMatrixScaledEXT( params->mode, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -12368,7 +12368,7 @@ static NTSTATUS ext_glMatrixScalefEXT( void *args )
 {
     struct glMatrixScalefEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixScalefEXT( params->mode, params->x, params->y, params->z );
+    funcs->p_glMatrixScalefEXT( params->mode, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -12376,7 +12376,7 @@ static NTSTATUS ext_glMatrixTranslatedEXT( void *args )
 {
     struct glMatrixTranslatedEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixTranslatedEXT( params->mode, params->x, params->y, params->z );
+    funcs->p_glMatrixTranslatedEXT( params->mode, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -12384,7 +12384,7 @@ static NTSTATUS ext_glMatrixTranslatefEXT( void *args )
 {
     struct glMatrixTranslatefEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMatrixTranslatefEXT( params->mode, params->x, params->y, params->z );
+    funcs->p_glMatrixTranslatefEXT( params->mode, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -12392,7 +12392,7 @@ static NTSTATUS ext_glMaxShaderCompilerThreadsARB( void *args )
 {
     struct glMaxShaderCompilerThreadsARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMaxShaderCompilerThreadsARB( params->count );
+    funcs->p_glMaxShaderCompilerThreadsARB( params->count );
     return STATUS_SUCCESS;
 }
 
@@ -12400,7 +12400,7 @@ static NTSTATUS ext_glMaxShaderCompilerThreadsKHR( void *args )
 {
     struct glMaxShaderCompilerThreadsKHR_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMaxShaderCompilerThreadsKHR( params->count );
+    funcs->p_glMaxShaderCompilerThreadsKHR( params->count );
     return STATUS_SUCCESS;
 }
 
@@ -12408,7 +12408,7 @@ static NTSTATUS ext_glMemoryBarrier( void *args )
 {
     struct glMemoryBarrier_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMemoryBarrier( params->barriers );
+    funcs->p_glMemoryBarrier( params->barriers );
     return STATUS_SUCCESS;
 }
 
@@ -12416,7 +12416,7 @@ static NTSTATUS ext_glMemoryBarrierByRegion( void *args )
 {
     struct glMemoryBarrierByRegion_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMemoryBarrierByRegion( params->barriers );
+    funcs->p_glMemoryBarrierByRegion( params->barriers );
     return STATUS_SUCCESS;
 }
 
@@ -12424,7 +12424,7 @@ static NTSTATUS ext_glMemoryBarrierEXT( void *args )
 {
     struct glMemoryBarrierEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMemoryBarrierEXT( params->barriers );
+    funcs->p_glMemoryBarrierEXT( params->barriers );
     return STATUS_SUCCESS;
 }
 
@@ -12432,7 +12432,7 @@ static NTSTATUS ext_glMemoryObjectParameterivEXT( void *args )
 {
     struct glMemoryObjectParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMemoryObjectParameterivEXT( params->memoryObject, params->pname, params->params );
+    funcs->p_glMemoryObjectParameterivEXT( params->memoryObject, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -12440,7 +12440,7 @@ static NTSTATUS ext_glMinSampleShading( void *args )
 {
     struct glMinSampleShading_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMinSampleShading( params->value );
+    funcs->p_glMinSampleShading( params->value );
     return STATUS_SUCCESS;
 }
 
@@ -12448,7 +12448,7 @@ static NTSTATUS ext_glMinSampleShadingARB( void *args )
 {
     struct glMinSampleShadingARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMinSampleShadingARB( params->value );
+    funcs->p_glMinSampleShadingARB( params->value );
     return STATUS_SUCCESS;
 }
 
@@ -12456,7 +12456,7 @@ static NTSTATUS ext_glMinmax( void *args )
 {
     struct glMinmax_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMinmax( params->target, params->internalformat, params->sink );
+    funcs->p_glMinmax( params->target, params->internalformat, params->sink );
     return STATUS_SUCCESS;
 }
 
@@ -12464,7 +12464,7 @@ static NTSTATUS ext_glMinmaxEXT( void *args )
 {
     struct glMinmaxEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMinmaxEXT( params->target, params->internalformat, params->sink );
+    funcs->p_glMinmaxEXT( params->target, params->internalformat, params->sink );
     return STATUS_SUCCESS;
 }
 
@@ -12472,7 +12472,7 @@ static NTSTATUS ext_glMultMatrixxOES( void *args )
 {
     struct glMultMatrixxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultMatrixxOES( params->m );
+    funcs->p_glMultMatrixxOES( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12480,7 +12480,7 @@ static NTSTATUS ext_glMultTransposeMatrixd( void *args )
 {
     struct glMultTransposeMatrixd_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultTransposeMatrixd( params->m );
+    funcs->p_glMultTransposeMatrixd( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12488,7 +12488,7 @@ static NTSTATUS ext_glMultTransposeMatrixdARB( void *args )
 {
     struct glMultTransposeMatrixdARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultTransposeMatrixdARB( params->m );
+    funcs->p_glMultTransposeMatrixdARB( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12496,7 +12496,7 @@ static NTSTATUS ext_glMultTransposeMatrixf( void *args )
 {
     struct glMultTransposeMatrixf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultTransposeMatrixf( params->m );
+    funcs->p_glMultTransposeMatrixf( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12504,7 +12504,7 @@ static NTSTATUS ext_glMultTransposeMatrixfARB( void *args )
 {
     struct glMultTransposeMatrixfARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultTransposeMatrixfARB( params->m );
+    funcs->p_glMultTransposeMatrixfARB( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12512,7 +12512,7 @@ static NTSTATUS ext_glMultTransposeMatrixxOES( void *args )
 {
     struct glMultTransposeMatrixxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultTransposeMatrixxOES( params->m );
+    funcs->p_glMultTransposeMatrixxOES( params->m );
     return STATUS_SUCCESS;
 }
 
@@ -12520,7 +12520,7 @@ static NTSTATUS ext_glMultiDrawArrays( void *args )
 {
     struct glMultiDrawArrays_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawArrays( params->mode, params->first, params->count, params->drawcount );
+    funcs->p_glMultiDrawArrays( params->mode, params->first, params->count, params->drawcount );
     return STATUS_SUCCESS;
 }
 
@@ -12528,7 +12528,7 @@ static NTSTATUS ext_glMultiDrawArraysEXT( void *args )
 {
     struct glMultiDrawArraysEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawArraysEXT( params->mode, params->first, params->count, params->primcount );
+    funcs->p_glMultiDrawArraysEXT( params->mode, params->first, params->count, params->primcount );
     return STATUS_SUCCESS;
 }
 
@@ -12536,7 +12536,7 @@ static NTSTATUS ext_glMultiDrawArraysIndirect( void *args )
 {
     struct glMultiDrawArraysIndirect_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawArraysIndirect( params->mode, params->indirect, params->drawcount, params->stride );
+    funcs->p_glMultiDrawArraysIndirect( params->mode, params->indirect, params->drawcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12544,7 +12544,7 @@ static NTSTATUS ext_glMultiDrawArraysIndirectAMD( void *args )
 {
     struct glMultiDrawArraysIndirectAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawArraysIndirectAMD( params->mode, params->indirect, params->primcount, params->stride );
+    funcs->p_glMultiDrawArraysIndirectAMD( params->mode, params->indirect, params->primcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12552,7 +12552,7 @@ static NTSTATUS ext_glMultiDrawArraysIndirectBindlessCountNV( void *args )
 {
     struct glMultiDrawArraysIndirectBindlessCountNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawArraysIndirectBindlessCountNV( params->mode, params->indirect, params->drawCount, params->maxDrawCount, params->stride, params->vertexBufferCount );
+    funcs->p_glMultiDrawArraysIndirectBindlessCountNV( params->mode, params->indirect, params->drawCount, params->maxDrawCount, params->stride, params->vertexBufferCount );
     return STATUS_SUCCESS;
 }
 
@@ -12560,7 +12560,7 @@ static NTSTATUS ext_glMultiDrawArraysIndirectBindlessNV( void *args )
 {
     struct glMultiDrawArraysIndirectBindlessNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawArraysIndirectBindlessNV( params->mode, params->indirect, params->drawCount, params->stride, params->vertexBufferCount );
+    funcs->p_glMultiDrawArraysIndirectBindlessNV( params->mode, params->indirect, params->drawCount, params->stride, params->vertexBufferCount );
     return STATUS_SUCCESS;
 }
 
@@ -12568,7 +12568,7 @@ static NTSTATUS ext_glMultiDrawArraysIndirectCount( void *args )
 {
     struct glMultiDrawArraysIndirectCount_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawArraysIndirectCount( params->mode, params->indirect, params->drawcount, params->maxdrawcount, params->stride );
+    funcs->p_glMultiDrawArraysIndirectCount( params->mode, params->indirect, params->drawcount, params->maxdrawcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12576,7 +12576,7 @@ static NTSTATUS ext_glMultiDrawArraysIndirectCountARB( void *args )
 {
     struct glMultiDrawArraysIndirectCountARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawArraysIndirectCountARB( params->mode, params->indirect, params->drawcount, params->maxdrawcount, params->stride );
+    funcs->p_glMultiDrawArraysIndirectCountARB( params->mode, params->indirect, params->drawcount, params->maxdrawcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12584,7 +12584,7 @@ static NTSTATUS ext_glMultiDrawElementArrayAPPLE( void *args )
 {
     struct glMultiDrawElementArrayAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElementArrayAPPLE( params->mode, params->first, params->count, params->primcount );
+    funcs->p_glMultiDrawElementArrayAPPLE( params->mode, params->first, params->count, params->primcount );
     return STATUS_SUCCESS;
 }
 
@@ -12592,7 +12592,7 @@ static NTSTATUS ext_glMultiDrawElements( void *args )
 {
     struct glMultiDrawElements_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElements( params->mode, params->count, params->type, params->indices, params->drawcount );
+    funcs->p_glMultiDrawElements( params->mode, params->count, params->type, params->indices, params->drawcount );
     return STATUS_SUCCESS;
 }
 
@@ -12600,7 +12600,7 @@ static NTSTATUS ext_glMultiDrawElementsBaseVertex( void *args )
 {
     struct glMultiDrawElementsBaseVertex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElementsBaseVertex( params->mode, params->count, params->type, params->indices, params->drawcount, params->basevertex );
+    funcs->p_glMultiDrawElementsBaseVertex( params->mode, params->count, params->type, params->indices, params->drawcount, params->basevertex );
     return STATUS_SUCCESS;
 }
 
@@ -12608,7 +12608,7 @@ static NTSTATUS ext_glMultiDrawElementsEXT( void *args )
 {
     struct glMultiDrawElementsEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElementsEXT( params->mode, params->count, params->type, params->indices, params->primcount );
+    funcs->p_glMultiDrawElementsEXT( params->mode, params->count, params->type, params->indices, params->primcount );
     return STATUS_SUCCESS;
 }
 
@@ -12616,7 +12616,7 @@ static NTSTATUS ext_glMultiDrawElementsIndirect( void *args )
 {
     struct glMultiDrawElementsIndirect_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElementsIndirect( params->mode, params->type, params->indirect, params->drawcount, params->stride );
+    funcs->p_glMultiDrawElementsIndirect( params->mode, params->type, params->indirect, params->drawcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12624,7 +12624,7 @@ static NTSTATUS ext_glMultiDrawElementsIndirectAMD( void *args )
 {
     struct glMultiDrawElementsIndirectAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElementsIndirectAMD( params->mode, params->type, params->indirect, params->primcount, params->stride );
+    funcs->p_glMultiDrawElementsIndirectAMD( params->mode, params->type, params->indirect, params->primcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12632,7 +12632,7 @@ static NTSTATUS ext_glMultiDrawElementsIndirectBindlessCountNV( void *args )
 {
     struct glMultiDrawElementsIndirectBindlessCountNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElementsIndirectBindlessCountNV( params->mode, params->type, params->indirect, params->drawCount, params->maxDrawCount, params->stride, params->vertexBufferCount );
+    funcs->p_glMultiDrawElementsIndirectBindlessCountNV( params->mode, params->type, params->indirect, params->drawCount, params->maxDrawCount, params->stride, params->vertexBufferCount );
     return STATUS_SUCCESS;
 }
 
@@ -12640,7 +12640,7 @@ static NTSTATUS ext_glMultiDrawElementsIndirectBindlessNV( void *args )
 {
     struct glMultiDrawElementsIndirectBindlessNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElementsIndirectBindlessNV( params->mode, params->type, params->indirect, params->drawCount, params->stride, params->vertexBufferCount );
+    funcs->p_glMultiDrawElementsIndirectBindlessNV( params->mode, params->type, params->indirect, params->drawCount, params->stride, params->vertexBufferCount );
     return STATUS_SUCCESS;
 }
 
@@ -12648,7 +12648,7 @@ static NTSTATUS ext_glMultiDrawElementsIndirectCount( void *args )
 {
     struct glMultiDrawElementsIndirectCount_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElementsIndirectCount( params->mode, params->type, params->indirect, params->drawcount, params->maxdrawcount, params->stride );
+    funcs->p_glMultiDrawElementsIndirectCount( params->mode, params->type, params->indirect, params->drawcount, params->maxdrawcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12656,7 +12656,7 @@ static NTSTATUS ext_glMultiDrawElementsIndirectCountARB( void *args )
 {
     struct glMultiDrawElementsIndirectCountARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawElementsIndirectCountARB( params->mode, params->type, params->indirect, params->drawcount, params->maxdrawcount, params->stride );
+    funcs->p_glMultiDrawElementsIndirectCountARB( params->mode, params->type, params->indirect, params->drawcount, params->maxdrawcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12664,7 +12664,7 @@ static NTSTATUS ext_glMultiDrawMeshTasksIndirectCountNV( void *args )
 {
     struct glMultiDrawMeshTasksIndirectCountNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawMeshTasksIndirectCountNV( params->indirect, params->drawcount, params->maxdrawcount, params->stride );
+    funcs->p_glMultiDrawMeshTasksIndirectCountNV( params->indirect, params->drawcount, params->maxdrawcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12672,7 +12672,7 @@ static NTSTATUS ext_glMultiDrawMeshTasksIndirectNV( void *args )
 {
     struct glMultiDrawMeshTasksIndirectNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawMeshTasksIndirectNV( params->indirect, params->drawcount, params->stride );
+    funcs->p_glMultiDrawMeshTasksIndirectNV( params->indirect, params->drawcount, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -12680,7 +12680,7 @@ static NTSTATUS ext_glMultiDrawRangeElementArrayAPPLE( void *args )
 {
     struct glMultiDrawRangeElementArrayAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiDrawRangeElementArrayAPPLE( params->mode, params->start, params->end, params->first, params->count, params->primcount );
+    funcs->p_glMultiDrawRangeElementArrayAPPLE( params->mode, params->start, params->end, params->first, params->count, params->primcount );
     return STATUS_SUCCESS;
 }
 
@@ -12688,7 +12688,7 @@ static NTSTATUS ext_glMultiModeDrawArraysIBM( void *args )
 {
     struct glMultiModeDrawArraysIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiModeDrawArraysIBM( params->mode, params->first, params->count, params->primcount, params->modestride );
+    funcs->p_glMultiModeDrawArraysIBM( params->mode, params->first, params->count, params->primcount, params->modestride );
     return STATUS_SUCCESS;
 }
 
@@ -12696,7 +12696,7 @@ static NTSTATUS ext_glMultiModeDrawElementsIBM( void *args )
 {
     struct glMultiModeDrawElementsIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiModeDrawElementsIBM( params->mode, params->count, params->type, params->indices, params->primcount, params->modestride );
+    funcs->p_glMultiModeDrawElementsIBM( params->mode, params->count, params->type, params->indices, params->primcount, params->modestride );
     return STATUS_SUCCESS;
 }
 
@@ -12704,7 +12704,7 @@ static NTSTATUS ext_glMultiTexBufferEXT( void *args )
 {
     struct glMultiTexBufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexBufferEXT( params->texunit, params->target, params->internalformat, params->buffer );
+    funcs->p_glMultiTexBufferEXT( params->texunit, params->target, params->internalformat, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -12712,7 +12712,7 @@ static NTSTATUS ext_glMultiTexCoord1bOES( void *args )
 {
     struct glMultiTexCoord1bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1bOES( params->texture, params->s );
+    funcs->p_glMultiTexCoord1bOES( params->texture, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12720,7 +12720,7 @@ static NTSTATUS ext_glMultiTexCoord1bvOES( void *args )
 {
     struct glMultiTexCoord1bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1bvOES( params->texture, params->coords );
+    funcs->p_glMultiTexCoord1bvOES( params->texture, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -12728,7 +12728,7 @@ static NTSTATUS ext_glMultiTexCoord1d( void *args )
 {
     struct glMultiTexCoord1d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1d( params->target, params->s );
+    funcs->p_glMultiTexCoord1d( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12736,7 +12736,7 @@ static NTSTATUS ext_glMultiTexCoord1dARB( void *args )
 {
     struct glMultiTexCoord1dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1dARB( params->target, params->s );
+    funcs->p_glMultiTexCoord1dARB( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12744,7 +12744,7 @@ static NTSTATUS ext_glMultiTexCoord1dSGIS( void *args )
 {
     struct glMultiTexCoord1dSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1dSGIS( params->target, params->s );
+    funcs->p_glMultiTexCoord1dSGIS( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12752,7 +12752,7 @@ static NTSTATUS ext_glMultiTexCoord1dv( void *args )
 {
     struct glMultiTexCoord1dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1dv( params->target, params->v );
+    funcs->p_glMultiTexCoord1dv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12760,7 +12760,7 @@ static NTSTATUS ext_glMultiTexCoord1dvARB( void *args )
 {
     struct glMultiTexCoord1dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1dvARB( params->target, params->v );
+    funcs->p_glMultiTexCoord1dvARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12768,7 +12768,7 @@ static NTSTATUS ext_glMultiTexCoord1dvSGIS( void *args )
 {
     struct glMultiTexCoord1dvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1dvSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord1dvSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12776,7 +12776,7 @@ static NTSTATUS ext_glMultiTexCoord1f( void *args )
 {
     struct glMultiTexCoord1f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1f( params->target, params->s );
+    funcs->p_glMultiTexCoord1f( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12784,7 +12784,7 @@ static NTSTATUS ext_glMultiTexCoord1fARB( void *args )
 {
     struct glMultiTexCoord1fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1fARB( params->target, params->s );
+    funcs->p_glMultiTexCoord1fARB( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12792,7 +12792,7 @@ static NTSTATUS ext_glMultiTexCoord1fSGIS( void *args )
 {
     struct glMultiTexCoord1fSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1fSGIS( params->target, params->s );
+    funcs->p_glMultiTexCoord1fSGIS( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12800,7 +12800,7 @@ static NTSTATUS ext_glMultiTexCoord1fv( void *args )
 {
     struct glMultiTexCoord1fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1fv( params->target, params->v );
+    funcs->p_glMultiTexCoord1fv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12808,7 +12808,7 @@ static NTSTATUS ext_glMultiTexCoord1fvARB( void *args )
 {
     struct glMultiTexCoord1fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1fvARB( params->target, params->v );
+    funcs->p_glMultiTexCoord1fvARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12816,7 +12816,7 @@ static NTSTATUS ext_glMultiTexCoord1fvSGIS( void *args )
 {
     struct glMultiTexCoord1fvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1fvSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord1fvSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12824,7 +12824,7 @@ static NTSTATUS ext_glMultiTexCoord1hNV( void *args )
 {
     struct glMultiTexCoord1hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1hNV( params->target, params->s );
+    funcs->p_glMultiTexCoord1hNV( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12832,7 +12832,7 @@ static NTSTATUS ext_glMultiTexCoord1hvNV( void *args )
 {
     struct glMultiTexCoord1hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1hvNV( params->target, params->v );
+    funcs->p_glMultiTexCoord1hvNV( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12840,7 +12840,7 @@ static NTSTATUS ext_glMultiTexCoord1i( void *args )
 {
     struct glMultiTexCoord1i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1i( params->target, params->s );
+    funcs->p_glMultiTexCoord1i( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12848,7 +12848,7 @@ static NTSTATUS ext_glMultiTexCoord1iARB( void *args )
 {
     struct glMultiTexCoord1iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1iARB( params->target, params->s );
+    funcs->p_glMultiTexCoord1iARB( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12856,7 +12856,7 @@ static NTSTATUS ext_glMultiTexCoord1iSGIS( void *args )
 {
     struct glMultiTexCoord1iSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1iSGIS( params->target, params->s );
+    funcs->p_glMultiTexCoord1iSGIS( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12864,7 +12864,7 @@ static NTSTATUS ext_glMultiTexCoord1iv( void *args )
 {
     struct glMultiTexCoord1iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1iv( params->target, params->v );
+    funcs->p_glMultiTexCoord1iv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12872,7 +12872,7 @@ static NTSTATUS ext_glMultiTexCoord1ivARB( void *args )
 {
     struct glMultiTexCoord1ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1ivARB( params->target, params->v );
+    funcs->p_glMultiTexCoord1ivARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12880,7 +12880,7 @@ static NTSTATUS ext_glMultiTexCoord1ivSGIS( void *args )
 {
     struct glMultiTexCoord1ivSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1ivSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord1ivSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12888,7 +12888,7 @@ static NTSTATUS ext_glMultiTexCoord1s( void *args )
 {
     struct glMultiTexCoord1s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1s( params->target, params->s );
+    funcs->p_glMultiTexCoord1s( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12896,7 +12896,7 @@ static NTSTATUS ext_glMultiTexCoord1sARB( void *args )
 {
     struct glMultiTexCoord1sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1sARB( params->target, params->s );
+    funcs->p_glMultiTexCoord1sARB( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12904,7 +12904,7 @@ static NTSTATUS ext_glMultiTexCoord1sSGIS( void *args )
 {
     struct glMultiTexCoord1sSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1sSGIS( params->target, params->s );
+    funcs->p_glMultiTexCoord1sSGIS( params->target, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12912,7 +12912,7 @@ static NTSTATUS ext_glMultiTexCoord1sv( void *args )
 {
     struct glMultiTexCoord1sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1sv( params->target, params->v );
+    funcs->p_glMultiTexCoord1sv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12920,7 +12920,7 @@ static NTSTATUS ext_glMultiTexCoord1svARB( void *args )
 {
     struct glMultiTexCoord1svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1svARB( params->target, params->v );
+    funcs->p_glMultiTexCoord1svARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12928,7 +12928,7 @@ static NTSTATUS ext_glMultiTexCoord1svSGIS( void *args )
 {
     struct glMultiTexCoord1svSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1svSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord1svSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -12936,7 +12936,7 @@ static NTSTATUS ext_glMultiTexCoord1xOES( void *args )
 {
     struct glMultiTexCoord1xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1xOES( params->texture, params->s );
+    funcs->p_glMultiTexCoord1xOES( params->texture, params->s );
     return STATUS_SUCCESS;
 }
 
@@ -12944,7 +12944,7 @@ static NTSTATUS ext_glMultiTexCoord1xvOES( void *args )
 {
     struct glMultiTexCoord1xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord1xvOES( params->texture, params->coords );
+    funcs->p_glMultiTexCoord1xvOES( params->texture, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -12952,7 +12952,7 @@ static NTSTATUS ext_glMultiTexCoord2bOES( void *args )
 {
     struct glMultiTexCoord2bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2bOES( params->texture, params->s, params->t );
+    funcs->p_glMultiTexCoord2bOES( params->texture, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -12960,7 +12960,7 @@ static NTSTATUS ext_glMultiTexCoord2bvOES( void *args )
 {
     struct glMultiTexCoord2bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2bvOES( params->texture, params->coords );
+    funcs->p_glMultiTexCoord2bvOES( params->texture, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -12968,7 +12968,7 @@ static NTSTATUS ext_glMultiTexCoord2d( void *args )
 {
     struct glMultiTexCoord2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2d( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2d( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -12976,7 +12976,7 @@ static NTSTATUS ext_glMultiTexCoord2dARB( void *args )
 {
     struct glMultiTexCoord2dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2dARB( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2dARB( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -12984,7 +12984,7 @@ static NTSTATUS ext_glMultiTexCoord2dSGIS( void *args )
 {
     struct glMultiTexCoord2dSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2dSGIS( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2dSGIS( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -12992,7 +12992,7 @@ static NTSTATUS ext_glMultiTexCoord2dv( void *args )
 {
     struct glMultiTexCoord2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2dv( params->target, params->v );
+    funcs->p_glMultiTexCoord2dv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13000,7 +13000,7 @@ static NTSTATUS ext_glMultiTexCoord2dvARB( void *args )
 {
     struct glMultiTexCoord2dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2dvARB( params->target, params->v );
+    funcs->p_glMultiTexCoord2dvARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13008,7 +13008,7 @@ static NTSTATUS ext_glMultiTexCoord2dvSGIS( void *args )
 {
     struct glMultiTexCoord2dvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2dvSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord2dvSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13016,7 +13016,7 @@ static NTSTATUS ext_glMultiTexCoord2f( void *args )
 {
     struct glMultiTexCoord2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2f( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2f( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13024,7 +13024,7 @@ static NTSTATUS ext_glMultiTexCoord2fARB( void *args )
 {
     struct glMultiTexCoord2fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2fARB( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2fARB( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13032,7 +13032,7 @@ static NTSTATUS ext_glMultiTexCoord2fSGIS( void *args )
 {
     struct glMultiTexCoord2fSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2fSGIS( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2fSGIS( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13040,7 +13040,7 @@ static NTSTATUS ext_glMultiTexCoord2fv( void *args )
 {
     struct glMultiTexCoord2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2fv( params->target, params->v );
+    funcs->p_glMultiTexCoord2fv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13048,7 +13048,7 @@ static NTSTATUS ext_glMultiTexCoord2fvARB( void *args )
 {
     struct glMultiTexCoord2fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2fvARB( params->target, params->v );
+    funcs->p_glMultiTexCoord2fvARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13056,7 +13056,7 @@ static NTSTATUS ext_glMultiTexCoord2fvSGIS( void *args )
 {
     struct glMultiTexCoord2fvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2fvSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord2fvSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13064,7 +13064,7 @@ static NTSTATUS ext_glMultiTexCoord2hNV( void *args )
 {
     struct glMultiTexCoord2hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2hNV( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2hNV( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13072,7 +13072,7 @@ static NTSTATUS ext_glMultiTexCoord2hvNV( void *args )
 {
     struct glMultiTexCoord2hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2hvNV( params->target, params->v );
+    funcs->p_glMultiTexCoord2hvNV( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13080,7 +13080,7 @@ static NTSTATUS ext_glMultiTexCoord2i( void *args )
 {
     struct glMultiTexCoord2i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2i( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2i( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13088,7 +13088,7 @@ static NTSTATUS ext_glMultiTexCoord2iARB( void *args )
 {
     struct glMultiTexCoord2iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2iARB( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2iARB( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13096,7 +13096,7 @@ static NTSTATUS ext_glMultiTexCoord2iSGIS( void *args )
 {
     struct glMultiTexCoord2iSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2iSGIS( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2iSGIS( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13104,7 +13104,7 @@ static NTSTATUS ext_glMultiTexCoord2iv( void *args )
 {
     struct glMultiTexCoord2iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2iv( params->target, params->v );
+    funcs->p_glMultiTexCoord2iv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13112,7 +13112,7 @@ static NTSTATUS ext_glMultiTexCoord2ivARB( void *args )
 {
     struct glMultiTexCoord2ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2ivARB( params->target, params->v );
+    funcs->p_glMultiTexCoord2ivARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13120,7 +13120,7 @@ static NTSTATUS ext_glMultiTexCoord2ivSGIS( void *args )
 {
     struct glMultiTexCoord2ivSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2ivSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord2ivSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13128,7 +13128,7 @@ static NTSTATUS ext_glMultiTexCoord2s( void *args )
 {
     struct glMultiTexCoord2s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2s( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2s( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13136,7 +13136,7 @@ static NTSTATUS ext_glMultiTexCoord2sARB( void *args )
 {
     struct glMultiTexCoord2sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2sARB( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2sARB( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13144,7 +13144,7 @@ static NTSTATUS ext_glMultiTexCoord2sSGIS( void *args )
 {
     struct glMultiTexCoord2sSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2sSGIS( params->target, params->s, params->t );
+    funcs->p_glMultiTexCoord2sSGIS( params->target, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13152,7 +13152,7 @@ static NTSTATUS ext_glMultiTexCoord2sv( void *args )
 {
     struct glMultiTexCoord2sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2sv( params->target, params->v );
+    funcs->p_glMultiTexCoord2sv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13160,7 +13160,7 @@ static NTSTATUS ext_glMultiTexCoord2svARB( void *args )
 {
     struct glMultiTexCoord2svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2svARB( params->target, params->v );
+    funcs->p_glMultiTexCoord2svARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13168,7 +13168,7 @@ static NTSTATUS ext_glMultiTexCoord2svSGIS( void *args )
 {
     struct glMultiTexCoord2svSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2svSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord2svSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13176,7 +13176,7 @@ static NTSTATUS ext_glMultiTexCoord2xOES( void *args )
 {
     struct glMultiTexCoord2xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2xOES( params->texture, params->s, params->t );
+    funcs->p_glMultiTexCoord2xOES( params->texture, params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -13184,7 +13184,7 @@ static NTSTATUS ext_glMultiTexCoord2xvOES( void *args )
 {
     struct glMultiTexCoord2xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord2xvOES( params->texture, params->coords );
+    funcs->p_glMultiTexCoord2xvOES( params->texture, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13192,7 +13192,7 @@ static NTSTATUS ext_glMultiTexCoord3bOES( void *args )
 {
     struct glMultiTexCoord3bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3bOES( params->texture, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3bOES( params->texture, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13200,7 +13200,7 @@ static NTSTATUS ext_glMultiTexCoord3bvOES( void *args )
 {
     struct glMultiTexCoord3bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3bvOES( params->texture, params->coords );
+    funcs->p_glMultiTexCoord3bvOES( params->texture, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13208,7 +13208,7 @@ static NTSTATUS ext_glMultiTexCoord3d( void *args )
 {
     struct glMultiTexCoord3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3d( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3d( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13216,7 +13216,7 @@ static NTSTATUS ext_glMultiTexCoord3dARB( void *args )
 {
     struct glMultiTexCoord3dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3dARB( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3dARB( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13224,7 +13224,7 @@ static NTSTATUS ext_glMultiTexCoord3dSGIS( void *args )
 {
     struct glMultiTexCoord3dSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3dSGIS( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3dSGIS( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13232,7 +13232,7 @@ static NTSTATUS ext_glMultiTexCoord3dv( void *args )
 {
     struct glMultiTexCoord3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3dv( params->target, params->v );
+    funcs->p_glMultiTexCoord3dv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13240,7 +13240,7 @@ static NTSTATUS ext_glMultiTexCoord3dvARB( void *args )
 {
     struct glMultiTexCoord3dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3dvARB( params->target, params->v );
+    funcs->p_glMultiTexCoord3dvARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13248,7 +13248,7 @@ static NTSTATUS ext_glMultiTexCoord3dvSGIS( void *args )
 {
     struct glMultiTexCoord3dvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3dvSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord3dvSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13256,7 +13256,7 @@ static NTSTATUS ext_glMultiTexCoord3f( void *args )
 {
     struct glMultiTexCoord3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3f( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3f( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13264,7 +13264,7 @@ static NTSTATUS ext_glMultiTexCoord3fARB( void *args )
 {
     struct glMultiTexCoord3fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3fARB( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3fARB( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13272,7 +13272,7 @@ static NTSTATUS ext_glMultiTexCoord3fSGIS( void *args )
 {
     struct glMultiTexCoord3fSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3fSGIS( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3fSGIS( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13280,7 +13280,7 @@ static NTSTATUS ext_glMultiTexCoord3fv( void *args )
 {
     struct glMultiTexCoord3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3fv( params->target, params->v );
+    funcs->p_glMultiTexCoord3fv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13288,7 +13288,7 @@ static NTSTATUS ext_glMultiTexCoord3fvARB( void *args )
 {
     struct glMultiTexCoord3fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3fvARB( params->target, params->v );
+    funcs->p_glMultiTexCoord3fvARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13296,7 +13296,7 @@ static NTSTATUS ext_glMultiTexCoord3fvSGIS( void *args )
 {
     struct glMultiTexCoord3fvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3fvSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord3fvSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13304,7 +13304,7 @@ static NTSTATUS ext_glMultiTexCoord3hNV( void *args )
 {
     struct glMultiTexCoord3hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3hNV( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3hNV( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13312,7 +13312,7 @@ static NTSTATUS ext_glMultiTexCoord3hvNV( void *args )
 {
     struct glMultiTexCoord3hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3hvNV( params->target, params->v );
+    funcs->p_glMultiTexCoord3hvNV( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13320,7 +13320,7 @@ static NTSTATUS ext_glMultiTexCoord3i( void *args )
 {
     struct glMultiTexCoord3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3i( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3i( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13328,7 +13328,7 @@ static NTSTATUS ext_glMultiTexCoord3iARB( void *args )
 {
     struct glMultiTexCoord3iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3iARB( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3iARB( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13336,7 +13336,7 @@ static NTSTATUS ext_glMultiTexCoord3iSGIS( void *args )
 {
     struct glMultiTexCoord3iSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3iSGIS( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3iSGIS( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13344,7 +13344,7 @@ static NTSTATUS ext_glMultiTexCoord3iv( void *args )
 {
     struct glMultiTexCoord3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3iv( params->target, params->v );
+    funcs->p_glMultiTexCoord3iv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13352,7 +13352,7 @@ static NTSTATUS ext_glMultiTexCoord3ivARB( void *args )
 {
     struct glMultiTexCoord3ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3ivARB( params->target, params->v );
+    funcs->p_glMultiTexCoord3ivARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13360,7 +13360,7 @@ static NTSTATUS ext_glMultiTexCoord3ivSGIS( void *args )
 {
     struct glMultiTexCoord3ivSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3ivSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord3ivSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13368,7 +13368,7 @@ static NTSTATUS ext_glMultiTexCoord3s( void *args )
 {
     struct glMultiTexCoord3s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3s( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3s( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13376,7 +13376,7 @@ static NTSTATUS ext_glMultiTexCoord3sARB( void *args )
 {
     struct glMultiTexCoord3sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3sARB( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3sARB( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13384,7 +13384,7 @@ static NTSTATUS ext_glMultiTexCoord3sSGIS( void *args )
 {
     struct glMultiTexCoord3sSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3sSGIS( params->target, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3sSGIS( params->target, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13392,7 +13392,7 @@ static NTSTATUS ext_glMultiTexCoord3sv( void *args )
 {
     struct glMultiTexCoord3sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3sv( params->target, params->v );
+    funcs->p_glMultiTexCoord3sv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13400,7 +13400,7 @@ static NTSTATUS ext_glMultiTexCoord3svARB( void *args )
 {
     struct glMultiTexCoord3svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3svARB( params->target, params->v );
+    funcs->p_glMultiTexCoord3svARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13408,7 +13408,7 @@ static NTSTATUS ext_glMultiTexCoord3svSGIS( void *args )
 {
     struct glMultiTexCoord3svSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3svSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord3svSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13416,7 +13416,7 @@ static NTSTATUS ext_glMultiTexCoord3xOES( void *args )
 {
     struct glMultiTexCoord3xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3xOES( params->texture, params->s, params->t, params->r );
+    funcs->p_glMultiTexCoord3xOES( params->texture, params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -13424,7 +13424,7 @@ static NTSTATUS ext_glMultiTexCoord3xvOES( void *args )
 {
     struct glMultiTexCoord3xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord3xvOES( params->texture, params->coords );
+    funcs->p_glMultiTexCoord3xvOES( params->texture, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13432,7 +13432,7 @@ static NTSTATUS ext_glMultiTexCoord4bOES( void *args )
 {
     struct glMultiTexCoord4bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4bOES( params->texture, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4bOES( params->texture, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13440,7 +13440,7 @@ static NTSTATUS ext_glMultiTexCoord4bvOES( void *args )
 {
     struct glMultiTexCoord4bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4bvOES( params->texture, params->coords );
+    funcs->p_glMultiTexCoord4bvOES( params->texture, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13448,7 +13448,7 @@ static NTSTATUS ext_glMultiTexCoord4d( void *args )
 {
     struct glMultiTexCoord4d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4d( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4d( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13456,7 +13456,7 @@ static NTSTATUS ext_glMultiTexCoord4dARB( void *args )
 {
     struct glMultiTexCoord4dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4dARB( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4dARB( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13464,7 +13464,7 @@ static NTSTATUS ext_glMultiTexCoord4dSGIS( void *args )
 {
     struct glMultiTexCoord4dSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4dSGIS( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4dSGIS( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13472,7 +13472,7 @@ static NTSTATUS ext_glMultiTexCoord4dv( void *args )
 {
     struct glMultiTexCoord4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4dv( params->target, params->v );
+    funcs->p_glMultiTexCoord4dv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13480,7 +13480,7 @@ static NTSTATUS ext_glMultiTexCoord4dvARB( void *args )
 {
     struct glMultiTexCoord4dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4dvARB( params->target, params->v );
+    funcs->p_glMultiTexCoord4dvARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13488,7 +13488,7 @@ static NTSTATUS ext_glMultiTexCoord4dvSGIS( void *args )
 {
     struct glMultiTexCoord4dvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4dvSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord4dvSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13496,7 +13496,7 @@ static NTSTATUS ext_glMultiTexCoord4f( void *args )
 {
     struct glMultiTexCoord4f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4f( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4f( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13504,7 +13504,7 @@ static NTSTATUS ext_glMultiTexCoord4fARB( void *args )
 {
     struct glMultiTexCoord4fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4fARB( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4fARB( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13512,7 +13512,7 @@ static NTSTATUS ext_glMultiTexCoord4fSGIS( void *args )
 {
     struct glMultiTexCoord4fSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4fSGIS( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4fSGIS( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13520,7 +13520,7 @@ static NTSTATUS ext_glMultiTexCoord4fv( void *args )
 {
     struct glMultiTexCoord4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4fv( params->target, params->v );
+    funcs->p_glMultiTexCoord4fv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13528,7 +13528,7 @@ static NTSTATUS ext_glMultiTexCoord4fvARB( void *args )
 {
     struct glMultiTexCoord4fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4fvARB( params->target, params->v );
+    funcs->p_glMultiTexCoord4fvARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13536,7 +13536,7 @@ static NTSTATUS ext_glMultiTexCoord4fvSGIS( void *args )
 {
     struct glMultiTexCoord4fvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4fvSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord4fvSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13544,7 +13544,7 @@ static NTSTATUS ext_glMultiTexCoord4hNV( void *args )
 {
     struct glMultiTexCoord4hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4hNV( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4hNV( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13552,7 +13552,7 @@ static NTSTATUS ext_glMultiTexCoord4hvNV( void *args )
 {
     struct glMultiTexCoord4hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4hvNV( params->target, params->v );
+    funcs->p_glMultiTexCoord4hvNV( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13560,7 +13560,7 @@ static NTSTATUS ext_glMultiTexCoord4i( void *args )
 {
     struct glMultiTexCoord4i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4i( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4i( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13568,7 +13568,7 @@ static NTSTATUS ext_glMultiTexCoord4iARB( void *args )
 {
     struct glMultiTexCoord4iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4iARB( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4iARB( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13576,7 +13576,7 @@ static NTSTATUS ext_glMultiTexCoord4iSGIS( void *args )
 {
     struct glMultiTexCoord4iSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4iSGIS( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4iSGIS( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13584,7 +13584,7 @@ static NTSTATUS ext_glMultiTexCoord4iv( void *args )
 {
     struct glMultiTexCoord4iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4iv( params->target, params->v );
+    funcs->p_glMultiTexCoord4iv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13592,7 +13592,7 @@ static NTSTATUS ext_glMultiTexCoord4ivARB( void *args )
 {
     struct glMultiTexCoord4ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4ivARB( params->target, params->v );
+    funcs->p_glMultiTexCoord4ivARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13600,7 +13600,7 @@ static NTSTATUS ext_glMultiTexCoord4ivSGIS( void *args )
 {
     struct glMultiTexCoord4ivSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4ivSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord4ivSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13608,7 +13608,7 @@ static NTSTATUS ext_glMultiTexCoord4s( void *args )
 {
     struct glMultiTexCoord4s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4s( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4s( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13616,7 +13616,7 @@ static NTSTATUS ext_glMultiTexCoord4sARB( void *args )
 {
     struct glMultiTexCoord4sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4sARB( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4sARB( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13624,7 +13624,7 @@ static NTSTATUS ext_glMultiTexCoord4sSGIS( void *args )
 {
     struct glMultiTexCoord4sSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4sSGIS( params->target, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4sSGIS( params->target, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13632,7 +13632,7 @@ static NTSTATUS ext_glMultiTexCoord4sv( void *args )
 {
     struct glMultiTexCoord4sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4sv( params->target, params->v );
+    funcs->p_glMultiTexCoord4sv( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13640,7 +13640,7 @@ static NTSTATUS ext_glMultiTexCoord4svARB( void *args )
 {
     struct glMultiTexCoord4svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4svARB( params->target, params->v );
+    funcs->p_glMultiTexCoord4svARB( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13648,7 +13648,7 @@ static NTSTATUS ext_glMultiTexCoord4svSGIS( void *args )
 {
     struct glMultiTexCoord4svSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4svSGIS( params->target, params->v );
+    funcs->p_glMultiTexCoord4svSGIS( params->target, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13656,7 +13656,7 @@ static NTSTATUS ext_glMultiTexCoord4xOES( void *args )
 {
     struct glMultiTexCoord4xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4xOES( params->texture, params->s, params->t, params->r, params->q );
+    funcs->p_glMultiTexCoord4xOES( params->texture, params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -13664,7 +13664,7 @@ static NTSTATUS ext_glMultiTexCoord4xvOES( void *args )
 {
     struct glMultiTexCoord4xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoord4xvOES( params->texture, params->coords );
+    funcs->p_glMultiTexCoord4xvOES( params->texture, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13672,7 +13672,7 @@ static NTSTATUS ext_glMultiTexCoordP1ui( void *args )
 {
     struct glMultiTexCoordP1ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordP1ui( params->texture, params->type, params->coords );
+    funcs->p_glMultiTexCoordP1ui( params->texture, params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13680,7 +13680,7 @@ static NTSTATUS ext_glMultiTexCoordP1uiv( void *args )
 {
     struct glMultiTexCoordP1uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordP1uiv( params->texture, params->type, params->coords );
+    funcs->p_glMultiTexCoordP1uiv( params->texture, params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13688,7 +13688,7 @@ static NTSTATUS ext_glMultiTexCoordP2ui( void *args )
 {
     struct glMultiTexCoordP2ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordP2ui( params->texture, params->type, params->coords );
+    funcs->p_glMultiTexCoordP2ui( params->texture, params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13696,7 +13696,7 @@ static NTSTATUS ext_glMultiTexCoordP2uiv( void *args )
 {
     struct glMultiTexCoordP2uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordP2uiv( params->texture, params->type, params->coords );
+    funcs->p_glMultiTexCoordP2uiv( params->texture, params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13704,7 +13704,7 @@ static NTSTATUS ext_glMultiTexCoordP3ui( void *args )
 {
     struct glMultiTexCoordP3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordP3ui( params->texture, params->type, params->coords );
+    funcs->p_glMultiTexCoordP3ui( params->texture, params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13712,7 +13712,7 @@ static NTSTATUS ext_glMultiTexCoordP3uiv( void *args )
 {
     struct glMultiTexCoordP3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordP3uiv( params->texture, params->type, params->coords );
+    funcs->p_glMultiTexCoordP3uiv( params->texture, params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13720,7 +13720,7 @@ static NTSTATUS ext_glMultiTexCoordP4ui( void *args )
 {
     struct glMultiTexCoordP4ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordP4ui( params->texture, params->type, params->coords );
+    funcs->p_glMultiTexCoordP4ui( params->texture, params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13728,7 +13728,7 @@ static NTSTATUS ext_glMultiTexCoordP4uiv( void *args )
 {
     struct glMultiTexCoordP4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordP4uiv( params->texture, params->type, params->coords );
+    funcs->p_glMultiTexCoordP4uiv( params->texture, params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -13736,7 +13736,7 @@ static NTSTATUS ext_glMultiTexCoordPointerEXT( void *args )
 {
     struct glMultiTexCoordPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordPointerEXT( params->texunit, params->size, params->type, params->stride, params->pointer );
+    funcs->p_glMultiTexCoordPointerEXT( params->texunit, params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -13744,7 +13744,7 @@ static NTSTATUS ext_glMultiTexCoordPointerSGIS( void *args )
 {
     struct glMultiTexCoordPointerSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexCoordPointerSGIS( params->target, params->size, params->type, params->stride, params->pointer );
+    funcs->p_glMultiTexCoordPointerSGIS( params->target, params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -13752,7 +13752,7 @@ static NTSTATUS ext_glMultiTexEnvfEXT( void *args )
 {
     struct glMultiTexEnvfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexEnvfEXT( params->texunit, params->target, params->pname, params->param );
+    funcs->p_glMultiTexEnvfEXT( params->texunit, params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -13760,7 +13760,7 @@ static NTSTATUS ext_glMultiTexEnvfvEXT( void *args )
 {
     struct glMultiTexEnvfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexEnvfvEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glMultiTexEnvfvEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13768,7 +13768,7 @@ static NTSTATUS ext_glMultiTexEnviEXT( void *args )
 {
     struct glMultiTexEnviEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexEnviEXT( params->texunit, params->target, params->pname, params->param );
+    funcs->p_glMultiTexEnviEXT( params->texunit, params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -13776,7 +13776,7 @@ static NTSTATUS ext_glMultiTexEnvivEXT( void *args )
 {
     struct glMultiTexEnvivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexEnvivEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glMultiTexEnvivEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13784,7 +13784,7 @@ static NTSTATUS ext_glMultiTexGendEXT( void *args )
 {
     struct glMultiTexGendEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexGendEXT( params->texunit, params->coord, params->pname, params->param );
+    funcs->p_glMultiTexGendEXT( params->texunit, params->coord, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -13792,7 +13792,7 @@ static NTSTATUS ext_glMultiTexGendvEXT( void *args )
 {
     struct glMultiTexGendvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexGendvEXT( params->texunit, params->coord, params->pname, params->params );
+    funcs->p_glMultiTexGendvEXT( params->texunit, params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13800,7 +13800,7 @@ static NTSTATUS ext_glMultiTexGenfEXT( void *args )
 {
     struct glMultiTexGenfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexGenfEXT( params->texunit, params->coord, params->pname, params->param );
+    funcs->p_glMultiTexGenfEXT( params->texunit, params->coord, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -13808,7 +13808,7 @@ static NTSTATUS ext_glMultiTexGenfvEXT( void *args )
 {
     struct glMultiTexGenfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexGenfvEXT( params->texunit, params->coord, params->pname, params->params );
+    funcs->p_glMultiTexGenfvEXT( params->texunit, params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13816,7 +13816,7 @@ static NTSTATUS ext_glMultiTexGeniEXT( void *args )
 {
     struct glMultiTexGeniEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexGeniEXT( params->texunit, params->coord, params->pname, params->param );
+    funcs->p_glMultiTexGeniEXT( params->texunit, params->coord, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -13824,7 +13824,7 @@ static NTSTATUS ext_glMultiTexGenivEXT( void *args )
 {
     struct glMultiTexGenivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexGenivEXT( params->texunit, params->coord, params->pname, params->params );
+    funcs->p_glMultiTexGenivEXT( params->texunit, params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13832,7 +13832,7 @@ static NTSTATUS ext_glMultiTexImage1DEXT( void *args )
 {
     struct glMultiTexImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexImage1DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->border, params->format, params->type, params->pixels );
+    funcs->p_glMultiTexImage1DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -13840,7 +13840,7 @@ static NTSTATUS ext_glMultiTexImage2DEXT( void *args )
 {
     struct glMultiTexImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexImage2DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->height, params->border, params->format, params->type, params->pixels );
+    funcs->p_glMultiTexImage2DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->height, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -13848,7 +13848,7 @@ static NTSTATUS ext_glMultiTexImage3DEXT( void *args )
 {
     struct glMultiTexImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexImage3DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->format, params->type, params->pixels );
+    funcs->p_glMultiTexImage3DEXT( params->texunit, params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -13856,7 +13856,7 @@ static NTSTATUS ext_glMultiTexParameterIivEXT( void *args )
 {
     struct glMultiTexParameterIivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexParameterIivEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glMultiTexParameterIivEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13864,7 +13864,7 @@ static NTSTATUS ext_glMultiTexParameterIuivEXT( void *args )
 {
     struct glMultiTexParameterIuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexParameterIuivEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glMultiTexParameterIuivEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13872,7 +13872,7 @@ static NTSTATUS ext_glMultiTexParameterfEXT( void *args )
 {
     struct glMultiTexParameterfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexParameterfEXT( params->texunit, params->target, params->pname, params->param );
+    funcs->p_glMultiTexParameterfEXT( params->texunit, params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -13880,7 +13880,7 @@ static NTSTATUS ext_glMultiTexParameterfvEXT( void *args )
 {
     struct glMultiTexParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexParameterfvEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glMultiTexParameterfvEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13888,7 +13888,7 @@ static NTSTATUS ext_glMultiTexParameteriEXT( void *args )
 {
     struct glMultiTexParameteriEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexParameteriEXT( params->texunit, params->target, params->pname, params->param );
+    funcs->p_glMultiTexParameteriEXT( params->texunit, params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -13896,7 +13896,7 @@ static NTSTATUS ext_glMultiTexParameterivEXT( void *args )
 {
     struct glMultiTexParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexParameterivEXT( params->texunit, params->target, params->pname, params->params );
+    funcs->p_glMultiTexParameterivEXT( params->texunit, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13904,7 +13904,7 @@ static NTSTATUS ext_glMultiTexRenderbufferEXT( void *args )
 {
     struct glMultiTexRenderbufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexRenderbufferEXT( params->texunit, params->target, params->renderbuffer );
+    funcs->p_glMultiTexRenderbufferEXT( params->texunit, params->target, params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -13912,7 +13912,7 @@ static NTSTATUS ext_glMultiTexSubImage1DEXT( void *args )
 {
     struct glMultiTexSubImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexSubImage1DEXT( params->texunit, params->target, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
+    funcs->p_glMultiTexSubImage1DEXT( params->texunit, params->target, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -13920,7 +13920,7 @@ static NTSTATUS ext_glMultiTexSubImage2DEXT( void *args )
 {
     struct glMultiTexSubImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexSubImage2DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
+    funcs->p_glMultiTexSubImage2DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -13928,7 +13928,7 @@ static NTSTATUS ext_glMultiTexSubImage3DEXT( void *args )
 {
     struct glMultiTexSubImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMultiTexSubImage3DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
+    funcs->p_glMultiTexSubImage3DEXT( params->texunit, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -13936,7 +13936,7 @@ static NTSTATUS ext_glMulticastBarrierNV( void *args )
 {
     struct glMulticastBarrierNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastBarrierNV();
+    funcs->p_glMulticastBarrierNV();
     return STATUS_SUCCESS;
 }
 
@@ -13944,7 +13944,7 @@ static NTSTATUS ext_glMulticastBlitFramebufferNV( void *args )
 {
     struct glMulticastBlitFramebufferNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastBlitFramebufferNV( params->srcGpu, params->dstGpu, params->srcX0, params->srcY0, params->srcX1, params->srcY1, params->dstX0, params->dstY0, params->dstX1, params->dstY1, params->mask, params->filter );
+    funcs->p_glMulticastBlitFramebufferNV( params->srcGpu, params->dstGpu, params->srcX0, params->srcY0, params->srcX1, params->srcY1, params->dstX0, params->dstY0, params->dstX1, params->dstY1, params->mask, params->filter );
     return STATUS_SUCCESS;
 }
 
@@ -13952,7 +13952,7 @@ static NTSTATUS ext_glMulticastBufferSubDataNV( void *args )
 {
     struct glMulticastBufferSubDataNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastBufferSubDataNV( params->gpuMask, params->buffer, params->offset, params->size, params->data );
+    funcs->p_glMulticastBufferSubDataNV( params->gpuMask, params->buffer, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -13960,7 +13960,7 @@ static NTSTATUS ext_glMulticastCopyBufferSubDataNV( void *args )
 {
     struct glMulticastCopyBufferSubDataNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastCopyBufferSubDataNV( params->readGpu, params->writeGpuMask, params->readBuffer, params->writeBuffer, params->readOffset, params->writeOffset, params->size );
+    funcs->p_glMulticastCopyBufferSubDataNV( params->readGpu, params->writeGpuMask, params->readBuffer, params->writeBuffer, params->readOffset, params->writeOffset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -13968,7 +13968,7 @@ static NTSTATUS ext_glMulticastCopyImageSubDataNV( void *args )
 {
     struct glMulticastCopyImageSubDataNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastCopyImageSubDataNV( params->srcGpu, params->dstGpuMask, params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srcY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->srcWidth, params->srcHeight, params->srcDepth );
+    funcs->p_glMulticastCopyImageSubDataNV( params->srcGpu, params->dstGpuMask, params->srcName, params->srcTarget, params->srcLevel, params->srcX, params->srcY, params->srcZ, params->dstName, params->dstTarget, params->dstLevel, params->dstX, params->dstY, params->dstZ, params->srcWidth, params->srcHeight, params->srcDepth );
     return STATUS_SUCCESS;
 }
 
@@ -13976,7 +13976,7 @@ static NTSTATUS ext_glMulticastFramebufferSampleLocationsfvNV( void *args )
 {
     struct glMulticastFramebufferSampleLocationsfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastFramebufferSampleLocationsfvNV( params->gpu, params->framebuffer, params->start, params->count, params->v );
+    funcs->p_glMulticastFramebufferSampleLocationsfvNV( params->gpu, params->framebuffer, params->start, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -13984,7 +13984,7 @@ static NTSTATUS ext_glMulticastGetQueryObjecti64vNV( void *args )
 {
     struct glMulticastGetQueryObjecti64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastGetQueryObjecti64vNV( params->gpu, params->id, params->pname, params->params );
+    funcs->p_glMulticastGetQueryObjecti64vNV( params->gpu, params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -13992,7 +13992,7 @@ static NTSTATUS ext_glMulticastGetQueryObjectivNV( void *args )
 {
     struct glMulticastGetQueryObjectivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastGetQueryObjectivNV( params->gpu, params->id, params->pname, params->params );
+    funcs->p_glMulticastGetQueryObjectivNV( params->gpu, params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14000,7 +14000,7 @@ static NTSTATUS ext_glMulticastGetQueryObjectui64vNV( void *args )
 {
     struct glMulticastGetQueryObjectui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastGetQueryObjectui64vNV( params->gpu, params->id, params->pname, params->params );
+    funcs->p_glMulticastGetQueryObjectui64vNV( params->gpu, params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14008,7 +14008,7 @@ static NTSTATUS ext_glMulticastGetQueryObjectuivNV( void *args )
 {
     struct glMulticastGetQueryObjectuivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastGetQueryObjectuivNV( params->gpu, params->id, params->pname, params->params );
+    funcs->p_glMulticastGetQueryObjectuivNV( params->gpu, params->id, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14016,7 +14016,7 @@ static NTSTATUS ext_glMulticastScissorArrayvNVX( void *args )
 {
     struct glMulticastScissorArrayvNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastScissorArrayvNVX( params->gpu, params->first, params->count, params->v );
+    funcs->p_glMulticastScissorArrayvNVX( params->gpu, params->first, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -14024,7 +14024,7 @@ static NTSTATUS ext_glMulticastViewportArrayvNVX( void *args )
 {
     struct glMulticastViewportArrayvNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastViewportArrayvNVX( params->gpu, params->first, params->count, params->v );
+    funcs->p_glMulticastViewportArrayvNVX( params->gpu, params->first, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -14032,7 +14032,7 @@ static NTSTATUS ext_glMulticastViewportPositionWScaleNVX( void *args )
 {
     struct glMulticastViewportPositionWScaleNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastViewportPositionWScaleNVX( params->gpu, params->index, params->xcoeff, params->ycoeff );
+    funcs->p_glMulticastViewportPositionWScaleNVX( params->gpu, params->index, params->xcoeff, params->ycoeff );
     return STATUS_SUCCESS;
 }
 
@@ -14040,7 +14040,7 @@ static NTSTATUS ext_glMulticastWaitSyncNV( void *args )
 {
     struct glMulticastWaitSyncNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glMulticastWaitSyncNV( params->signalGpu, params->waitGpuMask );
+    funcs->p_glMulticastWaitSyncNV( params->signalGpu, params->waitGpuMask );
     return STATUS_SUCCESS;
 }
 
@@ -14048,7 +14048,7 @@ static NTSTATUS ext_glNamedBufferAttachMemoryNV( void *args )
 {
     struct glNamedBufferAttachMemoryNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferAttachMemoryNV( params->buffer, params->memory, params->offset );
+    funcs->p_glNamedBufferAttachMemoryNV( params->buffer, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -14056,7 +14056,7 @@ static NTSTATUS ext_glNamedBufferData( void *args )
 {
     struct glNamedBufferData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferData( params->buffer, params->size, params->data, params->usage );
+    funcs->p_glNamedBufferData( params->buffer, params->size, params->data, params->usage );
     return STATUS_SUCCESS;
 }
 
@@ -14064,7 +14064,7 @@ static NTSTATUS ext_glNamedBufferDataEXT( void *args )
 {
     struct glNamedBufferDataEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferDataEXT( params->buffer, params->size, params->data, params->usage );
+    funcs->p_glNamedBufferDataEXT( params->buffer, params->size, params->data, params->usage );
     return STATUS_SUCCESS;
 }
 
@@ -14072,7 +14072,7 @@ static NTSTATUS ext_glNamedBufferPageCommitmentARB( void *args )
 {
     struct glNamedBufferPageCommitmentARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferPageCommitmentARB( params->buffer, params->offset, params->size, params->commit );
+    funcs->p_glNamedBufferPageCommitmentARB( params->buffer, params->offset, params->size, params->commit );
     return STATUS_SUCCESS;
 }
 
@@ -14080,7 +14080,7 @@ static NTSTATUS ext_glNamedBufferPageCommitmentEXT( void *args )
 {
     struct glNamedBufferPageCommitmentEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferPageCommitmentEXT( params->buffer, params->offset, params->size, params->commit );
+    funcs->p_glNamedBufferPageCommitmentEXT( params->buffer, params->offset, params->size, params->commit );
     return STATUS_SUCCESS;
 }
 
@@ -14088,7 +14088,7 @@ static NTSTATUS ext_glNamedBufferStorage( void *args )
 {
     struct glNamedBufferStorage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferStorage( params->buffer, params->size, params->data, params->flags );
+    funcs->p_glNamedBufferStorage( params->buffer, params->size, params->data, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -14096,7 +14096,7 @@ static NTSTATUS ext_glNamedBufferStorageEXT( void *args )
 {
     struct glNamedBufferStorageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferStorageEXT( params->buffer, params->size, params->data, params->flags );
+    funcs->p_glNamedBufferStorageEXT( params->buffer, params->size, params->data, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -14104,7 +14104,7 @@ static NTSTATUS ext_glNamedBufferStorageExternalEXT( void *args )
 {
     struct glNamedBufferStorageExternalEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferStorageExternalEXT( params->buffer, params->offset, params->size, params->clientBuffer, params->flags );
+    funcs->p_glNamedBufferStorageExternalEXT( params->buffer, params->offset, params->size, params->clientBuffer, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -14112,7 +14112,7 @@ static NTSTATUS ext_glNamedBufferStorageMemEXT( void *args )
 {
     struct glNamedBufferStorageMemEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferStorageMemEXT( params->buffer, params->size, params->memory, params->offset );
+    funcs->p_glNamedBufferStorageMemEXT( params->buffer, params->size, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -14120,7 +14120,7 @@ static NTSTATUS ext_glNamedBufferSubData( void *args )
 {
     struct glNamedBufferSubData_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferSubData( params->buffer, params->offset, params->size, params->data );
+    funcs->p_glNamedBufferSubData( params->buffer, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -14128,7 +14128,7 @@ static NTSTATUS ext_glNamedBufferSubDataEXT( void *args )
 {
     struct glNamedBufferSubDataEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedBufferSubDataEXT( params->buffer, params->offset, params->size, params->data );
+    funcs->p_glNamedBufferSubDataEXT( params->buffer, params->offset, params->size, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -14136,7 +14136,7 @@ static NTSTATUS ext_glNamedCopyBufferSubDataEXT( void *args )
 {
     struct glNamedCopyBufferSubDataEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedCopyBufferSubDataEXT( params->readBuffer, params->writeBuffer, params->readOffset, params->writeOffset, params->size );
+    funcs->p_glNamedCopyBufferSubDataEXT( params->readBuffer, params->writeBuffer, params->readOffset, params->writeOffset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -14144,7 +14144,7 @@ static NTSTATUS ext_glNamedFramebufferDrawBuffer( void *args )
 {
     struct glNamedFramebufferDrawBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferDrawBuffer( params->framebuffer, params->buf );
+    funcs->p_glNamedFramebufferDrawBuffer( params->framebuffer, params->buf );
     return STATUS_SUCCESS;
 }
 
@@ -14152,7 +14152,7 @@ static NTSTATUS ext_glNamedFramebufferDrawBuffers( void *args )
 {
     struct glNamedFramebufferDrawBuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferDrawBuffers( params->framebuffer, params->n, params->bufs );
+    funcs->p_glNamedFramebufferDrawBuffers( params->framebuffer, params->n, params->bufs );
     return STATUS_SUCCESS;
 }
 
@@ -14160,7 +14160,7 @@ static NTSTATUS ext_glNamedFramebufferParameteri( void *args )
 {
     struct glNamedFramebufferParameteri_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferParameteri( params->framebuffer, params->pname, params->param );
+    funcs->p_glNamedFramebufferParameteri( params->framebuffer, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -14168,7 +14168,7 @@ static NTSTATUS ext_glNamedFramebufferParameteriEXT( void *args )
 {
     struct glNamedFramebufferParameteriEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferParameteriEXT( params->framebuffer, params->pname, params->param );
+    funcs->p_glNamedFramebufferParameteriEXT( params->framebuffer, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -14176,7 +14176,7 @@ static NTSTATUS ext_glNamedFramebufferReadBuffer( void *args )
 {
     struct glNamedFramebufferReadBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferReadBuffer( params->framebuffer, params->src );
+    funcs->p_glNamedFramebufferReadBuffer( params->framebuffer, params->src );
     return STATUS_SUCCESS;
 }
 
@@ -14184,7 +14184,7 @@ static NTSTATUS ext_glNamedFramebufferRenderbuffer( void *args )
 {
     struct glNamedFramebufferRenderbuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferRenderbuffer( params->framebuffer, params->attachment, params->renderbuffertarget, params->renderbuffer );
+    funcs->p_glNamedFramebufferRenderbuffer( params->framebuffer, params->attachment, params->renderbuffertarget, params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -14192,7 +14192,7 @@ static NTSTATUS ext_glNamedFramebufferRenderbufferEXT( void *args )
 {
     struct glNamedFramebufferRenderbufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferRenderbufferEXT( params->framebuffer, params->attachment, params->renderbuffertarget, params->renderbuffer );
+    funcs->p_glNamedFramebufferRenderbufferEXT( params->framebuffer, params->attachment, params->renderbuffertarget, params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -14200,7 +14200,7 @@ static NTSTATUS ext_glNamedFramebufferSampleLocationsfvARB( void *args )
 {
     struct glNamedFramebufferSampleLocationsfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferSampleLocationsfvARB( params->framebuffer, params->start, params->count, params->v );
+    funcs->p_glNamedFramebufferSampleLocationsfvARB( params->framebuffer, params->start, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -14208,7 +14208,7 @@ static NTSTATUS ext_glNamedFramebufferSampleLocationsfvNV( void *args )
 {
     struct glNamedFramebufferSampleLocationsfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferSampleLocationsfvNV( params->framebuffer, params->start, params->count, params->v );
+    funcs->p_glNamedFramebufferSampleLocationsfvNV( params->framebuffer, params->start, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -14216,7 +14216,7 @@ static NTSTATUS ext_glNamedFramebufferSamplePositionsfvAMD( void *args )
 {
     struct glNamedFramebufferSamplePositionsfvAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferSamplePositionsfvAMD( params->framebuffer, params->numsamples, params->pixelindex, params->values );
+    funcs->p_glNamedFramebufferSamplePositionsfvAMD( params->framebuffer, params->numsamples, params->pixelindex, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -14224,7 +14224,7 @@ static NTSTATUS ext_glNamedFramebufferTexture( void *args )
 {
     struct glNamedFramebufferTexture_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferTexture( params->framebuffer, params->attachment, params->texture, params->level );
+    funcs->p_glNamedFramebufferTexture( params->framebuffer, params->attachment, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -14232,7 +14232,7 @@ static NTSTATUS ext_glNamedFramebufferTexture1DEXT( void *args )
 {
     struct glNamedFramebufferTexture1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferTexture1DEXT( params->framebuffer, params->attachment, params->textarget, params->texture, params->level );
+    funcs->p_glNamedFramebufferTexture1DEXT( params->framebuffer, params->attachment, params->textarget, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -14240,7 +14240,7 @@ static NTSTATUS ext_glNamedFramebufferTexture2DEXT( void *args )
 {
     struct glNamedFramebufferTexture2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferTexture2DEXT( params->framebuffer, params->attachment, params->textarget, params->texture, params->level );
+    funcs->p_glNamedFramebufferTexture2DEXT( params->framebuffer, params->attachment, params->textarget, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -14248,7 +14248,7 @@ static NTSTATUS ext_glNamedFramebufferTexture3DEXT( void *args )
 {
     struct glNamedFramebufferTexture3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferTexture3DEXT( params->framebuffer, params->attachment, params->textarget, params->texture, params->level, params->zoffset );
+    funcs->p_glNamedFramebufferTexture3DEXT( params->framebuffer, params->attachment, params->textarget, params->texture, params->level, params->zoffset );
     return STATUS_SUCCESS;
 }
 
@@ -14256,7 +14256,7 @@ static NTSTATUS ext_glNamedFramebufferTextureEXT( void *args )
 {
     struct glNamedFramebufferTextureEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferTextureEXT( params->framebuffer, params->attachment, params->texture, params->level );
+    funcs->p_glNamedFramebufferTextureEXT( params->framebuffer, params->attachment, params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -14264,7 +14264,7 @@ static NTSTATUS ext_glNamedFramebufferTextureFaceEXT( void *args )
 {
     struct glNamedFramebufferTextureFaceEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferTextureFaceEXT( params->framebuffer, params->attachment, params->texture, params->level, params->face );
+    funcs->p_glNamedFramebufferTextureFaceEXT( params->framebuffer, params->attachment, params->texture, params->level, params->face );
     return STATUS_SUCCESS;
 }
 
@@ -14272,7 +14272,7 @@ static NTSTATUS ext_glNamedFramebufferTextureLayer( void *args )
 {
     struct glNamedFramebufferTextureLayer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferTextureLayer( params->framebuffer, params->attachment, params->texture, params->level, params->layer );
+    funcs->p_glNamedFramebufferTextureLayer( params->framebuffer, params->attachment, params->texture, params->level, params->layer );
     return STATUS_SUCCESS;
 }
 
@@ -14280,7 +14280,7 @@ static NTSTATUS ext_glNamedFramebufferTextureLayerEXT( void *args )
 {
     struct glNamedFramebufferTextureLayerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedFramebufferTextureLayerEXT( params->framebuffer, params->attachment, params->texture, params->level, params->layer );
+    funcs->p_glNamedFramebufferTextureLayerEXT( params->framebuffer, params->attachment, params->texture, params->level, params->layer );
     return STATUS_SUCCESS;
 }
 
@@ -14288,7 +14288,7 @@ static NTSTATUS ext_glNamedProgramLocalParameter4dEXT( void *args )
 {
     struct glNamedProgramLocalParameter4dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParameter4dEXT( params->program, params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glNamedProgramLocalParameter4dEXT( params->program, params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -14296,7 +14296,7 @@ static NTSTATUS ext_glNamedProgramLocalParameter4dvEXT( void *args )
 {
     struct glNamedProgramLocalParameter4dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParameter4dvEXT( params->program, params->target, params->index, params->params );
+    funcs->p_glNamedProgramLocalParameter4dvEXT( params->program, params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14304,7 +14304,7 @@ static NTSTATUS ext_glNamedProgramLocalParameter4fEXT( void *args )
 {
     struct glNamedProgramLocalParameter4fEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParameter4fEXT( params->program, params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glNamedProgramLocalParameter4fEXT( params->program, params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -14312,7 +14312,7 @@ static NTSTATUS ext_glNamedProgramLocalParameter4fvEXT( void *args )
 {
     struct glNamedProgramLocalParameter4fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParameter4fvEXT( params->program, params->target, params->index, params->params );
+    funcs->p_glNamedProgramLocalParameter4fvEXT( params->program, params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14320,7 +14320,7 @@ static NTSTATUS ext_glNamedProgramLocalParameterI4iEXT( void *args )
 {
     struct glNamedProgramLocalParameterI4iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParameterI4iEXT( params->program, params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glNamedProgramLocalParameterI4iEXT( params->program, params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -14328,7 +14328,7 @@ static NTSTATUS ext_glNamedProgramLocalParameterI4ivEXT( void *args )
 {
     struct glNamedProgramLocalParameterI4ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParameterI4ivEXT( params->program, params->target, params->index, params->params );
+    funcs->p_glNamedProgramLocalParameterI4ivEXT( params->program, params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14336,7 +14336,7 @@ static NTSTATUS ext_glNamedProgramLocalParameterI4uiEXT( void *args )
 {
     struct glNamedProgramLocalParameterI4uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParameterI4uiEXT( params->program, params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glNamedProgramLocalParameterI4uiEXT( params->program, params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -14344,7 +14344,7 @@ static NTSTATUS ext_glNamedProgramLocalParameterI4uivEXT( void *args )
 {
     struct glNamedProgramLocalParameterI4uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParameterI4uivEXT( params->program, params->target, params->index, params->params );
+    funcs->p_glNamedProgramLocalParameterI4uivEXT( params->program, params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14352,7 +14352,7 @@ static NTSTATUS ext_glNamedProgramLocalParameters4fvEXT( void *args )
 {
     struct glNamedProgramLocalParameters4fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParameters4fvEXT( params->program, params->target, params->index, params->count, params->params );
+    funcs->p_glNamedProgramLocalParameters4fvEXT( params->program, params->target, params->index, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14360,7 +14360,7 @@ static NTSTATUS ext_glNamedProgramLocalParametersI4ivEXT( void *args )
 {
     struct glNamedProgramLocalParametersI4ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParametersI4ivEXT( params->program, params->target, params->index, params->count, params->params );
+    funcs->p_glNamedProgramLocalParametersI4ivEXT( params->program, params->target, params->index, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14368,7 +14368,7 @@ static NTSTATUS ext_glNamedProgramLocalParametersI4uivEXT( void *args )
 {
     struct glNamedProgramLocalParametersI4uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramLocalParametersI4uivEXT( params->program, params->target, params->index, params->count, params->params );
+    funcs->p_glNamedProgramLocalParametersI4uivEXT( params->program, params->target, params->index, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14376,7 +14376,7 @@ static NTSTATUS ext_glNamedProgramStringEXT( void *args )
 {
     struct glNamedProgramStringEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedProgramStringEXT( params->program, params->target, params->format, params->len, params->string );
+    funcs->p_glNamedProgramStringEXT( params->program, params->target, params->format, params->len, params->string );
     return STATUS_SUCCESS;
 }
 
@@ -14384,7 +14384,7 @@ static NTSTATUS ext_glNamedRenderbufferStorage( void *args )
 {
     struct glNamedRenderbufferStorage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedRenderbufferStorage( params->renderbuffer, params->internalformat, params->width, params->height );
+    funcs->p_glNamedRenderbufferStorage( params->renderbuffer, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -14392,7 +14392,7 @@ static NTSTATUS ext_glNamedRenderbufferStorageEXT( void *args )
 {
     struct glNamedRenderbufferStorageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedRenderbufferStorageEXT( params->renderbuffer, params->internalformat, params->width, params->height );
+    funcs->p_glNamedRenderbufferStorageEXT( params->renderbuffer, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -14400,7 +14400,7 @@ static NTSTATUS ext_glNamedRenderbufferStorageMultisample( void *args )
 {
     struct glNamedRenderbufferStorageMultisample_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedRenderbufferStorageMultisample( params->renderbuffer, params->samples, params->internalformat, params->width, params->height );
+    funcs->p_glNamedRenderbufferStorageMultisample( params->renderbuffer, params->samples, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -14408,7 +14408,7 @@ static NTSTATUS ext_glNamedRenderbufferStorageMultisampleAdvancedAMD( void *args
 {
     struct glNamedRenderbufferStorageMultisampleAdvancedAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedRenderbufferStorageMultisampleAdvancedAMD( params->renderbuffer, params->samples, params->storageSamples, params->internalformat, params->width, params->height );
+    funcs->p_glNamedRenderbufferStorageMultisampleAdvancedAMD( params->renderbuffer, params->samples, params->storageSamples, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -14416,7 +14416,7 @@ static NTSTATUS ext_glNamedRenderbufferStorageMultisampleCoverageEXT( void *args
 {
     struct glNamedRenderbufferStorageMultisampleCoverageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedRenderbufferStorageMultisampleCoverageEXT( params->renderbuffer, params->coverageSamples, params->colorSamples, params->internalformat, params->width, params->height );
+    funcs->p_glNamedRenderbufferStorageMultisampleCoverageEXT( params->renderbuffer, params->coverageSamples, params->colorSamples, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -14424,7 +14424,7 @@ static NTSTATUS ext_glNamedRenderbufferStorageMultisampleEXT( void *args )
 {
     struct glNamedRenderbufferStorageMultisampleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedRenderbufferStorageMultisampleEXT( params->renderbuffer, params->samples, params->internalformat, params->width, params->height );
+    funcs->p_glNamedRenderbufferStorageMultisampleEXT( params->renderbuffer, params->samples, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -14432,7 +14432,7 @@ static NTSTATUS ext_glNamedStringARB( void *args )
 {
     struct glNamedStringARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNamedStringARB( params->type, params->namelen, params->name, params->stringlen, params->string );
+    funcs->p_glNamedStringARB( params->type, params->namelen, params->name, params->stringlen, params->string );
     return STATUS_SUCCESS;
 }
 
@@ -14440,7 +14440,7 @@ static NTSTATUS ext_glNewBufferRegion( void *args )
 {
     struct glNewBufferRegion_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glNewBufferRegion( params->type );
+    params->ret = funcs->p_glNewBufferRegion( params->type );
     return STATUS_SUCCESS;
 }
 
@@ -14448,7 +14448,7 @@ static NTSTATUS ext_glNewObjectBufferATI( void *args )
 {
     struct glNewObjectBufferATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glNewObjectBufferATI( params->size, params->pointer, params->usage );
+    params->ret = funcs->p_glNewObjectBufferATI( params->size, params->pointer, params->usage );
     return STATUS_SUCCESS;
 }
 
@@ -14456,7 +14456,7 @@ static NTSTATUS ext_glNormal3fVertex3fSUN( void *args )
 {
     struct glNormal3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormal3fVertex3fSUN( params->nx, params->ny, params->nz, params->x, params->y, params->z );
+    funcs->p_glNormal3fVertex3fSUN( params->nx, params->ny, params->nz, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -14464,7 +14464,7 @@ static NTSTATUS ext_glNormal3fVertex3fvSUN( void *args )
 {
     struct glNormal3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormal3fVertex3fvSUN( params->n, params->v );
+    funcs->p_glNormal3fVertex3fvSUN( params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -14472,7 +14472,7 @@ static NTSTATUS ext_glNormal3hNV( void *args )
 {
     struct glNormal3hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormal3hNV( params->nx, params->ny, params->nz );
+    funcs->p_glNormal3hNV( params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -14480,7 +14480,7 @@ static NTSTATUS ext_glNormal3hvNV( void *args )
 {
     struct glNormal3hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormal3hvNV( params->v );
+    funcs->p_glNormal3hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -14488,7 +14488,7 @@ static NTSTATUS ext_glNormal3xOES( void *args )
 {
     struct glNormal3xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormal3xOES( params->nx, params->ny, params->nz );
+    funcs->p_glNormal3xOES( params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -14496,7 +14496,7 @@ static NTSTATUS ext_glNormal3xvOES( void *args )
 {
     struct glNormal3xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormal3xvOES( params->coords );
+    funcs->p_glNormal3xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14504,7 +14504,7 @@ static NTSTATUS ext_glNormalFormatNV( void *args )
 {
     struct glNormalFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalFormatNV( params->type, params->stride );
+    funcs->p_glNormalFormatNV( params->type, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -14512,7 +14512,7 @@ static NTSTATUS ext_glNormalP3ui( void *args )
 {
     struct glNormalP3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalP3ui( params->type, params->coords );
+    funcs->p_glNormalP3ui( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14520,7 +14520,7 @@ static NTSTATUS ext_glNormalP3uiv( void *args )
 {
     struct glNormalP3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalP3uiv( params->type, params->coords );
+    funcs->p_glNormalP3uiv( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14528,7 +14528,7 @@ static NTSTATUS ext_glNormalPointerEXT( void *args )
 {
     struct glNormalPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalPointerEXT( params->type, params->stride, params->count, params->pointer );
+    funcs->p_glNormalPointerEXT( params->type, params->stride, params->count, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -14536,7 +14536,7 @@ static NTSTATUS ext_glNormalPointerListIBM( void *args )
 {
     struct glNormalPointerListIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalPointerListIBM( params->type, params->stride, params->pointer, params->ptrstride );
+    funcs->p_glNormalPointerListIBM( params->type, params->stride, params->pointer, params->ptrstride );
     return STATUS_SUCCESS;
 }
 
@@ -14544,7 +14544,7 @@ static NTSTATUS ext_glNormalPointervINTEL( void *args )
 {
     struct glNormalPointervINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalPointervINTEL( params->type, params->pointer );
+    funcs->p_glNormalPointervINTEL( params->type, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -14552,7 +14552,7 @@ static NTSTATUS ext_glNormalStream3bATI( void *args )
 {
     struct glNormalStream3bATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3bATI( params->stream, params->nx, params->ny, params->nz );
+    funcs->p_glNormalStream3bATI( params->stream, params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -14560,7 +14560,7 @@ static NTSTATUS ext_glNormalStream3bvATI( void *args )
 {
     struct glNormalStream3bvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3bvATI( params->stream, params->coords );
+    funcs->p_glNormalStream3bvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14568,7 +14568,7 @@ static NTSTATUS ext_glNormalStream3dATI( void *args )
 {
     struct glNormalStream3dATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3dATI( params->stream, params->nx, params->ny, params->nz );
+    funcs->p_glNormalStream3dATI( params->stream, params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -14576,7 +14576,7 @@ static NTSTATUS ext_glNormalStream3dvATI( void *args )
 {
     struct glNormalStream3dvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3dvATI( params->stream, params->coords );
+    funcs->p_glNormalStream3dvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14584,7 +14584,7 @@ static NTSTATUS ext_glNormalStream3fATI( void *args )
 {
     struct glNormalStream3fATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3fATI( params->stream, params->nx, params->ny, params->nz );
+    funcs->p_glNormalStream3fATI( params->stream, params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -14592,7 +14592,7 @@ static NTSTATUS ext_glNormalStream3fvATI( void *args )
 {
     struct glNormalStream3fvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3fvATI( params->stream, params->coords );
+    funcs->p_glNormalStream3fvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14600,7 +14600,7 @@ static NTSTATUS ext_glNormalStream3iATI( void *args )
 {
     struct glNormalStream3iATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3iATI( params->stream, params->nx, params->ny, params->nz );
+    funcs->p_glNormalStream3iATI( params->stream, params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -14608,7 +14608,7 @@ static NTSTATUS ext_glNormalStream3ivATI( void *args )
 {
     struct glNormalStream3ivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3ivATI( params->stream, params->coords );
+    funcs->p_glNormalStream3ivATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14616,7 +14616,7 @@ static NTSTATUS ext_glNormalStream3sATI( void *args )
 {
     struct glNormalStream3sATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3sATI( params->stream, params->nx, params->ny, params->nz );
+    funcs->p_glNormalStream3sATI( params->stream, params->nx, params->ny, params->nz );
     return STATUS_SUCCESS;
 }
 
@@ -14624,7 +14624,7 @@ static NTSTATUS ext_glNormalStream3svATI( void *args )
 {
     struct glNormalStream3svATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glNormalStream3svATI( params->stream, params->coords );
+    funcs->p_glNormalStream3svATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14632,7 +14632,7 @@ static NTSTATUS ext_glObjectLabel( void *args )
 {
     struct glObjectLabel_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glObjectLabel( params->identifier, params->name, params->length, params->label );
+    funcs->p_glObjectLabel( params->identifier, params->name, params->length, params->label );
     return STATUS_SUCCESS;
 }
 
@@ -14640,7 +14640,7 @@ static NTSTATUS ext_glObjectPtrLabel( void *args )
 {
     struct glObjectPtrLabel_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glObjectPtrLabel( params->ptr, params->length, params->label );
+    funcs->p_glObjectPtrLabel( params->ptr, params->length, params->label );
     return STATUS_SUCCESS;
 }
 
@@ -14648,7 +14648,7 @@ static NTSTATUS ext_glObjectPurgeableAPPLE( void *args )
 {
     struct glObjectPurgeableAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glObjectPurgeableAPPLE( params->objectType, params->name, params->option );
+    params->ret = funcs->p_glObjectPurgeableAPPLE( params->objectType, params->name, params->option );
     return STATUS_SUCCESS;
 }
 
@@ -14656,7 +14656,7 @@ static NTSTATUS ext_glObjectUnpurgeableAPPLE( void *args )
 {
     struct glObjectUnpurgeableAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glObjectUnpurgeableAPPLE( params->objectType, params->name, params->option );
+    params->ret = funcs->p_glObjectUnpurgeableAPPLE( params->objectType, params->name, params->option );
     return STATUS_SUCCESS;
 }
 
@@ -14664,7 +14664,7 @@ static NTSTATUS ext_glOrthofOES( void *args )
 {
     struct glOrthofOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glOrthofOES( params->l, params->r, params->b, params->t, params->n, params->f );
+    funcs->p_glOrthofOES( params->l, params->r, params->b, params->t, params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -14672,7 +14672,7 @@ static NTSTATUS ext_glOrthoxOES( void *args )
 {
     struct glOrthoxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glOrthoxOES( params->l, params->r, params->b, params->t, params->n, params->f );
+    funcs->p_glOrthoxOES( params->l, params->r, params->b, params->t, params->n, params->f );
     return STATUS_SUCCESS;
 }
 
@@ -14680,7 +14680,7 @@ static NTSTATUS ext_glPNTrianglesfATI( void *args )
 {
     struct glPNTrianglesfATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPNTrianglesfATI( params->pname, params->param );
+    funcs->p_glPNTrianglesfATI( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -14688,7 +14688,7 @@ static NTSTATUS ext_glPNTrianglesiATI( void *args )
 {
     struct glPNTrianglesiATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPNTrianglesiATI( params->pname, params->param );
+    funcs->p_glPNTrianglesiATI( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -14696,7 +14696,7 @@ static NTSTATUS ext_glPassTexCoordATI( void *args )
 {
     struct glPassTexCoordATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPassTexCoordATI( params->dst, params->coord, params->swizzle );
+    funcs->p_glPassTexCoordATI( params->dst, params->coord, params->swizzle );
     return STATUS_SUCCESS;
 }
 
@@ -14704,7 +14704,7 @@ static NTSTATUS ext_glPassThroughxOES( void *args )
 {
     struct glPassThroughxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPassThroughxOES( params->token );
+    funcs->p_glPassThroughxOES( params->token );
     return STATUS_SUCCESS;
 }
 
@@ -14712,7 +14712,7 @@ static NTSTATUS ext_glPatchParameterfv( void *args )
 {
     struct glPatchParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPatchParameterfv( params->pname, params->values );
+    funcs->p_glPatchParameterfv( params->pname, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -14720,7 +14720,7 @@ static NTSTATUS ext_glPatchParameteri( void *args )
 {
     struct glPatchParameteri_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPatchParameteri( params->pname, params->value );
+    funcs->p_glPatchParameteri( params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -14728,7 +14728,7 @@ static NTSTATUS ext_glPathColorGenNV( void *args )
 {
     struct glPathColorGenNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathColorGenNV( params->color, params->genMode, params->colorFormat, params->coeffs );
+    funcs->p_glPathColorGenNV( params->color, params->genMode, params->colorFormat, params->coeffs );
     return STATUS_SUCCESS;
 }
 
@@ -14736,7 +14736,7 @@ static NTSTATUS ext_glPathCommandsNV( void *args )
 {
     struct glPathCommandsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathCommandsNV( params->path, params->numCommands, params->commands, params->numCoords, params->coordType, params->coords );
+    funcs->p_glPathCommandsNV( params->path, params->numCommands, params->commands, params->numCoords, params->coordType, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14744,7 +14744,7 @@ static NTSTATUS ext_glPathCoordsNV( void *args )
 {
     struct glPathCoordsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathCoordsNV( params->path, params->numCoords, params->coordType, params->coords );
+    funcs->p_glPathCoordsNV( params->path, params->numCoords, params->coordType, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14752,7 +14752,7 @@ static NTSTATUS ext_glPathCoverDepthFuncNV( void *args )
 {
     struct glPathCoverDepthFuncNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathCoverDepthFuncNV( params->func );
+    funcs->p_glPathCoverDepthFuncNV( params->func );
     return STATUS_SUCCESS;
 }
 
@@ -14760,7 +14760,7 @@ static NTSTATUS ext_glPathDashArrayNV( void *args )
 {
     struct glPathDashArrayNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathDashArrayNV( params->path, params->dashCount, params->dashArray );
+    funcs->p_glPathDashArrayNV( params->path, params->dashCount, params->dashArray );
     return STATUS_SUCCESS;
 }
 
@@ -14768,7 +14768,7 @@ static NTSTATUS ext_glPathFogGenNV( void *args )
 {
     struct glPathFogGenNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathFogGenNV( params->genMode );
+    funcs->p_glPathFogGenNV( params->genMode );
     return STATUS_SUCCESS;
 }
 
@@ -14776,7 +14776,7 @@ static NTSTATUS ext_glPathGlyphIndexArrayNV( void *args )
 {
     struct glPathGlyphIndexArrayNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glPathGlyphIndexArrayNV( params->firstPathName, params->fontTarget, params->fontName, params->fontStyle, params->firstGlyphIndex, params->numGlyphs, params->pathParameterTemplate, params->emScale );
+    params->ret = funcs->p_glPathGlyphIndexArrayNV( params->firstPathName, params->fontTarget, params->fontName, params->fontStyle, params->firstGlyphIndex, params->numGlyphs, params->pathParameterTemplate, params->emScale );
     return STATUS_SUCCESS;
 }
 
@@ -14784,7 +14784,7 @@ NTSTATUS ext_glPathGlyphIndexRangeNV( void *args )
 {
     struct glPathGlyphIndexRangeNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glPathGlyphIndexRangeNV( params->fontTarget, params->fontName, params->fontStyle, params->pathParameterTemplate, params->emScale, params->baseAndCount );
+    params->ret = funcs->p_glPathGlyphIndexRangeNV( params->fontTarget, params->fontName, params->fontStyle, params->pathParameterTemplate, params->emScale, params->baseAndCount );
     return STATUS_SUCCESS;
 }
 
@@ -14792,7 +14792,7 @@ static NTSTATUS ext_glPathGlyphRangeNV( void *args )
 {
     struct glPathGlyphRangeNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathGlyphRangeNV( params->firstPathName, params->fontTarget, params->fontName, params->fontStyle, params->firstGlyph, params->numGlyphs, params->handleMissingGlyphs, params->pathParameterTemplate, params->emScale );
+    funcs->p_glPathGlyphRangeNV( params->firstPathName, params->fontTarget, params->fontName, params->fontStyle, params->firstGlyph, params->numGlyphs, params->handleMissingGlyphs, params->pathParameterTemplate, params->emScale );
     return STATUS_SUCCESS;
 }
 
@@ -14800,7 +14800,7 @@ static NTSTATUS ext_glPathGlyphsNV( void *args )
 {
     struct glPathGlyphsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathGlyphsNV( params->firstPathName, params->fontTarget, params->fontName, params->fontStyle, params->numGlyphs, params->type, params->charcodes, params->handleMissingGlyphs, params->pathParameterTemplate, params->emScale );
+    funcs->p_glPathGlyphsNV( params->firstPathName, params->fontTarget, params->fontName, params->fontStyle, params->numGlyphs, params->type, params->charcodes, params->handleMissingGlyphs, params->pathParameterTemplate, params->emScale );
     return STATUS_SUCCESS;
 }
 
@@ -14808,7 +14808,7 @@ static NTSTATUS ext_glPathMemoryGlyphIndexArrayNV( void *args )
 {
     struct glPathMemoryGlyphIndexArrayNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glPathMemoryGlyphIndexArrayNV( params->firstPathName, params->fontTarget, params->fontSize, params->fontData, params->faceIndex, params->firstGlyphIndex, params->numGlyphs, params->pathParameterTemplate, params->emScale );
+    params->ret = funcs->p_glPathMemoryGlyphIndexArrayNV( params->firstPathName, params->fontTarget, params->fontSize, params->fontData, params->faceIndex, params->firstGlyphIndex, params->numGlyphs, params->pathParameterTemplate, params->emScale );
     return STATUS_SUCCESS;
 }
 
@@ -14816,7 +14816,7 @@ static NTSTATUS ext_glPathParameterfNV( void *args )
 {
     struct glPathParameterfNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathParameterfNV( params->path, params->pname, params->value );
+    funcs->p_glPathParameterfNV( params->path, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -14824,7 +14824,7 @@ static NTSTATUS ext_glPathParameterfvNV( void *args )
 {
     struct glPathParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathParameterfvNV( params->path, params->pname, params->value );
+    funcs->p_glPathParameterfvNV( params->path, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -14832,7 +14832,7 @@ static NTSTATUS ext_glPathParameteriNV( void *args )
 {
     struct glPathParameteriNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathParameteriNV( params->path, params->pname, params->value );
+    funcs->p_glPathParameteriNV( params->path, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -14840,7 +14840,7 @@ static NTSTATUS ext_glPathParameterivNV( void *args )
 {
     struct glPathParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathParameterivNV( params->path, params->pname, params->value );
+    funcs->p_glPathParameterivNV( params->path, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -14848,7 +14848,7 @@ static NTSTATUS ext_glPathStencilDepthOffsetNV( void *args )
 {
     struct glPathStencilDepthOffsetNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathStencilDepthOffsetNV( params->factor, params->units );
+    funcs->p_glPathStencilDepthOffsetNV( params->factor, params->units );
     return STATUS_SUCCESS;
 }
 
@@ -14856,7 +14856,7 @@ static NTSTATUS ext_glPathStencilFuncNV( void *args )
 {
     struct glPathStencilFuncNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathStencilFuncNV( params->func, params->ref, params->mask );
+    funcs->p_glPathStencilFuncNV( params->func, params->ref, params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -14864,7 +14864,7 @@ static NTSTATUS ext_glPathStringNV( void *args )
 {
     struct glPathStringNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathStringNV( params->path, params->format, params->length, params->pathString );
+    funcs->p_glPathStringNV( params->path, params->format, params->length, params->pathString );
     return STATUS_SUCCESS;
 }
 
@@ -14872,7 +14872,7 @@ static NTSTATUS ext_glPathSubCommandsNV( void *args )
 {
     struct glPathSubCommandsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathSubCommandsNV( params->path, params->commandStart, params->commandsToDelete, params->numCommands, params->commands, params->numCoords, params->coordType, params->coords );
+    funcs->p_glPathSubCommandsNV( params->path, params->commandStart, params->commandsToDelete, params->numCommands, params->commands, params->numCoords, params->coordType, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14880,7 +14880,7 @@ static NTSTATUS ext_glPathSubCoordsNV( void *args )
 {
     struct glPathSubCoordsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathSubCoordsNV( params->path, params->coordStart, params->numCoords, params->coordType, params->coords );
+    funcs->p_glPathSubCoordsNV( params->path, params->coordStart, params->numCoords, params->coordType, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -14888,7 +14888,7 @@ static NTSTATUS ext_glPathTexGenNV( void *args )
 {
     struct glPathTexGenNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPathTexGenNV( params->texCoordSet, params->genMode, params->components, params->coeffs );
+    funcs->p_glPathTexGenNV( params->texCoordSet, params->genMode, params->components, params->coeffs );
     return STATUS_SUCCESS;
 }
 
@@ -14896,7 +14896,7 @@ static NTSTATUS ext_glPauseTransformFeedback( void *args )
 {
     struct glPauseTransformFeedback_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPauseTransformFeedback();
+    funcs->p_glPauseTransformFeedback();
     return STATUS_SUCCESS;
 }
 
@@ -14904,7 +14904,7 @@ static NTSTATUS ext_glPauseTransformFeedbackNV( void *args )
 {
     struct glPauseTransformFeedbackNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPauseTransformFeedbackNV();
+    funcs->p_glPauseTransformFeedbackNV();
     return STATUS_SUCCESS;
 }
 
@@ -14912,7 +14912,7 @@ static NTSTATUS ext_glPixelDataRangeNV( void *args )
 {
     struct glPixelDataRangeNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelDataRangeNV( params->target, params->length, params->pointer );
+    funcs->p_glPixelDataRangeNV( params->target, params->length, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -14920,7 +14920,7 @@ static NTSTATUS ext_glPixelMapx( void *args )
 {
     struct glPixelMapx_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelMapx( params->map, params->size, params->values );
+    funcs->p_glPixelMapx( params->map, params->size, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -14928,7 +14928,7 @@ static NTSTATUS ext_glPixelStorex( void *args )
 {
     struct glPixelStorex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelStorex( params->pname, params->param );
+    funcs->p_glPixelStorex( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -14936,7 +14936,7 @@ static NTSTATUS ext_glPixelTexGenParameterfSGIS( void *args )
 {
     struct glPixelTexGenParameterfSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTexGenParameterfSGIS( params->pname, params->param );
+    funcs->p_glPixelTexGenParameterfSGIS( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -14944,7 +14944,7 @@ static NTSTATUS ext_glPixelTexGenParameterfvSGIS( void *args )
 {
     struct glPixelTexGenParameterfvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTexGenParameterfvSGIS( params->pname, params->params );
+    funcs->p_glPixelTexGenParameterfvSGIS( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14952,7 +14952,7 @@ static NTSTATUS ext_glPixelTexGenParameteriSGIS( void *args )
 {
     struct glPixelTexGenParameteriSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTexGenParameteriSGIS( params->pname, params->param );
+    funcs->p_glPixelTexGenParameteriSGIS( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -14960,7 +14960,7 @@ static NTSTATUS ext_glPixelTexGenParameterivSGIS( void *args )
 {
     struct glPixelTexGenParameterivSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTexGenParameterivSGIS( params->pname, params->params );
+    funcs->p_glPixelTexGenParameterivSGIS( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -14968,7 +14968,7 @@ static NTSTATUS ext_glPixelTexGenSGIX( void *args )
 {
     struct glPixelTexGenSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTexGenSGIX( params->mode );
+    funcs->p_glPixelTexGenSGIX( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -14976,7 +14976,7 @@ static NTSTATUS ext_glPixelTransferxOES( void *args )
 {
     struct glPixelTransferxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTransferxOES( params->pname, params->param );
+    funcs->p_glPixelTransferxOES( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -14984,7 +14984,7 @@ static NTSTATUS ext_glPixelTransformParameterfEXT( void *args )
 {
     struct glPixelTransformParameterfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTransformParameterfEXT( params->target, params->pname, params->param );
+    funcs->p_glPixelTransformParameterfEXT( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -14992,7 +14992,7 @@ static NTSTATUS ext_glPixelTransformParameterfvEXT( void *args )
 {
     struct glPixelTransformParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTransformParameterfvEXT( params->target, params->pname, params->params );
+    funcs->p_glPixelTransformParameterfvEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15000,7 +15000,7 @@ static NTSTATUS ext_glPixelTransformParameteriEXT( void *args )
 {
     struct glPixelTransformParameteriEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTransformParameteriEXT( params->target, params->pname, params->param );
+    funcs->p_glPixelTransformParameteriEXT( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -15008,7 +15008,7 @@ static NTSTATUS ext_glPixelTransformParameterivEXT( void *args )
 {
     struct glPixelTransformParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelTransformParameterivEXT( params->target, params->pname, params->params );
+    funcs->p_glPixelTransformParameterivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15016,7 +15016,7 @@ static NTSTATUS ext_glPixelZoomxOES( void *args )
 {
     struct glPixelZoomxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPixelZoomxOES( params->xfactor, params->yfactor );
+    funcs->p_glPixelZoomxOES( params->xfactor, params->yfactor );
     return STATUS_SUCCESS;
 }
 
@@ -15024,7 +15024,7 @@ static NTSTATUS ext_glPointAlongPathNV( void *args )
 {
     struct glPointAlongPathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glPointAlongPathNV( params->path, params->startSegment, params->numSegments, params->distance, params->x, params->y, params->tangentX, params->tangentY );
+    params->ret = funcs->p_glPointAlongPathNV( params->path, params->startSegment, params->numSegments, params->distance, params->x, params->y, params->tangentX, params->tangentY );
     return STATUS_SUCCESS;
 }
 
@@ -15032,7 +15032,7 @@ static NTSTATUS ext_glPointParameterf( void *args )
 {
     struct glPointParameterf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterf( params->pname, params->param );
+    funcs->p_glPointParameterf( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -15040,7 +15040,7 @@ static NTSTATUS ext_glPointParameterfARB( void *args )
 {
     struct glPointParameterfARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterfARB( params->pname, params->param );
+    funcs->p_glPointParameterfARB( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -15048,7 +15048,7 @@ static NTSTATUS ext_glPointParameterfEXT( void *args )
 {
     struct glPointParameterfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterfEXT( params->pname, params->param );
+    funcs->p_glPointParameterfEXT( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -15056,7 +15056,7 @@ static NTSTATUS ext_glPointParameterfSGIS( void *args )
 {
     struct glPointParameterfSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterfSGIS( params->pname, params->param );
+    funcs->p_glPointParameterfSGIS( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -15064,7 +15064,7 @@ static NTSTATUS ext_glPointParameterfv( void *args )
 {
     struct glPointParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterfv( params->pname, params->params );
+    funcs->p_glPointParameterfv( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15072,7 +15072,7 @@ static NTSTATUS ext_glPointParameterfvARB( void *args )
 {
     struct glPointParameterfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterfvARB( params->pname, params->params );
+    funcs->p_glPointParameterfvARB( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15080,7 +15080,7 @@ static NTSTATUS ext_glPointParameterfvEXT( void *args )
 {
     struct glPointParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterfvEXT( params->pname, params->params );
+    funcs->p_glPointParameterfvEXT( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15088,7 +15088,7 @@ static NTSTATUS ext_glPointParameterfvSGIS( void *args )
 {
     struct glPointParameterfvSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterfvSGIS( params->pname, params->params );
+    funcs->p_glPointParameterfvSGIS( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15096,7 +15096,7 @@ static NTSTATUS ext_glPointParameteri( void *args )
 {
     struct glPointParameteri_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameteri( params->pname, params->param );
+    funcs->p_glPointParameteri( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -15104,7 +15104,7 @@ static NTSTATUS ext_glPointParameteriNV( void *args )
 {
     struct glPointParameteriNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameteriNV( params->pname, params->param );
+    funcs->p_glPointParameteriNV( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -15112,7 +15112,7 @@ static NTSTATUS ext_glPointParameteriv( void *args )
 {
     struct glPointParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameteriv( params->pname, params->params );
+    funcs->p_glPointParameteriv( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15120,7 +15120,7 @@ static NTSTATUS ext_glPointParameterivNV( void *args )
 {
     struct glPointParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterivNV( params->pname, params->params );
+    funcs->p_glPointParameterivNV( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15128,7 +15128,7 @@ static NTSTATUS ext_glPointParameterxvOES( void *args )
 {
     struct glPointParameterxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointParameterxvOES( params->pname, params->params );
+    funcs->p_glPointParameterxvOES( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15136,7 +15136,7 @@ static NTSTATUS ext_glPointSizexOES( void *args )
 {
     struct glPointSizexOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPointSizexOES( params->size );
+    funcs->p_glPointSizexOES( params->size );
     return STATUS_SUCCESS;
 }
 
@@ -15144,7 +15144,7 @@ static NTSTATUS ext_glPollAsyncSGIX( void *args )
 {
     struct glPollAsyncSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glPollAsyncSGIX( params->markerp );
+    params->ret = funcs->p_glPollAsyncSGIX( params->markerp );
     return STATUS_SUCCESS;
 }
 
@@ -15152,7 +15152,7 @@ static NTSTATUS ext_glPollInstrumentsSGIX( void *args )
 {
     struct glPollInstrumentsSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glPollInstrumentsSGIX( params->marker_p );
+    params->ret = funcs->p_glPollInstrumentsSGIX( params->marker_p );
     return STATUS_SUCCESS;
 }
 
@@ -15160,7 +15160,7 @@ static NTSTATUS ext_glPolygonOffsetClamp( void *args )
 {
     struct glPolygonOffsetClamp_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPolygonOffsetClamp( params->factor, params->units, params->clamp );
+    funcs->p_glPolygonOffsetClamp( params->factor, params->units, params->clamp );
     return STATUS_SUCCESS;
 }
 
@@ -15168,7 +15168,7 @@ static NTSTATUS ext_glPolygonOffsetClampEXT( void *args )
 {
     struct glPolygonOffsetClampEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPolygonOffsetClampEXT( params->factor, params->units, params->clamp );
+    funcs->p_glPolygonOffsetClampEXT( params->factor, params->units, params->clamp );
     return STATUS_SUCCESS;
 }
 
@@ -15176,7 +15176,7 @@ static NTSTATUS ext_glPolygonOffsetEXT( void *args )
 {
     struct glPolygonOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPolygonOffsetEXT( params->factor, params->bias );
+    funcs->p_glPolygonOffsetEXT( params->factor, params->bias );
     return STATUS_SUCCESS;
 }
 
@@ -15184,7 +15184,7 @@ static NTSTATUS ext_glPolygonOffsetxOES( void *args )
 {
     struct glPolygonOffsetxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPolygonOffsetxOES( params->factor, params->units );
+    funcs->p_glPolygonOffsetxOES( params->factor, params->units );
     return STATUS_SUCCESS;
 }
 
@@ -15192,7 +15192,7 @@ static NTSTATUS ext_glPopDebugGroup( void *args )
 {
     struct glPopDebugGroup_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPopDebugGroup();
+    funcs->p_glPopDebugGroup();
     return STATUS_SUCCESS;
 }
 
@@ -15200,7 +15200,7 @@ static NTSTATUS ext_glPopGroupMarkerEXT( void *args )
 {
     struct glPopGroupMarkerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPopGroupMarkerEXT();
+    funcs->p_glPopGroupMarkerEXT();
     return STATUS_SUCCESS;
 }
 
@@ -15208,7 +15208,7 @@ static NTSTATUS ext_glPresentFrameDualFillNV( void *args )
 {
     struct glPresentFrameDualFillNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPresentFrameDualFillNV( params->video_slot, params->minPresentTime, params->beginPresentTimeId, params->presentDurationId, params->type, params->target0, params->fill0, params->target1, params->fill1, params->target2, params->fill2, params->target3, params->fill3 );
+    funcs->p_glPresentFrameDualFillNV( params->video_slot, params->minPresentTime, params->beginPresentTimeId, params->presentDurationId, params->type, params->target0, params->fill0, params->target1, params->fill1, params->target2, params->fill2, params->target3, params->fill3 );
     return STATUS_SUCCESS;
 }
 
@@ -15216,7 +15216,7 @@ static NTSTATUS ext_glPresentFrameKeyedNV( void *args )
 {
     struct glPresentFrameKeyedNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPresentFrameKeyedNV( params->video_slot, params->minPresentTime, params->beginPresentTimeId, params->presentDurationId, params->type, params->target0, params->fill0, params->key0, params->target1, params->fill1, params->key1 );
+    funcs->p_glPresentFrameKeyedNV( params->video_slot, params->minPresentTime, params->beginPresentTimeId, params->presentDurationId, params->type, params->target0, params->fill0, params->key0, params->target1, params->fill1, params->key1 );
     return STATUS_SUCCESS;
 }
 
@@ -15224,7 +15224,7 @@ static NTSTATUS ext_glPrimitiveBoundingBoxARB( void *args )
 {
     struct glPrimitiveBoundingBoxARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPrimitiveBoundingBoxARB( params->minX, params->minY, params->minZ, params->minW, params->maxX, params->maxY, params->maxZ, params->maxW );
+    funcs->p_glPrimitiveBoundingBoxARB( params->minX, params->minY, params->minZ, params->minW, params->maxX, params->maxY, params->maxZ, params->maxW );
     return STATUS_SUCCESS;
 }
 
@@ -15232,7 +15232,7 @@ static NTSTATUS ext_glPrimitiveRestartIndex( void *args )
 {
     struct glPrimitiveRestartIndex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPrimitiveRestartIndex( params->index );
+    funcs->p_glPrimitiveRestartIndex( params->index );
     return STATUS_SUCCESS;
 }
 
@@ -15240,7 +15240,7 @@ static NTSTATUS ext_glPrimitiveRestartIndexNV( void *args )
 {
     struct glPrimitiveRestartIndexNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPrimitiveRestartIndexNV( params->index );
+    funcs->p_glPrimitiveRestartIndexNV( params->index );
     return STATUS_SUCCESS;
 }
 
@@ -15248,7 +15248,7 @@ static NTSTATUS ext_glPrimitiveRestartNV( void *args )
 {
     struct glPrimitiveRestartNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPrimitiveRestartNV();
+    funcs->p_glPrimitiveRestartNV();
     return STATUS_SUCCESS;
 }
 
@@ -15256,7 +15256,7 @@ static NTSTATUS ext_glPrioritizeTexturesEXT( void *args )
 {
     struct glPrioritizeTexturesEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPrioritizeTexturesEXT( params->n, params->textures, params->priorities );
+    funcs->p_glPrioritizeTexturesEXT( params->n, params->textures, params->priorities );
     return STATUS_SUCCESS;
 }
 
@@ -15264,7 +15264,7 @@ static NTSTATUS ext_glPrioritizeTexturesxOES( void *args )
 {
     struct glPrioritizeTexturesxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPrioritizeTexturesxOES( params->n, params->textures, params->priorities );
+    funcs->p_glPrioritizeTexturesxOES( params->n, params->textures, params->priorities );
     return STATUS_SUCCESS;
 }
 
@@ -15272,7 +15272,7 @@ static NTSTATUS ext_glProgramBinary( void *args )
 {
     struct glProgramBinary_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramBinary( params->program, params->binaryFormat, params->binary, params->length );
+    funcs->p_glProgramBinary( params->program, params->binaryFormat, params->binary, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -15280,7 +15280,7 @@ static NTSTATUS ext_glProgramBufferParametersIivNV( void *args )
 {
     struct glProgramBufferParametersIivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramBufferParametersIivNV( params->target, params->bindingIndex, params->wordIndex, params->count, params->params );
+    funcs->p_glProgramBufferParametersIivNV( params->target, params->bindingIndex, params->wordIndex, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15288,7 +15288,7 @@ static NTSTATUS ext_glProgramBufferParametersIuivNV( void *args )
 {
     struct glProgramBufferParametersIuivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramBufferParametersIuivNV( params->target, params->bindingIndex, params->wordIndex, params->count, params->params );
+    funcs->p_glProgramBufferParametersIuivNV( params->target, params->bindingIndex, params->wordIndex, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15296,7 +15296,7 @@ static NTSTATUS ext_glProgramBufferParametersfvNV( void *args )
 {
     struct glProgramBufferParametersfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramBufferParametersfvNV( params->target, params->bindingIndex, params->wordIndex, params->count, params->params );
+    funcs->p_glProgramBufferParametersfvNV( params->target, params->bindingIndex, params->wordIndex, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15304,7 +15304,7 @@ static NTSTATUS ext_glProgramEnvParameter4dARB( void *args )
 {
     struct glProgramEnvParameter4dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParameter4dARB( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramEnvParameter4dARB( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15312,7 +15312,7 @@ static NTSTATUS ext_glProgramEnvParameter4dvARB( void *args )
 {
     struct glProgramEnvParameter4dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParameter4dvARB( params->target, params->index, params->params );
+    funcs->p_glProgramEnvParameter4dvARB( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15320,7 +15320,7 @@ static NTSTATUS ext_glProgramEnvParameter4fARB( void *args )
 {
     struct glProgramEnvParameter4fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParameter4fARB( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramEnvParameter4fARB( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15328,7 +15328,7 @@ static NTSTATUS ext_glProgramEnvParameter4fvARB( void *args )
 {
     struct glProgramEnvParameter4fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParameter4fvARB( params->target, params->index, params->params );
+    funcs->p_glProgramEnvParameter4fvARB( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15336,7 +15336,7 @@ static NTSTATUS ext_glProgramEnvParameterI4iNV( void *args )
 {
     struct glProgramEnvParameterI4iNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParameterI4iNV( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramEnvParameterI4iNV( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15344,7 +15344,7 @@ static NTSTATUS ext_glProgramEnvParameterI4ivNV( void *args )
 {
     struct glProgramEnvParameterI4ivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParameterI4ivNV( params->target, params->index, params->params );
+    funcs->p_glProgramEnvParameterI4ivNV( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15352,7 +15352,7 @@ static NTSTATUS ext_glProgramEnvParameterI4uiNV( void *args )
 {
     struct glProgramEnvParameterI4uiNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParameterI4uiNV( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramEnvParameterI4uiNV( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15360,7 +15360,7 @@ static NTSTATUS ext_glProgramEnvParameterI4uivNV( void *args )
 {
     struct glProgramEnvParameterI4uivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParameterI4uivNV( params->target, params->index, params->params );
+    funcs->p_glProgramEnvParameterI4uivNV( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15368,7 +15368,7 @@ static NTSTATUS ext_glProgramEnvParameters4fvEXT( void *args )
 {
     struct glProgramEnvParameters4fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParameters4fvEXT( params->target, params->index, params->count, params->params );
+    funcs->p_glProgramEnvParameters4fvEXT( params->target, params->index, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15376,7 +15376,7 @@ static NTSTATUS ext_glProgramEnvParametersI4ivNV( void *args )
 {
     struct glProgramEnvParametersI4ivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParametersI4ivNV( params->target, params->index, params->count, params->params );
+    funcs->p_glProgramEnvParametersI4ivNV( params->target, params->index, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15384,7 +15384,7 @@ static NTSTATUS ext_glProgramEnvParametersI4uivNV( void *args )
 {
     struct glProgramEnvParametersI4uivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramEnvParametersI4uivNV( params->target, params->index, params->count, params->params );
+    funcs->p_glProgramEnvParametersI4uivNV( params->target, params->index, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15392,7 +15392,7 @@ static NTSTATUS ext_glProgramLocalParameter4dARB( void *args )
 {
     struct glProgramLocalParameter4dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParameter4dARB( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramLocalParameter4dARB( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15400,7 +15400,7 @@ static NTSTATUS ext_glProgramLocalParameter4dvARB( void *args )
 {
     struct glProgramLocalParameter4dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParameter4dvARB( params->target, params->index, params->params );
+    funcs->p_glProgramLocalParameter4dvARB( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15408,7 +15408,7 @@ static NTSTATUS ext_glProgramLocalParameter4fARB( void *args )
 {
     struct glProgramLocalParameter4fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParameter4fARB( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramLocalParameter4fARB( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15416,7 +15416,7 @@ static NTSTATUS ext_glProgramLocalParameter4fvARB( void *args )
 {
     struct glProgramLocalParameter4fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParameter4fvARB( params->target, params->index, params->params );
+    funcs->p_glProgramLocalParameter4fvARB( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15424,7 +15424,7 @@ static NTSTATUS ext_glProgramLocalParameterI4iNV( void *args )
 {
     struct glProgramLocalParameterI4iNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParameterI4iNV( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramLocalParameterI4iNV( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15432,7 +15432,7 @@ static NTSTATUS ext_glProgramLocalParameterI4ivNV( void *args )
 {
     struct glProgramLocalParameterI4ivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParameterI4ivNV( params->target, params->index, params->params );
+    funcs->p_glProgramLocalParameterI4ivNV( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15440,7 +15440,7 @@ static NTSTATUS ext_glProgramLocalParameterI4uiNV( void *args )
 {
     struct glProgramLocalParameterI4uiNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParameterI4uiNV( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramLocalParameterI4uiNV( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15448,7 +15448,7 @@ static NTSTATUS ext_glProgramLocalParameterI4uivNV( void *args )
 {
     struct glProgramLocalParameterI4uivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParameterI4uivNV( params->target, params->index, params->params );
+    funcs->p_glProgramLocalParameterI4uivNV( params->target, params->index, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15456,7 +15456,7 @@ static NTSTATUS ext_glProgramLocalParameters4fvEXT( void *args )
 {
     struct glProgramLocalParameters4fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParameters4fvEXT( params->target, params->index, params->count, params->params );
+    funcs->p_glProgramLocalParameters4fvEXT( params->target, params->index, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15464,7 +15464,7 @@ static NTSTATUS ext_glProgramLocalParametersI4ivNV( void *args )
 {
     struct glProgramLocalParametersI4ivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParametersI4ivNV( params->target, params->index, params->count, params->params );
+    funcs->p_glProgramLocalParametersI4ivNV( params->target, params->index, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15472,7 +15472,7 @@ static NTSTATUS ext_glProgramLocalParametersI4uivNV( void *args )
 {
     struct glProgramLocalParametersI4uivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramLocalParametersI4uivNV( params->target, params->index, params->count, params->params );
+    funcs->p_glProgramLocalParametersI4uivNV( params->target, params->index, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15480,7 +15480,7 @@ static NTSTATUS ext_glProgramNamedParameter4dNV( void *args )
 {
     struct glProgramNamedParameter4dNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramNamedParameter4dNV( params->id, params->len, params->name, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramNamedParameter4dNV( params->id, params->len, params->name, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15488,7 +15488,7 @@ static NTSTATUS ext_glProgramNamedParameter4dvNV( void *args )
 {
     struct glProgramNamedParameter4dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramNamedParameter4dvNV( params->id, params->len, params->name, params->v );
+    funcs->p_glProgramNamedParameter4dvNV( params->id, params->len, params->name, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -15496,7 +15496,7 @@ static NTSTATUS ext_glProgramNamedParameter4fNV( void *args )
 {
     struct glProgramNamedParameter4fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramNamedParameter4fNV( params->id, params->len, params->name, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramNamedParameter4fNV( params->id, params->len, params->name, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15504,7 +15504,7 @@ static NTSTATUS ext_glProgramNamedParameter4fvNV( void *args )
 {
     struct glProgramNamedParameter4fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramNamedParameter4fvNV( params->id, params->len, params->name, params->v );
+    funcs->p_glProgramNamedParameter4fvNV( params->id, params->len, params->name, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -15512,7 +15512,7 @@ static NTSTATUS ext_glProgramParameter4dNV( void *args )
 {
     struct glProgramParameter4dNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramParameter4dNV( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramParameter4dNV( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15520,7 +15520,7 @@ static NTSTATUS ext_glProgramParameter4dvNV( void *args )
 {
     struct glProgramParameter4dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramParameter4dvNV( params->target, params->index, params->v );
+    funcs->p_glProgramParameter4dvNV( params->target, params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -15528,7 +15528,7 @@ static NTSTATUS ext_glProgramParameter4fNV( void *args )
 {
     struct glProgramParameter4fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramParameter4fNV( params->target, params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramParameter4fNV( params->target, params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -15536,7 +15536,7 @@ static NTSTATUS ext_glProgramParameter4fvNV( void *args )
 {
     struct glProgramParameter4fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramParameter4fvNV( params->target, params->index, params->v );
+    funcs->p_glProgramParameter4fvNV( params->target, params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -15544,7 +15544,7 @@ static NTSTATUS ext_glProgramParameteri( void *args )
 {
     struct glProgramParameteri_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramParameteri( params->program, params->pname, params->value );
+    funcs->p_glProgramParameteri( params->program, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15552,7 +15552,7 @@ static NTSTATUS ext_glProgramParameteriARB( void *args )
 {
     struct glProgramParameteriARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramParameteriARB( params->program, params->pname, params->value );
+    funcs->p_glProgramParameteriARB( params->program, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15560,7 +15560,7 @@ static NTSTATUS ext_glProgramParameteriEXT( void *args )
 {
     struct glProgramParameteriEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramParameteriEXT( params->program, params->pname, params->value );
+    funcs->p_glProgramParameteriEXT( params->program, params->pname, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15568,7 +15568,7 @@ static NTSTATUS ext_glProgramParameters4dvNV( void *args )
 {
     struct glProgramParameters4dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramParameters4dvNV( params->target, params->index, params->count, params->v );
+    funcs->p_glProgramParameters4dvNV( params->target, params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -15576,7 +15576,7 @@ static NTSTATUS ext_glProgramParameters4fvNV( void *args )
 {
     struct glProgramParameters4fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramParameters4fvNV( params->target, params->index, params->count, params->v );
+    funcs->p_glProgramParameters4fvNV( params->target, params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -15584,7 +15584,7 @@ static NTSTATUS ext_glProgramPathFragmentInputGenNV( void *args )
 {
     struct glProgramPathFragmentInputGenNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramPathFragmentInputGenNV( params->program, params->location, params->genMode, params->components, params->coeffs );
+    funcs->p_glProgramPathFragmentInputGenNV( params->program, params->location, params->genMode, params->components, params->coeffs );
     return STATUS_SUCCESS;
 }
 
@@ -15592,7 +15592,7 @@ static NTSTATUS ext_glProgramStringARB( void *args )
 {
     struct glProgramStringARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramStringARB( params->target, params->format, params->len, params->string );
+    funcs->p_glProgramStringARB( params->target, params->format, params->len, params->string );
     return STATUS_SUCCESS;
 }
 
@@ -15600,7 +15600,7 @@ static NTSTATUS ext_glProgramSubroutineParametersuivNV( void *args )
 {
     struct glProgramSubroutineParametersuivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramSubroutineParametersuivNV( params->target, params->count, params->params );
+    funcs->p_glProgramSubroutineParametersuivNV( params->target, params->count, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -15608,7 +15608,7 @@ static NTSTATUS ext_glProgramUniform1d( void *args )
 {
     struct glProgramUniform1d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1d( params->program, params->location, params->v0 );
+    funcs->p_glProgramUniform1d( params->program, params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -15616,7 +15616,7 @@ static NTSTATUS ext_glProgramUniform1dEXT( void *args )
 {
     struct glProgramUniform1dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1dEXT( params->program, params->location, params->x );
+    funcs->p_glProgramUniform1dEXT( params->program, params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -15624,7 +15624,7 @@ static NTSTATUS ext_glProgramUniform1dv( void *args )
 {
     struct glProgramUniform1dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1dv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1dv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15632,7 +15632,7 @@ static NTSTATUS ext_glProgramUniform1dvEXT( void *args )
 {
     struct glProgramUniform1dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1dvEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1dvEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15640,7 +15640,7 @@ static NTSTATUS ext_glProgramUniform1f( void *args )
 {
     struct glProgramUniform1f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1f( params->program, params->location, params->v0 );
+    funcs->p_glProgramUniform1f( params->program, params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -15648,7 +15648,7 @@ static NTSTATUS ext_glProgramUniform1fEXT( void *args )
 {
     struct glProgramUniform1fEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1fEXT( params->program, params->location, params->v0 );
+    funcs->p_glProgramUniform1fEXT( params->program, params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -15656,7 +15656,7 @@ static NTSTATUS ext_glProgramUniform1fv( void *args )
 {
     struct glProgramUniform1fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1fv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1fv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15664,7 +15664,7 @@ static NTSTATUS ext_glProgramUniform1fvEXT( void *args )
 {
     struct glProgramUniform1fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1fvEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1fvEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15672,7 +15672,7 @@ static NTSTATUS ext_glProgramUniform1i( void *args )
 {
     struct glProgramUniform1i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1i( params->program, params->location, params->v0 );
+    funcs->p_glProgramUniform1i( params->program, params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -15680,7 +15680,7 @@ static NTSTATUS ext_glProgramUniform1i64ARB( void *args )
 {
     struct glProgramUniform1i64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1i64ARB( params->program, params->location, params->x );
+    funcs->p_glProgramUniform1i64ARB( params->program, params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -15688,7 +15688,7 @@ static NTSTATUS ext_glProgramUniform1i64NV( void *args )
 {
     struct glProgramUniform1i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1i64NV( params->program, params->location, params->x );
+    funcs->p_glProgramUniform1i64NV( params->program, params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -15696,7 +15696,7 @@ static NTSTATUS ext_glProgramUniform1i64vARB( void *args )
 {
     struct glProgramUniform1i64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1i64vARB( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1i64vARB( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15704,7 +15704,7 @@ static NTSTATUS ext_glProgramUniform1i64vNV( void *args )
 {
     struct glProgramUniform1i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1i64vNV( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1i64vNV( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15712,7 +15712,7 @@ static NTSTATUS ext_glProgramUniform1iEXT( void *args )
 {
     struct glProgramUniform1iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1iEXT( params->program, params->location, params->v0 );
+    funcs->p_glProgramUniform1iEXT( params->program, params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -15720,7 +15720,7 @@ static NTSTATUS ext_glProgramUniform1iv( void *args )
 {
     struct glProgramUniform1iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1iv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1iv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15728,7 +15728,7 @@ static NTSTATUS ext_glProgramUniform1ivEXT( void *args )
 {
     struct glProgramUniform1ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1ivEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1ivEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15736,7 +15736,7 @@ static NTSTATUS ext_glProgramUniform1ui( void *args )
 {
     struct glProgramUniform1ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1ui( params->program, params->location, params->v0 );
+    funcs->p_glProgramUniform1ui( params->program, params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -15744,7 +15744,7 @@ static NTSTATUS ext_glProgramUniform1ui64ARB( void *args )
 {
     struct glProgramUniform1ui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1ui64ARB( params->program, params->location, params->x );
+    funcs->p_glProgramUniform1ui64ARB( params->program, params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -15752,7 +15752,7 @@ static NTSTATUS ext_glProgramUniform1ui64NV( void *args )
 {
     struct glProgramUniform1ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1ui64NV( params->program, params->location, params->x );
+    funcs->p_glProgramUniform1ui64NV( params->program, params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -15760,7 +15760,7 @@ static NTSTATUS ext_glProgramUniform1ui64vARB( void *args )
 {
     struct glProgramUniform1ui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1ui64vARB( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1ui64vARB( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15768,7 +15768,7 @@ static NTSTATUS ext_glProgramUniform1ui64vNV( void *args )
 {
     struct glProgramUniform1ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1ui64vNV( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1ui64vNV( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15776,7 +15776,7 @@ static NTSTATUS ext_glProgramUniform1uiEXT( void *args )
 {
     struct glProgramUniform1uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1uiEXT( params->program, params->location, params->v0 );
+    funcs->p_glProgramUniform1uiEXT( params->program, params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -15784,7 +15784,7 @@ static NTSTATUS ext_glProgramUniform1uiv( void *args )
 {
     struct glProgramUniform1uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1uiv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1uiv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15792,7 +15792,7 @@ static NTSTATUS ext_glProgramUniform1uivEXT( void *args )
 {
     struct glProgramUniform1uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform1uivEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform1uivEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15800,7 +15800,7 @@ static NTSTATUS ext_glProgramUniform2d( void *args )
 {
     struct glProgramUniform2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2d( params->program, params->location, params->v0, params->v1 );
+    funcs->p_glProgramUniform2d( params->program, params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -15808,7 +15808,7 @@ static NTSTATUS ext_glProgramUniform2dEXT( void *args )
 {
     struct glProgramUniform2dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2dEXT( params->program, params->location, params->x, params->y );
+    funcs->p_glProgramUniform2dEXT( params->program, params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -15816,7 +15816,7 @@ static NTSTATUS ext_glProgramUniform2dv( void *args )
 {
     struct glProgramUniform2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2dv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2dv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15824,7 +15824,7 @@ static NTSTATUS ext_glProgramUniform2dvEXT( void *args )
 {
     struct glProgramUniform2dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2dvEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2dvEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15832,7 +15832,7 @@ static NTSTATUS ext_glProgramUniform2f( void *args )
 {
     struct glProgramUniform2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2f( params->program, params->location, params->v0, params->v1 );
+    funcs->p_glProgramUniform2f( params->program, params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -15840,7 +15840,7 @@ static NTSTATUS ext_glProgramUniform2fEXT( void *args )
 {
     struct glProgramUniform2fEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2fEXT( params->program, params->location, params->v0, params->v1 );
+    funcs->p_glProgramUniform2fEXT( params->program, params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -15848,7 +15848,7 @@ static NTSTATUS ext_glProgramUniform2fv( void *args )
 {
     struct glProgramUniform2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2fv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2fv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15856,7 +15856,7 @@ static NTSTATUS ext_glProgramUniform2fvEXT( void *args )
 {
     struct glProgramUniform2fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2fvEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2fvEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15864,7 +15864,7 @@ static NTSTATUS ext_glProgramUniform2i( void *args )
 {
     struct glProgramUniform2i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2i( params->program, params->location, params->v0, params->v1 );
+    funcs->p_glProgramUniform2i( params->program, params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -15872,7 +15872,7 @@ static NTSTATUS ext_glProgramUniform2i64ARB( void *args )
 {
     struct glProgramUniform2i64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2i64ARB( params->program, params->location, params->x, params->y );
+    funcs->p_glProgramUniform2i64ARB( params->program, params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -15880,7 +15880,7 @@ static NTSTATUS ext_glProgramUniform2i64NV( void *args )
 {
     struct glProgramUniform2i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2i64NV( params->program, params->location, params->x, params->y );
+    funcs->p_glProgramUniform2i64NV( params->program, params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -15888,7 +15888,7 @@ static NTSTATUS ext_glProgramUniform2i64vARB( void *args )
 {
     struct glProgramUniform2i64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2i64vARB( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2i64vARB( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15896,7 +15896,7 @@ static NTSTATUS ext_glProgramUniform2i64vNV( void *args )
 {
     struct glProgramUniform2i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2i64vNV( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2i64vNV( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15904,7 +15904,7 @@ static NTSTATUS ext_glProgramUniform2iEXT( void *args )
 {
     struct glProgramUniform2iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2iEXT( params->program, params->location, params->v0, params->v1 );
+    funcs->p_glProgramUniform2iEXT( params->program, params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -15912,7 +15912,7 @@ static NTSTATUS ext_glProgramUniform2iv( void *args )
 {
     struct glProgramUniform2iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2iv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2iv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15920,7 +15920,7 @@ static NTSTATUS ext_glProgramUniform2ivEXT( void *args )
 {
     struct glProgramUniform2ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2ivEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2ivEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15928,7 +15928,7 @@ static NTSTATUS ext_glProgramUniform2ui( void *args )
 {
     struct glProgramUniform2ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2ui( params->program, params->location, params->v0, params->v1 );
+    funcs->p_glProgramUniform2ui( params->program, params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -15936,7 +15936,7 @@ static NTSTATUS ext_glProgramUniform2ui64ARB( void *args )
 {
     struct glProgramUniform2ui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2ui64ARB( params->program, params->location, params->x, params->y );
+    funcs->p_glProgramUniform2ui64ARB( params->program, params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -15944,7 +15944,7 @@ static NTSTATUS ext_glProgramUniform2ui64NV( void *args )
 {
     struct glProgramUniform2ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2ui64NV( params->program, params->location, params->x, params->y );
+    funcs->p_glProgramUniform2ui64NV( params->program, params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -15952,7 +15952,7 @@ static NTSTATUS ext_glProgramUniform2ui64vARB( void *args )
 {
     struct glProgramUniform2ui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2ui64vARB( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2ui64vARB( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15960,7 +15960,7 @@ static NTSTATUS ext_glProgramUniform2ui64vNV( void *args )
 {
     struct glProgramUniform2ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2ui64vNV( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2ui64vNV( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15968,7 +15968,7 @@ static NTSTATUS ext_glProgramUniform2uiEXT( void *args )
 {
     struct glProgramUniform2uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2uiEXT( params->program, params->location, params->v0, params->v1 );
+    funcs->p_glProgramUniform2uiEXT( params->program, params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -15976,7 +15976,7 @@ static NTSTATUS ext_glProgramUniform2uiv( void *args )
 {
     struct glProgramUniform2uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2uiv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2uiv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15984,7 +15984,7 @@ static NTSTATUS ext_glProgramUniform2uivEXT( void *args )
 {
     struct glProgramUniform2uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform2uivEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform2uivEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -15992,7 +15992,7 @@ static NTSTATUS ext_glProgramUniform3d( void *args )
 {
     struct glProgramUniform3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3d( params->program, params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glProgramUniform3d( params->program, params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -16000,7 +16000,7 @@ static NTSTATUS ext_glProgramUniform3dEXT( void *args )
 {
     struct glProgramUniform3dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3dEXT( params->program, params->location, params->x, params->y, params->z );
+    funcs->p_glProgramUniform3dEXT( params->program, params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -16008,7 +16008,7 @@ static NTSTATUS ext_glProgramUniform3dv( void *args )
 {
     struct glProgramUniform3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3dv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3dv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16016,7 +16016,7 @@ static NTSTATUS ext_glProgramUniform3dvEXT( void *args )
 {
     struct glProgramUniform3dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3dvEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3dvEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16024,7 +16024,7 @@ static NTSTATUS ext_glProgramUniform3f( void *args )
 {
     struct glProgramUniform3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3f( params->program, params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glProgramUniform3f( params->program, params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -16032,7 +16032,7 @@ static NTSTATUS ext_glProgramUniform3fEXT( void *args )
 {
     struct glProgramUniform3fEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3fEXT( params->program, params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glProgramUniform3fEXT( params->program, params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -16040,7 +16040,7 @@ static NTSTATUS ext_glProgramUniform3fv( void *args )
 {
     struct glProgramUniform3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3fv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3fv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16048,7 +16048,7 @@ static NTSTATUS ext_glProgramUniform3fvEXT( void *args )
 {
     struct glProgramUniform3fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3fvEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3fvEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16056,7 +16056,7 @@ static NTSTATUS ext_glProgramUniform3i( void *args )
 {
     struct glProgramUniform3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3i( params->program, params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glProgramUniform3i( params->program, params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -16064,7 +16064,7 @@ static NTSTATUS ext_glProgramUniform3i64ARB( void *args )
 {
     struct glProgramUniform3i64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3i64ARB( params->program, params->location, params->x, params->y, params->z );
+    funcs->p_glProgramUniform3i64ARB( params->program, params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -16072,7 +16072,7 @@ static NTSTATUS ext_glProgramUniform3i64NV( void *args )
 {
     struct glProgramUniform3i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3i64NV( params->program, params->location, params->x, params->y, params->z );
+    funcs->p_glProgramUniform3i64NV( params->program, params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -16080,7 +16080,7 @@ static NTSTATUS ext_glProgramUniform3i64vARB( void *args )
 {
     struct glProgramUniform3i64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3i64vARB( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3i64vARB( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16088,7 +16088,7 @@ static NTSTATUS ext_glProgramUniform3i64vNV( void *args )
 {
     struct glProgramUniform3i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3i64vNV( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3i64vNV( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16096,7 +16096,7 @@ static NTSTATUS ext_glProgramUniform3iEXT( void *args )
 {
     struct glProgramUniform3iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3iEXT( params->program, params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glProgramUniform3iEXT( params->program, params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -16104,7 +16104,7 @@ static NTSTATUS ext_glProgramUniform3iv( void *args )
 {
     struct glProgramUniform3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3iv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3iv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16112,7 +16112,7 @@ static NTSTATUS ext_glProgramUniform3ivEXT( void *args )
 {
     struct glProgramUniform3ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3ivEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3ivEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16120,7 +16120,7 @@ static NTSTATUS ext_glProgramUniform3ui( void *args )
 {
     struct glProgramUniform3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3ui( params->program, params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glProgramUniform3ui( params->program, params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -16128,7 +16128,7 @@ static NTSTATUS ext_glProgramUniform3ui64ARB( void *args )
 {
     struct glProgramUniform3ui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3ui64ARB( params->program, params->location, params->x, params->y, params->z );
+    funcs->p_glProgramUniform3ui64ARB( params->program, params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -16136,7 +16136,7 @@ static NTSTATUS ext_glProgramUniform3ui64NV( void *args )
 {
     struct glProgramUniform3ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3ui64NV( params->program, params->location, params->x, params->y, params->z );
+    funcs->p_glProgramUniform3ui64NV( params->program, params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -16144,7 +16144,7 @@ static NTSTATUS ext_glProgramUniform3ui64vARB( void *args )
 {
     struct glProgramUniform3ui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3ui64vARB( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3ui64vARB( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16152,7 +16152,7 @@ static NTSTATUS ext_glProgramUniform3ui64vNV( void *args )
 {
     struct glProgramUniform3ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3ui64vNV( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3ui64vNV( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16160,7 +16160,7 @@ static NTSTATUS ext_glProgramUniform3uiEXT( void *args )
 {
     struct glProgramUniform3uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3uiEXT( params->program, params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glProgramUniform3uiEXT( params->program, params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -16168,7 +16168,7 @@ static NTSTATUS ext_glProgramUniform3uiv( void *args )
 {
     struct glProgramUniform3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3uiv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3uiv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16176,7 +16176,7 @@ static NTSTATUS ext_glProgramUniform3uivEXT( void *args )
 {
     struct glProgramUniform3uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform3uivEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform3uivEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16184,7 +16184,7 @@ static NTSTATUS ext_glProgramUniform4d( void *args )
 {
     struct glProgramUniform4d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4d( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glProgramUniform4d( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -16192,7 +16192,7 @@ static NTSTATUS ext_glProgramUniform4dEXT( void *args )
 {
     struct glProgramUniform4dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4dEXT( params->program, params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramUniform4dEXT( params->program, params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -16200,7 +16200,7 @@ static NTSTATUS ext_glProgramUniform4dv( void *args )
 {
     struct glProgramUniform4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4dv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4dv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16208,7 +16208,7 @@ static NTSTATUS ext_glProgramUniform4dvEXT( void *args )
 {
     struct glProgramUniform4dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4dvEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4dvEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16216,7 +16216,7 @@ static NTSTATUS ext_glProgramUniform4f( void *args )
 {
     struct glProgramUniform4f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4f( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glProgramUniform4f( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -16224,7 +16224,7 @@ static NTSTATUS ext_glProgramUniform4fEXT( void *args )
 {
     struct glProgramUniform4fEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4fEXT( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glProgramUniform4fEXT( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -16232,7 +16232,7 @@ static NTSTATUS ext_glProgramUniform4fv( void *args )
 {
     struct glProgramUniform4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4fv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4fv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16240,7 +16240,7 @@ static NTSTATUS ext_glProgramUniform4fvEXT( void *args )
 {
     struct glProgramUniform4fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4fvEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4fvEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16248,7 +16248,7 @@ static NTSTATUS ext_glProgramUniform4i( void *args )
 {
     struct glProgramUniform4i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4i( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glProgramUniform4i( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -16256,7 +16256,7 @@ static NTSTATUS ext_glProgramUniform4i64ARB( void *args )
 {
     struct glProgramUniform4i64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4i64ARB( params->program, params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramUniform4i64ARB( params->program, params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -16264,7 +16264,7 @@ static NTSTATUS ext_glProgramUniform4i64NV( void *args )
 {
     struct glProgramUniform4i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4i64NV( params->program, params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramUniform4i64NV( params->program, params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -16272,7 +16272,7 @@ static NTSTATUS ext_glProgramUniform4i64vARB( void *args )
 {
     struct glProgramUniform4i64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4i64vARB( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4i64vARB( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16280,7 +16280,7 @@ static NTSTATUS ext_glProgramUniform4i64vNV( void *args )
 {
     struct glProgramUniform4i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4i64vNV( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4i64vNV( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16288,7 +16288,7 @@ static NTSTATUS ext_glProgramUniform4iEXT( void *args )
 {
     struct glProgramUniform4iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4iEXT( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glProgramUniform4iEXT( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -16296,7 +16296,7 @@ static NTSTATUS ext_glProgramUniform4iv( void *args )
 {
     struct glProgramUniform4iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4iv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4iv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16304,7 +16304,7 @@ static NTSTATUS ext_glProgramUniform4ivEXT( void *args )
 {
     struct glProgramUniform4ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4ivEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4ivEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16312,7 +16312,7 @@ static NTSTATUS ext_glProgramUniform4ui( void *args )
 {
     struct glProgramUniform4ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4ui( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glProgramUniform4ui( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -16320,7 +16320,7 @@ static NTSTATUS ext_glProgramUniform4ui64ARB( void *args )
 {
     struct glProgramUniform4ui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4ui64ARB( params->program, params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramUniform4ui64ARB( params->program, params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -16328,7 +16328,7 @@ static NTSTATUS ext_glProgramUniform4ui64NV( void *args )
 {
     struct glProgramUniform4ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4ui64NV( params->program, params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glProgramUniform4ui64NV( params->program, params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -16336,7 +16336,7 @@ static NTSTATUS ext_glProgramUniform4ui64vARB( void *args )
 {
     struct glProgramUniform4ui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4ui64vARB( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4ui64vARB( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16344,7 +16344,7 @@ static NTSTATUS ext_glProgramUniform4ui64vNV( void *args )
 {
     struct glProgramUniform4ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4ui64vNV( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4ui64vNV( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16352,7 +16352,7 @@ static NTSTATUS ext_glProgramUniform4uiEXT( void *args )
 {
     struct glProgramUniform4uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4uiEXT( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glProgramUniform4uiEXT( params->program, params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -16360,7 +16360,7 @@ static NTSTATUS ext_glProgramUniform4uiv( void *args )
 {
     struct glProgramUniform4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4uiv( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4uiv( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16368,7 +16368,7 @@ static NTSTATUS ext_glProgramUniform4uivEXT( void *args )
 {
     struct glProgramUniform4uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniform4uivEXT( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniform4uivEXT( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16376,7 +16376,7 @@ static NTSTATUS ext_glProgramUniformHandleui64ARB( void *args )
 {
     struct glProgramUniformHandleui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformHandleui64ARB( params->program, params->location, params->value );
+    funcs->p_glProgramUniformHandleui64ARB( params->program, params->location, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16384,7 +16384,7 @@ static NTSTATUS ext_glProgramUniformHandleui64NV( void *args )
 {
     struct glProgramUniformHandleui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformHandleui64NV( params->program, params->location, params->value );
+    funcs->p_glProgramUniformHandleui64NV( params->program, params->location, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16392,7 +16392,7 @@ static NTSTATUS ext_glProgramUniformHandleui64vARB( void *args )
 {
     struct glProgramUniformHandleui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformHandleui64vARB( params->program, params->location, params->count, params->values );
+    funcs->p_glProgramUniformHandleui64vARB( params->program, params->location, params->count, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -16400,7 +16400,7 @@ static NTSTATUS ext_glProgramUniformHandleui64vNV( void *args )
 {
     struct glProgramUniformHandleui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformHandleui64vNV( params->program, params->location, params->count, params->values );
+    funcs->p_glProgramUniformHandleui64vNV( params->program, params->location, params->count, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -16408,7 +16408,7 @@ static NTSTATUS ext_glProgramUniformMatrix2dv( void *args )
 {
     struct glProgramUniformMatrix2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2dv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2dv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16416,7 +16416,7 @@ static NTSTATUS ext_glProgramUniformMatrix2dvEXT( void *args )
 {
     struct glProgramUniformMatrix2dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2dvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2dvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16424,7 +16424,7 @@ static NTSTATUS ext_glProgramUniformMatrix2fv( void *args )
 {
     struct glProgramUniformMatrix2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2fv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2fv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16432,7 +16432,7 @@ static NTSTATUS ext_glProgramUniformMatrix2fvEXT( void *args )
 {
     struct glProgramUniformMatrix2fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2fvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2fvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16440,7 +16440,7 @@ static NTSTATUS ext_glProgramUniformMatrix2x3dv( void *args )
 {
     struct glProgramUniformMatrix2x3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2x3dv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2x3dv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16448,7 +16448,7 @@ static NTSTATUS ext_glProgramUniformMatrix2x3dvEXT( void *args )
 {
     struct glProgramUniformMatrix2x3dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2x3dvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2x3dvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16456,7 +16456,7 @@ static NTSTATUS ext_glProgramUniformMatrix2x3fv( void *args )
 {
     struct glProgramUniformMatrix2x3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2x3fv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2x3fv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16464,7 +16464,7 @@ static NTSTATUS ext_glProgramUniformMatrix2x3fvEXT( void *args )
 {
     struct glProgramUniformMatrix2x3fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2x3fvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2x3fvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16472,7 +16472,7 @@ static NTSTATUS ext_glProgramUniformMatrix2x4dv( void *args )
 {
     struct glProgramUniformMatrix2x4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2x4dv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2x4dv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16480,7 +16480,7 @@ static NTSTATUS ext_glProgramUniformMatrix2x4dvEXT( void *args )
 {
     struct glProgramUniformMatrix2x4dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2x4dvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2x4dvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16488,7 +16488,7 @@ static NTSTATUS ext_glProgramUniformMatrix2x4fv( void *args )
 {
     struct glProgramUniformMatrix2x4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2x4fv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2x4fv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16496,7 +16496,7 @@ static NTSTATUS ext_glProgramUniformMatrix2x4fvEXT( void *args )
 {
     struct glProgramUniformMatrix2x4fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix2x4fvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix2x4fvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16504,7 +16504,7 @@ static NTSTATUS ext_glProgramUniformMatrix3dv( void *args )
 {
     struct glProgramUniformMatrix3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3dv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3dv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16512,7 +16512,7 @@ static NTSTATUS ext_glProgramUniformMatrix3dvEXT( void *args )
 {
     struct glProgramUniformMatrix3dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3dvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3dvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16520,7 +16520,7 @@ static NTSTATUS ext_glProgramUniformMatrix3fv( void *args )
 {
     struct glProgramUniformMatrix3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3fv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3fv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16528,7 +16528,7 @@ static NTSTATUS ext_glProgramUniformMatrix3fvEXT( void *args )
 {
     struct glProgramUniformMatrix3fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3fvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3fvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16536,7 +16536,7 @@ static NTSTATUS ext_glProgramUniformMatrix3x2dv( void *args )
 {
     struct glProgramUniformMatrix3x2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3x2dv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3x2dv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16544,7 +16544,7 @@ static NTSTATUS ext_glProgramUniformMatrix3x2dvEXT( void *args )
 {
     struct glProgramUniformMatrix3x2dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3x2dvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3x2dvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16552,7 +16552,7 @@ static NTSTATUS ext_glProgramUniformMatrix3x2fv( void *args )
 {
     struct glProgramUniformMatrix3x2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3x2fv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3x2fv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16560,7 +16560,7 @@ static NTSTATUS ext_glProgramUniformMatrix3x2fvEXT( void *args )
 {
     struct glProgramUniformMatrix3x2fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3x2fvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3x2fvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16568,7 +16568,7 @@ static NTSTATUS ext_glProgramUniformMatrix3x4dv( void *args )
 {
     struct glProgramUniformMatrix3x4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3x4dv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3x4dv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16576,7 +16576,7 @@ static NTSTATUS ext_glProgramUniformMatrix3x4dvEXT( void *args )
 {
     struct glProgramUniformMatrix3x4dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3x4dvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3x4dvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16584,7 +16584,7 @@ static NTSTATUS ext_glProgramUniformMatrix3x4fv( void *args )
 {
     struct glProgramUniformMatrix3x4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3x4fv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3x4fv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16592,7 +16592,7 @@ static NTSTATUS ext_glProgramUniformMatrix3x4fvEXT( void *args )
 {
     struct glProgramUniformMatrix3x4fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix3x4fvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix3x4fvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16600,7 +16600,7 @@ static NTSTATUS ext_glProgramUniformMatrix4dv( void *args )
 {
     struct glProgramUniformMatrix4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4dv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4dv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16608,7 +16608,7 @@ static NTSTATUS ext_glProgramUniformMatrix4dvEXT( void *args )
 {
     struct glProgramUniformMatrix4dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4dvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4dvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16616,7 +16616,7 @@ static NTSTATUS ext_glProgramUniformMatrix4fv( void *args )
 {
     struct glProgramUniformMatrix4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4fv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4fv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16624,7 +16624,7 @@ static NTSTATUS ext_glProgramUniformMatrix4fvEXT( void *args )
 {
     struct glProgramUniformMatrix4fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4fvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4fvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16632,7 +16632,7 @@ static NTSTATUS ext_glProgramUniformMatrix4x2dv( void *args )
 {
     struct glProgramUniformMatrix4x2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4x2dv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4x2dv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16640,7 +16640,7 @@ static NTSTATUS ext_glProgramUniformMatrix4x2dvEXT( void *args )
 {
     struct glProgramUniformMatrix4x2dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4x2dvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4x2dvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16648,7 +16648,7 @@ static NTSTATUS ext_glProgramUniformMatrix4x2fv( void *args )
 {
     struct glProgramUniformMatrix4x2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4x2fv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4x2fv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16656,7 +16656,7 @@ static NTSTATUS ext_glProgramUniformMatrix4x2fvEXT( void *args )
 {
     struct glProgramUniformMatrix4x2fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4x2fvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4x2fvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16664,7 +16664,7 @@ static NTSTATUS ext_glProgramUniformMatrix4x3dv( void *args )
 {
     struct glProgramUniformMatrix4x3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4x3dv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4x3dv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16672,7 +16672,7 @@ static NTSTATUS ext_glProgramUniformMatrix4x3dvEXT( void *args )
 {
     struct glProgramUniformMatrix4x3dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4x3dvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4x3dvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16680,7 +16680,7 @@ static NTSTATUS ext_glProgramUniformMatrix4x3fv( void *args )
 {
     struct glProgramUniformMatrix4x3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4x3fv( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4x3fv( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16688,7 +16688,7 @@ static NTSTATUS ext_glProgramUniformMatrix4x3fvEXT( void *args )
 {
     struct glProgramUniformMatrix4x3fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformMatrix4x3fvEXT( params->program, params->location, params->count, params->transpose, params->value );
+    funcs->p_glProgramUniformMatrix4x3fvEXT( params->program, params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16696,7 +16696,7 @@ static NTSTATUS ext_glProgramUniformui64NV( void *args )
 {
     struct glProgramUniformui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformui64NV( params->program, params->location, params->value );
+    funcs->p_glProgramUniformui64NV( params->program, params->location, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16704,7 +16704,7 @@ static NTSTATUS ext_glProgramUniformui64vNV( void *args )
 {
     struct glProgramUniformui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramUniformui64vNV( params->program, params->location, params->count, params->value );
+    funcs->p_glProgramUniformui64vNV( params->program, params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -16712,7 +16712,7 @@ static NTSTATUS ext_glProgramVertexLimitNV( void *args )
 {
     struct glProgramVertexLimitNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProgramVertexLimitNV( params->target, params->limit );
+    funcs->p_glProgramVertexLimitNV( params->target, params->limit );
     return STATUS_SUCCESS;
 }
 
@@ -16720,7 +16720,7 @@ static NTSTATUS ext_glProvokingVertex( void *args )
 {
     struct glProvokingVertex_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProvokingVertex( params->mode );
+    funcs->p_glProvokingVertex( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -16728,7 +16728,7 @@ static NTSTATUS ext_glProvokingVertexEXT( void *args )
 {
     struct glProvokingVertexEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glProvokingVertexEXT( params->mode );
+    funcs->p_glProvokingVertexEXT( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -16736,7 +16736,7 @@ static NTSTATUS ext_glPushClientAttribDefaultEXT( void *args )
 {
     struct glPushClientAttribDefaultEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPushClientAttribDefaultEXT( params->mask );
+    funcs->p_glPushClientAttribDefaultEXT( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -16744,7 +16744,7 @@ static NTSTATUS ext_glPushDebugGroup( void *args )
 {
     struct glPushDebugGroup_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPushDebugGroup( params->source, params->id, params->length, params->message );
+    funcs->p_glPushDebugGroup( params->source, params->id, params->length, params->message );
     return STATUS_SUCCESS;
 }
 
@@ -16752,7 +16752,7 @@ static NTSTATUS ext_glPushGroupMarkerEXT( void *args )
 {
     struct glPushGroupMarkerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glPushGroupMarkerEXT( params->length, params->marker );
+    funcs->p_glPushGroupMarkerEXT( params->length, params->marker );
     return STATUS_SUCCESS;
 }
 
@@ -16760,7 +16760,7 @@ static NTSTATUS ext_glQueryCounter( void *args )
 {
     struct glQueryCounter_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glQueryCounter( params->id, params->target );
+    funcs->p_glQueryCounter( params->id, params->target );
     return STATUS_SUCCESS;
 }
 
@@ -16768,7 +16768,7 @@ static NTSTATUS ext_glQueryMatrixxOES( void *args )
 {
     struct glQueryMatrixxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glQueryMatrixxOES( params->mantissa, params->exponent );
+    params->ret = funcs->p_glQueryMatrixxOES( params->mantissa, params->exponent );
     return STATUS_SUCCESS;
 }
 
@@ -16776,7 +16776,7 @@ static NTSTATUS ext_glQueryObjectParameteruiAMD( void *args )
 {
     struct glQueryObjectParameteruiAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glQueryObjectParameteruiAMD( params->target, params->id, params->pname, params->param );
+    funcs->p_glQueryObjectParameteruiAMD( params->target, params->id, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -16784,7 +16784,7 @@ static NTSTATUS ext_glQueryResourceNV( void *args )
 {
     struct glQueryResourceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glQueryResourceNV( params->queryType, params->tagId, params->count, params->buffer );
+    params->ret = funcs->p_glQueryResourceNV( params->queryType, params->tagId, params->count, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -16792,7 +16792,7 @@ static NTSTATUS ext_glQueryResourceTagNV( void *args )
 {
     struct glQueryResourceTagNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glQueryResourceTagNV( params->tagId, params->tagString );
+    funcs->p_glQueryResourceTagNV( params->tagId, params->tagString );
     return STATUS_SUCCESS;
 }
 
@@ -16800,7 +16800,7 @@ static NTSTATUS ext_glRasterPos2xOES( void *args )
 {
     struct glRasterPos2xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRasterPos2xOES( params->x, params->y );
+    funcs->p_glRasterPos2xOES( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -16808,7 +16808,7 @@ static NTSTATUS ext_glRasterPos2xvOES( void *args )
 {
     struct glRasterPos2xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRasterPos2xvOES( params->coords );
+    funcs->p_glRasterPos2xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -16816,7 +16816,7 @@ static NTSTATUS ext_glRasterPos3xOES( void *args )
 {
     struct glRasterPos3xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRasterPos3xOES( params->x, params->y, params->z );
+    funcs->p_glRasterPos3xOES( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -16824,7 +16824,7 @@ static NTSTATUS ext_glRasterPos3xvOES( void *args )
 {
     struct glRasterPos3xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRasterPos3xvOES( params->coords );
+    funcs->p_glRasterPos3xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -16832,7 +16832,7 @@ static NTSTATUS ext_glRasterPos4xOES( void *args )
 {
     struct glRasterPos4xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRasterPos4xOES( params->x, params->y, params->z, params->w );
+    funcs->p_glRasterPos4xOES( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -16840,7 +16840,7 @@ static NTSTATUS ext_glRasterPos4xvOES( void *args )
 {
     struct glRasterPos4xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRasterPos4xvOES( params->coords );
+    funcs->p_glRasterPos4xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -16848,7 +16848,7 @@ static NTSTATUS ext_glRasterSamplesEXT( void *args )
 {
     struct glRasterSamplesEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRasterSamplesEXT( params->samples, params->fixedsamplelocations );
+    funcs->p_glRasterSamplesEXT( params->samples, params->fixedsamplelocations );
     return STATUS_SUCCESS;
 }
 
@@ -16856,7 +16856,7 @@ static NTSTATUS ext_glReadBufferRegion( void *args )
 {
     struct glReadBufferRegion_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReadBufferRegion( params->region, params->x, params->y, params->width, params->height );
+    funcs->p_glReadBufferRegion( params->region, params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -16864,7 +16864,7 @@ static NTSTATUS ext_glReadInstrumentsSGIX( void *args )
 {
     struct glReadInstrumentsSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReadInstrumentsSGIX( params->marker );
+    funcs->p_glReadInstrumentsSGIX( params->marker );
     return STATUS_SUCCESS;
 }
 
@@ -16872,7 +16872,7 @@ static NTSTATUS ext_glReadnPixels( void *args )
 {
     struct glReadnPixels_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReadnPixels( params->x, params->y, params->width, params->height, params->format, params->type, params->bufSize, params->data );
+    funcs->p_glReadnPixels( params->x, params->y, params->width, params->height, params->format, params->type, params->bufSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -16880,7 +16880,7 @@ static NTSTATUS ext_glReadnPixelsARB( void *args )
 {
     struct glReadnPixelsARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReadnPixelsARB( params->x, params->y, params->width, params->height, params->format, params->type, params->bufSize, params->data );
+    funcs->p_glReadnPixelsARB( params->x, params->y, params->width, params->height, params->format, params->type, params->bufSize, params->data );
     return STATUS_SUCCESS;
 }
 
@@ -16888,7 +16888,7 @@ static NTSTATUS ext_glRectxOES( void *args )
 {
     struct glRectxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRectxOES( params->x1, params->y1, params->x2, params->y2 );
+    funcs->p_glRectxOES( params->x1, params->y1, params->x2, params->y2 );
     return STATUS_SUCCESS;
 }
 
@@ -16896,7 +16896,7 @@ static NTSTATUS ext_glRectxvOES( void *args )
 {
     struct glRectxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRectxvOES( params->v1, params->v2 );
+    funcs->p_glRectxvOES( params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -16904,7 +16904,7 @@ static NTSTATUS ext_glReferencePlaneSGIX( void *args )
 {
     struct glReferencePlaneSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReferencePlaneSGIX( params->equation );
+    funcs->p_glReferencePlaneSGIX( params->equation );
     return STATUS_SUCCESS;
 }
 
@@ -16912,7 +16912,7 @@ static NTSTATUS ext_glReleaseKeyedMutexWin32EXT( void *args )
 {
     struct glReleaseKeyedMutexWin32EXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glReleaseKeyedMutexWin32EXT( params->memory, params->key );
+    params->ret = funcs->p_glReleaseKeyedMutexWin32EXT( params->memory, params->key );
     return STATUS_SUCCESS;
 }
 
@@ -16920,7 +16920,7 @@ static NTSTATUS ext_glReleaseShaderCompiler( void *args )
 {
     struct glReleaseShaderCompiler_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReleaseShaderCompiler();
+    funcs->p_glReleaseShaderCompiler();
     return STATUS_SUCCESS;
 }
 
@@ -16928,7 +16928,7 @@ static NTSTATUS ext_glRenderGpuMaskNV( void *args )
 {
     struct glRenderGpuMaskNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRenderGpuMaskNV( params->mask );
+    funcs->p_glRenderGpuMaskNV( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -16936,7 +16936,7 @@ static NTSTATUS ext_glRenderbufferStorage( void *args )
 {
     struct glRenderbufferStorage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRenderbufferStorage( params->target, params->internalformat, params->width, params->height );
+    funcs->p_glRenderbufferStorage( params->target, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -16944,7 +16944,7 @@ static NTSTATUS ext_glRenderbufferStorageEXT( void *args )
 {
     struct glRenderbufferStorageEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRenderbufferStorageEXT( params->target, params->internalformat, params->width, params->height );
+    funcs->p_glRenderbufferStorageEXT( params->target, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -16952,7 +16952,7 @@ static NTSTATUS ext_glRenderbufferStorageMultisample( void *args )
 {
     struct glRenderbufferStorageMultisample_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRenderbufferStorageMultisample( params->target, params->samples, params->internalformat, params->width, params->height );
+    funcs->p_glRenderbufferStorageMultisample( params->target, params->samples, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -16960,7 +16960,7 @@ static NTSTATUS ext_glRenderbufferStorageMultisampleAdvancedAMD( void *args )
 {
     struct glRenderbufferStorageMultisampleAdvancedAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRenderbufferStorageMultisampleAdvancedAMD( params->target, params->samples, params->storageSamples, params->internalformat, params->width, params->height );
+    funcs->p_glRenderbufferStorageMultisampleAdvancedAMD( params->target, params->samples, params->storageSamples, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -16968,7 +16968,7 @@ static NTSTATUS ext_glRenderbufferStorageMultisampleCoverageNV( void *args )
 {
     struct glRenderbufferStorageMultisampleCoverageNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRenderbufferStorageMultisampleCoverageNV( params->target, params->coverageSamples, params->colorSamples, params->internalformat, params->width, params->height );
+    funcs->p_glRenderbufferStorageMultisampleCoverageNV( params->target, params->coverageSamples, params->colorSamples, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -16976,7 +16976,7 @@ static NTSTATUS ext_glRenderbufferStorageMultisampleEXT( void *args )
 {
     struct glRenderbufferStorageMultisampleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRenderbufferStorageMultisampleEXT( params->target, params->samples, params->internalformat, params->width, params->height );
+    funcs->p_glRenderbufferStorageMultisampleEXT( params->target, params->samples, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -16984,7 +16984,7 @@ static NTSTATUS ext_glReplacementCodePointerSUN( void *args )
 {
     struct glReplacementCodePointerSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodePointerSUN( params->type, params->stride, params->pointer );
+    funcs->p_glReplacementCodePointerSUN( params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -16992,7 +16992,7 @@ static NTSTATUS ext_glReplacementCodeubSUN( void *args )
 {
     struct glReplacementCodeubSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeubSUN( params->code );
+    funcs->p_glReplacementCodeubSUN( params->code );
     return STATUS_SUCCESS;
 }
 
@@ -17000,7 +17000,7 @@ static NTSTATUS ext_glReplacementCodeubvSUN( void *args )
 {
     struct glReplacementCodeubvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeubvSUN( params->code );
+    funcs->p_glReplacementCodeubvSUN( params->code );
     return STATUS_SUCCESS;
 }
 
@@ -17008,7 +17008,7 @@ static NTSTATUS ext_glReplacementCodeuiColor3fVertex3fSUN( void *args )
 {
     struct glReplacementCodeuiColor3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiColor3fVertex3fSUN( params->rc, params->r, params->g, params->b, params->x, params->y, params->z );
+    funcs->p_glReplacementCodeuiColor3fVertex3fSUN( params->rc, params->r, params->g, params->b, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17016,7 +17016,7 @@ static NTSTATUS ext_glReplacementCodeuiColor3fVertex3fvSUN( void *args )
 {
     struct glReplacementCodeuiColor3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiColor3fVertex3fvSUN( params->rc, params->c, params->v );
+    funcs->p_glReplacementCodeuiColor3fVertex3fvSUN( params->rc, params->c, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17024,7 +17024,7 @@ static NTSTATUS ext_glReplacementCodeuiColor4fNormal3fVertex3fSUN( void *args )
 {
     struct glReplacementCodeuiColor4fNormal3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiColor4fNormal3fVertex3fSUN( params->rc, params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z );
+    funcs->p_glReplacementCodeuiColor4fNormal3fVertex3fSUN( params->rc, params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17032,7 +17032,7 @@ static NTSTATUS ext_glReplacementCodeuiColor4fNormal3fVertex3fvSUN( void *args )
 {
     struct glReplacementCodeuiColor4fNormal3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiColor4fNormal3fVertex3fvSUN( params->rc, params->c, params->n, params->v );
+    funcs->p_glReplacementCodeuiColor4fNormal3fVertex3fvSUN( params->rc, params->c, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17040,7 +17040,7 @@ static NTSTATUS ext_glReplacementCodeuiColor4ubVertex3fSUN( void *args )
 {
     struct glReplacementCodeuiColor4ubVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiColor4ubVertex3fSUN( params->rc, params->r, params->g, params->b, params->a, params->x, params->y, params->z );
+    funcs->p_glReplacementCodeuiColor4ubVertex3fSUN( params->rc, params->r, params->g, params->b, params->a, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17048,7 +17048,7 @@ static NTSTATUS ext_glReplacementCodeuiColor4ubVertex3fvSUN( void *args )
 {
     struct glReplacementCodeuiColor4ubVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiColor4ubVertex3fvSUN( params->rc, params->c, params->v );
+    funcs->p_glReplacementCodeuiColor4ubVertex3fvSUN( params->rc, params->c, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17056,7 +17056,7 @@ static NTSTATUS ext_glReplacementCodeuiNormal3fVertex3fSUN( void *args )
 {
     struct glReplacementCodeuiNormal3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiNormal3fVertex3fSUN( params->rc, params->nx, params->ny, params->nz, params->x, params->y, params->z );
+    funcs->p_glReplacementCodeuiNormal3fVertex3fSUN( params->rc, params->nx, params->ny, params->nz, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17064,7 +17064,7 @@ static NTSTATUS ext_glReplacementCodeuiNormal3fVertex3fvSUN( void *args )
 {
     struct glReplacementCodeuiNormal3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiNormal3fVertex3fvSUN( params->rc, params->n, params->v );
+    funcs->p_glReplacementCodeuiNormal3fVertex3fvSUN( params->rc, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17072,7 +17072,7 @@ static NTSTATUS ext_glReplacementCodeuiSUN( void *args )
 {
     struct glReplacementCodeuiSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiSUN( params->code );
+    funcs->p_glReplacementCodeuiSUN( params->code );
     return STATUS_SUCCESS;
 }
 
@@ -17080,7 +17080,7 @@ static NTSTATUS ext_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN( voi
 {
     struct glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN( params->rc, params->s, params->t, params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z );
+    funcs->p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN( params->rc, params->s, params->t, params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17088,7 +17088,7 @@ static NTSTATUS ext_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN( vo
 {
     struct glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN( params->rc, params->tc, params->c, params->n, params->v );
+    funcs->p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN( params->rc, params->tc, params->c, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17096,7 +17096,7 @@ static NTSTATUS ext_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN( void *args
 {
     struct glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN( params->rc, params->s, params->t, params->nx, params->ny, params->nz, params->x, params->y, params->z );
+    funcs->p_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN( params->rc, params->s, params->t, params->nx, params->ny, params->nz, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17104,7 +17104,7 @@ static NTSTATUS ext_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN( void *arg
 {
     struct glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN( params->rc, params->tc, params->n, params->v );
+    funcs->p_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN( params->rc, params->tc, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17112,7 +17112,7 @@ static NTSTATUS ext_glReplacementCodeuiTexCoord2fVertex3fSUN( void *args )
 {
     struct glReplacementCodeuiTexCoord2fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiTexCoord2fVertex3fSUN( params->rc, params->s, params->t, params->x, params->y, params->z );
+    funcs->p_glReplacementCodeuiTexCoord2fVertex3fSUN( params->rc, params->s, params->t, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17120,7 +17120,7 @@ static NTSTATUS ext_glReplacementCodeuiTexCoord2fVertex3fvSUN( void *args )
 {
     struct glReplacementCodeuiTexCoord2fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiTexCoord2fVertex3fvSUN( params->rc, params->tc, params->v );
+    funcs->p_glReplacementCodeuiTexCoord2fVertex3fvSUN( params->rc, params->tc, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17128,7 +17128,7 @@ static NTSTATUS ext_glReplacementCodeuiVertex3fSUN( void *args )
 {
     struct glReplacementCodeuiVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiVertex3fSUN( params->rc, params->x, params->y, params->z );
+    funcs->p_glReplacementCodeuiVertex3fSUN( params->rc, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17136,7 +17136,7 @@ static NTSTATUS ext_glReplacementCodeuiVertex3fvSUN( void *args )
 {
     struct glReplacementCodeuiVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuiVertex3fvSUN( params->rc, params->v );
+    funcs->p_glReplacementCodeuiVertex3fvSUN( params->rc, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17144,7 +17144,7 @@ static NTSTATUS ext_glReplacementCodeuivSUN( void *args )
 {
     struct glReplacementCodeuivSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeuivSUN( params->code );
+    funcs->p_glReplacementCodeuivSUN( params->code );
     return STATUS_SUCCESS;
 }
 
@@ -17152,7 +17152,7 @@ static NTSTATUS ext_glReplacementCodeusSUN( void *args )
 {
     struct glReplacementCodeusSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeusSUN( params->code );
+    funcs->p_glReplacementCodeusSUN( params->code );
     return STATUS_SUCCESS;
 }
 
@@ -17160,7 +17160,7 @@ static NTSTATUS ext_glReplacementCodeusvSUN( void *args )
 {
     struct glReplacementCodeusvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glReplacementCodeusvSUN( params->code );
+    funcs->p_glReplacementCodeusvSUN( params->code );
     return STATUS_SUCCESS;
 }
 
@@ -17168,7 +17168,7 @@ static NTSTATUS ext_glRequestResidentProgramsNV( void *args )
 {
     struct glRequestResidentProgramsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRequestResidentProgramsNV( params->n, params->programs );
+    funcs->p_glRequestResidentProgramsNV( params->n, params->programs );
     return STATUS_SUCCESS;
 }
 
@@ -17176,7 +17176,7 @@ static NTSTATUS ext_glResetHistogram( void *args )
 {
     struct glResetHistogram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glResetHistogram( params->target );
+    funcs->p_glResetHistogram( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -17184,7 +17184,7 @@ static NTSTATUS ext_glResetHistogramEXT( void *args )
 {
     struct glResetHistogramEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glResetHistogramEXT( params->target );
+    funcs->p_glResetHistogramEXT( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -17192,7 +17192,7 @@ static NTSTATUS ext_glResetMemoryObjectParameterNV( void *args )
 {
     struct glResetMemoryObjectParameterNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glResetMemoryObjectParameterNV( params->memory, params->pname );
+    funcs->p_glResetMemoryObjectParameterNV( params->memory, params->pname );
     return STATUS_SUCCESS;
 }
 
@@ -17200,7 +17200,7 @@ static NTSTATUS ext_glResetMinmax( void *args )
 {
     struct glResetMinmax_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glResetMinmax( params->target );
+    funcs->p_glResetMinmax( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -17208,7 +17208,7 @@ static NTSTATUS ext_glResetMinmaxEXT( void *args )
 {
     struct glResetMinmaxEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glResetMinmaxEXT( params->target );
+    funcs->p_glResetMinmaxEXT( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -17216,7 +17216,7 @@ static NTSTATUS ext_glResizeBuffersMESA( void *args )
 {
     struct glResizeBuffersMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glResizeBuffersMESA();
+    funcs->p_glResizeBuffersMESA();
     return STATUS_SUCCESS;
 }
 
@@ -17224,7 +17224,7 @@ static NTSTATUS ext_glResolveDepthValuesNV( void *args )
 {
     struct glResolveDepthValuesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glResolveDepthValuesNV();
+    funcs->p_glResolveDepthValuesNV();
     return STATUS_SUCCESS;
 }
 
@@ -17232,7 +17232,7 @@ static NTSTATUS ext_glResumeTransformFeedback( void *args )
 {
     struct glResumeTransformFeedback_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glResumeTransformFeedback();
+    funcs->p_glResumeTransformFeedback();
     return STATUS_SUCCESS;
 }
 
@@ -17240,7 +17240,7 @@ static NTSTATUS ext_glResumeTransformFeedbackNV( void *args )
 {
     struct glResumeTransformFeedbackNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glResumeTransformFeedbackNV();
+    funcs->p_glResumeTransformFeedbackNV();
     return STATUS_SUCCESS;
 }
 
@@ -17248,7 +17248,7 @@ static NTSTATUS ext_glRotatexOES( void *args )
 {
     struct glRotatexOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glRotatexOES( params->angle, params->x, params->y, params->z );
+    funcs->p_glRotatexOES( params->angle, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17256,7 +17256,7 @@ static NTSTATUS ext_glSampleCoverage( void *args )
 {
     struct glSampleCoverage_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSampleCoverage( params->value, params->invert );
+    funcs->p_glSampleCoverage( params->value, params->invert );
     return STATUS_SUCCESS;
 }
 
@@ -17264,7 +17264,7 @@ static NTSTATUS ext_glSampleCoverageARB( void *args )
 {
     struct glSampleCoverageARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSampleCoverageARB( params->value, params->invert );
+    funcs->p_glSampleCoverageARB( params->value, params->invert );
     return STATUS_SUCCESS;
 }
 
@@ -17272,7 +17272,7 @@ static NTSTATUS ext_glSampleMapATI( void *args )
 {
     struct glSampleMapATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSampleMapATI( params->dst, params->interp, params->swizzle );
+    funcs->p_glSampleMapATI( params->dst, params->interp, params->swizzle );
     return STATUS_SUCCESS;
 }
 
@@ -17280,7 +17280,7 @@ static NTSTATUS ext_glSampleMaskEXT( void *args )
 {
     struct glSampleMaskEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSampleMaskEXT( params->value, params->invert );
+    funcs->p_glSampleMaskEXT( params->value, params->invert );
     return STATUS_SUCCESS;
 }
 
@@ -17288,7 +17288,7 @@ static NTSTATUS ext_glSampleMaskIndexedNV( void *args )
 {
     struct glSampleMaskIndexedNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSampleMaskIndexedNV( params->index, params->mask );
+    funcs->p_glSampleMaskIndexedNV( params->index, params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -17296,7 +17296,7 @@ static NTSTATUS ext_glSampleMaskSGIS( void *args )
 {
     struct glSampleMaskSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSampleMaskSGIS( params->value, params->invert );
+    funcs->p_glSampleMaskSGIS( params->value, params->invert );
     return STATUS_SUCCESS;
 }
 
@@ -17304,7 +17304,7 @@ static NTSTATUS ext_glSampleMaski( void *args )
 {
     struct glSampleMaski_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSampleMaski( params->maskNumber, params->mask );
+    funcs->p_glSampleMaski( params->maskNumber, params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -17312,7 +17312,7 @@ static NTSTATUS ext_glSamplePatternEXT( void *args )
 {
     struct glSamplePatternEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSamplePatternEXT( params->pattern );
+    funcs->p_glSamplePatternEXT( params->pattern );
     return STATUS_SUCCESS;
 }
 
@@ -17320,7 +17320,7 @@ static NTSTATUS ext_glSamplePatternSGIS( void *args )
 {
     struct glSamplePatternSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSamplePatternSGIS( params->pattern );
+    funcs->p_glSamplePatternSGIS( params->pattern );
     return STATUS_SUCCESS;
 }
 
@@ -17328,7 +17328,7 @@ static NTSTATUS ext_glSamplerParameterIiv( void *args )
 {
     struct glSamplerParameterIiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSamplerParameterIiv( params->sampler, params->pname, params->param );
+    funcs->p_glSamplerParameterIiv( params->sampler, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -17336,7 +17336,7 @@ static NTSTATUS ext_glSamplerParameterIuiv( void *args )
 {
     struct glSamplerParameterIuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSamplerParameterIuiv( params->sampler, params->pname, params->param );
+    funcs->p_glSamplerParameterIuiv( params->sampler, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -17344,7 +17344,7 @@ static NTSTATUS ext_glSamplerParameterf( void *args )
 {
     struct glSamplerParameterf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSamplerParameterf( params->sampler, params->pname, params->param );
+    funcs->p_glSamplerParameterf( params->sampler, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -17352,7 +17352,7 @@ static NTSTATUS ext_glSamplerParameterfv( void *args )
 {
     struct glSamplerParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSamplerParameterfv( params->sampler, params->pname, params->param );
+    funcs->p_glSamplerParameterfv( params->sampler, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -17360,7 +17360,7 @@ static NTSTATUS ext_glSamplerParameteri( void *args )
 {
     struct glSamplerParameteri_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSamplerParameteri( params->sampler, params->pname, params->param );
+    funcs->p_glSamplerParameteri( params->sampler, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -17368,7 +17368,7 @@ static NTSTATUS ext_glSamplerParameteriv( void *args )
 {
     struct glSamplerParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSamplerParameteriv( params->sampler, params->pname, params->param );
+    funcs->p_glSamplerParameteriv( params->sampler, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -17376,7 +17376,7 @@ static NTSTATUS ext_glScalexOES( void *args )
 {
     struct glScalexOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glScalexOES( params->x, params->y, params->z );
+    funcs->p_glScalexOES( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -17384,7 +17384,7 @@ static NTSTATUS ext_glScissorArrayv( void *args )
 {
     struct glScissorArrayv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glScissorArrayv( params->first, params->count, params->v );
+    funcs->p_glScissorArrayv( params->first, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17392,7 +17392,7 @@ static NTSTATUS ext_glScissorExclusiveArrayvNV( void *args )
 {
     struct glScissorExclusiveArrayvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glScissorExclusiveArrayvNV( params->first, params->count, params->v );
+    funcs->p_glScissorExclusiveArrayvNV( params->first, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17400,7 +17400,7 @@ static NTSTATUS ext_glScissorExclusiveNV( void *args )
 {
     struct glScissorExclusiveNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glScissorExclusiveNV( params->x, params->y, params->width, params->height );
+    funcs->p_glScissorExclusiveNV( params->x, params->y, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -17408,7 +17408,7 @@ static NTSTATUS ext_glScissorIndexed( void *args )
 {
     struct glScissorIndexed_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glScissorIndexed( params->index, params->left, params->bottom, params->width, params->height );
+    funcs->p_glScissorIndexed( params->index, params->left, params->bottom, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -17416,7 +17416,7 @@ static NTSTATUS ext_glScissorIndexedv( void *args )
 {
     struct glScissorIndexedv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glScissorIndexedv( params->index, params->v );
+    funcs->p_glScissorIndexedv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17424,7 +17424,7 @@ static NTSTATUS ext_glSecondaryColor3b( void *args )
 {
     struct glSecondaryColor3b_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3b( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3b( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17432,7 +17432,7 @@ static NTSTATUS ext_glSecondaryColor3bEXT( void *args )
 {
     struct glSecondaryColor3bEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3bEXT( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3bEXT( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17440,7 +17440,7 @@ static NTSTATUS ext_glSecondaryColor3bv( void *args )
 {
     struct glSecondaryColor3bv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3bv( params->v );
+    funcs->p_glSecondaryColor3bv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17448,7 +17448,7 @@ static NTSTATUS ext_glSecondaryColor3bvEXT( void *args )
 {
     struct glSecondaryColor3bvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3bvEXT( params->v );
+    funcs->p_glSecondaryColor3bvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17456,7 +17456,7 @@ static NTSTATUS ext_glSecondaryColor3d( void *args )
 {
     struct glSecondaryColor3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3d( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3d( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17464,7 +17464,7 @@ static NTSTATUS ext_glSecondaryColor3dEXT( void *args )
 {
     struct glSecondaryColor3dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3dEXT( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3dEXT( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17472,7 +17472,7 @@ static NTSTATUS ext_glSecondaryColor3dv( void *args )
 {
     struct glSecondaryColor3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3dv( params->v );
+    funcs->p_glSecondaryColor3dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17480,7 +17480,7 @@ static NTSTATUS ext_glSecondaryColor3dvEXT( void *args )
 {
     struct glSecondaryColor3dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3dvEXT( params->v );
+    funcs->p_glSecondaryColor3dvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17488,7 +17488,7 @@ static NTSTATUS ext_glSecondaryColor3f( void *args )
 {
     struct glSecondaryColor3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3f( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3f( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17496,7 +17496,7 @@ static NTSTATUS ext_glSecondaryColor3fEXT( void *args )
 {
     struct glSecondaryColor3fEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3fEXT( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3fEXT( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17504,7 +17504,7 @@ static NTSTATUS ext_glSecondaryColor3fv( void *args )
 {
     struct glSecondaryColor3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3fv( params->v );
+    funcs->p_glSecondaryColor3fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17512,7 +17512,7 @@ static NTSTATUS ext_glSecondaryColor3fvEXT( void *args )
 {
     struct glSecondaryColor3fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3fvEXT( params->v );
+    funcs->p_glSecondaryColor3fvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17520,7 +17520,7 @@ static NTSTATUS ext_glSecondaryColor3hNV( void *args )
 {
     struct glSecondaryColor3hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3hNV( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3hNV( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17528,7 +17528,7 @@ static NTSTATUS ext_glSecondaryColor3hvNV( void *args )
 {
     struct glSecondaryColor3hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3hvNV( params->v );
+    funcs->p_glSecondaryColor3hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17536,7 +17536,7 @@ static NTSTATUS ext_glSecondaryColor3i( void *args )
 {
     struct glSecondaryColor3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3i( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3i( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17544,7 +17544,7 @@ static NTSTATUS ext_glSecondaryColor3iEXT( void *args )
 {
     struct glSecondaryColor3iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3iEXT( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3iEXT( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17552,7 +17552,7 @@ static NTSTATUS ext_glSecondaryColor3iv( void *args )
 {
     struct glSecondaryColor3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3iv( params->v );
+    funcs->p_glSecondaryColor3iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17560,7 +17560,7 @@ static NTSTATUS ext_glSecondaryColor3ivEXT( void *args )
 {
     struct glSecondaryColor3ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3ivEXT( params->v );
+    funcs->p_glSecondaryColor3ivEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17568,7 +17568,7 @@ static NTSTATUS ext_glSecondaryColor3s( void *args )
 {
     struct glSecondaryColor3s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3s( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3s( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17576,7 +17576,7 @@ static NTSTATUS ext_glSecondaryColor3sEXT( void *args )
 {
     struct glSecondaryColor3sEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3sEXT( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3sEXT( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17584,7 +17584,7 @@ static NTSTATUS ext_glSecondaryColor3sv( void *args )
 {
     struct glSecondaryColor3sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3sv( params->v );
+    funcs->p_glSecondaryColor3sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17592,7 +17592,7 @@ static NTSTATUS ext_glSecondaryColor3svEXT( void *args )
 {
     struct glSecondaryColor3svEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3svEXT( params->v );
+    funcs->p_glSecondaryColor3svEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17600,7 +17600,7 @@ static NTSTATUS ext_glSecondaryColor3ub( void *args )
 {
     struct glSecondaryColor3ub_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3ub( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3ub( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17608,7 +17608,7 @@ static NTSTATUS ext_glSecondaryColor3ubEXT( void *args )
 {
     struct glSecondaryColor3ubEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3ubEXT( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3ubEXT( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17616,7 +17616,7 @@ static NTSTATUS ext_glSecondaryColor3ubv( void *args )
 {
     struct glSecondaryColor3ubv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3ubv( params->v );
+    funcs->p_glSecondaryColor3ubv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17624,7 +17624,7 @@ static NTSTATUS ext_glSecondaryColor3ubvEXT( void *args )
 {
     struct glSecondaryColor3ubvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3ubvEXT( params->v );
+    funcs->p_glSecondaryColor3ubvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17632,7 +17632,7 @@ static NTSTATUS ext_glSecondaryColor3ui( void *args )
 {
     struct glSecondaryColor3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3ui( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3ui( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17640,7 +17640,7 @@ static NTSTATUS ext_glSecondaryColor3uiEXT( void *args )
 {
     struct glSecondaryColor3uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3uiEXT( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3uiEXT( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17648,7 +17648,7 @@ static NTSTATUS ext_glSecondaryColor3uiv( void *args )
 {
     struct glSecondaryColor3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3uiv( params->v );
+    funcs->p_glSecondaryColor3uiv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17656,7 +17656,7 @@ static NTSTATUS ext_glSecondaryColor3uivEXT( void *args )
 {
     struct glSecondaryColor3uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3uivEXT( params->v );
+    funcs->p_glSecondaryColor3uivEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17664,7 +17664,7 @@ static NTSTATUS ext_glSecondaryColor3us( void *args )
 {
     struct glSecondaryColor3us_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3us( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3us( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17672,7 +17672,7 @@ static NTSTATUS ext_glSecondaryColor3usEXT( void *args )
 {
     struct glSecondaryColor3usEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3usEXT( params->red, params->green, params->blue );
+    funcs->p_glSecondaryColor3usEXT( params->red, params->green, params->blue );
     return STATUS_SUCCESS;
 }
 
@@ -17680,7 +17680,7 @@ static NTSTATUS ext_glSecondaryColor3usv( void *args )
 {
     struct glSecondaryColor3usv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3usv( params->v );
+    funcs->p_glSecondaryColor3usv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17688,7 +17688,7 @@ static NTSTATUS ext_glSecondaryColor3usvEXT( void *args )
 {
     struct glSecondaryColor3usvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColor3usvEXT( params->v );
+    funcs->p_glSecondaryColor3usvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -17696,7 +17696,7 @@ static NTSTATUS ext_glSecondaryColorFormatNV( void *args )
 {
     struct glSecondaryColorFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColorFormatNV( params->size, params->type, params->stride );
+    funcs->p_glSecondaryColorFormatNV( params->size, params->type, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -17704,7 +17704,7 @@ static NTSTATUS ext_glSecondaryColorP3ui( void *args )
 {
     struct glSecondaryColorP3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColorP3ui( params->type, params->color );
+    funcs->p_glSecondaryColorP3ui( params->type, params->color );
     return STATUS_SUCCESS;
 }
 
@@ -17712,7 +17712,7 @@ static NTSTATUS ext_glSecondaryColorP3uiv( void *args )
 {
     struct glSecondaryColorP3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColorP3uiv( params->type, params->color );
+    funcs->p_glSecondaryColorP3uiv( params->type, params->color );
     return STATUS_SUCCESS;
 }
 
@@ -17720,7 +17720,7 @@ static NTSTATUS ext_glSecondaryColorPointer( void *args )
 {
     struct glSecondaryColorPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColorPointer( params->size, params->type, params->stride, params->pointer );
+    funcs->p_glSecondaryColorPointer( params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -17728,7 +17728,7 @@ static NTSTATUS ext_glSecondaryColorPointerEXT( void *args )
 {
     struct glSecondaryColorPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColorPointerEXT( params->size, params->type, params->stride, params->pointer );
+    funcs->p_glSecondaryColorPointerEXT( params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -17736,7 +17736,7 @@ static NTSTATUS ext_glSecondaryColorPointerListIBM( void *args )
 {
     struct glSecondaryColorPointerListIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSecondaryColorPointerListIBM( params->size, params->type, params->stride, params->pointer, params->ptrstride );
+    funcs->p_glSecondaryColorPointerListIBM( params->size, params->type, params->stride, params->pointer, params->ptrstride );
     return STATUS_SUCCESS;
 }
 
@@ -17744,7 +17744,7 @@ static NTSTATUS ext_glSelectPerfMonitorCountersAMD( void *args )
 {
     struct glSelectPerfMonitorCountersAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSelectPerfMonitorCountersAMD( params->monitor, params->enable, params->group, params->numCounters, params->counterList );
+    funcs->p_glSelectPerfMonitorCountersAMD( params->monitor, params->enable, params->group, params->numCounters, params->counterList );
     return STATUS_SUCCESS;
 }
 
@@ -17752,7 +17752,7 @@ static NTSTATUS ext_glSelectTextureCoordSetSGIS( void *args )
 {
     struct glSelectTextureCoordSetSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSelectTextureCoordSetSGIS( params->target );
+    funcs->p_glSelectTextureCoordSetSGIS( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -17760,7 +17760,7 @@ static NTSTATUS ext_glSelectTextureSGIS( void *args )
 {
     struct glSelectTextureSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSelectTextureSGIS( params->target );
+    funcs->p_glSelectTextureSGIS( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -17768,7 +17768,7 @@ static NTSTATUS ext_glSemaphoreParameterui64vEXT( void *args )
 {
     struct glSemaphoreParameterui64vEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSemaphoreParameterui64vEXT( params->semaphore, params->pname, params->params );
+    funcs->p_glSemaphoreParameterui64vEXT( params->semaphore, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -17776,7 +17776,7 @@ static NTSTATUS ext_glSeparableFilter2D( void *args )
 {
     struct glSeparableFilter2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSeparableFilter2D( params->target, params->internalformat, params->width, params->height, params->format, params->type, params->row, params->column );
+    funcs->p_glSeparableFilter2D( params->target, params->internalformat, params->width, params->height, params->format, params->type, params->row, params->column );
     return STATUS_SUCCESS;
 }
 
@@ -17784,7 +17784,7 @@ static NTSTATUS ext_glSeparableFilter2DEXT( void *args )
 {
     struct glSeparableFilter2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSeparableFilter2DEXT( params->target, params->internalformat, params->width, params->height, params->format, params->type, params->row, params->column );
+    funcs->p_glSeparableFilter2DEXT( params->target, params->internalformat, params->width, params->height, params->format, params->type, params->row, params->column );
     return STATUS_SUCCESS;
 }
 
@@ -17792,7 +17792,7 @@ static NTSTATUS ext_glSetFenceAPPLE( void *args )
 {
     struct glSetFenceAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSetFenceAPPLE( params->fence );
+    funcs->p_glSetFenceAPPLE( params->fence );
     return STATUS_SUCCESS;
 }
 
@@ -17800,7 +17800,7 @@ static NTSTATUS ext_glSetFenceNV( void *args )
 {
     struct glSetFenceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSetFenceNV( params->fence, params->condition );
+    funcs->p_glSetFenceNV( params->fence, params->condition );
     return STATUS_SUCCESS;
 }
 
@@ -17808,7 +17808,7 @@ static NTSTATUS ext_glSetFragmentShaderConstantATI( void *args )
 {
     struct glSetFragmentShaderConstantATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSetFragmentShaderConstantATI( params->dst, params->value );
+    funcs->p_glSetFragmentShaderConstantATI( params->dst, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -17816,7 +17816,7 @@ static NTSTATUS ext_glSetInvariantEXT( void *args )
 {
     struct glSetInvariantEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSetInvariantEXT( params->id, params->type, params->addr );
+    funcs->p_glSetInvariantEXT( params->id, params->type, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -17824,7 +17824,7 @@ static NTSTATUS ext_glSetLocalConstantEXT( void *args )
 {
     struct glSetLocalConstantEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSetLocalConstantEXT( params->id, params->type, params->addr );
+    funcs->p_glSetLocalConstantEXT( params->id, params->type, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -17832,7 +17832,7 @@ static NTSTATUS ext_glSetMultisamplefvAMD( void *args )
 {
     struct glSetMultisamplefvAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSetMultisamplefvAMD( params->pname, params->index, params->val );
+    funcs->p_glSetMultisamplefvAMD( params->pname, params->index, params->val );
     return STATUS_SUCCESS;
 }
 
@@ -17840,7 +17840,7 @@ static NTSTATUS ext_glShaderBinary( void *args )
 {
     struct glShaderBinary_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShaderBinary( params->count, params->shaders, params->binaryformat, params->binary, params->length );
+    funcs->p_glShaderBinary( params->count, params->shaders, params->binaryformat, params->binary, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -17848,7 +17848,7 @@ static NTSTATUS ext_glShaderOp1EXT( void *args )
 {
     struct glShaderOp1EXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShaderOp1EXT( params->op, params->res, params->arg1 );
+    funcs->p_glShaderOp1EXT( params->op, params->res, params->arg1 );
     return STATUS_SUCCESS;
 }
 
@@ -17856,7 +17856,7 @@ static NTSTATUS ext_glShaderOp2EXT( void *args )
 {
     struct glShaderOp2EXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShaderOp2EXT( params->op, params->res, params->arg1, params->arg2 );
+    funcs->p_glShaderOp2EXT( params->op, params->res, params->arg1, params->arg2 );
     return STATUS_SUCCESS;
 }
 
@@ -17864,7 +17864,7 @@ static NTSTATUS ext_glShaderOp3EXT( void *args )
 {
     struct glShaderOp3EXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShaderOp3EXT( params->op, params->res, params->arg1, params->arg2, params->arg3 );
+    funcs->p_glShaderOp3EXT( params->op, params->res, params->arg1, params->arg2, params->arg3 );
     return STATUS_SUCCESS;
 }
 
@@ -17872,7 +17872,7 @@ static NTSTATUS ext_glShaderSource( void *args )
 {
     struct glShaderSource_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShaderSource( params->shader, params->count, params->string, params->length );
+    funcs->p_glShaderSource( params->shader, params->count, params->string, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -17880,7 +17880,7 @@ static NTSTATUS ext_glShaderSourceARB( void *args )
 {
     struct glShaderSourceARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShaderSourceARB( params->shaderObj, params->count, params->string, params->length );
+    funcs->p_glShaderSourceARB( params->shaderObj, params->count, params->string, params->length );
     return STATUS_SUCCESS;
 }
 
@@ -17888,7 +17888,7 @@ static NTSTATUS ext_glShaderStorageBlockBinding( void *args )
 {
     struct glShaderStorageBlockBinding_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShaderStorageBlockBinding( params->program, params->storageBlockIndex, params->storageBlockBinding );
+    funcs->p_glShaderStorageBlockBinding( params->program, params->storageBlockIndex, params->storageBlockBinding );
     return STATUS_SUCCESS;
 }
 
@@ -17896,7 +17896,7 @@ static NTSTATUS ext_glShadingRateImageBarrierNV( void *args )
 {
     struct glShadingRateImageBarrierNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShadingRateImageBarrierNV( params->synchronize );
+    funcs->p_glShadingRateImageBarrierNV( params->synchronize );
     return STATUS_SUCCESS;
 }
 
@@ -17904,7 +17904,7 @@ static NTSTATUS ext_glShadingRateImagePaletteNV( void *args )
 {
     struct glShadingRateImagePaletteNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShadingRateImagePaletteNV( params->viewport, params->first, params->count, params->rates );
+    funcs->p_glShadingRateImagePaletteNV( params->viewport, params->first, params->count, params->rates );
     return STATUS_SUCCESS;
 }
 
@@ -17912,7 +17912,7 @@ static NTSTATUS ext_glShadingRateSampleOrderCustomNV( void *args )
 {
     struct glShadingRateSampleOrderCustomNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShadingRateSampleOrderCustomNV( params->rate, params->samples, params->locations );
+    funcs->p_glShadingRateSampleOrderCustomNV( params->rate, params->samples, params->locations );
     return STATUS_SUCCESS;
 }
 
@@ -17920,7 +17920,7 @@ static NTSTATUS ext_glShadingRateSampleOrderNV( void *args )
 {
     struct glShadingRateSampleOrderNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glShadingRateSampleOrderNV( params->order );
+    funcs->p_glShadingRateSampleOrderNV( params->order );
     return STATUS_SUCCESS;
 }
 
@@ -17928,7 +17928,7 @@ static NTSTATUS ext_glSharpenTexFuncSGIS( void *args )
 {
     struct glSharpenTexFuncSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSharpenTexFuncSGIS( params->target, params->n, params->points );
+    funcs->p_glSharpenTexFuncSGIS( params->target, params->n, params->points );
     return STATUS_SUCCESS;
 }
 
@@ -17936,7 +17936,7 @@ static NTSTATUS ext_glSignalSemaphoreEXT( void *args )
 {
     struct glSignalSemaphoreEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSignalSemaphoreEXT( params->semaphore, params->numBufferBarriers, params->buffers, params->numTextureBarriers, params->textures, params->dstLayouts );
+    funcs->p_glSignalSemaphoreEXT( params->semaphore, params->numBufferBarriers, params->buffers, params->numTextureBarriers, params->textures, params->dstLayouts );
     return STATUS_SUCCESS;
 }
 
@@ -17944,7 +17944,7 @@ static NTSTATUS ext_glSignalSemaphoreui64NVX( void *args )
 {
     struct glSignalSemaphoreui64NVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSignalSemaphoreui64NVX( params->signalGpu, params->fenceObjectCount, params->semaphoreArray, params->fenceValueArray );
+    funcs->p_glSignalSemaphoreui64NVX( params->signalGpu, params->fenceObjectCount, params->semaphoreArray, params->fenceValueArray );
     return STATUS_SUCCESS;
 }
 
@@ -17952,7 +17952,7 @@ static NTSTATUS ext_glSignalVkFenceNV( void *args )
 {
     struct glSignalVkFenceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSignalVkFenceNV( params->vkFence );
+    funcs->p_glSignalVkFenceNV( params->vkFence );
     return STATUS_SUCCESS;
 }
 
@@ -17960,7 +17960,7 @@ static NTSTATUS ext_glSignalVkSemaphoreNV( void *args )
 {
     struct glSignalVkSemaphoreNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSignalVkSemaphoreNV( params->vkSemaphore );
+    funcs->p_glSignalVkSemaphoreNV( params->vkSemaphore );
     return STATUS_SUCCESS;
 }
 
@@ -17968,7 +17968,7 @@ static NTSTATUS ext_glSpecializeShader( void *args )
 {
     struct glSpecializeShader_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSpecializeShader( params->shader, params->pEntryPoint, params->numSpecializationConstants, params->pConstantIndex, params->pConstantValue );
+    funcs->p_glSpecializeShader( params->shader, params->pEntryPoint, params->numSpecializationConstants, params->pConstantIndex, params->pConstantValue );
     return STATUS_SUCCESS;
 }
 
@@ -17976,7 +17976,7 @@ static NTSTATUS ext_glSpecializeShaderARB( void *args )
 {
     struct glSpecializeShaderARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSpecializeShaderARB( params->shader, params->pEntryPoint, params->numSpecializationConstants, params->pConstantIndex, params->pConstantValue );
+    funcs->p_glSpecializeShaderARB( params->shader, params->pEntryPoint, params->numSpecializationConstants, params->pConstantIndex, params->pConstantValue );
     return STATUS_SUCCESS;
 }
 
@@ -17984,7 +17984,7 @@ static NTSTATUS ext_glSpriteParameterfSGIX( void *args )
 {
     struct glSpriteParameterfSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSpriteParameterfSGIX( params->pname, params->param );
+    funcs->p_glSpriteParameterfSGIX( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -17992,7 +17992,7 @@ static NTSTATUS ext_glSpriteParameterfvSGIX( void *args )
 {
     struct glSpriteParameterfvSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSpriteParameterfvSGIX( params->pname, params->params );
+    funcs->p_glSpriteParameterfvSGIX( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -18000,7 +18000,7 @@ static NTSTATUS ext_glSpriteParameteriSGIX( void *args )
 {
     struct glSpriteParameteriSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSpriteParameteriSGIX( params->pname, params->param );
+    funcs->p_glSpriteParameteriSGIX( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -18008,7 +18008,7 @@ static NTSTATUS ext_glSpriteParameterivSGIX( void *args )
 {
     struct glSpriteParameterivSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSpriteParameterivSGIX( params->pname, params->params );
+    funcs->p_glSpriteParameterivSGIX( params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -18016,7 +18016,7 @@ static NTSTATUS ext_glStartInstrumentsSGIX( void *args )
 {
     struct glStartInstrumentsSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStartInstrumentsSGIX();
+    funcs->p_glStartInstrumentsSGIX();
     return STATUS_SUCCESS;
 }
 
@@ -18024,7 +18024,7 @@ static NTSTATUS ext_glStateCaptureNV( void *args )
 {
     struct glStateCaptureNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStateCaptureNV( params->state, params->mode );
+    funcs->p_glStateCaptureNV( params->state, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -18032,7 +18032,7 @@ static NTSTATUS ext_glStencilClearTagEXT( void *args )
 {
     struct glStencilClearTagEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilClearTagEXT( params->stencilTagBits, params->stencilClearTag );
+    funcs->p_glStencilClearTagEXT( params->stencilTagBits, params->stencilClearTag );
     return STATUS_SUCCESS;
 }
 
@@ -18040,7 +18040,7 @@ static NTSTATUS ext_glStencilFillPathInstancedNV( void *args )
 {
     struct glStencilFillPathInstancedNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilFillPathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->fillMode, params->mask, params->transformType, params->transformValues );
+    funcs->p_glStencilFillPathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->fillMode, params->mask, params->transformType, params->transformValues );
     return STATUS_SUCCESS;
 }
 
@@ -18048,7 +18048,7 @@ static NTSTATUS ext_glStencilFillPathNV( void *args )
 {
     struct glStencilFillPathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilFillPathNV( params->path, params->fillMode, params->mask );
+    funcs->p_glStencilFillPathNV( params->path, params->fillMode, params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -18056,7 +18056,7 @@ static NTSTATUS ext_glStencilFuncSeparate( void *args )
 {
     struct glStencilFuncSeparate_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilFuncSeparate( params->face, params->func, params->ref, params->mask );
+    funcs->p_glStencilFuncSeparate( params->face, params->func, params->ref, params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -18064,7 +18064,7 @@ static NTSTATUS ext_glStencilFuncSeparateATI( void *args )
 {
     struct glStencilFuncSeparateATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilFuncSeparateATI( params->frontfunc, params->backfunc, params->ref, params->mask );
+    funcs->p_glStencilFuncSeparateATI( params->frontfunc, params->backfunc, params->ref, params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -18072,7 +18072,7 @@ static NTSTATUS ext_glStencilMaskSeparate( void *args )
 {
     struct glStencilMaskSeparate_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilMaskSeparate( params->face, params->mask );
+    funcs->p_glStencilMaskSeparate( params->face, params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -18080,7 +18080,7 @@ static NTSTATUS ext_glStencilOpSeparate( void *args )
 {
     struct glStencilOpSeparate_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilOpSeparate( params->face, params->sfail, params->dpfail, params->dppass );
+    funcs->p_glStencilOpSeparate( params->face, params->sfail, params->dpfail, params->dppass );
     return STATUS_SUCCESS;
 }
 
@@ -18088,7 +18088,7 @@ static NTSTATUS ext_glStencilOpSeparateATI( void *args )
 {
     struct glStencilOpSeparateATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilOpSeparateATI( params->face, params->sfail, params->dpfail, params->dppass );
+    funcs->p_glStencilOpSeparateATI( params->face, params->sfail, params->dpfail, params->dppass );
     return STATUS_SUCCESS;
 }
 
@@ -18096,7 +18096,7 @@ static NTSTATUS ext_glStencilOpValueAMD( void *args )
 {
     struct glStencilOpValueAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilOpValueAMD( params->face, params->value );
+    funcs->p_glStencilOpValueAMD( params->face, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -18104,7 +18104,7 @@ static NTSTATUS ext_glStencilStrokePathInstancedNV( void *args )
 {
     struct glStencilStrokePathInstancedNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilStrokePathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->reference, params->mask, params->transformType, params->transformValues );
+    funcs->p_glStencilStrokePathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->reference, params->mask, params->transformType, params->transformValues );
     return STATUS_SUCCESS;
 }
 
@@ -18112,7 +18112,7 @@ static NTSTATUS ext_glStencilStrokePathNV( void *args )
 {
     struct glStencilStrokePathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilStrokePathNV( params->path, params->reference, params->mask );
+    funcs->p_glStencilStrokePathNV( params->path, params->reference, params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -18120,7 +18120,7 @@ static NTSTATUS ext_glStencilThenCoverFillPathInstancedNV( void *args )
 {
     struct glStencilThenCoverFillPathInstancedNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilThenCoverFillPathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->fillMode, params->mask, params->coverMode, params->transformType, params->transformValues );
+    funcs->p_glStencilThenCoverFillPathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->fillMode, params->mask, params->coverMode, params->transformType, params->transformValues );
     return STATUS_SUCCESS;
 }
 
@@ -18128,7 +18128,7 @@ static NTSTATUS ext_glStencilThenCoverFillPathNV( void *args )
 {
     struct glStencilThenCoverFillPathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilThenCoverFillPathNV( params->path, params->fillMode, params->mask, params->coverMode );
+    funcs->p_glStencilThenCoverFillPathNV( params->path, params->fillMode, params->mask, params->coverMode );
     return STATUS_SUCCESS;
 }
 
@@ -18136,7 +18136,7 @@ static NTSTATUS ext_glStencilThenCoverStrokePathInstancedNV( void *args )
 {
     struct glStencilThenCoverStrokePathInstancedNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilThenCoverStrokePathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->reference, params->mask, params->coverMode, params->transformType, params->transformValues );
+    funcs->p_glStencilThenCoverStrokePathInstancedNV( params->numPaths, params->pathNameType, params->paths, params->pathBase, params->reference, params->mask, params->coverMode, params->transformType, params->transformValues );
     return STATUS_SUCCESS;
 }
 
@@ -18144,7 +18144,7 @@ static NTSTATUS ext_glStencilThenCoverStrokePathNV( void *args )
 {
     struct glStencilThenCoverStrokePathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStencilThenCoverStrokePathNV( params->path, params->reference, params->mask, params->coverMode );
+    funcs->p_glStencilThenCoverStrokePathNV( params->path, params->reference, params->mask, params->coverMode );
     return STATUS_SUCCESS;
 }
 
@@ -18152,7 +18152,7 @@ static NTSTATUS ext_glStopInstrumentsSGIX( void *args )
 {
     struct glStopInstrumentsSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStopInstrumentsSGIX( params->marker );
+    funcs->p_glStopInstrumentsSGIX( params->marker );
     return STATUS_SUCCESS;
 }
 
@@ -18160,7 +18160,7 @@ static NTSTATUS ext_glStringMarkerGREMEDY( void *args )
 {
     struct glStringMarkerGREMEDY_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glStringMarkerGREMEDY( params->len, params->string );
+    funcs->p_glStringMarkerGREMEDY( params->len, params->string );
     return STATUS_SUCCESS;
 }
 
@@ -18168,7 +18168,7 @@ static NTSTATUS ext_glSubpixelPrecisionBiasNV( void *args )
 {
     struct glSubpixelPrecisionBiasNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSubpixelPrecisionBiasNV( params->xbits, params->ybits );
+    funcs->p_glSubpixelPrecisionBiasNV( params->xbits, params->ybits );
     return STATUS_SUCCESS;
 }
 
@@ -18176,7 +18176,7 @@ static NTSTATUS ext_glSwizzleEXT( void *args )
 {
     struct glSwizzleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSwizzleEXT( params->res, params->in, params->outX, params->outY, params->outZ, params->outW );
+    funcs->p_glSwizzleEXT( params->res, params->in, params->outX, params->outY, params->outZ, params->outW );
     return STATUS_SUCCESS;
 }
 
@@ -18184,7 +18184,7 @@ static NTSTATUS ext_glSyncTextureINTEL( void *args )
 {
     struct glSyncTextureINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glSyncTextureINTEL( params->texture );
+    funcs->p_glSyncTextureINTEL( params->texture );
     return STATUS_SUCCESS;
 }
 
@@ -18192,7 +18192,7 @@ static NTSTATUS ext_glTagSampleBufferSGIX( void *args )
 {
     struct glTagSampleBufferSGIX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTagSampleBufferSGIX();
+    funcs->p_glTagSampleBufferSGIX();
     return STATUS_SUCCESS;
 }
 
@@ -18200,7 +18200,7 @@ static NTSTATUS ext_glTangent3bEXT( void *args )
 {
     struct glTangent3bEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3bEXT( params->tx, params->ty, params->tz );
+    funcs->p_glTangent3bEXT( params->tx, params->ty, params->tz );
     return STATUS_SUCCESS;
 }
 
@@ -18208,7 +18208,7 @@ static NTSTATUS ext_glTangent3bvEXT( void *args )
 {
     struct glTangent3bvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3bvEXT( params->v );
+    funcs->p_glTangent3bvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18216,7 +18216,7 @@ static NTSTATUS ext_glTangent3dEXT( void *args )
 {
     struct glTangent3dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3dEXT( params->tx, params->ty, params->tz );
+    funcs->p_glTangent3dEXT( params->tx, params->ty, params->tz );
     return STATUS_SUCCESS;
 }
 
@@ -18224,7 +18224,7 @@ static NTSTATUS ext_glTangent3dvEXT( void *args )
 {
     struct glTangent3dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3dvEXT( params->v );
+    funcs->p_glTangent3dvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18232,7 +18232,7 @@ static NTSTATUS ext_glTangent3fEXT( void *args )
 {
     struct glTangent3fEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3fEXT( params->tx, params->ty, params->tz );
+    funcs->p_glTangent3fEXT( params->tx, params->ty, params->tz );
     return STATUS_SUCCESS;
 }
 
@@ -18240,7 +18240,7 @@ static NTSTATUS ext_glTangent3fvEXT( void *args )
 {
     struct glTangent3fvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3fvEXT( params->v );
+    funcs->p_glTangent3fvEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18248,7 +18248,7 @@ static NTSTATUS ext_glTangent3iEXT( void *args )
 {
     struct glTangent3iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3iEXT( params->tx, params->ty, params->tz );
+    funcs->p_glTangent3iEXT( params->tx, params->ty, params->tz );
     return STATUS_SUCCESS;
 }
 
@@ -18256,7 +18256,7 @@ static NTSTATUS ext_glTangent3ivEXT( void *args )
 {
     struct glTangent3ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3ivEXT( params->v );
+    funcs->p_glTangent3ivEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18264,7 +18264,7 @@ static NTSTATUS ext_glTangent3sEXT( void *args )
 {
     struct glTangent3sEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3sEXT( params->tx, params->ty, params->tz );
+    funcs->p_glTangent3sEXT( params->tx, params->ty, params->tz );
     return STATUS_SUCCESS;
 }
 
@@ -18272,7 +18272,7 @@ static NTSTATUS ext_glTangent3svEXT( void *args )
 {
     struct glTangent3svEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangent3svEXT( params->v );
+    funcs->p_glTangent3svEXT( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18280,7 +18280,7 @@ static NTSTATUS ext_glTangentPointerEXT( void *args )
 {
     struct glTangentPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTangentPointerEXT( params->type, params->stride, params->pointer );
+    funcs->p_glTangentPointerEXT( params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -18288,7 +18288,7 @@ static NTSTATUS ext_glTbufferMask3DFX( void *args )
 {
     struct glTbufferMask3DFX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTbufferMask3DFX( params->mask );
+    funcs->p_glTbufferMask3DFX( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -18296,7 +18296,7 @@ static NTSTATUS ext_glTessellationFactorAMD( void *args )
 {
     struct glTessellationFactorAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTessellationFactorAMD( params->factor );
+    funcs->p_glTessellationFactorAMD( params->factor );
     return STATUS_SUCCESS;
 }
 
@@ -18304,7 +18304,7 @@ static NTSTATUS ext_glTessellationModeAMD( void *args )
 {
     struct glTessellationModeAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTessellationModeAMD( params->mode );
+    funcs->p_glTessellationModeAMD( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -18312,7 +18312,7 @@ static NTSTATUS ext_glTestFenceAPPLE( void *args )
 {
     struct glTestFenceAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glTestFenceAPPLE( params->fence );
+    params->ret = funcs->p_glTestFenceAPPLE( params->fence );
     return STATUS_SUCCESS;
 }
 
@@ -18320,7 +18320,7 @@ static NTSTATUS ext_glTestFenceNV( void *args )
 {
     struct glTestFenceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glTestFenceNV( params->fence );
+    params->ret = funcs->p_glTestFenceNV( params->fence );
     return STATUS_SUCCESS;
 }
 
@@ -18328,7 +18328,7 @@ static NTSTATUS ext_glTestObjectAPPLE( void *args )
 {
     struct glTestObjectAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glTestObjectAPPLE( params->object, params->name );
+    params->ret = funcs->p_glTestObjectAPPLE( params->object, params->name );
     return STATUS_SUCCESS;
 }
 
@@ -18336,7 +18336,7 @@ static NTSTATUS ext_glTexAttachMemoryNV( void *args )
 {
     struct glTexAttachMemoryNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexAttachMemoryNV( params->target, params->memory, params->offset );
+    funcs->p_glTexAttachMemoryNV( params->target, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -18344,7 +18344,7 @@ static NTSTATUS ext_glTexBuffer( void *args )
 {
     struct glTexBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexBuffer( params->target, params->internalformat, params->buffer );
+    funcs->p_glTexBuffer( params->target, params->internalformat, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -18352,7 +18352,7 @@ static NTSTATUS ext_glTexBufferARB( void *args )
 {
     struct glTexBufferARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexBufferARB( params->target, params->internalformat, params->buffer );
+    funcs->p_glTexBufferARB( params->target, params->internalformat, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -18360,7 +18360,7 @@ static NTSTATUS ext_glTexBufferEXT( void *args )
 {
     struct glTexBufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexBufferEXT( params->target, params->internalformat, params->buffer );
+    funcs->p_glTexBufferEXT( params->target, params->internalformat, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -18368,7 +18368,7 @@ static NTSTATUS ext_glTexBufferRange( void *args )
 {
     struct glTexBufferRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexBufferRange( params->target, params->internalformat, params->buffer, params->offset, params->size );
+    funcs->p_glTexBufferRange( params->target, params->internalformat, params->buffer, params->offset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -18376,7 +18376,7 @@ static NTSTATUS ext_glTexBumpParameterfvATI( void *args )
 {
     struct glTexBumpParameterfvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexBumpParameterfvATI( params->pname, params->param );
+    funcs->p_glTexBumpParameterfvATI( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -18384,7 +18384,7 @@ static NTSTATUS ext_glTexBumpParameterivATI( void *args )
 {
     struct glTexBumpParameterivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexBumpParameterivATI( params->pname, params->param );
+    funcs->p_glTexBumpParameterivATI( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -18392,7 +18392,7 @@ static NTSTATUS ext_glTexCoord1bOES( void *args )
 {
     struct glTexCoord1bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord1bOES( params->s );
+    funcs->p_glTexCoord1bOES( params->s );
     return STATUS_SUCCESS;
 }
 
@@ -18400,7 +18400,7 @@ static NTSTATUS ext_glTexCoord1bvOES( void *args )
 {
     struct glTexCoord1bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord1bvOES( params->coords );
+    funcs->p_glTexCoord1bvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18408,7 +18408,7 @@ static NTSTATUS ext_glTexCoord1hNV( void *args )
 {
     struct glTexCoord1hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord1hNV( params->s );
+    funcs->p_glTexCoord1hNV( params->s );
     return STATUS_SUCCESS;
 }
 
@@ -18416,7 +18416,7 @@ static NTSTATUS ext_glTexCoord1hvNV( void *args )
 {
     struct glTexCoord1hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord1hvNV( params->v );
+    funcs->p_glTexCoord1hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18424,7 +18424,7 @@ static NTSTATUS ext_glTexCoord1xOES( void *args )
 {
     struct glTexCoord1xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord1xOES( params->s );
+    funcs->p_glTexCoord1xOES( params->s );
     return STATUS_SUCCESS;
 }
 
@@ -18432,7 +18432,7 @@ static NTSTATUS ext_glTexCoord1xvOES( void *args )
 {
     struct glTexCoord1xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord1xvOES( params->coords );
+    funcs->p_glTexCoord1xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18440,7 +18440,7 @@ static NTSTATUS ext_glTexCoord2bOES( void *args )
 {
     struct glTexCoord2bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2bOES( params->s, params->t );
+    funcs->p_glTexCoord2bOES( params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -18448,7 +18448,7 @@ static NTSTATUS ext_glTexCoord2bvOES( void *args )
 {
     struct glTexCoord2bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2bvOES( params->coords );
+    funcs->p_glTexCoord2bvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18456,7 +18456,7 @@ static NTSTATUS ext_glTexCoord2fColor3fVertex3fSUN( void *args )
 {
     struct glTexCoord2fColor3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fColor3fVertex3fSUN( params->s, params->t, params->r, params->g, params->b, params->x, params->y, params->z );
+    funcs->p_glTexCoord2fColor3fVertex3fSUN( params->s, params->t, params->r, params->g, params->b, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -18464,7 +18464,7 @@ static NTSTATUS ext_glTexCoord2fColor3fVertex3fvSUN( void *args )
 {
     struct glTexCoord2fColor3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fColor3fVertex3fvSUN( params->tc, params->c, params->v );
+    funcs->p_glTexCoord2fColor3fVertex3fvSUN( params->tc, params->c, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18472,7 +18472,7 @@ static NTSTATUS ext_glTexCoord2fColor4fNormal3fVertex3fSUN( void *args )
 {
     struct glTexCoord2fColor4fNormal3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fColor4fNormal3fVertex3fSUN( params->s, params->t, params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z );
+    funcs->p_glTexCoord2fColor4fNormal3fVertex3fSUN( params->s, params->t, params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -18480,7 +18480,7 @@ static NTSTATUS ext_glTexCoord2fColor4fNormal3fVertex3fvSUN( void *args )
 {
     struct glTexCoord2fColor4fNormal3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fColor4fNormal3fVertex3fvSUN( params->tc, params->c, params->n, params->v );
+    funcs->p_glTexCoord2fColor4fNormal3fVertex3fvSUN( params->tc, params->c, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18488,7 +18488,7 @@ static NTSTATUS ext_glTexCoord2fColor4ubVertex3fSUN( void *args )
 {
     struct glTexCoord2fColor4ubVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fColor4ubVertex3fSUN( params->s, params->t, params->r, params->g, params->b, params->a, params->x, params->y, params->z );
+    funcs->p_glTexCoord2fColor4ubVertex3fSUN( params->s, params->t, params->r, params->g, params->b, params->a, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -18496,7 +18496,7 @@ static NTSTATUS ext_glTexCoord2fColor4ubVertex3fvSUN( void *args )
 {
     struct glTexCoord2fColor4ubVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fColor4ubVertex3fvSUN( params->tc, params->c, params->v );
+    funcs->p_glTexCoord2fColor4ubVertex3fvSUN( params->tc, params->c, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18504,7 +18504,7 @@ static NTSTATUS ext_glTexCoord2fNormal3fVertex3fSUN( void *args )
 {
     struct glTexCoord2fNormal3fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fNormal3fVertex3fSUN( params->s, params->t, params->nx, params->ny, params->nz, params->x, params->y, params->z );
+    funcs->p_glTexCoord2fNormal3fVertex3fSUN( params->s, params->t, params->nx, params->ny, params->nz, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -18512,7 +18512,7 @@ static NTSTATUS ext_glTexCoord2fNormal3fVertex3fvSUN( void *args )
 {
     struct glTexCoord2fNormal3fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fNormal3fVertex3fvSUN( params->tc, params->n, params->v );
+    funcs->p_glTexCoord2fNormal3fVertex3fvSUN( params->tc, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18520,7 +18520,7 @@ static NTSTATUS ext_glTexCoord2fVertex3fSUN( void *args )
 {
     struct glTexCoord2fVertex3fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fVertex3fSUN( params->s, params->t, params->x, params->y, params->z );
+    funcs->p_glTexCoord2fVertex3fSUN( params->s, params->t, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -18528,7 +18528,7 @@ static NTSTATUS ext_glTexCoord2fVertex3fvSUN( void *args )
 {
     struct glTexCoord2fVertex3fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2fVertex3fvSUN( params->tc, params->v );
+    funcs->p_glTexCoord2fVertex3fvSUN( params->tc, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18536,7 +18536,7 @@ static NTSTATUS ext_glTexCoord2hNV( void *args )
 {
     struct glTexCoord2hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2hNV( params->s, params->t );
+    funcs->p_glTexCoord2hNV( params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -18544,7 +18544,7 @@ static NTSTATUS ext_glTexCoord2hvNV( void *args )
 {
     struct glTexCoord2hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2hvNV( params->v );
+    funcs->p_glTexCoord2hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18552,7 +18552,7 @@ static NTSTATUS ext_glTexCoord2xOES( void *args )
 {
     struct glTexCoord2xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2xOES( params->s, params->t );
+    funcs->p_glTexCoord2xOES( params->s, params->t );
     return STATUS_SUCCESS;
 }
 
@@ -18560,7 +18560,7 @@ static NTSTATUS ext_glTexCoord2xvOES( void *args )
 {
     struct glTexCoord2xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord2xvOES( params->coords );
+    funcs->p_glTexCoord2xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18568,7 +18568,7 @@ static NTSTATUS ext_glTexCoord3bOES( void *args )
 {
     struct glTexCoord3bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord3bOES( params->s, params->t, params->r );
+    funcs->p_glTexCoord3bOES( params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -18576,7 +18576,7 @@ static NTSTATUS ext_glTexCoord3bvOES( void *args )
 {
     struct glTexCoord3bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord3bvOES( params->coords );
+    funcs->p_glTexCoord3bvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18584,7 +18584,7 @@ static NTSTATUS ext_glTexCoord3hNV( void *args )
 {
     struct glTexCoord3hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord3hNV( params->s, params->t, params->r );
+    funcs->p_glTexCoord3hNV( params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -18592,7 +18592,7 @@ static NTSTATUS ext_glTexCoord3hvNV( void *args )
 {
     struct glTexCoord3hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord3hvNV( params->v );
+    funcs->p_glTexCoord3hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18600,7 +18600,7 @@ static NTSTATUS ext_glTexCoord3xOES( void *args )
 {
     struct glTexCoord3xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord3xOES( params->s, params->t, params->r );
+    funcs->p_glTexCoord3xOES( params->s, params->t, params->r );
     return STATUS_SUCCESS;
 }
 
@@ -18608,7 +18608,7 @@ static NTSTATUS ext_glTexCoord3xvOES( void *args )
 {
     struct glTexCoord3xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord3xvOES( params->coords );
+    funcs->p_glTexCoord3xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18616,7 +18616,7 @@ static NTSTATUS ext_glTexCoord4bOES( void *args )
 {
     struct glTexCoord4bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4bOES( params->s, params->t, params->r, params->q );
+    funcs->p_glTexCoord4bOES( params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -18624,7 +18624,7 @@ static NTSTATUS ext_glTexCoord4bvOES( void *args )
 {
     struct glTexCoord4bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4bvOES( params->coords );
+    funcs->p_glTexCoord4bvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18632,7 +18632,7 @@ static NTSTATUS ext_glTexCoord4fColor4fNormal3fVertex4fSUN( void *args )
 {
     struct glTexCoord4fColor4fNormal3fVertex4fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4fColor4fNormal3fVertex4fSUN( params->s, params->t, params->p, params->q, params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z, params->w );
+    funcs->p_glTexCoord4fColor4fNormal3fVertex4fSUN( params->s, params->t, params->p, params->q, params->r, params->g, params->b, params->a, params->nx, params->ny, params->nz, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -18640,7 +18640,7 @@ static NTSTATUS ext_glTexCoord4fColor4fNormal3fVertex4fvSUN( void *args )
 {
     struct glTexCoord4fColor4fNormal3fVertex4fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4fColor4fNormal3fVertex4fvSUN( params->tc, params->c, params->n, params->v );
+    funcs->p_glTexCoord4fColor4fNormal3fVertex4fvSUN( params->tc, params->c, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18648,7 +18648,7 @@ static NTSTATUS ext_glTexCoord4fVertex4fSUN( void *args )
 {
     struct glTexCoord4fVertex4fSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4fVertex4fSUN( params->s, params->t, params->p, params->q, params->x, params->y, params->z, params->w );
+    funcs->p_glTexCoord4fVertex4fSUN( params->s, params->t, params->p, params->q, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -18656,7 +18656,7 @@ static NTSTATUS ext_glTexCoord4fVertex4fvSUN( void *args )
 {
     struct glTexCoord4fVertex4fvSUN_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4fVertex4fvSUN( params->tc, params->v );
+    funcs->p_glTexCoord4fVertex4fvSUN( params->tc, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18664,7 +18664,7 @@ static NTSTATUS ext_glTexCoord4hNV( void *args )
 {
     struct glTexCoord4hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4hNV( params->s, params->t, params->r, params->q );
+    funcs->p_glTexCoord4hNV( params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -18672,7 +18672,7 @@ static NTSTATUS ext_glTexCoord4hvNV( void *args )
 {
     struct glTexCoord4hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4hvNV( params->v );
+    funcs->p_glTexCoord4hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -18680,7 +18680,7 @@ static NTSTATUS ext_glTexCoord4xOES( void *args )
 {
     struct glTexCoord4xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4xOES( params->s, params->t, params->r, params->q );
+    funcs->p_glTexCoord4xOES( params->s, params->t, params->r, params->q );
     return STATUS_SUCCESS;
 }
 
@@ -18688,7 +18688,7 @@ static NTSTATUS ext_glTexCoord4xvOES( void *args )
 {
     struct glTexCoord4xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoord4xvOES( params->coords );
+    funcs->p_glTexCoord4xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18696,7 +18696,7 @@ static NTSTATUS ext_glTexCoordFormatNV( void *args )
 {
     struct glTexCoordFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordFormatNV( params->size, params->type, params->stride );
+    funcs->p_glTexCoordFormatNV( params->size, params->type, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -18704,7 +18704,7 @@ static NTSTATUS ext_glTexCoordP1ui( void *args )
 {
     struct glTexCoordP1ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordP1ui( params->type, params->coords );
+    funcs->p_glTexCoordP1ui( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18712,7 +18712,7 @@ static NTSTATUS ext_glTexCoordP1uiv( void *args )
 {
     struct glTexCoordP1uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordP1uiv( params->type, params->coords );
+    funcs->p_glTexCoordP1uiv( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18720,7 +18720,7 @@ static NTSTATUS ext_glTexCoordP2ui( void *args )
 {
     struct glTexCoordP2ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordP2ui( params->type, params->coords );
+    funcs->p_glTexCoordP2ui( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18728,7 +18728,7 @@ static NTSTATUS ext_glTexCoordP2uiv( void *args )
 {
     struct glTexCoordP2uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordP2uiv( params->type, params->coords );
+    funcs->p_glTexCoordP2uiv( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18736,7 +18736,7 @@ static NTSTATUS ext_glTexCoordP3ui( void *args )
 {
     struct glTexCoordP3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordP3ui( params->type, params->coords );
+    funcs->p_glTexCoordP3ui( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18744,7 +18744,7 @@ static NTSTATUS ext_glTexCoordP3uiv( void *args )
 {
     struct glTexCoordP3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordP3uiv( params->type, params->coords );
+    funcs->p_glTexCoordP3uiv( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18752,7 +18752,7 @@ static NTSTATUS ext_glTexCoordP4ui( void *args )
 {
     struct glTexCoordP4ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordP4ui( params->type, params->coords );
+    funcs->p_glTexCoordP4ui( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18760,7 +18760,7 @@ static NTSTATUS ext_glTexCoordP4uiv( void *args )
 {
     struct glTexCoordP4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordP4uiv( params->type, params->coords );
+    funcs->p_glTexCoordP4uiv( params->type, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -18768,7 +18768,7 @@ static NTSTATUS ext_glTexCoordPointerEXT( void *args )
 {
     struct glTexCoordPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordPointerEXT( params->size, params->type, params->stride, params->count, params->pointer );
+    funcs->p_glTexCoordPointerEXT( params->size, params->type, params->stride, params->count, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -18776,7 +18776,7 @@ static NTSTATUS ext_glTexCoordPointerListIBM( void *args )
 {
     struct glTexCoordPointerListIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordPointerListIBM( params->size, params->type, params->stride, params->pointer, params->ptrstride );
+    funcs->p_glTexCoordPointerListIBM( params->size, params->type, params->stride, params->pointer, params->ptrstride );
     return STATUS_SUCCESS;
 }
 
@@ -18784,7 +18784,7 @@ static NTSTATUS ext_glTexCoordPointervINTEL( void *args )
 {
     struct glTexCoordPointervINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexCoordPointervINTEL( params->size, params->type, params->pointer );
+    funcs->p_glTexCoordPointervINTEL( params->size, params->type, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -18792,7 +18792,7 @@ static NTSTATUS ext_glTexEnvxOES( void *args )
 {
     struct glTexEnvxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexEnvxOES( params->target, params->pname, params->param );
+    funcs->p_glTexEnvxOES( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -18800,7 +18800,7 @@ static NTSTATUS ext_glTexEnvxvOES( void *args )
 {
     struct glTexEnvxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexEnvxvOES( params->target, params->pname, params->params );
+    funcs->p_glTexEnvxvOES( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -18808,7 +18808,7 @@ static NTSTATUS ext_glTexFilterFuncSGIS( void *args )
 {
     struct glTexFilterFuncSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexFilterFuncSGIS( params->target, params->filter, params->n, params->weights );
+    funcs->p_glTexFilterFuncSGIS( params->target, params->filter, params->n, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -18816,7 +18816,7 @@ static NTSTATUS ext_glTexGenxOES( void *args )
 {
     struct glTexGenxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexGenxOES( params->coord, params->pname, params->param );
+    funcs->p_glTexGenxOES( params->coord, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -18824,7 +18824,7 @@ static NTSTATUS ext_glTexGenxvOES( void *args )
 {
     struct glTexGenxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexGenxvOES( params->coord, params->pname, params->params );
+    funcs->p_glTexGenxvOES( params->coord, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -18832,7 +18832,7 @@ static NTSTATUS ext_glTexImage2DMultisample( void *args )
 {
     struct glTexImage2DMultisample_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexImage2DMultisample( params->target, params->samples, params->internalformat, params->width, params->height, params->fixedsamplelocations );
+    funcs->p_glTexImage2DMultisample( params->target, params->samples, params->internalformat, params->width, params->height, params->fixedsamplelocations );
     return STATUS_SUCCESS;
 }
 
@@ -18840,7 +18840,7 @@ static NTSTATUS ext_glTexImage2DMultisampleCoverageNV( void *args )
 {
     struct glTexImage2DMultisampleCoverageNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexImage2DMultisampleCoverageNV( params->target, params->coverageSamples, params->colorSamples, params->internalFormat, params->width, params->height, params->fixedSampleLocations );
+    funcs->p_glTexImage2DMultisampleCoverageNV( params->target, params->coverageSamples, params->colorSamples, params->internalFormat, params->width, params->height, params->fixedSampleLocations );
     return STATUS_SUCCESS;
 }
 
@@ -18848,7 +18848,7 @@ static NTSTATUS ext_glTexImage3D( void *args )
 {
     struct glTexImage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexImage3D( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->format, params->type, params->pixels );
+    funcs->p_glTexImage3D( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -18856,7 +18856,7 @@ static NTSTATUS ext_glTexImage3DEXT( void *args )
 {
     struct glTexImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexImage3DEXT( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->format, params->type, params->pixels );
+    funcs->p_glTexImage3DEXT( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -18864,7 +18864,7 @@ static NTSTATUS ext_glTexImage3DMultisample( void *args )
 {
     struct glTexImage3DMultisample_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexImage3DMultisample( params->target, params->samples, params->internalformat, params->width, params->height, params->depth, params->fixedsamplelocations );
+    funcs->p_glTexImage3DMultisample( params->target, params->samples, params->internalformat, params->width, params->height, params->depth, params->fixedsamplelocations );
     return STATUS_SUCCESS;
 }
 
@@ -18872,7 +18872,7 @@ static NTSTATUS ext_glTexImage3DMultisampleCoverageNV( void *args )
 {
     struct glTexImage3DMultisampleCoverageNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexImage3DMultisampleCoverageNV( params->target, params->coverageSamples, params->colorSamples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations );
+    funcs->p_glTexImage3DMultisampleCoverageNV( params->target, params->coverageSamples, params->colorSamples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations );
     return STATUS_SUCCESS;
 }
 
@@ -18880,7 +18880,7 @@ static NTSTATUS ext_glTexImage4DSGIS( void *args )
 {
     struct glTexImage4DSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexImage4DSGIS( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->size4d, params->border, params->format, params->type, params->pixels );
+    funcs->p_glTexImage4DSGIS( params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->size4d, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -18888,7 +18888,7 @@ static NTSTATUS ext_glTexPageCommitmentARB( void *args )
 {
     struct glTexPageCommitmentARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexPageCommitmentARB( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->commit );
+    funcs->p_glTexPageCommitmentARB( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->commit );
     return STATUS_SUCCESS;
 }
 
@@ -18896,7 +18896,7 @@ static NTSTATUS ext_glTexParameterIiv( void *args )
 {
     struct glTexParameterIiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexParameterIiv( params->target, params->pname, params->params );
+    funcs->p_glTexParameterIiv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -18904,7 +18904,7 @@ static NTSTATUS ext_glTexParameterIivEXT( void *args )
 {
     struct glTexParameterIivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexParameterIivEXT( params->target, params->pname, params->params );
+    funcs->p_glTexParameterIivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -18912,7 +18912,7 @@ static NTSTATUS ext_glTexParameterIuiv( void *args )
 {
     struct glTexParameterIuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexParameterIuiv( params->target, params->pname, params->params );
+    funcs->p_glTexParameterIuiv( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -18920,7 +18920,7 @@ static NTSTATUS ext_glTexParameterIuivEXT( void *args )
 {
     struct glTexParameterIuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexParameterIuivEXT( params->target, params->pname, params->params );
+    funcs->p_glTexParameterIuivEXT( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -18928,7 +18928,7 @@ static NTSTATUS ext_glTexParameterxOES( void *args )
 {
     struct glTexParameterxOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexParameterxOES( params->target, params->pname, params->param );
+    funcs->p_glTexParameterxOES( params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -18936,7 +18936,7 @@ static NTSTATUS ext_glTexParameterxvOES( void *args )
 {
     struct glTexParameterxvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexParameterxvOES( params->target, params->pname, params->params );
+    funcs->p_glTexParameterxvOES( params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -18944,7 +18944,7 @@ static NTSTATUS ext_glTexRenderbufferNV( void *args )
 {
     struct glTexRenderbufferNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexRenderbufferNV( params->target, params->renderbuffer );
+    funcs->p_glTexRenderbufferNV( params->target, params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -18952,7 +18952,7 @@ static NTSTATUS ext_glTexStorage1D( void *args )
 {
     struct glTexStorage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorage1D( params->target, params->levels, params->internalformat, params->width );
+    funcs->p_glTexStorage1D( params->target, params->levels, params->internalformat, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -18960,7 +18960,7 @@ static NTSTATUS ext_glTexStorage2D( void *args )
 {
     struct glTexStorage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorage2D( params->target, params->levels, params->internalformat, params->width, params->height );
+    funcs->p_glTexStorage2D( params->target, params->levels, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -18968,7 +18968,7 @@ static NTSTATUS ext_glTexStorage2DMultisample( void *args )
 {
     struct glTexStorage2DMultisample_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorage2DMultisample( params->target, params->samples, params->internalformat, params->width, params->height, params->fixedsamplelocations );
+    funcs->p_glTexStorage2DMultisample( params->target, params->samples, params->internalformat, params->width, params->height, params->fixedsamplelocations );
     return STATUS_SUCCESS;
 }
 
@@ -18976,7 +18976,7 @@ static NTSTATUS ext_glTexStorage3D( void *args )
 {
     struct glTexStorage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorage3D( params->target, params->levels, params->internalformat, params->width, params->height, params->depth );
+    funcs->p_glTexStorage3D( params->target, params->levels, params->internalformat, params->width, params->height, params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -18984,7 +18984,7 @@ static NTSTATUS ext_glTexStorage3DMultisample( void *args )
 {
     struct glTexStorage3DMultisample_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorage3DMultisample( params->target, params->samples, params->internalformat, params->width, params->height, params->depth, params->fixedsamplelocations );
+    funcs->p_glTexStorage3DMultisample( params->target, params->samples, params->internalformat, params->width, params->height, params->depth, params->fixedsamplelocations );
     return STATUS_SUCCESS;
 }
 
@@ -18992,7 +18992,7 @@ static NTSTATUS ext_glTexStorageMem1DEXT( void *args )
 {
     struct glTexStorageMem1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorageMem1DEXT( params->target, params->levels, params->internalFormat, params->width, params->memory, params->offset );
+    funcs->p_glTexStorageMem1DEXT( params->target, params->levels, params->internalFormat, params->width, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19000,7 +19000,7 @@ static NTSTATUS ext_glTexStorageMem2DEXT( void *args )
 {
     struct glTexStorageMem2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorageMem2DEXT( params->target, params->levels, params->internalFormat, params->width, params->height, params->memory, params->offset );
+    funcs->p_glTexStorageMem2DEXT( params->target, params->levels, params->internalFormat, params->width, params->height, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19008,7 +19008,7 @@ static NTSTATUS ext_glTexStorageMem2DMultisampleEXT( void *args )
 {
     struct glTexStorageMem2DMultisampleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorageMem2DMultisampleEXT( params->target, params->samples, params->internalFormat, params->width, params->height, params->fixedSampleLocations, params->memory, params->offset );
+    funcs->p_glTexStorageMem2DMultisampleEXT( params->target, params->samples, params->internalFormat, params->width, params->height, params->fixedSampleLocations, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19016,7 +19016,7 @@ static NTSTATUS ext_glTexStorageMem3DEXT( void *args )
 {
     struct glTexStorageMem3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorageMem3DEXT( params->target, params->levels, params->internalFormat, params->width, params->height, params->depth, params->memory, params->offset );
+    funcs->p_glTexStorageMem3DEXT( params->target, params->levels, params->internalFormat, params->width, params->height, params->depth, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19024,7 +19024,7 @@ static NTSTATUS ext_glTexStorageMem3DMultisampleEXT( void *args )
 {
     struct glTexStorageMem3DMultisampleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorageMem3DMultisampleEXT( params->target, params->samples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations, params->memory, params->offset );
+    funcs->p_glTexStorageMem3DMultisampleEXT( params->target, params->samples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19032,7 +19032,7 @@ static NTSTATUS ext_glTexStorageSparseAMD( void *args )
 {
     struct glTexStorageSparseAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexStorageSparseAMD( params->target, params->internalFormat, params->width, params->height, params->depth, params->layers, params->flags );
+    funcs->p_glTexStorageSparseAMD( params->target, params->internalFormat, params->width, params->height, params->depth, params->layers, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -19040,7 +19040,7 @@ static NTSTATUS ext_glTexSubImage1DEXT( void *args )
 {
     struct glTexSubImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexSubImage1DEXT( params->target, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
+    funcs->p_glTexSubImage1DEXT( params->target, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19048,7 +19048,7 @@ static NTSTATUS ext_glTexSubImage2DEXT( void *args )
 {
     struct glTexSubImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexSubImage2DEXT( params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
+    funcs->p_glTexSubImage2DEXT( params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19056,7 +19056,7 @@ static NTSTATUS ext_glTexSubImage3D( void *args )
 {
     struct glTexSubImage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexSubImage3D( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
+    funcs->p_glTexSubImage3D( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19064,7 +19064,7 @@ static NTSTATUS ext_glTexSubImage3DEXT( void *args )
 {
     struct glTexSubImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexSubImage3DEXT( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
+    funcs->p_glTexSubImage3DEXT( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19072,7 +19072,7 @@ static NTSTATUS ext_glTexSubImage4DSGIS( void *args )
 {
     struct glTexSubImage4DSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexSubImage4DSGIS( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->woffset, params->width, params->height, params->depth, params->size4d, params->format, params->type, params->pixels );
+    funcs->p_glTexSubImage4DSGIS( params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->woffset, params->width, params->height, params->depth, params->size4d, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19080,7 +19080,7 @@ static NTSTATUS ext_glTextureAttachMemoryNV( void *args )
 {
     struct glTextureAttachMemoryNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureAttachMemoryNV( params->texture, params->memory, params->offset );
+    funcs->p_glTextureAttachMemoryNV( params->texture, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19088,7 +19088,7 @@ static NTSTATUS ext_glTextureBarrier( void *args )
 {
     struct glTextureBarrier_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureBarrier();
+    funcs->p_glTextureBarrier();
     return STATUS_SUCCESS;
 }
 
@@ -19096,7 +19096,7 @@ static NTSTATUS ext_glTextureBarrierNV( void *args )
 {
     struct glTextureBarrierNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureBarrierNV();
+    funcs->p_glTextureBarrierNV();
     return STATUS_SUCCESS;
 }
 
@@ -19104,7 +19104,7 @@ static NTSTATUS ext_glTextureBuffer( void *args )
 {
     struct glTextureBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureBuffer( params->texture, params->internalformat, params->buffer );
+    funcs->p_glTextureBuffer( params->texture, params->internalformat, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -19112,7 +19112,7 @@ static NTSTATUS ext_glTextureBufferEXT( void *args )
 {
     struct glTextureBufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureBufferEXT( params->texture, params->target, params->internalformat, params->buffer );
+    funcs->p_glTextureBufferEXT( params->texture, params->target, params->internalformat, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -19120,7 +19120,7 @@ static NTSTATUS ext_glTextureBufferRange( void *args )
 {
     struct glTextureBufferRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureBufferRange( params->texture, params->internalformat, params->buffer, params->offset, params->size );
+    funcs->p_glTextureBufferRange( params->texture, params->internalformat, params->buffer, params->offset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -19128,7 +19128,7 @@ static NTSTATUS ext_glTextureBufferRangeEXT( void *args )
 {
     struct glTextureBufferRangeEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureBufferRangeEXT( params->texture, params->target, params->internalformat, params->buffer, params->offset, params->size );
+    funcs->p_glTextureBufferRangeEXT( params->texture, params->target, params->internalformat, params->buffer, params->offset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -19136,7 +19136,7 @@ static NTSTATUS ext_glTextureColorMaskSGIS( void *args )
 {
     struct glTextureColorMaskSGIS_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureColorMaskSGIS( params->red, params->green, params->blue, params->alpha );
+    funcs->p_glTextureColorMaskSGIS( params->red, params->green, params->blue, params->alpha );
     return STATUS_SUCCESS;
 }
 
@@ -19144,7 +19144,7 @@ static NTSTATUS ext_glTextureImage1DEXT( void *args )
 {
     struct glTextureImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureImage1DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->border, params->format, params->type, params->pixels );
+    funcs->p_glTextureImage1DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19152,7 +19152,7 @@ static NTSTATUS ext_glTextureImage2DEXT( void *args )
 {
     struct glTextureImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureImage2DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->height, params->border, params->format, params->type, params->pixels );
+    funcs->p_glTextureImage2DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->height, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19160,7 +19160,7 @@ static NTSTATUS ext_glTextureImage2DMultisampleCoverageNV( void *args )
 {
     struct glTextureImage2DMultisampleCoverageNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureImage2DMultisampleCoverageNV( params->texture, params->target, params->coverageSamples, params->colorSamples, params->internalFormat, params->width, params->height, params->fixedSampleLocations );
+    funcs->p_glTextureImage2DMultisampleCoverageNV( params->texture, params->target, params->coverageSamples, params->colorSamples, params->internalFormat, params->width, params->height, params->fixedSampleLocations );
     return STATUS_SUCCESS;
 }
 
@@ -19168,7 +19168,7 @@ static NTSTATUS ext_glTextureImage2DMultisampleNV( void *args )
 {
     struct glTextureImage2DMultisampleNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureImage2DMultisampleNV( params->texture, params->target, params->samples, params->internalFormat, params->width, params->height, params->fixedSampleLocations );
+    funcs->p_glTextureImage2DMultisampleNV( params->texture, params->target, params->samples, params->internalFormat, params->width, params->height, params->fixedSampleLocations );
     return STATUS_SUCCESS;
 }
 
@@ -19176,7 +19176,7 @@ static NTSTATUS ext_glTextureImage3DEXT( void *args )
 {
     struct glTextureImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureImage3DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->format, params->type, params->pixels );
+    funcs->p_glTextureImage3DEXT( params->texture, params->target, params->level, params->internalformat, params->width, params->height, params->depth, params->border, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19184,7 +19184,7 @@ static NTSTATUS ext_glTextureImage3DMultisampleCoverageNV( void *args )
 {
     struct glTextureImage3DMultisampleCoverageNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureImage3DMultisampleCoverageNV( params->texture, params->target, params->coverageSamples, params->colorSamples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations );
+    funcs->p_glTextureImage3DMultisampleCoverageNV( params->texture, params->target, params->coverageSamples, params->colorSamples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations );
     return STATUS_SUCCESS;
 }
 
@@ -19192,7 +19192,7 @@ static NTSTATUS ext_glTextureImage3DMultisampleNV( void *args )
 {
     struct glTextureImage3DMultisampleNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureImage3DMultisampleNV( params->texture, params->target, params->samples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations );
+    funcs->p_glTextureImage3DMultisampleNV( params->texture, params->target, params->samples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations );
     return STATUS_SUCCESS;
 }
 
@@ -19200,7 +19200,7 @@ static NTSTATUS ext_glTextureLightEXT( void *args )
 {
     struct glTextureLightEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureLightEXT( params->pname );
+    funcs->p_glTextureLightEXT( params->pname );
     return STATUS_SUCCESS;
 }
 
@@ -19208,7 +19208,7 @@ static NTSTATUS ext_glTextureMaterialEXT( void *args )
 {
     struct glTextureMaterialEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureMaterialEXT( params->face, params->mode );
+    funcs->p_glTextureMaterialEXT( params->face, params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -19216,7 +19216,7 @@ static NTSTATUS ext_glTextureNormalEXT( void *args )
 {
     struct glTextureNormalEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureNormalEXT( params->mode );
+    funcs->p_glTextureNormalEXT( params->mode );
     return STATUS_SUCCESS;
 }
 
@@ -19224,7 +19224,7 @@ static NTSTATUS ext_glTexturePageCommitmentEXT( void *args )
 {
     struct glTexturePageCommitmentEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTexturePageCommitmentEXT( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->commit );
+    funcs->p_glTexturePageCommitmentEXT( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->commit );
     return STATUS_SUCCESS;
 }
 
@@ -19232,7 +19232,7 @@ static NTSTATUS ext_glTextureParameterIiv( void *args )
 {
     struct glTextureParameterIiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameterIiv( params->texture, params->pname, params->params );
+    funcs->p_glTextureParameterIiv( params->texture, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -19240,7 +19240,7 @@ static NTSTATUS ext_glTextureParameterIivEXT( void *args )
 {
     struct glTextureParameterIivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameterIivEXT( params->texture, params->target, params->pname, params->params );
+    funcs->p_glTextureParameterIivEXT( params->texture, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -19248,7 +19248,7 @@ static NTSTATUS ext_glTextureParameterIuiv( void *args )
 {
     struct glTextureParameterIuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameterIuiv( params->texture, params->pname, params->params );
+    funcs->p_glTextureParameterIuiv( params->texture, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -19256,7 +19256,7 @@ static NTSTATUS ext_glTextureParameterIuivEXT( void *args )
 {
     struct glTextureParameterIuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameterIuivEXT( params->texture, params->target, params->pname, params->params );
+    funcs->p_glTextureParameterIuivEXT( params->texture, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -19264,7 +19264,7 @@ static NTSTATUS ext_glTextureParameterf( void *args )
 {
     struct glTextureParameterf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameterf( params->texture, params->pname, params->param );
+    funcs->p_glTextureParameterf( params->texture, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -19272,7 +19272,7 @@ static NTSTATUS ext_glTextureParameterfEXT( void *args )
 {
     struct glTextureParameterfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameterfEXT( params->texture, params->target, params->pname, params->param );
+    funcs->p_glTextureParameterfEXT( params->texture, params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -19280,7 +19280,7 @@ static NTSTATUS ext_glTextureParameterfv( void *args )
 {
     struct glTextureParameterfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameterfv( params->texture, params->pname, params->param );
+    funcs->p_glTextureParameterfv( params->texture, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -19288,7 +19288,7 @@ static NTSTATUS ext_glTextureParameterfvEXT( void *args )
 {
     struct glTextureParameterfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameterfvEXT( params->texture, params->target, params->pname, params->params );
+    funcs->p_glTextureParameterfvEXT( params->texture, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -19296,7 +19296,7 @@ static NTSTATUS ext_glTextureParameteri( void *args )
 {
     struct glTextureParameteri_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameteri( params->texture, params->pname, params->param );
+    funcs->p_glTextureParameteri( params->texture, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -19304,7 +19304,7 @@ static NTSTATUS ext_glTextureParameteriEXT( void *args )
 {
     struct glTextureParameteriEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameteriEXT( params->texture, params->target, params->pname, params->param );
+    funcs->p_glTextureParameteriEXT( params->texture, params->target, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -19312,7 +19312,7 @@ static NTSTATUS ext_glTextureParameteriv( void *args )
 {
     struct glTextureParameteriv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameteriv( params->texture, params->pname, params->param );
+    funcs->p_glTextureParameteriv( params->texture, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -19320,7 +19320,7 @@ static NTSTATUS ext_glTextureParameterivEXT( void *args )
 {
     struct glTextureParameterivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureParameterivEXT( params->texture, params->target, params->pname, params->params );
+    funcs->p_glTextureParameterivEXT( params->texture, params->target, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -19328,7 +19328,7 @@ static NTSTATUS ext_glTextureRangeAPPLE( void *args )
 {
     struct glTextureRangeAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureRangeAPPLE( params->target, params->length, params->pointer );
+    funcs->p_glTextureRangeAPPLE( params->target, params->length, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -19336,7 +19336,7 @@ static NTSTATUS ext_glTextureRenderbufferEXT( void *args )
 {
     struct glTextureRenderbufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureRenderbufferEXT( params->texture, params->target, params->renderbuffer );
+    funcs->p_glTextureRenderbufferEXT( params->texture, params->target, params->renderbuffer );
     return STATUS_SUCCESS;
 }
 
@@ -19344,7 +19344,7 @@ static NTSTATUS ext_glTextureStorage1D( void *args )
 {
     struct glTextureStorage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage1D( params->texture, params->levels, params->internalformat, params->width );
+    funcs->p_glTextureStorage1D( params->texture, params->levels, params->internalformat, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -19352,7 +19352,7 @@ static NTSTATUS ext_glTextureStorage1DEXT( void *args )
 {
     struct glTextureStorage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage1DEXT( params->texture, params->target, params->levels, params->internalformat, params->width );
+    funcs->p_glTextureStorage1DEXT( params->texture, params->target, params->levels, params->internalformat, params->width );
     return STATUS_SUCCESS;
 }
 
@@ -19360,7 +19360,7 @@ static NTSTATUS ext_glTextureStorage2D( void *args )
 {
     struct glTextureStorage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage2D( params->texture, params->levels, params->internalformat, params->width, params->height );
+    funcs->p_glTextureStorage2D( params->texture, params->levels, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -19368,7 +19368,7 @@ static NTSTATUS ext_glTextureStorage2DEXT( void *args )
 {
     struct glTextureStorage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage2DEXT( params->texture, params->target, params->levels, params->internalformat, params->width, params->height );
+    funcs->p_glTextureStorage2DEXT( params->texture, params->target, params->levels, params->internalformat, params->width, params->height );
     return STATUS_SUCCESS;
 }
 
@@ -19376,7 +19376,7 @@ static NTSTATUS ext_glTextureStorage2DMultisample( void *args )
 {
     struct glTextureStorage2DMultisample_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage2DMultisample( params->texture, params->samples, params->internalformat, params->width, params->height, params->fixedsamplelocations );
+    funcs->p_glTextureStorage2DMultisample( params->texture, params->samples, params->internalformat, params->width, params->height, params->fixedsamplelocations );
     return STATUS_SUCCESS;
 }
 
@@ -19384,7 +19384,7 @@ static NTSTATUS ext_glTextureStorage2DMultisampleEXT( void *args )
 {
     struct glTextureStorage2DMultisampleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage2DMultisampleEXT( params->texture, params->target, params->samples, params->internalformat, params->width, params->height, params->fixedsamplelocations );
+    funcs->p_glTextureStorage2DMultisampleEXT( params->texture, params->target, params->samples, params->internalformat, params->width, params->height, params->fixedsamplelocations );
     return STATUS_SUCCESS;
 }
 
@@ -19392,7 +19392,7 @@ static NTSTATUS ext_glTextureStorage3D( void *args )
 {
     struct glTextureStorage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage3D( params->texture, params->levels, params->internalformat, params->width, params->height, params->depth );
+    funcs->p_glTextureStorage3D( params->texture, params->levels, params->internalformat, params->width, params->height, params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -19400,7 +19400,7 @@ static NTSTATUS ext_glTextureStorage3DEXT( void *args )
 {
     struct glTextureStorage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage3DEXT( params->texture, params->target, params->levels, params->internalformat, params->width, params->height, params->depth );
+    funcs->p_glTextureStorage3DEXT( params->texture, params->target, params->levels, params->internalformat, params->width, params->height, params->depth );
     return STATUS_SUCCESS;
 }
 
@@ -19408,7 +19408,7 @@ static NTSTATUS ext_glTextureStorage3DMultisample( void *args )
 {
     struct glTextureStorage3DMultisample_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage3DMultisample( params->texture, params->samples, params->internalformat, params->width, params->height, params->depth, params->fixedsamplelocations );
+    funcs->p_glTextureStorage3DMultisample( params->texture, params->samples, params->internalformat, params->width, params->height, params->depth, params->fixedsamplelocations );
     return STATUS_SUCCESS;
 }
 
@@ -19416,7 +19416,7 @@ static NTSTATUS ext_glTextureStorage3DMultisampleEXT( void *args )
 {
     struct glTextureStorage3DMultisampleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorage3DMultisampleEXT( params->texture, params->target, params->samples, params->internalformat, params->width, params->height, params->depth, params->fixedsamplelocations );
+    funcs->p_glTextureStorage3DMultisampleEXT( params->texture, params->target, params->samples, params->internalformat, params->width, params->height, params->depth, params->fixedsamplelocations );
     return STATUS_SUCCESS;
 }
 
@@ -19424,7 +19424,7 @@ static NTSTATUS ext_glTextureStorageMem1DEXT( void *args )
 {
     struct glTextureStorageMem1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorageMem1DEXT( params->texture, params->levels, params->internalFormat, params->width, params->memory, params->offset );
+    funcs->p_glTextureStorageMem1DEXT( params->texture, params->levels, params->internalFormat, params->width, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19432,7 +19432,7 @@ static NTSTATUS ext_glTextureStorageMem2DEXT( void *args )
 {
     struct glTextureStorageMem2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorageMem2DEXT( params->texture, params->levels, params->internalFormat, params->width, params->height, params->memory, params->offset );
+    funcs->p_glTextureStorageMem2DEXT( params->texture, params->levels, params->internalFormat, params->width, params->height, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19440,7 +19440,7 @@ static NTSTATUS ext_glTextureStorageMem2DMultisampleEXT( void *args )
 {
     struct glTextureStorageMem2DMultisampleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorageMem2DMultisampleEXT( params->texture, params->samples, params->internalFormat, params->width, params->height, params->fixedSampleLocations, params->memory, params->offset );
+    funcs->p_glTextureStorageMem2DMultisampleEXT( params->texture, params->samples, params->internalFormat, params->width, params->height, params->fixedSampleLocations, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19448,7 +19448,7 @@ static NTSTATUS ext_glTextureStorageMem3DEXT( void *args )
 {
     struct glTextureStorageMem3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorageMem3DEXT( params->texture, params->levels, params->internalFormat, params->width, params->height, params->depth, params->memory, params->offset );
+    funcs->p_glTextureStorageMem3DEXT( params->texture, params->levels, params->internalFormat, params->width, params->height, params->depth, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19456,7 +19456,7 @@ static NTSTATUS ext_glTextureStorageMem3DMultisampleEXT( void *args )
 {
     struct glTextureStorageMem3DMultisampleEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorageMem3DMultisampleEXT( params->texture, params->samples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations, params->memory, params->offset );
+    funcs->p_glTextureStorageMem3DMultisampleEXT( params->texture, params->samples, params->internalFormat, params->width, params->height, params->depth, params->fixedSampleLocations, params->memory, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -19464,7 +19464,7 @@ static NTSTATUS ext_glTextureStorageSparseAMD( void *args )
 {
     struct glTextureStorageSparseAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureStorageSparseAMD( params->texture, params->target, params->internalFormat, params->width, params->height, params->depth, params->layers, params->flags );
+    funcs->p_glTextureStorageSparseAMD( params->texture, params->target, params->internalFormat, params->width, params->height, params->depth, params->layers, params->flags );
     return STATUS_SUCCESS;
 }
 
@@ -19472,7 +19472,7 @@ static NTSTATUS ext_glTextureSubImage1D( void *args )
 {
     struct glTextureSubImage1D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureSubImage1D( params->texture, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
+    funcs->p_glTextureSubImage1D( params->texture, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19480,7 +19480,7 @@ static NTSTATUS ext_glTextureSubImage1DEXT( void *args )
 {
     struct glTextureSubImage1DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureSubImage1DEXT( params->texture, params->target, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
+    funcs->p_glTextureSubImage1DEXT( params->texture, params->target, params->level, params->xoffset, params->width, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19488,7 +19488,7 @@ static NTSTATUS ext_glTextureSubImage2D( void *args )
 {
     struct glTextureSubImage2D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureSubImage2D( params->texture, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
+    funcs->p_glTextureSubImage2D( params->texture, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19496,7 +19496,7 @@ static NTSTATUS ext_glTextureSubImage2DEXT( void *args )
 {
     struct glTextureSubImage2DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureSubImage2DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
+    funcs->p_glTextureSubImage2DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->width, params->height, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19504,7 +19504,7 @@ static NTSTATUS ext_glTextureSubImage3D( void *args )
 {
     struct glTextureSubImage3D_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureSubImage3D( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
+    funcs->p_glTextureSubImage3D( params->texture, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19512,7 +19512,7 @@ static NTSTATUS ext_glTextureSubImage3DEXT( void *args )
 {
     struct glTextureSubImage3DEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureSubImage3DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
+    funcs->p_glTextureSubImage3DEXT( params->texture, params->target, params->level, params->xoffset, params->yoffset, params->zoffset, params->width, params->height, params->depth, params->format, params->type, params->pixels );
     return STATUS_SUCCESS;
 }
 
@@ -19520,7 +19520,7 @@ static NTSTATUS ext_glTextureView( void *args )
 {
     struct glTextureView_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTextureView( params->texture, params->target, params->origtexture, params->internalformat, params->minlevel, params->numlevels, params->minlayer, params->numlayers );
+    funcs->p_glTextureView( params->texture, params->target, params->origtexture, params->internalformat, params->minlevel, params->numlevels, params->minlayer, params->numlayers );
     return STATUS_SUCCESS;
 }
 
@@ -19528,7 +19528,7 @@ static NTSTATUS ext_glTrackMatrixNV( void *args )
 {
     struct glTrackMatrixNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTrackMatrixNV( params->target, params->address, params->matrix, params->transform );
+    funcs->p_glTrackMatrixNV( params->target, params->address, params->matrix, params->transform );
     return STATUS_SUCCESS;
 }
 
@@ -19536,7 +19536,7 @@ static NTSTATUS ext_glTransformFeedbackAttribsNV( void *args )
 {
     struct glTransformFeedbackAttribsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTransformFeedbackAttribsNV( params->count, params->attribs, params->bufferMode );
+    funcs->p_glTransformFeedbackAttribsNV( params->count, params->attribs, params->bufferMode );
     return STATUS_SUCCESS;
 }
 
@@ -19544,7 +19544,7 @@ static NTSTATUS ext_glTransformFeedbackBufferBase( void *args )
 {
     struct glTransformFeedbackBufferBase_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTransformFeedbackBufferBase( params->xfb, params->index, params->buffer );
+    funcs->p_glTransformFeedbackBufferBase( params->xfb, params->index, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -19552,7 +19552,7 @@ static NTSTATUS ext_glTransformFeedbackBufferRange( void *args )
 {
     struct glTransformFeedbackBufferRange_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTransformFeedbackBufferRange( params->xfb, params->index, params->buffer, params->offset, params->size );
+    funcs->p_glTransformFeedbackBufferRange( params->xfb, params->index, params->buffer, params->offset, params->size );
     return STATUS_SUCCESS;
 }
 
@@ -19560,7 +19560,7 @@ static NTSTATUS ext_glTransformFeedbackStreamAttribsNV( void *args )
 {
     struct glTransformFeedbackStreamAttribsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTransformFeedbackStreamAttribsNV( params->count, params->attribs, params->nbuffers, params->bufstreams, params->bufferMode );
+    funcs->p_glTransformFeedbackStreamAttribsNV( params->count, params->attribs, params->nbuffers, params->bufstreams, params->bufferMode );
     return STATUS_SUCCESS;
 }
 
@@ -19568,7 +19568,7 @@ static NTSTATUS ext_glTransformFeedbackVaryings( void *args )
 {
     struct glTransformFeedbackVaryings_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTransformFeedbackVaryings( params->program, params->count, params->varyings, params->bufferMode );
+    funcs->p_glTransformFeedbackVaryings( params->program, params->count, params->varyings, params->bufferMode );
     return STATUS_SUCCESS;
 }
 
@@ -19576,7 +19576,7 @@ static NTSTATUS ext_glTransformFeedbackVaryingsEXT( void *args )
 {
     struct glTransformFeedbackVaryingsEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTransformFeedbackVaryingsEXT( params->program, params->count, params->varyings, params->bufferMode );
+    funcs->p_glTransformFeedbackVaryingsEXT( params->program, params->count, params->varyings, params->bufferMode );
     return STATUS_SUCCESS;
 }
 
@@ -19584,7 +19584,7 @@ static NTSTATUS ext_glTransformFeedbackVaryingsNV( void *args )
 {
     struct glTransformFeedbackVaryingsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTransformFeedbackVaryingsNV( params->program, params->count, params->locations, params->bufferMode );
+    funcs->p_glTransformFeedbackVaryingsNV( params->program, params->count, params->locations, params->bufferMode );
     return STATUS_SUCCESS;
 }
 
@@ -19592,7 +19592,7 @@ static NTSTATUS ext_glTransformPathNV( void *args )
 {
     struct glTransformPathNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTransformPathNV( params->resultPath, params->srcPath, params->transformType, params->transformValues );
+    funcs->p_glTransformPathNV( params->resultPath, params->srcPath, params->transformType, params->transformValues );
     return STATUS_SUCCESS;
 }
 
@@ -19600,7 +19600,7 @@ static NTSTATUS ext_glTranslatexOES( void *args )
 {
     struct glTranslatexOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glTranslatexOES( params->x, params->y, params->z );
+    funcs->p_glTranslatexOES( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -19608,7 +19608,7 @@ static NTSTATUS ext_glUniform1d( void *args )
 {
     struct glUniform1d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1d( params->location, params->x );
+    funcs->p_glUniform1d( params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -19616,7 +19616,7 @@ static NTSTATUS ext_glUniform1dv( void *args )
 {
     struct glUniform1dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1dv( params->location, params->count, params->value );
+    funcs->p_glUniform1dv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19624,7 +19624,7 @@ static NTSTATUS ext_glUniform1f( void *args )
 {
     struct glUniform1f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1f( params->location, params->v0 );
+    funcs->p_glUniform1f( params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -19632,7 +19632,7 @@ static NTSTATUS ext_glUniform1fARB( void *args )
 {
     struct glUniform1fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1fARB( params->location, params->v0 );
+    funcs->p_glUniform1fARB( params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -19640,7 +19640,7 @@ static NTSTATUS ext_glUniform1fv( void *args )
 {
     struct glUniform1fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1fv( params->location, params->count, params->value );
+    funcs->p_glUniform1fv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19648,7 +19648,7 @@ static NTSTATUS ext_glUniform1fvARB( void *args )
 {
     struct glUniform1fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1fvARB( params->location, params->count, params->value );
+    funcs->p_glUniform1fvARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19656,7 +19656,7 @@ static NTSTATUS ext_glUniform1i( void *args )
 {
     struct glUniform1i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1i( params->location, params->v0 );
+    funcs->p_glUniform1i( params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -19664,7 +19664,7 @@ static NTSTATUS ext_glUniform1i64ARB( void *args )
 {
     struct glUniform1i64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1i64ARB( params->location, params->x );
+    funcs->p_glUniform1i64ARB( params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -19672,7 +19672,7 @@ static NTSTATUS ext_glUniform1i64NV( void *args )
 {
     struct glUniform1i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1i64NV( params->location, params->x );
+    funcs->p_glUniform1i64NV( params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -19680,7 +19680,7 @@ static NTSTATUS ext_glUniform1i64vARB( void *args )
 {
     struct glUniform1i64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1i64vARB( params->location, params->count, params->value );
+    funcs->p_glUniform1i64vARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19688,7 +19688,7 @@ static NTSTATUS ext_glUniform1i64vNV( void *args )
 {
     struct glUniform1i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1i64vNV( params->location, params->count, params->value );
+    funcs->p_glUniform1i64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19696,7 +19696,7 @@ static NTSTATUS ext_glUniform1iARB( void *args )
 {
     struct glUniform1iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1iARB( params->location, params->v0 );
+    funcs->p_glUniform1iARB( params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -19704,7 +19704,7 @@ static NTSTATUS ext_glUniform1iv( void *args )
 {
     struct glUniform1iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1iv( params->location, params->count, params->value );
+    funcs->p_glUniform1iv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19712,7 +19712,7 @@ static NTSTATUS ext_glUniform1ivARB( void *args )
 {
     struct glUniform1ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1ivARB( params->location, params->count, params->value );
+    funcs->p_glUniform1ivARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19720,7 +19720,7 @@ static NTSTATUS ext_glUniform1ui( void *args )
 {
     struct glUniform1ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1ui( params->location, params->v0 );
+    funcs->p_glUniform1ui( params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -19728,7 +19728,7 @@ static NTSTATUS ext_glUniform1ui64ARB( void *args )
 {
     struct glUniform1ui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1ui64ARB( params->location, params->x );
+    funcs->p_glUniform1ui64ARB( params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -19736,7 +19736,7 @@ static NTSTATUS ext_glUniform1ui64NV( void *args )
 {
     struct glUniform1ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1ui64NV( params->location, params->x );
+    funcs->p_glUniform1ui64NV( params->location, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -19744,7 +19744,7 @@ static NTSTATUS ext_glUniform1ui64vARB( void *args )
 {
     struct glUniform1ui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1ui64vARB( params->location, params->count, params->value );
+    funcs->p_glUniform1ui64vARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19752,7 +19752,7 @@ static NTSTATUS ext_glUniform1ui64vNV( void *args )
 {
     struct glUniform1ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1ui64vNV( params->location, params->count, params->value );
+    funcs->p_glUniform1ui64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19760,7 +19760,7 @@ static NTSTATUS ext_glUniform1uiEXT( void *args )
 {
     struct glUniform1uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1uiEXT( params->location, params->v0 );
+    funcs->p_glUniform1uiEXT( params->location, params->v0 );
     return STATUS_SUCCESS;
 }
 
@@ -19768,7 +19768,7 @@ static NTSTATUS ext_glUniform1uiv( void *args )
 {
     struct glUniform1uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1uiv( params->location, params->count, params->value );
+    funcs->p_glUniform1uiv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19776,7 +19776,7 @@ static NTSTATUS ext_glUniform1uivEXT( void *args )
 {
     struct glUniform1uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform1uivEXT( params->location, params->count, params->value );
+    funcs->p_glUniform1uivEXT( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19784,7 +19784,7 @@ static NTSTATUS ext_glUniform2d( void *args )
 {
     struct glUniform2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2d( params->location, params->x, params->y );
+    funcs->p_glUniform2d( params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -19792,7 +19792,7 @@ static NTSTATUS ext_glUniform2dv( void *args )
 {
     struct glUniform2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2dv( params->location, params->count, params->value );
+    funcs->p_glUniform2dv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19800,7 +19800,7 @@ static NTSTATUS ext_glUniform2f( void *args )
 {
     struct glUniform2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2f( params->location, params->v0, params->v1 );
+    funcs->p_glUniform2f( params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -19808,7 +19808,7 @@ static NTSTATUS ext_glUniform2fARB( void *args )
 {
     struct glUniform2fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2fARB( params->location, params->v0, params->v1 );
+    funcs->p_glUniform2fARB( params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -19816,7 +19816,7 @@ static NTSTATUS ext_glUniform2fv( void *args )
 {
     struct glUniform2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2fv( params->location, params->count, params->value );
+    funcs->p_glUniform2fv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19824,7 +19824,7 @@ static NTSTATUS ext_glUniform2fvARB( void *args )
 {
     struct glUniform2fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2fvARB( params->location, params->count, params->value );
+    funcs->p_glUniform2fvARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19832,7 +19832,7 @@ static NTSTATUS ext_glUniform2i( void *args )
 {
     struct glUniform2i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2i( params->location, params->v0, params->v1 );
+    funcs->p_glUniform2i( params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -19840,7 +19840,7 @@ static NTSTATUS ext_glUniform2i64ARB( void *args )
 {
     struct glUniform2i64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2i64ARB( params->location, params->x, params->y );
+    funcs->p_glUniform2i64ARB( params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -19848,7 +19848,7 @@ static NTSTATUS ext_glUniform2i64NV( void *args )
 {
     struct glUniform2i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2i64NV( params->location, params->x, params->y );
+    funcs->p_glUniform2i64NV( params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -19856,7 +19856,7 @@ static NTSTATUS ext_glUniform2i64vARB( void *args )
 {
     struct glUniform2i64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2i64vARB( params->location, params->count, params->value );
+    funcs->p_glUniform2i64vARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19864,7 +19864,7 @@ static NTSTATUS ext_glUniform2i64vNV( void *args )
 {
     struct glUniform2i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2i64vNV( params->location, params->count, params->value );
+    funcs->p_glUniform2i64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19872,7 +19872,7 @@ static NTSTATUS ext_glUniform2iARB( void *args )
 {
     struct glUniform2iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2iARB( params->location, params->v0, params->v1 );
+    funcs->p_glUniform2iARB( params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -19880,7 +19880,7 @@ static NTSTATUS ext_glUniform2iv( void *args )
 {
     struct glUniform2iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2iv( params->location, params->count, params->value );
+    funcs->p_glUniform2iv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19888,7 +19888,7 @@ static NTSTATUS ext_glUniform2ivARB( void *args )
 {
     struct glUniform2ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2ivARB( params->location, params->count, params->value );
+    funcs->p_glUniform2ivARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19896,7 +19896,7 @@ static NTSTATUS ext_glUniform2ui( void *args )
 {
     struct glUniform2ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2ui( params->location, params->v0, params->v1 );
+    funcs->p_glUniform2ui( params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -19904,7 +19904,7 @@ static NTSTATUS ext_glUniform2ui64ARB( void *args )
 {
     struct glUniform2ui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2ui64ARB( params->location, params->x, params->y );
+    funcs->p_glUniform2ui64ARB( params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -19912,7 +19912,7 @@ static NTSTATUS ext_glUniform2ui64NV( void *args )
 {
     struct glUniform2ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2ui64NV( params->location, params->x, params->y );
+    funcs->p_glUniform2ui64NV( params->location, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -19920,7 +19920,7 @@ static NTSTATUS ext_glUniform2ui64vARB( void *args )
 {
     struct glUniform2ui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2ui64vARB( params->location, params->count, params->value );
+    funcs->p_glUniform2ui64vARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19928,7 +19928,7 @@ static NTSTATUS ext_glUniform2ui64vNV( void *args )
 {
     struct glUniform2ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2ui64vNV( params->location, params->count, params->value );
+    funcs->p_glUniform2ui64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19936,7 +19936,7 @@ static NTSTATUS ext_glUniform2uiEXT( void *args )
 {
     struct glUniform2uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2uiEXT( params->location, params->v0, params->v1 );
+    funcs->p_glUniform2uiEXT( params->location, params->v0, params->v1 );
     return STATUS_SUCCESS;
 }
 
@@ -19944,7 +19944,7 @@ static NTSTATUS ext_glUniform2uiv( void *args )
 {
     struct glUniform2uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2uiv( params->location, params->count, params->value );
+    funcs->p_glUniform2uiv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19952,7 +19952,7 @@ static NTSTATUS ext_glUniform2uivEXT( void *args )
 {
     struct glUniform2uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform2uivEXT( params->location, params->count, params->value );
+    funcs->p_glUniform2uivEXT( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19960,7 +19960,7 @@ static NTSTATUS ext_glUniform3d( void *args )
 {
     struct glUniform3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3d( params->location, params->x, params->y, params->z );
+    funcs->p_glUniform3d( params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -19968,7 +19968,7 @@ static NTSTATUS ext_glUniform3dv( void *args )
 {
     struct glUniform3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3dv( params->location, params->count, params->value );
+    funcs->p_glUniform3dv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -19976,7 +19976,7 @@ static NTSTATUS ext_glUniform3f( void *args )
 {
     struct glUniform3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3f( params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glUniform3f( params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -19984,7 +19984,7 @@ static NTSTATUS ext_glUniform3fARB( void *args )
 {
     struct glUniform3fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3fARB( params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glUniform3fARB( params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -19992,7 +19992,7 @@ static NTSTATUS ext_glUniform3fv( void *args )
 {
     struct glUniform3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3fv( params->location, params->count, params->value );
+    funcs->p_glUniform3fv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20000,7 +20000,7 @@ static NTSTATUS ext_glUniform3fvARB( void *args )
 {
     struct glUniform3fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3fvARB( params->location, params->count, params->value );
+    funcs->p_glUniform3fvARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20008,7 +20008,7 @@ static NTSTATUS ext_glUniform3i( void *args )
 {
     struct glUniform3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3i( params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glUniform3i( params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -20016,7 +20016,7 @@ static NTSTATUS ext_glUniform3i64ARB( void *args )
 {
     struct glUniform3i64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3i64ARB( params->location, params->x, params->y, params->z );
+    funcs->p_glUniform3i64ARB( params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -20024,7 +20024,7 @@ static NTSTATUS ext_glUniform3i64NV( void *args )
 {
     struct glUniform3i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3i64NV( params->location, params->x, params->y, params->z );
+    funcs->p_glUniform3i64NV( params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -20032,7 +20032,7 @@ static NTSTATUS ext_glUniform3i64vARB( void *args )
 {
     struct glUniform3i64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3i64vARB( params->location, params->count, params->value );
+    funcs->p_glUniform3i64vARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20040,7 +20040,7 @@ static NTSTATUS ext_glUniform3i64vNV( void *args )
 {
     struct glUniform3i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3i64vNV( params->location, params->count, params->value );
+    funcs->p_glUniform3i64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20048,7 +20048,7 @@ static NTSTATUS ext_glUniform3iARB( void *args )
 {
     struct glUniform3iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3iARB( params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glUniform3iARB( params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -20056,7 +20056,7 @@ static NTSTATUS ext_glUniform3iv( void *args )
 {
     struct glUniform3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3iv( params->location, params->count, params->value );
+    funcs->p_glUniform3iv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20064,7 +20064,7 @@ static NTSTATUS ext_glUniform3ivARB( void *args )
 {
     struct glUniform3ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3ivARB( params->location, params->count, params->value );
+    funcs->p_glUniform3ivARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20072,7 +20072,7 @@ static NTSTATUS ext_glUniform3ui( void *args )
 {
     struct glUniform3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3ui( params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glUniform3ui( params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -20080,7 +20080,7 @@ static NTSTATUS ext_glUniform3ui64ARB( void *args )
 {
     struct glUniform3ui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3ui64ARB( params->location, params->x, params->y, params->z );
+    funcs->p_glUniform3ui64ARB( params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -20088,7 +20088,7 @@ static NTSTATUS ext_glUniform3ui64NV( void *args )
 {
     struct glUniform3ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3ui64NV( params->location, params->x, params->y, params->z );
+    funcs->p_glUniform3ui64NV( params->location, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -20096,7 +20096,7 @@ static NTSTATUS ext_glUniform3ui64vARB( void *args )
 {
     struct glUniform3ui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3ui64vARB( params->location, params->count, params->value );
+    funcs->p_glUniform3ui64vARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20104,7 +20104,7 @@ static NTSTATUS ext_glUniform3ui64vNV( void *args )
 {
     struct glUniform3ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3ui64vNV( params->location, params->count, params->value );
+    funcs->p_glUniform3ui64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20112,7 +20112,7 @@ static NTSTATUS ext_glUniform3uiEXT( void *args )
 {
     struct glUniform3uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3uiEXT( params->location, params->v0, params->v1, params->v2 );
+    funcs->p_glUniform3uiEXT( params->location, params->v0, params->v1, params->v2 );
     return STATUS_SUCCESS;
 }
 
@@ -20120,7 +20120,7 @@ static NTSTATUS ext_glUniform3uiv( void *args )
 {
     struct glUniform3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3uiv( params->location, params->count, params->value );
+    funcs->p_glUniform3uiv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20128,7 +20128,7 @@ static NTSTATUS ext_glUniform3uivEXT( void *args )
 {
     struct glUniform3uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform3uivEXT( params->location, params->count, params->value );
+    funcs->p_glUniform3uivEXT( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20136,7 +20136,7 @@ static NTSTATUS ext_glUniform4d( void *args )
 {
     struct glUniform4d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4d( params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glUniform4d( params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -20144,7 +20144,7 @@ static NTSTATUS ext_glUniform4dv( void *args )
 {
     struct glUniform4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4dv( params->location, params->count, params->value );
+    funcs->p_glUniform4dv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20152,7 +20152,7 @@ static NTSTATUS ext_glUniform4f( void *args )
 {
     struct glUniform4f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4f( params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glUniform4f( params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -20160,7 +20160,7 @@ static NTSTATUS ext_glUniform4fARB( void *args )
 {
     struct glUniform4fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4fARB( params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glUniform4fARB( params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -20168,7 +20168,7 @@ static NTSTATUS ext_glUniform4fv( void *args )
 {
     struct glUniform4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4fv( params->location, params->count, params->value );
+    funcs->p_glUniform4fv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20176,7 +20176,7 @@ static NTSTATUS ext_glUniform4fvARB( void *args )
 {
     struct glUniform4fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4fvARB( params->location, params->count, params->value );
+    funcs->p_glUniform4fvARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20184,7 +20184,7 @@ static NTSTATUS ext_glUniform4i( void *args )
 {
     struct glUniform4i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4i( params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glUniform4i( params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -20192,7 +20192,7 @@ static NTSTATUS ext_glUniform4i64ARB( void *args )
 {
     struct glUniform4i64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4i64ARB( params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glUniform4i64ARB( params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -20200,7 +20200,7 @@ static NTSTATUS ext_glUniform4i64NV( void *args )
 {
     struct glUniform4i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4i64NV( params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glUniform4i64NV( params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -20208,7 +20208,7 @@ static NTSTATUS ext_glUniform4i64vARB( void *args )
 {
     struct glUniform4i64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4i64vARB( params->location, params->count, params->value );
+    funcs->p_glUniform4i64vARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20216,7 +20216,7 @@ static NTSTATUS ext_glUniform4i64vNV( void *args )
 {
     struct glUniform4i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4i64vNV( params->location, params->count, params->value );
+    funcs->p_glUniform4i64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20224,7 +20224,7 @@ static NTSTATUS ext_glUniform4iARB( void *args )
 {
     struct glUniform4iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4iARB( params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glUniform4iARB( params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -20232,7 +20232,7 @@ static NTSTATUS ext_glUniform4iv( void *args )
 {
     struct glUniform4iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4iv( params->location, params->count, params->value );
+    funcs->p_glUniform4iv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20240,7 +20240,7 @@ static NTSTATUS ext_glUniform4ivARB( void *args )
 {
     struct glUniform4ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4ivARB( params->location, params->count, params->value );
+    funcs->p_glUniform4ivARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20248,7 +20248,7 @@ static NTSTATUS ext_glUniform4ui( void *args )
 {
     struct glUniform4ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4ui( params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glUniform4ui( params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -20256,7 +20256,7 @@ static NTSTATUS ext_glUniform4ui64ARB( void *args )
 {
     struct glUniform4ui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4ui64ARB( params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glUniform4ui64ARB( params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -20264,7 +20264,7 @@ static NTSTATUS ext_glUniform4ui64NV( void *args )
 {
     struct glUniform4ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4ui64NV( params->location, params->x, params->y, params->z, params->w );
+    funcs->p_glUniform4ui64NV( params->location, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -20272,7 +20272,7 @@ static NTSTATUS ext_glUniform4ui64vARB( void *args )
 {
     struct glUniform4ui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4ui64vARB( params->location, params->count, params->value );
+    funcs->p_glUniform4ui64vARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20280,7 +20280,7 @@ static NTSTATUS ext_glUniform4ui64vNV( void *args )
 {
     struct glUniform4ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4ui64vNV( params->location, params->count, params->value );
+    funcs->p_glUniform4ui64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20288,7 +20288,7 @@ static NTSTATUS ext_glUniform4uiEXT( void *args )
 {
     struct glUniform4uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4uiEXT( params->location, params->v0, params->v1, params->v2, params->v3 );
+    funcs->p_glUniform4uiEXT( params->location, params->v0, params->v1, params->v2, params->v3 );
     return STATUS_SUCCESS;
 }
 
@@ -20296,7 +20296,7 @@ static NTSTATUS ext_glUniform4uiv( void *args )
 {
     struct glUniform4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4uiv( params->location, params->count, params->value );
+    funcs->p_glUniform4uiv( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20304,7 +20304,7 @@ static NTSTATUS ext_glUniform4uivEXT( void *args )
 {
     struct glUniform4uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniform4uivEXT( params->location, params->count, params->value );
+    funcs->p_glUniform4uivEXT( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20312,7 +20312,7 @@ static NTSTATUS ext_glUniformBlockBinding( void *args )
 {
     struct glUniformBlockBinding_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformBlockBinding( params->program, params->uniformBlockIndex, params->uniformBlockBinding );
+    funcs->p_glUniformBlockBinding( params->program, params->uniformBlockIndex, params->uniformBlockBinding );
     return STATUS_SUCCESS;
 }
 
@@ -20320,7 +20320,7 @@ static NTSTATUS ext_glUniformBufferEXT( void *args )
 {
     struct glUniformBufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformBufferEXT( params->program, params->location, params->buffer );
+    funcs->p_glUniformBufferEXT( params->program, params->location, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -20328,7 +20328,7 @@ static NTSTATUS ext_glUniformHandleui64ARB( void *args )
 {
     struct glUniformHandleui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformHandleui64ARB( params->location, params->value );
+    funcs->p_glUniformHandleui64ARB( params->location, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20336,7 +20336,7 @@ static NTSTATUS ext_glUniformHandleui64NV( void *args )
 {
     struct glUniformHandleui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformHandleui64NV( params->location, params->value );
+    funcs->p_glUniformHandleui64NV( params->location, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20344,7 +20344,7 @@ static NTSTATUS ext_glUniformHandleui64vARB( void *args )
 {
     struct glUniformHandleui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformHandleui64vARB( params->location, params->count, params->value );
+    funcs->p_glUniformHandleui64vARB( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20352,7 +20352,7 @@ static NTSTATUS ext_glUniformHandleui64vNV( void *args )
 {
     struct glUniformHandleui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformHandleui64vNV( params->location, params->count, params->value );
+    funcs->p_glUniformHandleui64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20360,7 +20360,7 @@ static NTSTATUS ext_glUniformMatrix2dv( void *args )
 {
     struct glUniformMatrix2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix2dv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix2dv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20368,7 +20368,7 @@ static NTSTATUS ext_glUniformMatrix2fv( void *args )
 {
     struct glUniformMatrix2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix2fv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix2fv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20376,7 +20376,7 @@ static NTSTATUS ext_glUniformMatrix2fvARB( void *args )
 {
     struct glUniformMatrix2fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix2fvARB( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix2fvARB( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20384,7 +20384,7 @@ static NTSTATUS ext_glUniformMatrix2x3dv( void *args )
 {
     struct glUniformMatrix2x3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix2x3dv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix2x3dv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20392,7 +20392,7 @@ static NTSTATUS ext_glUniformMatrix2x3fv( void *args )
 {
     struct glUniformMatrix2x3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix2x3fv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix2x3fv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20400,7 +20400,7 @@ static NTSTATUS ext_glUniformMatrix2x4dv( void *args )
 {
     struct glUniformMatrix2x4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix2x4dv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix2x4dv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20408,7 +20408,7 @@ static NTSTATUS ext_glUniformMatrix2x4fv( void *args )
 {
     struct glUniformMatrix2x4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix2x4fv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix2x4fv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20416,7 +20416,7 @@ static NTSTATUS ext_glUniformMatrix3dv( void *args )
 {
     struct glUniformMatrix3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix3dv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix3dv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20424,7 +20424,7 @@ static NTSTATUS ext_glUniformMatrix3fv( void *args )
 {
     struct glUniformMatrix3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix3fv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix3fv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20432,7 +20432,7 @@ static NTSTATUS ext_glUniformMatrix3fvARB( void *args )
 {
     struct glUniformMatrix3fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix3fvARB( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix3fvARB( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20440,7 +20440,7 @@ static NTSTATUS ext_glUniformMatrix3x2dv( void *args )
 {
     struct glUniformMatrix3x2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix3x2dv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix3x2dv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20448,7 +20448,7 @@ static NTSTATUS ext_glUniformMatrix3x2fv( void *args )
 {
     struct glUniformMatrix3x2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix3x2fv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix3x2fv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20456,7 +20456,7 @@ static NTSTATUS ext_glUniformMatrix3x4dv( void *args )
 {
     struct glUniformMatrix3x4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix3x4dv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix3x4dv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20464,7 +20464,7 @@ static NTSTATUS ext_glUniformMatrix3x4fv( void *args )
 {
     struct glUniformMatrix3x4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix3x4fv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix3x4fv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20472,7 +20472,7 @@ static NTSTATUS ext_glUniformMatrix4dv( void *args )
 {
     struct glUniformMatrix4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix4dv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix4dv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20480,7 +20480,7 @@ static NTSTATUS ext_glUniformMatrix4fv( void *args )
 {
     struct glUniformMatrix4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix4fv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix4fv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20488,7 +20488,7 @@ static NTSTATUS ext_glUniformMatrix4fvARB( void *args )
 {
     struct glUniformMatrix4fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix4fvARB( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix4fvARB( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20496,7 +20496,7 @@ static NTSTATUS ext_glUniformMatrix4x2dv( void *args )
 {
     struct glUniformMatrix4x2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix4x2dv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix4x2dv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20504,7 +20504,7 @@ static NTSTATUS ext_glUniformMatrix4x2fv( void *args )
 {
     struct glUniformMatrix4x2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix4x2fv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix4x2fv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20512,7 +20512,7 @@ static NTSTATUS ext_glUniformMatrix4x3dv( void *args )
 {
     struct glUniformMatrix4x3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix4x3dv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix4x3dv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20520,7 +20520,7 @@ static NTSTATUS ext_glUniformMatrix4x3fv( void *args )
 {
     struct glUniformMatrix4x3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformMatrix4x3fv( params->location, params->count, params->transpose, params->value );
+    funcs->p_glUniformMatrix4x3fv( params->location, params->count, params->transpose, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20528,7 +20528,7 @@ static NTSTATUS ext_glUniformSubroutinesuiv( void *args )
 {
     struct glUniformSubroutinesuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformSubroutinesuiv( params->shadertype, params->count, params->indices );
+    funcs->p_glUniformSubroutinesuiv( params->shadertype, params->count, params->indices );
     return STATUS_SUCCESS;
 }
 
@@ -20536,7 +20536,7 @@ static NTSTATUS ext_glUniformui64NV( void *args )
 {
     struct glUniformui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformui64NV( params->location, params->value );
+    funcs->p_glUniformui64NV( params->location, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20544,7 +20544,7 @@ static NTSTATUS ext_glUniformui64vNV( void *args )
 {
     struct glUniformui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUniformui64vNV( params->location, params->count, params->value );
+    funcs->p_glUniformui64vNV( params->location, params->count, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -20552,7 +20552,7 @@ static NTSTATUS ext_glUnlockArraysEXT( void *args )
 {
     struct glUnlockArraysEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUnlockArraysEXT();
+    funcs->p_glUnlockArraysEXT();
     return STATUS_SUCCESS;
 }
 
@@ -20560,7 +20560,7 @@ NTSTATUS ext_glUnmapBuffer( void *args )
 {
     struct glUnmapBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glUnmapBuffer( params->target );
+    params->ret = funcs->p_glUnmapBuffer( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -20568,7 +20568,7 @@ NTSTATUS ext_glUnmapBufferARB( void *args )
 {
     struct glUnmapBufferARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glUnmapBufferARB( params->target );
+    params->ret = funcs->p_glUnmapBufferARB( params->target );
     return STATUS_SUCCESS;
 }
 
@@ -20576,7 +20576,7 @@ NTSTATUS ext_glUnmapNamedBuffer( void *args )
 {
     struct glUnmapNamedBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glUnmapNamedBuffer( params->buffer );
+    params->ret = funcs->p_glUnmapNamedBuffer( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -20584,7 +20584,7 @@ NTSTATUS ext_glUnmapNamedBufferEXT( void *args )
 {
     struct glUnmapNamedBufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glUnmapNamedBufferEXT( params->buffer );
+    params->ret = funcs->p_glUnmapNamedBufferEXT( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -20592,7 +20592,7 @@ static NTSTATUS ext_glUnmapObjectBufferATI( void *args )
 {
     struct glUnmapObjectBufferATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUnmapObjectBufferATI( params->buffer );
+    funcs->p_glUnmapObjectBufferATI( params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -20600,7 +20600,7 @@ static NTSTATUS ext_glUnmapTexture2DINTEL( void *args )
 {
     struct glUnmapTexture2DINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUnmapTexture2DINTEL( params->texture, params->level );
+    funcs->p_glUnmapTexture2DINTEL( params->texture, params->level );
     return STATUS_SUCCESS;
 }
 
@@ -20608,7 +20608,7 @@ static NTSTATUS ext_glUpdateObjectBufferATI( void *args )
 {
     struct glUpdateObjectBufferATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUpdateObjectBufferATI( params->buffer, params->offset, params->size, params->pointer, params->preserve );
+    funcs->p_glUpdateObjectBufferATI( params->buffer, params->offset, params->size, params->pointer, params->preserve );
     return STATUS_SUCCESS;
 }
 
@@ -20616,7 +20616,7 @@ static NTSTATUS ext_glUploadGpuMaskNVX( void *args )
 {
     struct glUploadGpuMaskNVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUploadGpuMaskNVX( params->mask );
+    funcs->p_glUploadGpuMaskNVX( params->mask );
     return STATUS_SUCCESS;
 }
 
@@ -20624,7 +20624,7 @@ static NTSTATUS ext_glUseProgram( void *args )
 {
     struct glUseProgram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUseProgram( params->program );
+    funcs->p_glUseProgram( params->program );
     return STATUS_SUCCESS;
 }
 
@@ -20632,7 +20632,7 @@ static NTSTATUS ext_glUseProgramObjectARB( void *args )
 {
     struct glUseProgramObjectARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUseProgramObjectARB( params->programObj );
+    funcs->p_glUseProgramObjectARB( params->programObj );
     return STATUS_SUCCESS;
 }
 
@@ -20640,7 +20640,7 @@ static NTSTATUS ext_glUseProgramStages( void *args )
 {
     struct glUseProgramStages_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUseProgramStages( params->pipeline, params->stages, params->program );
+    funcs->p_glUseProgramStages( params->pipeline, params->stages, params->program );
     return STATUS_SUCCESS;
 }
 
@@ -20648,7 +20648,7 @@ static NTSTATUS ext_glUseShaderProgramEXT( void *args )
 {
     struct glUseShaderProgramEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glUseShaderProgramEXT( params->type, params->program );
+    funcs->p_glUseShaderProgramEXT( params->type, params->program );
     return STATUS_SUCCESS;
 }
 
@@ -20656,7 +20656,7 @@ static NTSTATUS ext_glVDPAUFiniNV( void *args )
 {
     struct glVDPAUFiniNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVDPAUFiniNV();
+    funcs->p_glVDPAUFiniNV();
     return STATUS_SUCCESS;
 }
 
@@ -20664,7 +20664,7 @@ static NTSTATUS ext_glVDPAUGetSurfaceivNV( void *args )
 {
     struct glVDPAUGetSurfaceivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVDPAUGetSurfaceivNV( params->surface, params->pname, params->count, params->length, params->values );
+    funcs->p_glVDPAUGetSurfaceivNV( params->surface, params->pname, params->count, params->length, params->values );
     return STATUS_SUCCESS;
 }
 
@@ -20672,7 +20672,7 @@ static NTSTATUS ext_glVDPAUInitNV( void *args )
 {
     struct glVDPAUInitNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVDPAUInitNV( params->vdpDevice, params->getProcAddress );
+    funcs->p_glVDPAUInitNV( params->vdpDevice, params->getProcAddress );
     return STATUS_SUCCESS;
 }
 
@@ -20680,7 +20680,7 @@ static NTSTATUS ext_glVDPAUIsSurfaceNV( void *args )
 {
     struct glVDPAUIsSurfaceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glVDPAUIsSurfaceNV( params->surface );
+    params->ret = funcs->p_glVDPAUIsSurfaceNV( params->surface );
     return STATUS_SUCCESS;
 }
 
@@ -20688,7 +20688,7 @@ static NTSTATUS ext_glVDPAUMapSurfacesNV( void *args )
 {
     struct glVDPAUMapSurfacesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVDPAUMapSurfacesNV( params->numSurfaces, params->surfaces );
+    funcs->p_glVDPAUMapSurfacesNV( params->numSurfaces, params->surfaces );
     return STATUS_SUCCESS;
 }
 
@@ -20696,7 +20696,7 @@ static NTSTATUS ext_glVDPAURegisterOutputSurfaceNV( void *args )
 {
     struct glVDPAURegisterOutputSurfaceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glVDPAURegisterOutputSurfaceNV( params->vdpSurface, params->target, params->numTextureNames, params->textureNames );
+    params->ret = funcs->p_glVDPAURegisterOutputSurfaceNV( params->vdpSurface, params->target, params->numTextureNames, params->textureNames );
     return STATUS_SUCCESS;
 }
 
@@ -20704,7 +20704,7 @@ static NTSTATUS ext_glVDPAURegisterVideoSurfaceNV( void *args )
 {
     struct glVDPAURegisterVideoSurfaceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glVDPAURegisterVideoSurfaceNV( params->vdpSurface, params->target, params->numTextureNames, params->textureNames );
+    params->ret = funcs->p_glVDPAURegisterVideoSurfaceNV( params->vdpSurface, params->target, params->numTextureNames, params->textureNames );
     return STATUS_SUCCESS;
 }
 
@@ -20712,7 +20712,7 @@ static NTSTATUS ext_glVDPAURegisterVideoSurfaceWithPictureStructureNV( void *arg
 {
     struct glVDPAURegisterVideoSurfaceWithPictureStructureNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glVDPAURegisterVideoSurfaceWithPictureStructureNV( params->vdpSurface, params->target, params->numTextureNames, params->textureNames, params->isFrameStructure );
+    params->ret = funcs->p_glVDPAURegisterVideoSurfaceWithPictureStructureNV( params->vdpSurface, params->target, params->numTextureNames, params->textureNames, params->isFrameStructure );
     return STATUS_SUCCESS;
 }
 
@@ -20720,7 +20720,7 @@ static NTSTATUS ext_glVDPAUSurfaceAccessNV( void *args )
 {
     struct glVDPAUSurfaceAccessNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVDPAUSurfaceAccessNV( params->surface, params->access );
+    funcs->p_glVDPAUSurfaceAccessNV( params->surface, params->access );
     return STATUS_SUCCESS;
 }
 
@@ -20728,7 +20728,7 @@ static NTSTATUS ext_glVDPAUUnmapSurfacesNV( void *args )
 {
     struct glVDPAUUnmapSurfacesNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVDPAUUnmapSurfacesNV( params->numSurface, params->surfaces );
+    funcs->p_glVDPAUUnmapSurfacesNV( params->numSurface, params->surfaces );
     return STATUS_SUCCESS;
 }
 
@@ -20736,7 +20736,7 @@ static NTSTATUS ext_glVDPAUUnregisterSurfaceNV( void *args )
 {
     struct glVDPAUUnregisterSurfaceNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVDPAUUnregisterSurfaceNV( params->surface );
+    funcs->p_glVDPAUUnregisterSurfaceNV( params->surface );
     return STATUS_SUCCESS;
 }
 
@@ -20744,7 +20744,7 @@ static NTSTATUS ext_glValidateProgram( void *args )
 {
     struct glValidateProgram_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glValidateProgram( params->program );
+    funcs->p_glValidateProgram( params->program );
     return STATUS_SUCCESS;
 }
 
@@ -20752,7 +20752,7 @@ static NTSTATUS ext_glValidateProgramARB( void *args )
 {
     struct glValidateProgramARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glValidateProgramARB( params->programObj );
+    funcs->p_glValidateProgramARB( params->programObj );
     return STATUS_SUCCESS;
 }
 
@@ -20760,7 +20760,7 @@ static NTSTATUS ext_glValidateProgramPipeline( void *args )
 {
     struct glValidateProgramPipeline_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glValidateProgramPipeline( params->pipeline );
+    funcs->p_glValidateProgramPipeline( params->pipeline );
     return STATUS_SUCCESS;
 }
 
@@ -20768,7 +20768,7 @@ static NTSTATUS ext_glVariantArrayObjectATI( void *args )
 {
     struct glVariantArrayObjectATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantArrayObjectATI( params->id, params->type, params->stride, params->buffer, params->offset );
+    funcs->p_glVariantArrayObjectATI( params->id, params->type, params->stride, params->buffer, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -20776,7 +20776,7 @@ static NTSTATUS ext_glVariantPointerEXT( void *args )
 {
     struct glVariantPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantPointerEXT( params->id, params->type, params->stride, params->addr );
+    funcs->p_glVariantPointerEXT( params->id, params->type, params->stride, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -20784,7 +20784,7 @@ static NTSTATUS ext_glVariantbvEXT( void *args )
 {
     struct glVariantbvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantbvEXT( params->id, params->addr );
+    funcs->p_glVariantbvEXT( params->id, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -20792,7 +20792,7 @@ static NTSTATUS ext_glVariantdvEXT( void *args )
 {
     struct glVariantdvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantdvEXT( params->id, params->addr );
+    funcs->p_glVariantdvEXT( params->id, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -20800,7 +20800,7 @@ static NTSTATUS ext_glVariantfvEXT( void *args )
 {
     struct glVariantfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantfvEXT( params->id, params->addr );
+    funcs->p_glVariantfvEXT( params->id, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -20808,7 +20808,7 @@ static NTSTATUS ext_glVariantivEXT( void *args )
 {
     struct glVariantivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantivEXT( params->id, params->addr );
+    funcs->p_glVariantivEXT( params->id, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -20816,7 +20816,7 @@ static NTSTATUS ext_glVariantsvEXT( void *args )
 {
     struct glVariantsvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantsvEXT( params->id, params->addr );
+    funcs->p_glVariantsvEXT( params->id, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -20824,7 +20824,7 @@ static NTSTATUS ext_glVariantubvEXT( void *args )
 {
     struct glVariantubvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantubvEXT( params->id, params->addr );
+    funcs->p_glVariantubvEXT( params->id, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -20832,7 +20832,7 @@ static NTSTATUS ext_glVariantuivEXT( void *args )
 {
     struct glVariantuivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantuivEXT( params->id, params->addr );
+    funcs->p_glVariantuivEXT( params->id, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -20840,7 +20840,7 @@ static NTSTATUS ext_glVariantusvEXT( void *args )
 {
     struct glVariantusvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVariantusvEXT( params->id, params->addr );
+    funcs->p_glVariantusvEXT( params->id, params->addr );
     return STATUS_SUCCESS;
 }
 
@@ -20848,7 +20848,7 @@ static NTSTATUS ext_glVertex2bOES( void *args )
 {
     struct glVertex2bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex2bOES( params->x, params->y );
+    funcs->p_glVertex2bOES( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -20856,7 +20856,7 @@ static NTSTATUS ext_glVertex2bvOES( void *args )
 {
     struct glVertex2bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex2bvOES( params->coords );
+    funcs->p_glVertex2bvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -20864,7 +20864,7 @@ static NTSTATUS ext_glVertex2hNV( void *args )
 {
     struct glVertex2hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex2hNV( params->x, params->y );
+    funcs->p_glVertex2hNV( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -20872,7 +20872,7 @@ static NTSTATUS ext_glVertex2hvNV( void *args )
 {
     struct glVertex2hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex2hvNV( params->v );
+    funcs->p_glVertex2hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -20880,7 +20880,7 @@ static NTSTATUS ext_glVertex2xOES( void *args )
 {
     struct glVertex2xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex2xOES( params->x );
+    funcs->p_glVertex2xOES( params->x );
     return STATUS_SUCCESS;
 }
 
@@ -20888,7 +20888,7 @@ static NTSTATUS ext_glVertex2xvOES( void *args )
 {
     struct glVertex2xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex2xvOES( params->coords );
+    funcs->p_glVertex2xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -20896,7 +20896,7 @@ static NTSTATUS ext_glVertex3bOES( void *args )
 {
     struct glVertex3bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex3bOES( params->x, params->y, params->z );
+    funcs->p_glVertex3bOES( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -20904,7 +20904,7 @@ static NTSTATUS ext_glVertex3bvOES( void *args )
 {
     struct glVertex3bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex3bvOES( params->coords );
+    funcs->p_glVertex3bvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -20912,7 +20912,7 @@ static NTSTATUS ext_glVertex3hNV( void *args )
 {
     struct glVertex3hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex3hNV( params->x, params->y, params->z );
+    funcs->p_glVertex3hNV( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -20920,7 +20920,7 @@ static NTSTATUS ext_glVertex3hvNV( void *args )
 {
     struct glVertex3hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex3hvNV( params->v );
+    funcs->p_glVertex3hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -20928,7 +20928,7 @@ static NTSTATUS ext_glVertex3xOES( void *args )
 {
     struct glVertex3xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex3xOES( params->x, params->y );
+    funcs->p_glVertex3xOES( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -20936,7 +20936,7 @@ static NTSTATUS ext_glVertex3xvOES( void *args )
 {
     struct glVertex3xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex3xvOES( params->coords );
+    funcs->p_glVertex3xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -20944,7 +20944,7 @@ static NTSTATUS ext_glVertex4bOES( void *args )
 {
     struct glVertex4bOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex4bOES( params->x, params->y, params->z, params->w );
+    funcs->p_glVertex4bOES( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -20952,7 +20952,7 @@ static NTSTATUS ext_glVertex4bvOES( void *args )
 {
     struct glVertex4bvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex4bvOES( params->coords );
+    funcs->p_glVertex4bvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -20960,7 +20960,7 @@ static NTSTATUS ext_glVertex4hNV( void *args )
 {
     struct glVertex4hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex4hNV( params->x, params->y, params->z, params->w );
+    funcs->p_glVertex4hNV( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -20968,7 +20968,7 @@ static NTSTATUS ext_glVertex4hvNV( void *args )
 {
     struct glVertex4hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex4hvNV( params->v );
+    funcs->p_glVertex4hvNV( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -20976,7 +20976,7 @@ static NTSTATUS ext_glVertex4xOES( void *args )
 {
     struct glVertex4xOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex4xOES( params->x, params->y, params->z );
+    funcs->p_glVertex4xOES( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -20984,7 +20984,7 @@ static NTSTATUS ext_glVertex4xvOES( void *args )
 {
     struct glVertex4xvOES_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertex4xvOES( params->coords );
+    funcs->p_glVertex4xvOES( params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -20992,7 +20992,7 @@ static NTSTATUS ext_glVertexArrayAttribBinding( void *args )
 {
     struct glVertexArrayAttribBinding_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayAttribBinding( params->vaobj, params->attribindex, params->bindingindex );
+    funcs->p_glVertexArrayAttribBinding( params->vaobj, params->attribindex, params->bindingindex );
     return STATUS_SUCCESS;
 }
 
@@ -21000,7 +21000,7 @@ static NTSTATUS ext_glVertexArrayAttribFormat( void *args )
 {
     struct glVertexArrayAttribFormat_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayAttribFormat( params->vaobj, params->attribindex, params->size, params->type, params->normalized, params->relativeoffset );
+    funcs->p_glVertexArrayAttribFormat( params->vaobj, params->attribindex, params->size, params->type, params->normalized, params->relativeoffset );
     return STATUS_SUCCESS;
 }
 
@@ -21008,7 +21008,7 @@ static NTSTATUS ext_glVertexArrayAttribIFormat( void *args )
 {
     struct glVertexArrayAttribIFormat_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayAttribIFormat( params->vaobj, params->attribindex, params->size, params->type, params->relativeoffset );
+    funcs->p_glVertexArrayAttribIFormat( params->vaobj, params->attribindex, params->size, params->type, params->relativeoffset );
     return STATUS_SUCCESS;
 }
 
@@ -21016,7 +21016,7 @@ static NTSTATUS ext_glVertexArrayAttribLFormat( void *args )
 {
     struct glVertexArrayAttribLFormat_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayAttribLFormat( params->vaobj, params->attribindex, params->size, params->type, params->relativeoffset );
+    funcs->p_glVertexArrayAttribLFormat( params->vaobj, params->attribindex, params->size, params->type, params->relativeoffset );
     return STATUS_SUCCESS;
 }
 
@@ -21024,7 +21024,7 @@ static NTSTATUS ext_glVertexArrayBindVertexBufferEXT( void *args )
 {
     struct glVertexArrayBindVertexBufferEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayBindVertexBufferEXT( params->vaobj, params->bindingindex, params->buffer, params->offset, params->stride );
+    funcs->p_glVertexArrayBindVertexBufferEXT( params->vaobj, params->bindingindex, params->buffer, params->offset, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -21032,7 +21032,7 @@ static NTSTATUS ext_glVertexArrayBindingDivisor( void *args )
 {
     struct glVertexArrayBindingDivisor_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayBindingDivisor( params->vaobj, params->bindingindex, params->divisor );
+    funcs->p_glVertexArrayBindingDivisor( params->vaobj, params->bindingindex, params->divisor );
     return STATUS_SUCCESS;
 }
 
@@ -21040,7 +21040,7 @@ static NTSTATUS ext_glVertexArrayColorOffsetEXT( void *args )
 {
     struct glVertexArrayColorOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayColorOffsetEXT( params->vaobj, params->buffer, params->size, params->type, params->stride, params->offset );
+    funcs->p_glVertexArrayColorOffsetEXT( params->vaobj, params->buffer, params->size, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21048,7 +21048,7 @@ static NTSTATUS ext_glVertexArrayEdgeFlagOffsetEXT( void *args )
 {
     struct glVertexArrayEdgeFlagOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayEdgeFlagOffsetEXT( params->vaobj, params->buffer, params->stride, params->offset );
+    funcs->p_glVertexArrayEdgeFlagOffsetEXT( params->vaobj, params->buffer, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21056,7 +21056,7 @@ static NTSTATUS ext_glVertexArrayElementBuffer( void *args )
 {
     struct glVertexArrayElementBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayElementBuffer( params->vaobj, params->buffer );
+    funcs->p_glVertexArrayElementBuffer( params->vaobj, params->buffer );
     return STATUS_SUCCESS;
 }
 
@@ -21064,7 +21064,7 @@ static NTSTATUS ext_glVertexArrayFogCoordOffsetEXT( void *args )
 {
     struct glVertexArrayFogCoordOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayFogCoordOffsetEXT( params->vaobj, params->buffer, params->type, params->stride, params->offset );
+    funcs->p_glVertexArrayFogCoordOffsetEXT( params->vaobj, params->buffer, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21072,7 +21072,7 @@ static NTSTATUS ext_glVertexArrayIndexOffsetEXT( void *args )
 {
     struct glVertexArrayIndexOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayIndexOffsetEXT( params->vaobj, params->buffer, params->type, params->stride, params->offset );
+    funcs->p_glVertexArrayIndexOffsetEXT( params->vaobj, params->buffer, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21080,7 +21080,7 @@ static NTSTATUS ext_glVertexArrayMultiTexCoordOffsetEXT( void *args )
 {
     struct glVertexArrayMultiTexCoordOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayMultiTexCoordOffsetEXT( params->vaobj, params->buffer, params->texunit, params->size, params->type, params->stride, params->offset );
+    funcs->p_glVertexArrayMultiTexCoordOffsetEXT( params->vaobj, params->buffer, params->texunit, params->size, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21088,7 +21088,7 @@ static NTSTATUS ext_glVertexArrayNormalOffsetEXT( void *args )
 {
     struct glVertexArrayNormalOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayNormalOffsetEXT( params->vaobj, params->buffer, params->type, params->stride, params->offset );
+    funcs->p_glVertexArrayNormalOffsetEXT( params->vaobj, params->buffer, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21096,7 +21096,7 @@ static NTSTATUS ext_glVertexArrayParameteriAPPLE( void *args )
 {
     struct glVertexArrayParameteriAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayParameteriAPPLE( params->pname, params->param );
+    funcs->p_glVertexArrayParameteriAPPLE( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -21104,7 +21104,7 @@ static NTSTATUS ext_glVertexArrayRangeAPPLE( void *args )
 {
     struct glVertexArrayRangeAPPLE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayRangeAPPLE( params->length, params->pointer );
+    funcs->p_glVertexArrayRangeAPPLE( params->length, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -21112,7 +21112,7 @@ static NTSTATUS ext_glVertexArrayRangeNV( void *args )
 {
     struct glVertexArrayRangeNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayRangeNV( params->length, params->pointer );
+    funcs->p_glVertexArrayRangeNV( params->length, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -21120,7 +21120,7 @@ static NTSTATUS ext_glVertexArraySecondaryColorOffsetEXT( void *args )
 {
     struct glVertexArraySecondaryColorOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArraySecondaryColorOffsetEXT( params->vaobj, params->buffer, params->size, params->type, params->stride, params->offset );
+    funcs->p_glVertexArraySecondaryColorOffsetEXT( params->vaobj, params->buffer, params->size, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21128,7 +21128,7 @@ static NTSTATUS ext_glVertexArrayTexCoordOffsetEXT( void *args )
 {
     struct glVertexArrayTexCoordOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayTexCoordOffsetEXT( params->vaobj, params->buffer, params->size, params->type, params->stride, params->offset );
+    funcs->p_glVertexArrayTexCoordOffsetEXT( params->vaobj, params->buffer, params->size, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21136,7 +21136,7 @@ static NTSTATUS ext_glVertexArrayVertexAttribBindingEXT( void *args )
 {
     struct glVertexArrayVertexAttribBindingEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexAttribBindingEXT( params->vaobj, params->attribindex, params->bindingindex );
+    funcs->p_glVertexArrayVertexAttribBindingEXT( params->vaobj, params->attribindex, params->bindingindex );
     return STATUS_SUCCESS;
 }
 
@@ -21144,7 +21144,7 @@ static NTSTATUS ext_glVertexArrayVertexAttribDivisorEXT( void *args )
 {
     struct glVertexArrayVertexAttribDivisorEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexAttribDivisorEXT( params->vaobj, params->index, params->divisor );
+    funcs->p_glVertexArrayVertexAttribDivisorEXT( params->vaobj, params->index, params->divisor );
     return STATUS_SUCCESS;
 }
 
@@ -21152,7 +21152,7 @@ static NTSTATUS ext_glVertexArrayVertexAttribFormatEXT( void *args )
 {
     struct glVertexArrayVertexAttribFormatEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexAttribFormatEXT( params->vaobj, params->attribindex, params->size, params->type, params->normalized, params->relativeoffset );
+    funcs->p_glVertexArrayVertexAttribFormatEXT( params->vaobj, params->attribindex, params->size, params->type, params->normalized, params->relativeoffset );
     return STATUS_SUCCESS;
 }
 
@@ -21160,7 +21160,7 @@ static NTSTATUS ext_glVertexArrayVertexAttribIFormatEXT( void *args )
 {
     struct glVertexArrayVertexAttribIFormatEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexAttribIFormatEXT( params->vaobj, params->attribindex, params->size, params->type, params->relativeoffset );
+    funcs->p_glVertexArrayVertexAttribIFormatEXT( params->vaobj, params->attribindex, params->size, params->type, params->relativeoffset );
     return STATUS_SUCCESS;
 }
 
@@ -21168,7 +21168,7 @@ static NTSTATUS ext_glVertexArrayVertexAttribIOffsetEXT( void *args )
 {
     struct glVertexArrayVertexAttribIOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexAttribIOffsetEXT( params->vaobj, params->buffer, params->index, params->size, params->type, params->stride, params->offset );
+    funcs->p_glVertexArrayVertexAttribIOffsetEXT( params->vaobj, params->buffer, params->index, params->size, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21176,7 +21176,7 @@ static NTSTATUS ext_glVertexArrayVertexAttribLFormatEXT( void *args )
 {
     struct glVertexArrayVertexAttribLFormatEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexAttribLFormatEXT( params->vaobj, params->attribindex, params->size, params->type, params->relativeoffset );
+    funcs->p_glVertexArrayVertexAttribLFormatEXT( params->vaobj, params->attribindex, params->size, params->type, params->relativeoffset );
     return STATUS_SUCCESS;
 }
 
@@ -21184,7 +21184,7 @@ static NTSTATUS ext_glVertexArrayVertexAttribLOffsetEXT( void *args )
 {
     struct glVertexArrayVertexAttribLOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexAttribLOffsetEXT( params->vaobj, params->buffer, params->index, params->size, params->type, params->stride, params->offset );
+    funcs->p_glVertexArrayVertexAttribLOffsetEXT( params->vaobj, params->buffer, params->index, params->size, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21192,7 +21192,7 @@ static NTSTATUS ext_glVertexArrayVertexAttribOffsetEXT( void *args )
 {
     struct glVertexArrayVertexAttribOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexAttribOffsetEXT( params->vaobj, params->buffer, params->index, params->size, params->type, params->normalized, params->stride, params->offset );
+    funcs->p_glVertexArrayVertexAttribOffsetEXT( params->vaobj, params->buffer, params->index, params->size, params->type, params->normalized, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21200,7 +21200,7 @@ static NTSTATUS ext_glVertexArrayVertexBindingDivisorEXT( void *args )
 {
     struct glVertexArrayVertexBindingDivisorEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexBindingDivisorEXT( params->vaobj, params->bindingindex, params->divisor );
+    funcs->p_glVertexArrayVertexBindingDivisorEXT( params->vaobj, params->bindingindex, params->divisor );
     return STATUS_SUCCESS;
 }
 
@@ -21208,7 +21208,7 @@ static NTSTATUS ext_glVertexArrayVertexBuffer( void *args )
 {
     struct glVertexArrayVertexBuffer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexBuffer( params->vaobj, params->bindingindex, params->buffer, params->offset, params->stride );
+    funcs->p_glVertexArrayVertexBuffer( params->vaobj, params->bindingindex, params->buffer, params->offset, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -21216,7 +21216,7 @@ static NTSTATUS ext_glVertexArrayVertexBuffers( void *args )
 {
     struct glVertexArrayVertexBuffers_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexBuffers( params->vaobj, params->first, params->count, params->buffers, params->offsets, params->strides );
+    funcs->p_glVertexArrayVertexBuffers( params->vaobj, params->first, params->count, params->buffers, params->offsets, params->strides );
     return STATUS_SUCCESS;
 }
 
@@ -21224,7 +21224,7 @@ static NTSTATUS ext_glVertexArrayVertexOffsetEXT( void *args )
 {
     struct glVertexArrayVertexOffsetEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexArrayVertexOffsetEXT( params->vaobj, params->buffer, params->size, params->type, params->stride, params->offset );
+    funcs->p_glVertexArrayVertexOffsetEXT( params->vaobj, params->buffer, params->size, params->type, params->stride, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -21232,7 +21232,7 @@ static NTSTATUS ext_glVertexAttrib1d( void *args )
 {
     struct glVertexAttrib1d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1d( params->index, params->x );
+    funcs->p_glVertexAttrib1d( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21240,7 +21240,7 @@ static NTSTATUS ext_glVertexAttrib1dARB( void *args )
 {
     struct glVertexAttrib1dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1dARB( params->index, params->x );
+    funcs->p_glVertexAttrib1dARB( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21248,7 +21248,7 @@ static NTSTATUS ext_glVertexAttrib1dNV( void *args )
 {
     struct glVertexAttrib1dNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1dNV( params->index, params->x );
+    funcs->p_glVertexAttrib1dNV( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21256,7 +21256,7 @@ static NTSTATUS ext_glVertexAttrib1dv( void *args )
 {
     struct glVertexAttrib1dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1dv( params->index, params->v );
+    funcs->p_glVertexAttrib1dv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21264,7 +21264,7 @@ static NTSTATUS ext_glVertexAttrib1dvARB( void *args )
 {
     struct glVertexAttrib1dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1dvARB( params->index, params->v );
+    funcs->p_glVertexAttrib1dvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21272,7 +21272,7 @@ static NTSTATUS ext_glVertexAttrib1dvNV( void *args )
 {
     struct glVertexAttrib1dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1dvNV( params->index, params->v );
+    funcs->p_glVertexAttrib1dvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21280,7 +21280,7 @@ static NTSTATUS ext_glVertexAttrib1f( void *args )
 {
     struct glVertexAttrib1f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1f( params->index, params->x );
+    funcs->p_glVertexAttrib1f( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21288,7 +21288,7 @@ static NTSTATUS ext_glVertexAttrib1fARB( void *args )
 {
     struct glVertexAttrib1fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1fARB( params->index, params->x );
+    funcs->p_glVertexAttrib1fARB( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21296,7 +21296,7 @@ static NTSTATUS ext_glVertexAttrib1fNV( void *args )
 {
     struct glVertexAttrib1fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1fNV( params->index, params->x );
+    funcs->p_glVertexAttrib1fNV( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21304,7 +21304,7 @@ static NTSTATUS ext_glVertexAttrib1fv( void *args )
 {
     struct glVertexAttrib1fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1fv( params->index, params->v );
+    funcs->p_glVertexAttrib1fv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21312,7 +21312,7 @@ static NTSTATUS ext_glVertexAttrib1fvARB( void *args )
 {
     struct glVertexAttrib1fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1fvARB( params->index, params->v );
+    funcs->p_glVertexAttrib1fvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21320,7 +21320,7 @@ static NTSTATUS ext_glVertexAttrib1fvNV( void *args )
 {
     struct glVertexAttrib1fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1fvNV( params->index, params->v );
+    funcs->p_glVertexAttrib1fvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21328,7 +21328,7 @@ static NTSTATUS ext_glVertexAttrib1hNV( void *args )
 {
     struct glVertexAttrib1hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1hNV( params->index, params->x );
+    funcs->p_glVertexAttrib1hNV( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21336,7 +21336,7 @@ static NTSTATUS ext_glVertexAttrib1hvNV( void *args )
 {
     struct glVertexAttrib1hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1hvNV( params->index, params->v );
+    funcs->p_glVertexAttrib1hvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21344,7 +21344,7 @@ static NTSTATUS ext_glVertexAttrib1s( void *args )
 {
     struct glVertexAttrib1s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1s( params->index, params->x );
+    funcs->p_glVertexAttrib1s( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21352,7 +21352,7 @@ static NTSTATUS ext_glVertexAttrib1sARB( void *args )
 {
     struct glVertexAttrib1sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1sARB( params->index, params->x );
+    funcs->p_glVertexAttrib1sARB( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21360,7 +21360,7 @@ static NTSTATUS ext_glVertexAttrib1sNV( void *args )
 {
     struct glVertexAttrib1sNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1sNV( params->index, params->x );
+    funcs->p_glVertexAttrib1sNV( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -21368,7 +21368,7 @@ static NTSTATUS ext_glVertexAttrib1sv( void *args )
 {
     struct glVertexAttrib1sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1sv( params->index, params->v );
+    funcs->p_glVertexAttrib1sv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21376,7 +21376,7 @@ static NTSTATUS ext_glVertexAttrib1svARB( void *args )
 {
     struct glVertexAttrib1svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1svARB( params->index, params->v );
+    funcs->p_glVertexAttrib1svARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21384,7 +21384,7 @@ static NTSTATUS ext_glVertexAttrib1svNV( void *args )
 {
     struct glVertexAttrib1svNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib1svNV( params->index, params->v );
+    funcs->p_glVertexAttrib1svNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21392,7 +21392,7 @@ static NTSTATUS ext_glVertexAttrib2d( void *args )
 {
     struct glVertexAttrib2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2d( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2d( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21400,7 +21400,7 @@ static NTSTATUS ext_glVertexAttrib2dARB( void *args )
 {
     struct glVertexAttrib2dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2dARB( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2dARB( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21408,7 +21408,7 @@ static NTSTATUS ext_glVertexAttrib2dNV( void *args )
 {
     struct glVertexAttrib2dNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2dNV( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2dNV( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21416,7 +21416,7 @@ static NTSTATUS ext_glVertexAttrib2dv( void *args )
 {
     struct glVertexAttrib2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2dv( params->index, params->v );
+    funcs->p_glVertexAttrib2dv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21424,7 +21424,7 @@ static NTSTATUS ext_glVertexAttrib2dvARB( void *args )
 {
     struct glVertexAttrib2dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2dvARB( params->index, params->v );
+    funcs->p_glVertexAttrib2dvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21432,7 +21432,7 @@ static NTSTATUS ext_glVertexAttrib2dvNV( void *args )
 {
     struct glVertexAttrib2dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2dvNV( params->index, params->v );
+    funcs->p_glVertexAttrib2dvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21440,7 +21440,7 @@ static NTSTATUS ext_glVertexAttrib2f( void *args )
 {
     struct glVertexAttrib2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2f( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2f( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21448,7 +21448,7 @@ static NTSTATUS ext_glVertexAttrib2fARB( void *args )
 {
     struct glVertexAttrib2fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2fARB( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2fARB( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21456,7 +21456,7 @@ static NTSTATUS ext_glVertexAttrib2fNV( void *args )
 {
     struct glVertexAttrib2fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2fNV( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2fNV( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21464,7 +21464,7 @@ static NTSTATUS ext_glVertexAttrib2fv( void *args )
 {
     struct glVertexAttrib2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2fv( params->index, params->v );
+    funcs->p_glVertexAttrib2fv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21472,7 +21472,7 @@ static NTSTATUS ext_glVertexAttrib2fvARB( void *args )
 {
     struct glVertexAttrib2fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2fvARB( params->index, params->v );
+    funcs->p_glVertexAttrib2fvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21480,7 +21480,7 @@ static NTSTATUS ext_glVertexAttrib2fvNV( void *args )
 {
     struct glVertexAttrib2fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2fvNV( params->index, params->v );
+    funcs->p_glVertexAttrib2fvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21488,7 +21488,7 @@ static NTSTATUS ext_glVertexAttrib2hNV( void *args )
 {
     struct glVertexAttrib2hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2hNV( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2hNV( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21496,7 +21496,7 @@ static NTSTATUS ext_glVertexAttrib2hvNV( void *args )
 {
     struct glVertexAttrib2hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2hvNV( params->index, params->v );
+    funcs->p_glVertexAttrib2hvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21504,7 +21504,7 @@ static NTSTATUS ext_glVertexAttrib2s( void *args )
 {
     struct glVertexAttrib2s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2s( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2s( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21512,7 +21512,7 @@ static NTSTATUS ext_glVertexAttrib2sARB( void *args )
 {
     struct glVertexAttrib2sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2sARB( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2sARB( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21520,7 +21520,7 @@ static NTSTATUS ext_glVertexAttrib2sNV( void *args )
 {
     struct glVertexAttrib2sNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2sNV( params->index, params->x, params->y );
+    funcs->p_glVertexAttrib2sNV( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -21528,7 +21528,7 @@ static NTSTATUS ext_glVertexAttrib2sv( void *args )
 {
     struct glVertexAttrib2sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2sv( params->index, params->v );
+    funcs->p_glVertexAttrib2sv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21536,7 +21536,7 @@ static NTSTATUS ext_glVertexAttrib2svARB( void *args )
 {
     struct glVertexAttrib2svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2svARB( params->index, params->v );
+    funcs->p_glVertexAttrib2svARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21544,7 +21544,7 @@ static NTSTATUS ext_glVertexAttrib2svNV( void *args )
 {
     struct glVertexAttrib2svNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib2svNV( params->index, params->v );
+    funcs->p_glVertexAttrib2svNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21552,7 +21552,7 @@ static NTSTATUS ext_glVertexAttrib3d( void *args )
 {
     struct glVertexAttrib3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3d( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3d( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21560,7 +21560,7 @@ static NTSTATUS ext_glVertexAttrib3dARB( void *args )
 {
     struct glVertexAttrib3dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3dARB( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3dARB( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21568,7 +21568,7 @@ static NTSTATUS ext_glVertexAttrib3dNV( void *args )
 {
     struct glVertexAttrib3dNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3dNV( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3dNV( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21576,7 +21576,7 @@ static NTSTATUS ext_glVertexAttrib3dv( void *args )
 {
     struct glVertexAttrib3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3dv( params->index, params->v );
+    funcs->p_glVertexAttrib3dv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21584,7 +21584,7 @@ static NTSTATUS ext_glVertexAttrib3dvARB( void *args )
 {
     struct glVertexAttrib3dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3dvARB( params->index, params->v );
+    funcs->p_glVertexAttrib3dvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21592,7 +21592,7 @@ static NTSTATUS ext_glVertexAttrib3dvNV( void *args )
 {
     struct glVertexAttrib3dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3dvNV( params->index, params->v );
+    funcs->p_glVertexAttrib3dvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21600,7 +21600,7 @@ static NTSTATUS ext_glVertexAttrib3f( void *args )
 {
     struct glVertexAttrib3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3f( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3f( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21608,7 +21608,7 @@ static NTSTATUS ext_glVertexAttrib3fARB( void *args )
 {
     struct glVertexAttrib3fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3fARB( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3fARB( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21616,7 +21616,7 @@ static NTSTATUS ext_glVertexAttrib3fNV( void *args )
 {
     struct glVertexAttrib3fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3fNV( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3fNV( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21624,7 +21624,7 @@ static NTSTATUS ext_glVertexAttrib3fv( void *args )
 {
     struct glVertexAttrib3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3fv( params->index, params->v );
+    funcs->p_glVertexAttrib3fv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21632,7 +21632,7 @@ static NTSTATUS ext_glVertexAttrib3fvARB( void *args )
 {
     struct glVertexAttrib3fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3fvARB( params->index, params->v );
+    funcs->p_glVertexAttrib3fvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21640,7 +21640,7 @@ static NTSTATUS ext_glVertexAttrib3fvNV( void *args )
 {
     struct glVertexAttrib3fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3fvNV( params->index, params->v );
+    funcs->p_glVertexAttrib3fvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21648,7 +21648,7 @@ static NTSTATUS ext_glVertexAttrib3hNV( void *args )
 {
     struct glVertexAttrib3hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3hNV( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3hNV( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21656,7 +21656,7 @@ static NTSTATUS ext_glVertexAttrib3hvNV( void *args )
 {
     struct glVertexAttrib3hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3hvNV( params->index, params->v );
+    funcs->p_glVertexAttrib3hvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21664,7 +21664,7 @@ static NTSTATUS ext_glVertexAttrib3s( void *args )
 {
     struct glVertexAttrib3s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3s( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3s( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21672,7 +21672,7 @@ static NTSTATUS ext_glVertexAttrib3sARB( void *args )
 {
     struct glVertexAttrib3sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3sARB( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3sARB( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21680,7 +21680,7 @@ static NTSTATUS ext_glVertexAttrib3sNV( void *args )
 {
     struct glVertexAttrib3sNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3sNV( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttrib3sNV( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -21688,7 +21688,7 @@ static NTSTATUS ext_glVertexAttrib3sv( void *args )
 {
     struct glVertexAttrib3sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3sv( params->index, params->v );
+    funcs->p_glVertexAttrib3sv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21696,7 +21696,7 @@ static NTSTATUS ext_glVertexAttrib3svARB( void *args )
 {
     struct glVertexAttrib3svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3svARB( params->index, params->v );
+    funcs->p_glVertexAttrib3svARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21704,7 +21704,7 @@ static NTSTATUS ext_glVertexAttrib3svNV( void *args )
 {
     struct glVertexAttrib3svNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib3svNV( params->index, params->v );
+    funcs->p_glVertexAttrib3svNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21712,7 +21712,7 @@ static NTSTATUS ext_glVertexAttrib4Nbv( void *args )
 {
     struct glVertexAttrib4Nbv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4Nbv( params->index, params->v );
+    funcs->p_glVertexAttrib4Nbv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21720,7 +21720,7 @@ static NTSTATUS ext_glVertexAttrib4NbvARB( void *args )
 {
     struct glVertexAttrib4NbvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4NbvARB( params->index, params->v );
+    funcs->p_glVertexAttrib4NbvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21728,7 +21728,7 @@ static NTSTATUS ext_glVertexAttrib4Niv( void *args )
 {
     struct glVertexAttrib4Niv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4Niv( params->index, params->v );
+    funcs->p_glVertexAttrib4Niv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21736,7 +21736,7 @@ static NTSTATUS ext_glVertexAttrib4NivARB( void *args )
 {
     struct glVertexAttrib4NivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4NivARB( params->index, params->v );
+    funcs->p_glVertexAttrib4NivARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21744,7 +21744,7 @@ static NTSTATUS ext_glVertexAttrib4Nsv( void *args )
 {
     struct glVertexAttrib4Nsv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4Nsv( params->index, params->v );
+    funcs->p_glVertexAttrib4Nsv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21752,7 +21752,7 @@ static NTSTATUS ext_glVertexAttrib4NsvARB( void *args )
 {
     struct glVertexAttrib4NsvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4NsvARB( params->index, params->v );
+    funcs->p_glVertexAttrib4NsvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21760,7 +21760,7 @@ static NTSTATUS ext_glVertexAttrib4Nub( void *args )
 {
     struct glVertexAttrib4Nub_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4Nub( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4Nub( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21768,7 +21768,7 @@ static NTSTATUS ext_glVertexAttrib4NubARB( void *args )
 {
     struct glVertexAttrib4NubARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4NubARB( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4NubARB( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21776,7 +21776,7 @@ static NTSTATUS ext_glVertexAttrib4Nubv( void *args )
 {
     struct glVertexAttrib4Nubv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4Nubv( params->index, params->v );
+    funcs->p_glVertexAttrib4Nubv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21784,7 +21784,7 @@ static NTSTATUS ext_glVertexAttrib4NubvARB( void *args )
 {
     struct glVertexAttrib4NubvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4NubvARB( params->index, params->v );
+    funcs->p_glVertexAttrib4NubvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21792,7 +21792,7 @@ static NTSTATUS ext_glVertexAttrib4Nuiv( void *args )
 {
     struct glVertexAttrib4Nuiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4Nuiv( params->index, params->v );
+    funcs->p_glVertexAttrib4Nuiv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21800,7 +21800,7 @@ static NTSTATUS ext_glVertexAttrib4NuivARB( void *args )
 {
     struct glVertexAttrib4NuivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4NuivARB( params->index, params->v );
+    funcs->p_glVertexAttrib4NuivARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21808,7 +21808,7 @@ static NTSTATUS ext_glVertexAttrib4Nusv( void *args )
 {
     struct glVertexAttrib4Nusv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4Nusv( params->index, params->v );
+    funcs->p_glVertexAttrib4Nusv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21816,7 +21816,7 @@ static NTSTATUS ext_glVertexAttrib4NusvARB( void *args )
 {
     struct glVertexAttrib4NusvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4NusvARB( params->index, params->v );
+    funcs->p_glVertexAttrib4NusvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21824,7 +21824,7 @@ static NTSTATUS ext_glVertexAttrib4bv( void *args )
 {
     struct glVertexAttrib4bv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4bv( params->index, params->v );
+    funcs->p_glVertexAttrib4bv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21832,7 +21832,7 @@ static NTSTATUS ext_glVertexAttrib4bvARB( void *args )
 {
     struct glVertexAttrib4bvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4bvARB( params->index, params->v );
+    funcs->p_glVertexAttrib4bvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21840,7 +21840,7 @@ static NTSTATUS ext_glVertexAttrib4d( void *args )
 {
     struct glVertexAttrib4d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4d( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4d( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21848,7 +21848,7 @@ static NTSTATUS ext_glVertexAttrib4dARB( void *args )
 {
     struct glVertexAttrib4dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4dARB( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4dARB( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21856,7 +21856,7 @@ static NTSTATUS ext_glVertexAttrib4dNV( void *args )
 {
     struct glVertexAttrib4dNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4dNV( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4dNV( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21864,7 +21864,7 @@ static NTSTATUS ext_glVertexAttrib4dv( void *args )
 {
     struct glVertexAttrib4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4dv( params->index, params->v );
+    funcs->p_glVertexAttrib4dv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21872,7 +21872,7 @@ static NTSTATUS ext_glVertexAttrib4dvARB( void *args )
 {
     struct glVertexAttrib4dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4dvARB( params->index, params->v );
+    funcs->p_glVertexAttrib4dvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21880,7 +21880,7 @@ static NTSTATUS ext_glVertexAttrib4dvNV( void *args )
 {
     struct glVertexAttrib4dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4dvNV( params->index, params->v );
+    funcs->p_glVertexAttrib4dvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21888,7 +21888,7 @@ static NTSTATUS ext_glVertexAttrib4f( void *args )
 {
     struct glVertexAttrib4f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4f( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4f( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21896,7 +21896,7 @@ static NTSTATUS ext_glVertexAttrib4fARB( void *args )
 {
     struct glVertexAttrib4fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4fARB( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4fARB( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21904,7 +21904,7 @@ static NTSTATUS ext_glVertexAttrib4fNV( void *args )
 {
     struct glVertexAttrib4fNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4fNV( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4fNV( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21912,7 +21912,7 @@ static NTSTATUS ext_glVertexAttrib4fv( void *args )
 {
     struct glVertexAttrib4fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4fv( params->index, params->v );
+    funcs->p_glVertexAttrib4fv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21920,7 +21920,7 @@ static NTSTATUS ext_glVertexAttrib4fvARB( void *args )
 {
     struct glVertexAttrib4fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4fvARB( params->index, params->v );
+    funcs->p_glVertexAttrib4fvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21928,7 +21928,7 @@ static NTSTATUS ext_glVertexAttrib4fvNV( void *args )
 {
     struct glVertexAttrib4fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4fvNV( params->index, params->v );
+    funcs->p_glVertexAttrib4fvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21936,7 +21936,7 @@ static NTSTATUS ext_glVertexAttrib4hNV( void *args )
 {
     struct glVertexAttrib4hNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4hNV( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4hNV( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21944,7 +21944,7 @@ static NTSTATUS ext_glVertexAttrib4hvNV( void *args )
 {
     struct glVertexAttrib4hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4hvNV( params->index, params->v );
+    funcs->p_glVertexAttrib4hvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21952,7 +21952,7 @@ static NTSTATUS ext_glVertexAttrib4iv( void *args )
 {
     struct glVertexAttrib4iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4iv( params->index, params->v );
+    funcs->p_glVertexAttrib4iv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21960,7 +21960,7 @@ static NTSTATUS ext_glVertexAttrib4ivARB( void *args )
 {
     struct glVertexAttrib4ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4ivARB( params->index, params->v );
+    funcs->p_glVertexAttrib4ivARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -21968,7 +21968,7 @@ static NTSTATUS ext_glVertexAttrib4s( void *args )
 {
     struct glVertexAttrib4s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4s( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4s( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21976,7 +21976,7 @@ static NTSTATUS ext_glVertexAttrib4sARB( void *args )
 {
     struct glVertexAttrib4sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4sARB( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4sARB( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21984,7 +21984,7 @@ static NTSTATUS ext_glVertexAttrib4sNV( void *args )
 {
     struct glVertexAttrib4sNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4sNV( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4sNV( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -21992,7 +21992,7 @@ static NTSTATUS ext_glVertexAttrib4sv( void *args )
 {
     struct glVertexAttrib4sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4sv( params->index, params->v );
+    funcs->p_glVertexAttrib4sv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22000,7 +22000,7 @@ static NTSTATUS ext_glVertexAttrib4svARB( void *args )
 {
     struct glVertexAttrib4svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4svARB( params->index, params->v );
+    funcs->p_glVertexAttrib4svARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22008,7 +22008,7 @@ static NTSTATUS ext_glVertexAttrib4svNV( void *args )
 {
     struct glVertexAttrib4svNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4svNV( params->index, params->v );
+    funcs->p_glVertexAttrib4svNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22016,7 +22016,7 @@ static NTSTATUS ext_glVertexAttrib4ubNV( void *args )
 {
     struct glVertexAttrib4ubNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4ubNV( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttrib4ubNV( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -22024,7 +22024,7 @@ static NTSTATUS ext_glVertexAttrib4ubv( void *args )
 {
     struct glVertexAttrib4ubv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4ubv( params->index, params->v );
+    funcs->p_glVertexAttrib4ubv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22032,7 +22032,7 @@ static NTSTATUS ext_glVertexAttrib4ubvARB( void *args )
 {
     struct glVertexAttrib4ubvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4ubvARB( params->index, params->v );
+    funcs->p_glVertexAttrib4ubvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22040,7 +22040,7 @@ static NTSTATUS ext_glVertexAttrib4ubvNV( void *args )
 {
     struct glVertexAttrib4ubvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4ubvNV( params->index, params->v );
+    funcs->p_glVertexAttrib4ubvNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22048,7 +22048,7 @@ static NTSTATUS ext_glVertexAttrib4uiv( void *args )
 {
     struct glVertexAttrib4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4uiv( params->index, params->v );
+    funcs->p_glVertexAttrib4uiv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22056,7 +22056,7 @@ static NTSTATUS ext_glVertexAttrib4uivARB( void *args )
 {
     struct glVertexAttrib4uivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4uivARB( params->index, params->v );
+    funcs->p_glVertexAttrib4uivARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22064,7 +22064,7 @@ static NTSTATUS ext_glVertexAttrib4usv( void *args )
 {
     struct glVertexAttrib4usv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4usv( params->index, params->v );
+    funcs->p_glVertexAttrib4usv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22072,7 +22072,7 @@ static NTSTATUS ext_glVertexAttrib4usvARB( void *args )
 {
     struct glVertexAttrib4usvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttrib4usvARB( params->index, params->v );
+    funcs->p_glVertexAttrib4usvARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22080,7 +22080,7 @@ static NTSTATUS ext_glVertexAttribArrayObjectATI( void *args )
 {
     struct glVertexAttribArrayObjectATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribArrayObjectATI( params->index, params->size, params->type, params->normalized, params->stride, params->buffer, params->offset );
+    funcs->p_glVertexAttribArrayObjectATI( params->index, params->size, params->type, params->normalized, params->stride, params->buffer, params->offset );
     return STATUS_SUCCESS;
 }
 
@@ -22088,7 +22088,7 @@ static NTSTATUS ext_glVertexAttribBinding( void *args )
 {
     struct glVertexAttribBinding_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribBinding( params->attribindex, params->bindingindex );
+    funcs->p_glVertexAttribBinding( params->attribindex, params->bindingindex );
     return STATUS_SUCCESS;
 }
 
@@ -22096,7 +22096,7 @@ static NTSTATUS ext_glVertexAttribDivisor( void *args )
 {
     struct glVertexAttribDivisor_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribDivisor( params->index, params->divisor );
+    funcs->p_glVertexAttribDivisor( params->index, params->divisor );
     return STATUS_SUCCESS;
 }
 
@@ -22104,7 +22104,7 @@ static NTSTATUS ext_glVertexAttribDivisorARB( void *args )
 {
     struct glVertexAttribDivisorARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribDivisorARB( params->index, params->divisor );
+    funcs->p_glVertexAttribDivisorARB( params->index, params->divisor );
     return STATUS_SUCCESS;
 }
 
@@ -22112,7 +22112,7 @@ static NTSTATUS ext_glVertexAttribFormat( void *args )
 {
     struct glVertexAttribFormat_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribFormat( params->attribindex, params->size, params->type, params->normalized, params->relativeoffset );
+    funcs->p_glVertexAttribFormat( params->attribindex, params->size, params->type, params->normalized, params->relativeoffset );
     return STATUS_SUCCESS;
 }
 
@@ -22120,7 +22120,7 @@ static NTSTATUS ext_glVertexAttribFormatNV( void *args )
 {
     struct glVertexAttribFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribFormatNV( params->index, params->size, params->type, params->normalized, params->stride );
+    funcs->p_glVertexAttribFormatNV( params->index, params->size, params->type, params->normalized, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -22128,7 +22128,7 @@ static NTSTATUS ext_glVertexAttribI1i( void *args )
 {
     struct glVertexAttribI1i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI1i( params->index, params->x );
+    funcs->p_glVertexAttribI1i( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -22136,7 +22136,7 @@ static NTSTATUS ext_glVertexAttribI1iEXT( void *args )
 {
     struct glVertexAttribI1iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI1iEXT( params->index, params->x );
+    funcs->p_glVertexAttribI1iEXT( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -22144,7 +22144,7 @@ static NTSTATUS ext_glVertexAttribI1iv( void *args )
 {
     struct glVertexAttribI1iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI1iv( params->index, params->v );
+    funcs->p_glVertexAttribI1iv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22152,7 +22152,7 @@ static NTSTATUS ext_glVertexAttribI1ivEXT( void *args )
 {
     struct glVertexAttribI1ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI1ivEXT( params->index, params->v );
+    funcs->p_glVertexAttribI1ivEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22160,7 +22160,7 @@ static NTSTATUS ext_glVertexAttribI1ui( void *args )
 {
     struct glVertexAttribI1ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI1ui( params->index, params->x );
+    funcs->p_glVertexAttribI1ui( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -22168,7 +22168,7 @@ static NTSTATUS ext_glVertexAttribI1uiEXT( void *args )
 {
     struct glVertexAttribI1uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI1uiEXT( params->index, params->x );
+    funcs->p_glVertexAttribI1uiEXT( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -22176,7 +22176,7 @@ static NTSTATUS ext_glVertexAttribI1uiv( void *args )
 {
     struct glVertexAttribI1uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI1uiv( params->index, params->v );
+    funcs->p_glVertexAttribI1uiv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22184,7 +22184,7 @@ static NTSTATUS ext_glVertexAttribI1uivEXT( void *args )
 {
     struct glVertexAttribI1uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI1uivEXT( params->index, params->v );
+    funcs->p_glVertexAttribI1uivEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22192,7 +22192,7 @@ static NTSTATUS ext_glVertexAttribI2i( void *args )
 {
     struct glVertexAttribI2i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI2i( params->index, params->x, params->y );
+    funcs->p_glVertexAttribI2i( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -22200,7 +22200,7 @@ static NTSTATUS ext_glVertexAttribI2iEXT( void *args )
 {
     struct glVertexAttribI2iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI2iEXT( params->index, params->x, params->y );
+    funcs->p_glVertexAttribI2iEXT( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -22208,7 +22208,7 @@ static NTSTATUS ext_glVertexAttribI2iv( void *args )
 {
     struct glVertexAttribI2iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI2iv( params->index, params->v );
+    funcs->p_glVertexAttribI2iv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22216,7 +22216,7 @@ static NTSTATUS ext_glVertexAttribI2ivEXT( void *args )
 {
     struct glVertexAttribI2ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI2ivEXT( params->index, params->v );
+    funcs->p_glVertexAttribI2ivEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22224,7 +22224,7 @@ static NTSTATUS ext_glVertexAttribI2ui( void *args )
 {
     struct glVertexAttribI2ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI2ui( params->index, params->x, params->y );
+    funcs->p_glVertexAttribI2ui( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -22232,7 +22232,7 @@ static NTSTATUS ext_glVertexAttribI2uiEXT( void *args )
 {
     struct glVertexAttribI2uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI2uiEXT( params->index, params->x, params->y );
+    funcs->p_glVertexAttribI2uiEXT( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -22240,7 +22240,7 @@ static NTSTATUS ext_glVertexAttribI2uiv( void *args )
 {
     struct glVertexAttribI2uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI2uiv( params->index, params->v );
+    funcs->p_glVertexAttribI2uiv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22248,7 +22248,7 @@ static NTSTATUS ext_glVertexAttribI2uivEXT( void *args )
 {
     struct glVertexAttribI2uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI2uivEXT( params->index, params->v );
+    funcs->p_glVertexAttribI2uivEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22256,7 +22256,7 @@ static NTSTATUS ext_glVertexAttribI3i( void *args )
 {
     struct glVertexAttribI3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI3i( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttribI3i( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -22264,7 +22264,7 @@ static NTSTATUS ext_glVertexAttribI3iEXT( void *args )
 {
     struct glVertexAttribI3iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI3iEXT( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttribI3iEXT( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -22272,7 +22272,7 @@ static NTSTATUS ext_glVertexAttribI3iv( void *args )
 {
     struct glVertexAttribI3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI3iv( params->index, params->v );
+    funcs->p_glVertexAttribI3iv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22280,7 +22280,7 @@ static NTSTATUS ext_glVertexAttribI3ivEXT( void *args )
 {
     struct glVertexAttribI3ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI3ivEXT( params->index, params->v );
+    funcs->p_glVertexAttribI3ivEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22288,7 +22288,7 @@ static NTSTATUS ext_glVertexAttribI3ui( void *args )
 {
     struct glVertexAttribI3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI3ui( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttribI3ui( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -22296,7 +22296,7 @@ static NTSTATUS ext_glVertexAttribI3uiEXT( void *args )
 {
     struct glVertexAttribI3uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI3uiEXT( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttribI3uiEXT( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -22304,7 +22304,7 @@ static NTSTATUS ext_glVertexAttribI3uiv( void *args )
 {
     struct glVertexAttribI3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI3uiv( params->index, params->v );
+    funcs->p_glVertexAttribI3uiv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22312,7 +22312,7 @@ static NTSTATUS ext_glVertexAttribI3uivEXT( void *args )
 {
     struct glVertexAttribI3uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI3uivEXT( params->index, params->v );
+    funcs->p_glVertexAttribI3uivEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22320,7 +22320,7 @@ static NTSTATUS ext_glVertexAttribI4bv( void *args )
 {
     struct glVertexAttribI4bv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4bv( params->index, params->v );
+    funcs->p_glVertexAttribI4bv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22328,7 +22328,7 @@ static NTSTATUS ext_glVertexAttribI4bvEXT( void *args )
 {
     struct glVertexAttribI4bvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4bvEXT( params->index, params->v );
+    funcs->p_glVertexAttribI4bvEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22336,7 +22336,7 @@ static NTSTATUS ext_glVertexAttribI4i( void *args )
 {
     struct glVertexAttribI4i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4i( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttribI4i( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -22344,7 +22344,7 @@ static NTSTATUS ext_glVertexAttribI4iEXT( void *args )
 {
     struct glVertexAttribI4iEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4iEXT( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttribI4iEXT( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -22352,7 +22352,7 @@ static NTSTATUS ext_glVertexAttribI4iv( void *args )
 {
     struct glVertexAttribI4iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4iv( params->index, params->v );
+    funcs->p_glVertexAttribI4iv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22360,7 +22360,7 @@ static NTSTATUS ext_glVertexAttribI4ivEXT( void *args )
 {
     struct glVertexAttribI4ivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4ivEXT( params->index, params->v );
+    funcs->p_glVertexAttribI4ivEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22368,7 +22368,7 @@ static NTSTATUS ext_glVertexAttribI4sv( void *args )
 {
     struct glVertexAttribI4sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4sv( params->index, params->v );
+    funcs->p_glVertexAttribI4sv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22376,7 +22376,7 @@ static NTSTATUS ext_glVertexAttribI4svEXT( void *args )
 {
     struct glVertexAttribI4svEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4svEXT( params->index, params->v );
+    funcs->p_glVertexAttribI4svEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22384,7 +22384,7 @@ static NTSTATUS ext_glVertexAttribI4ubv( void *args )
 {
     struct glVertexAttribI4ubv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4ubv( params->index, params->v );
+    funcs->p_glVertexAttribI4ubv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22392,7 +22392,7 @@ static NTSTATUS ext_glVertexAttribI4ubvEXT( void *args )
 {
     struct glVertexAttribI4ubvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4ubvEXT( params->index, params->v );
+    funcs->p_glVertexAttribI4ubvEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22400,7 +22400,7 @@ static NTSTATUS ext_glVertexAttribI4ui( void *args )
 {
     struct glVertexAttribI4ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4ui( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttribI4ui( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -22408,7 +22408,7 @@ static NTSTATUS ext_glVertexAttribI4uiEXT( void *args )
 {
     struct glVertexAttribI4uiEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4uiEXT( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttribI4uiEXT( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -22416,7 +22416,7 @@ static NTSTATUS ext_glVertexAttribI4uiv( void *args )
 {
     struct glVertexAttribI4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4uiv( params->index, params->v );
+    funcs->p_glVertexAttribI4uiv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22424,7 +22424,7 @@ static NTSTATUS ext_glVertexAttribI4uivEXT( void *args )
 {
     struct glVertexAttribI4uivEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4uivEXT( params->index, params->v );
+    funcs->p_glVertexAttribI4uivEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22432,7 +22432,7 @@ static NTSTATUS ext_glVertexAttribI4usv( void *args )
 {
     struct glVertexAttribI4usv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4usv( params->index, params->v );
+    funcs->p_glVertexAttribI4usv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22440,7 +22440,7 @@ static NTSTATUS ext_glVertexAttribI4usvEXT( void *args )
 {
     struct glVertexAttribI4usvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribI4usvEXT( params->index, params->v );
+    funcs->p_glVertexAttribI4usvEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22448,7 +22448,7 @@ static NTSTATUS ext_glVertexAttribIFormat( void *args )
 {
     struct glVertexAttribIFormat_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribIFormat( params->attribindex, params->size, params->type, params->relativeoffset );
+    funcs->p_glVertexAttribIFormat( params->attribindex, params->size, params->type, params->relativeoffset );
     return STATUS_SUCCESS;
 }
 
@@ -22456,7 +22456,7 @@ static NTSTATUS ext_glVertexAttribIFormatNV( void *args )
 {
     struct glVertexAttribIFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribIFormatNV( params->index, params->size, params->type, params->stride );
+    funcs->p_glVertexAttribIFormatNV( params->index, params->size, params->type, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -22464,7 +22464,7 @@ static NTSTATUS ext_glVertexAttribIPointer( void *args )
 {
     struct glVertexAttribIPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribIPointer( params->index, params->size, params->type, params->stride, params->pointer );
+    funcs->p_glVertexAttribIPointer( params->index, params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -22472,7 +22472,7 @@ static NTSTATUS ext_glVertexAttribIPointerEXT( void *args )
 {
     struct glVertexAttribIPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribIPointerEXT( params->index, params->size, params->type, params->stride, params->pointer );
+    funcs->p_glVertexAttribIPointerEXT( params->index, params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -22480,7 +22480,7 @@ static NTSTATUS ext_glVertexAttribL1d( void *args )
 {
     struct glVertexAttribL1d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1d( params->index, params->x );
+    funcs->p_glVertexAttribL1d( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -22488,7 +22488,7 @@ static NTSTATUS ext_glVertexAttribL1dEXT( void *args )
 {
     struct glVertexAttribL1dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1dEXT( params->index, params->x );
+    funcs->p_glVertexAttribL1dEXT( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -22496,7 +22496,7 @@ static NTSTATUS ext_glVertexAttribL1dv( void *args )
 {
     struct glVertexAttribL1dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1dv( params->index, params->v );
+    funcs->p_glVertexAttribL1dv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22504,7 +22504,7 @@ static NTSTATUS ext_glVertexAttribL1dvEXT( void *args )
 {
     struct glVertexAttribL1dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1dvEXT( params->index, params->v );
+    funcs->p_glVertexAttribL1dvEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22512,7 +22512,7 @@ static NTSTATUS ext_glVertexAttribL1i64NV( void *args )
 {
     struct glVertexAttribL1i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1i64NV( params->index, params->x );
+    funcs->p_glVertexAttribL1i64NV( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -22520,7 +22520,7 @@ static NTSTATUS ext_glVertexAttribL1i64vNV( void *args )
 {
     struct glVertexAttribL1i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1i64vNV( params->index, params->v );
+    funcs->p_glVertexAttribL1i64vNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22528,7 +22528,7 @@ static NTSTATUS ext_glVertexAttribL1ui64ARB( void *args )
 {
     struct glVertexAttribL1ui64ARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1ui64ARB( params->index, params->x );
+    funcs->p_glVertexAttribL1ui64ARB( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -22536,7 +22536,7 @@ static NTSTATUS ext_glVertexAttribL1ui64NV( void *args )
 {
     struct glVertexAttribL1ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1ui64NV( params->index, params->x );
+    funcs->p_glVertexAttribL1ui64NV( params->index, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -22544,7 +22544,7 @@ static NTSTATUS ext_glVertexAttribL1ui64vARB( void *args )
 {
     struct glVertexAttribL1ui64vARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1ui64vARB( params->index, params->v );
+    funcs->p_glVertexAttribL1ui64vARB( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22552,7 +22552,7 @@ static NTSTATUS ext_glVertexAttribL1ui64vNV( void *args )
 {
     struct glVertexAttribL1ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL1ui64vNV( params->index, params->v );
+    funcs->p_glVertexAttribL1ui64vNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22560,7 +22560,7 @@ static NTSTATUS ext_glVertexAttribL2d( void *args )
 {
     struct glVertexAttribL2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL2d( params->index, params->x, params->y );
+    funcs->p_glVertexAttribL2d( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -22568,7 +22568,7 @@ static NTSTATUS ext_glVertexAttribL2dEXT( void *args )
 {
     struct glVertexAttribL2dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL2dEXT( params->index, params->x, params->y );
+    funcs->p_glVertexAttribL2dEXT( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -22576,7 +22576,7 @@ static NTSTATUS ext_glVertexAttribL2dv( void *args )
 {
     struct glVertexAttribL2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL2dv( params->index, params->v );
+    funcs->p_glVertexAttribL2dv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22584,7 +22584,7 @@ static NTSTATUS ext_glVertexAttribL2dvEXT( void *args )
 {
     struct glVertexAttribL2dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL2dvEXT( params->index, params->v );
+    funcs->p_glVertexAttribL2dvEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22592,7 +22592,7 @@ static NTSTATUS ext_glVertexAttribL2i64NV( void *args )
 {
     struct glVertexAttribL2i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL2i64NV( params->index, params->x, params->y );
+    funcs->p_glVertexAttribL2i64NV( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -22600,7 +22600,7 @@ static NTSTATUS ext_glVertexAttribL2i64vNV( void *args )
 {
     struct glVertexAttribL2i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL2i64vNV( params->index, params->v );
+    funcs->p_glVertexAttribL2i64vNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22608,7 +22608,7 @@ static NTSTATUS ext_glVertexAttribL2ui64NV( void *args )
 {
     struct glVertexAttribL2ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL2ui64NV( params->index, params->x, params->y );
+    funcs->p_glVertexAttribL2ui64NV( params->index, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -22616,7 +22616,7 @@ static NTSTATUS ext_glVertexAttribL2ui64vNV( void *args )
 {
     struct glVertexAttribL2ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL2ui64vNV( params->index, params->v );
+    funcs->p_glVertexAttribL2ui64vNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22624,7 +22624,7 @@ static NTSTATUS ext_glVertexAttribL3d( void *args )
 {
     struct glVertexAttribL3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL3d( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttribL3d( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -22632,7 +22632,7 @@ static NTSTATUS ext_glVertexAttribL3dEXT( void *args )
 {
     struct glVertexAttribL3dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL3dEXT( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttribL3dEXT( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -22640,7 +22640,7 @@ static NTSTATUS ext_glVertexAttribL3dv( void *args )
 {
     struct glVertexAttribL3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL3dv( params->index, params->v );
+    funcs->p_glVertexAttribL3dv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22648,7 +22648,7 @@ static NTSTATUS ext_glVertexAttribL3dvEXT( void *args )
 {
     struct glVertexAttribL3dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL3dvEXT( params->index, params->v );
+    funcs->p_glVertexAttribL3dvEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22656,7 +22656,7 @@ static NTSTATUS ext_glVertexAttribL3i64NV( void *args )
 {
     struct glVertexAttribL3i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL3i64NV( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttribL3i64NV( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -22664,7 +22664,7 @@ static NTSTATUS ext_glVertexAttribL3i64vNV( void *args )
 {
     struct glVertexAttribL3i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL3i64vNV( params->index, params->v );
+    funcs->p_glVertexAttribL3i64vNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22672,7 +22672,7 @@ static NTSTATUS ext_glVertexAttribL3ui64NV( void *args )
 {
     struct glVertexAttribL3ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL3ui64NV( params->index, params->x, params->y, params->z );
+    funcs->p_glVertexAttribL3ui64NV( params->index, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -22680,7 +22680,7 @@ static NTSTATUS ext_glVertexAttribL3ui64vNV( void *args )
 {
     struct glVertexAttribL3ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL3ui64vNV( params->index, params->v );
+    funcs->p_glVertexAttribL3ui64vNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22688,7 +22688,7 @@ static NTSTATUS ext_glVertexAttribL4d( void *args )
 {
     struct glVertexAttribL4d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL4d( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttribL4d( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -22696,7 +22696,7 @@ static NTSTATUS ext_glVertexAttribL4dEXT( void *args )
 {
     struct glVertexAttribL4dEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL4dEXT( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttribL4dEXT( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -22704,7 +22704,7 @@ static NTSTATUS ext_glVertexAttribL4dv( void *args )
 {
     struct glVertexAttribL4dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL4dv( params->index, params->v );
+    funcs->p_glVertexAttribL4dv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22712,7 +22712,7 @@ static NTSTATUS ext_glVertexAttribL4dvEXT( void *args )
 {
     struct glVertexAttribL4dvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL4dvEXT( params->index, params->v );
+    funcs->p_glVertexAttribL4dvEXT( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22720,7 +22720,7 @@ static NTSTATUS ext_glVertexAttribL4i64NV( void *args )
 {
     struct glVertexAttribL4i64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL4i64NV( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttribL4i64NV( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -22728,7 +22728,7 @@ static NTSTATUS ext_glVertexAttribL4i64vNV( void *args )
 {
     struct glVertexAttribL4i64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL4i64vNV( params->index, params->v );
+    funcs->p_glVertexAttribL4i64vNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22736,7 +22736,7 @@ static NTSTATUS ext_glVertexAttribL4ui64NV( void *args )
 {
     struct glVertexAttribL4ui64NV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL4ui64NV( params->index, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexAttribL4ui64NV( params->index, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -22744,7 +22744,7 @@ static NTSTATUS ext_glVertexAttribL4ui64vNV( void *args )
 {
     struct glVertexAttribL4ui64vNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribL4ui64vNV( params->index, params->v );
+    funcs->p_glVertexAttribL4ui64vNV( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22752,7 +22752,7 @@ static NTSTATUS ext_glVertexAttribLFormat( void *args )
 {
     struct glVertexAttribLFormat_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribLFormat( params->attribindex, params->size, params->type, params->relativeoffset );
+    funcs->p_glVertexAttribLFormat( params->attribindex, params->size, params->type, params->relativeoffset );
     return STATUS_SUCCESS;
 }
 
@@ -22760,7 +22760,7 @@ static NTSTATUS ext_glVertexAttribLFormatNV( void *args )
 {
     struct glVertexAttribLFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribLFormatNV( params->index, params->size, params->type, params->stride );
+    funcs->p_glVertexAttribLFormatNV( params->index, params->size, params->type, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -22768,7 +22768,7 @@ static NTSTATUS ext_glVertexAttribLPointer( void *args )
 {
     struct glVertexAttribLPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribLPointer( params->index, params->size, params->type, params->stride, params->pointer );
+    funcs->p_glVertexAttribLPointer( params->index, params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -22776,7 +22776,7 @@ static NTSTATUS ext_glVertexAttribLPointerEXT( void *args )
 {
     struct glVertexAttribLPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribLPointerEXT( params->index, params->size, params->type, params->stride, params->pointer );
+    funcs->p_glVertexAttribLPointerEXT( params->index, params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -22784,7 +22784,7 @@ static NTSTATUS ext_glVertexAttribP1ui( void *args )
 {
     struct glVertexAttribP1ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribP1ui( params->index, params->type, params->normalized, params->value );
+    funcs->p_glVertexAttribP1ui( params->index, params->type, params->normalized, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -22792,7 +22792,7 @@ static NTSTATUS ext_glVertexAttribP1uiv( void *args )
 {
     struct glVertexAttribP1uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribP1uiv( params->index, params->type, params->normalized, params->value );
+    funcs->p_glVertexAttribP1uiv( params->index, params->type, params->normalized, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -22800,7 +22800,7 @@ static NTSTATUS ext_glVertexAttribP2ui( void *args )
 {
     struct glVertexAttribP2ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribP2ui( params->index, params->type, params->normalized, params->value );
+    funcs->p_glVertexAttribP2ui( params->index, params->type, params->normalized, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -22808,7 +22808,7 @@ static NTSTATUS ext_glVertexAttribP2uiv( void *args )
 {
     struct glVertexAttribP2uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribP2uiv( params->index, params->type, params->normalized, params->value );
+    funcs->p_glVertexAttribP2uiv( params->index, params->type, params->normalized, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -22816,7 +22816,7 @@ static NTSTATUS ext_glVertexAttribP3ui( void *args )
 {
     struct glVertexAttribP3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribP3ui( params->index, params->type, params->normalized, params->value );
+    funcs->p_glVertexAttribP3ui( params->index, params->type, params->normalized, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -22824,7 +22824,7 @@ static NTSTATUS ext_glVertexAttribP3uiv( void *args )
 {
     struct glVertexAttribP3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribP3uiv( params->index, params->type, params->normalized, params->value );
+    funcs->p_glVertexAttribP3uiv( params->index, params->type, params->normalized, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -22832,7 +22832,7 @@ static NTSTATUS ext_glVertexAttribP4ui( void *args )
 {
     struct glVertexAttribP4ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribP4ui( params->index, params->type, params->normalized, params->value );
+    funcs->p_glVertexAttribP4ui( params->index, params->type, params->normalized, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -22840,7 +22840,7 @@ static NTSTATUS ext_glVertexAttribP4uiv( void *args )
 {
     struct glVertexAttribP4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribP4uiv( params->index, params->type, params->normalized, params->value );
+    funcs->p_glVertexAttribP4uiv( params->index, params->type, params->normalized, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -22848,7 +22848,7 @@ static NTSTATUS ext_glVertexAttribParameteriAMD( void *args )
 {
     struct glVertexAttribParameteriAMD_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribParameteriAMD( params->index, params->pname, params->param );
+    funcs->p_glVertexAttribParameteriAMD( params->index, params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -22856,7 +22856,7 @@ static NTSTATUS ext_glVertexAttribPointer( void *args )
 {
     struct glVertexAttribPointer_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribPointer( params->index, params->size, params->type, params->normalized, params->stride, params->pointer );
+    funcs->p_glVertexAttribPointer( params->index, params->size, params->type, params->normalized, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -22864,7 +22864,7 @@ static NTSTATUS ext_glVertexAttribPointerARB( void *args )
 {
     struct glVertexAttribPointerARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribPointerARB( params->index, params->size, params->type, params->normalized, params->stride, params->pointer );
+    funcs->p_glVertexAttribPointerARB( params->index, params->size, params->type, params->normalized, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -22872,7 +22872,7 @@ static NTSTATUS ext_glVertexAttribPointerNV( void *args )
 {
     struct glVertexAttribPointerNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribPointerNV( params->index, params->fsize, params->type, params->stride, params->pointer );
+    funcs->p_glVertexAttribPointerNV( params->index, params->fsize, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -22880,7 +22880,7 @@ static NTSTATUS ext_glVertexAttribs1dvNV( void *args )
 {
     struct glVertexAttribs1dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs1dvNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs1dvNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22888,7 +22888,7 @@ static NTSTATUS ext_glVertexAttribs1fvNV( void *args )
 {
     struct glVertexAttribs1fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs1fvNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs1fvNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22896,7 +22896,7 @@ static NTSTATUS ext_glVertexAttribs1hvNV( void *args )
 {
     struct glVertexAttribs1hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs1hvNV( params->index, params->n, params->v );
+    funcs->p_glVertexAttribs1hvNV( params->index, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22904,7 +22904,7 @@ static NTSTATUS ext_glVertexAttribs1svNV( void *args )
 {
     struct glVertexAttribs1svNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs1svNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs1svNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22912,7 +22912,7 @@ static NTSTATUS ext_glVertexAttribs2dvNV( void *args )
 {
     struct glVertexAttribs2dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs2dvNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs2dvNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22920,7 +22920,7 @@ static NTSTATUS ext_glVertexAttribs2fvNV( void *args )
 {
     struct glVertexAttribs2fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs2fvNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs2fvNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22928,7 +22928,7 @@ static NTSTATUS ext_glVertexAttribs2hvNV( void *args )
 {
     struct glVertexAttribs2hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs2hvNV( params->index, params->n, params->v );
+    funcs->p_glVertexAttribs2hvNV( params->index, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22936,7 +22936,7 @@ static NTSTATUS ext_glVertexAttribs2svNV( void *args )
 {
     struct glVertexAttribs2svNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs2svNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs2svNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22944,7 +22944,7 @@ static NTSTATUS ext_glVertexAttribs3dvNV( void *args )
 {
     struct glVertexAttribs3dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs3dvNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs3dvNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22952,7 +22952,7 @@ static NTSTATUS ext_glVertexAttribs3fvNV( void *args )
 {
     struct glVertexAttribs3fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs3fvNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs3fvNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22960,7 +22960,7 @@ static NTSTATUS ext_glVertexAttribs3hvNV( void *args )
 {
     struct glVertexAttribs3hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs3hvNV( params->index, params->n, params->v );
+    funcs->p_glVertexAttribs3hvNV( params->index, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22968,7 +22968,7 @@ static NTSTATUS ext_glVertexAttribs3svNV( void *args )
 {
     struct glVertexAttribs3svNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs3svNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs3svNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22976,7 +22976,7 @@ static NTSTATUS ext_glVertexAttribs4dvNV( void *args )
 {
     struct glVertexAttribs4dvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs4dvNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs4dvNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22984,7 +22984,7 @@ static NTSTATUS ext_glVertexAttribs4fvNV( void *args )
 {
     struct glVertexAttribs4fvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs4fvNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs4fvNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -22992,7 +22992,7 @@ static NTSTATUS ext_glVertexAttribs4hvNV( void *args )
 {
     struct glVertexAttribs4hvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs4hvNV( params->index, params->n, params->v );
+    funcs->p_glVertexAttribs4hvNV( params->index, params->n, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23000,7 +23000,7 @@ static NTSTATUS ext_glVertexAttribs4svNV( void *args )
 {
     struct glVertexAttribs4svNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs4svNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs4svNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23008,7 +23008,7 @@ static NTSTATUS ext_glVertexAttribs4ubvNV( void *args )
 {
     struct glVertexAttribs4ubvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexAttribs4ubvNV( params->index, params->count, params->v );
+    funcs->p_glVertexAttribs4ubvNV( params->index, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23016,7 +23016,7 @@ static NTSTATUS ext_glVertexBindingDivisor( void *args )
 {
     struct glVertexBindingDivisor_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexBindingDivisor( params->bindingindex, params->divisor );
+    funcs->p_glVertexBindingDivisor( params->bindingindex, params->divisor );
     return STATUS_SUCCESS;
 }
 
@@ -23024,7 +23024,7 @@ static NTSTATUS ext_glVertexBlendARB( void *args )
 {
     struct glVertexBlendARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexBlendARB( params->count );
+    funcs->p_glVertexBlendARB( params->count );
     return STATUS_SUCCESS;
 }
 
@@ -23032,7 +23032,7 @@ static NTSTATUS ext_glVertexBlendEnvfATI( void *args )
 {
     struct glVertexBlendEnvfATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexBlendEnvfATI( params->pname, params->param );
+    funcs->p_glVertexBlendEnvfATI( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -23040,7 +23040,7 @@ static NTSTATUS ext_glVertexBlendEnviATI( void *args )
 {
     struct glVertexBlendEnviATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexBlendEnviATI( params->pname, params->param );
+    funcs->p_glVertexBlendEnviATI( params->pname, params->param );
     return STATUS_SUCCESS;
 }
 
@@ -23048,7 +23048,7 @@ static NTSTATUS ext_glVertexFormatNV( void *args )
 {
     struct glVertexFormatNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexFormatNV( params->size, params->type, params->stride );
+    funcs->p_glVertexFormatNV( params->size, params->type, params->stride );
     return STATUS_SUCCESS;
 }
 
@@ -23056,7 +23056,7 @@ static NTSTATUS ext_glVertexP2ui( void *args )
 {
     struct glVertexP2ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexP2ui( params->type, params->value );
+    funcs->p_glVertexP2ui( params->type, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -23064,7 +23064,7 @@ static NTSTATUS ext_glVertexP2uiv( void *args )
 {
     struct glVertexP2uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexP2uiv( params->type, params->value );
+    funcs->p_glVertexP2uiv( params->type, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -23072,7 +23072,7 @@ static NTSTATUS ext_glVertexP3ui( void *args )
 {
     struct glVertexP3ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexP3ui( params->type, params->value );
+    funcs->p_glVertexP3ui( params->type, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -23080,7 +23080,7 @@ static NTSTATUS ext_glVertexP3uiv( void *args )
 {
     struct glVertexP3uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexP3uiv( params->type, params->value );
+    funcs->p_glVertexP3uiv( params->type, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -23088,7 +23088,7 @@ static NTSTATUS ext_glVertexP4ui( void *args )
 {
     struct glVertexP4ui_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexP4ui( params->type, params->value );
+    funcs->p_glVertexP4ui( params->type, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -23096,7 +23096,7 @@ static NTSTATUS ext_glVertexP4uiv( void *args )
 {
     struct glVertexP4uiv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexP4uiv( params->type, params->value );
+    funcs->p_glVertexP4uiv( params->type, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -23104,7 +23104,7 @@ static NTSTATUS ext_glVertexPointerEXT( void *args )
 {
     struct glVertexPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexPointerEXT( params->size, params->type, params->stride, params->count, params->pointer );
+    funcs->p_glVertexPointerEXT( params->size, params->type, params->stride, params->count, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -23112,7 +23112,7 @@ static NTSTATUS ext_glVertexPointerListIBM( void *args )
 {
     struct glVertexPointerListIBM_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexPointerListIBM( params->size, params->type, params->stride, params->pointer, params->ptrstride );
+    funcs->p_glVertexPointerListIBM( params->size, params->type, params->stride, params->pointer, params->ptrstride );
     return STATUS_SUCCESS;
 }
 
@@ -23120,7 +23120,7 @@ static NTSTATUS ext_glVertexPointervINTEL( void *args )
 {
     struct glVertexPointervINTEL_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexPointervINTEL( params->size, params->type, params->pointer );
+    funcs->p_glVertexPointervINTEL( params->size, params->type, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -23128,7 +23128,7 @@ static NTSTATUS ext_glVertexStream1dATI( void *args )
 {
     struct glVertexStream1dATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream1dATI( params->stream, params->x );
+    funcs->p_glVertexStream1dATI( params->stream, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -23136,7 +23136,7 @@ static NTSTATUS ext_glVertexStream1dvATI( void *args )
 {
     struct glVertexStream1dvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream1dvATI( params->stream, params->coords );
+    funcs->p_glVertexStream1dvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23144,7 +23144,7 @@ static NTSTATUS ext_glVertexStream1fATI( void *args )
 {
     struct glVertexStream1fATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream1fATI( params->stream, params->x );
+    funcs->p_glVertexStream1fATI( params->stream, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -23152,7 +23152,7 @@ static NTSTATUS ext_glVertexStream1fvATI( void *args )
 {
     struct glVertexStream1fvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream1fvATI( params->stream, params->coords );
+    funcs->p_glVertexStream1fvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23160,7 +23160,7 @@ static NTSTATUS ext_glVertexStream1iATI( void *args )
 {
     struct glVertexStream1iATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream1iATI( params->stream, params->x );
+    funcs->p_glVertexStream1iATI( params->stream, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -23168,7 +23168,7 @@ static NTSTATUS ext_glVertexStream1ivATI( void *args )
 {
     struct glVertexStream1ivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream1ivATI( params->stream, params->coords );
+    funcs->p_glVertexStream1ivATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23176,7 +23176,7 @@ static NTSTATUS ext_glVertexStream1sATI( void *args )
 {
     struct glVertexStream1sATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream1sATI( params->stream, params->x );
+    funcs->p_glVertexStream1sATI( params->stream, params->x );
     return STATUS_SUCCESS;
 }
 
@@ -23184,7 +23184,7 @@ static NTSTATUS ext_glVertexStream1svATI( void *args )
 {
     struct glVertexStream1svATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream1svATI( params->stream, params->coords );
+    funcs->p_glVertexStream1svATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23192,7 +23192,7 @@ static NTSTATUS ext_glVertexStream2dATI( void *args )
 {
     struct glVertexStream2dATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream2dATI( params->stream, params->x, params->y );
+    funcs->p_glVertexStream2dATI( params->stream, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23200,7 +23200,7 @@ static NTSTATUS ext_glVertexStream2dvATI( void *args )
 {
     struct glVertexStream2dvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream2dvATI( params->stream, params->coords );
+    funcs->p_glVertexStream2dvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23208,7 +23208,7 @@ static NTSTATUS ext_glVertexStream2fATI( void *args )
 {
     struct glVertexStream2fATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream2fATI( params->stream, params->x, params->y );
+    funcs->p_glVertexStream2fATI( params->stream, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23216,7 +23216,7 @@ static NTSTATUS ext_glVertexStream2fvATI( void *args )
 {
     struct glVertexStream2fvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream2fvATI( params->stream, params->coords );
+    funcs->p_glVertexStream2fvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23224,7 +23224,7 @@ static NTSTATUS ext_glVertexStream2iATI( void *args )
 {
     struct glVertexStream2iATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream2iATI( params->stream, params->x, params->y );
+    funcs->p_glVertexStream2iATI( params->stream, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23232,7 +23232,7 @@ static NTSTATUS ext_glVertexStream2ivATI( void *args )
 {
     struct glVertexStream2ivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream2ivATI( params->stream, params->coords );
+    funcs->p_glVertexStream2ivATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23240,7 +23240,7 @@ static NTSTATUS ext_glVertexStream2sATI( void *args )
 {
     struct glVertexStream2sATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream2sATI( params->stream, params->x, params->y );
+    funcs->p_glVertexStream2sATI( params->stream, params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23248,7 +23248,7 @@ static NTSTATUS ext_glVertexStream2svATI( void *args )
 {
     struct glVertexStream2svATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream2svATI( params->stream, params->coords );
+    funcs->p_glVertexStream2svATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23256,7 +23256,7 @@ static NTSTATUS ext_glVertexStream3dATI( void *args )
 {
     struct glVertexStream3dATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream3dATI( params->stream, params->x, params->y, params->z );
+    funcs->p_glVertexStream3dATI( params->stream, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23264,7 +23264,7 @@ static NTSTATUS ext_glVertexStream3dvATI( void *args )
 {
     struct glVertexStream3dvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream3dvATI( params->stream, params->coords );
+    funcs->p_glVertexStream3dvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23272,7 +23272,7 @@ static NTSTATUS ext_glVertexStream3fATI( void *args )
 {
     struct glVertexStream3fATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream3fATI( params->stream, params->x, params->y, params->z );
+    funcs->p_glVertexStream3fATI( params->stream, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23280,7 +23280,7 @@ static NTSTATUS ext_glVertexStream3fvATI( void *args )
 {
     struct glVertexStream3fvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream3fvATI( params->stream, params->coords );
+    funcs->p_glVertexStream3fvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23288,7 +23288,7 @@ static NTSTATUS ext_glVertexStream3iATI( void *args )
 {
     struct glVertexStream3iATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream3iATI( params->stream, params->x, params->y, params->z );
+    funcs->p_glVertexStream3iATI( params->stream, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23296,7 +23296,7 @@ static NTSTATUS ext_glVertexStream3ivATI( void *args )
 {
     struct glVertexStream3ivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream3ivATI( params->stream, params->coords );
+    funcs->p_glVertexStream3ivATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23304,7 +23304,7 @@ static NTSTATUS ext_glVertexStream3sATI( void *args )
 {
     struct glVertexStream3sATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream3sATI( params->stream, params->x, params->y, params->z );
+    funcs->p_glVertexStream3sATI( params->stream, params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23312,7 +23312,7 @@ static NTSTATUS ext_glVertexStream3svATI( void *args )
 {
     struct glVertexStream3svATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream3svATI( params->stream, params->coords );
+    funcs->p_glVertexStream3svATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23320,7 +23320,7 @@ static NTSTATUS ext_glVertexStream4dATI( void *args )
 {
     struct glVertexStream4dATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream4dATI( params->stream, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexStream4dATI( params->stream, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -23328,7 +23328,7 @@ static NTSTATUS ext_glVertexStream4dvATI( void *args )
 {
     struct glVertexStream4dvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream4dvATI( params->stream, params->coords );
+    funcs->p_glVertexStream4dvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23336,7 +23336,7 @@ static NTSTATUS ext_glVertexStream4fATI( void *args )
 {
     struct glVertexStream4fATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream4fATI( params->stream, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexStream4fATI( params->stream, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -23344,7 +23344,7 @@ static NTSTATUS ext_glVertexStream4fvATI( void *args )
 {
     struct glVertexStream4fvATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream4fvATI( params->stream, params->coords );
+    funcs->p_glVertexStream4fvATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23352,7 +23352,7 @@ static NTSTATUS ext_glVertexStream4iATI( void *args )
 {
     struct glVertexStream4iATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream4iATI( params->stream, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexStream4iATI( params->stream, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -23360,7 +23360,7 @@ static NTSTATUS ext_glVertexStream4ivATI( void *args )
 {
     struct glVertexStream4ivATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream4ivATI( params->stream, params->coords );
+    funcs->p_glVertexStream4ivATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23368,7 +23368,7 @@ static NTSTATUS ext_glVertexStream4sATI( void *args )
 {
     struct glVertexStream4sATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream4sATI( params->stream, params->x, params->y, params->z, params->w );
+    funcs->p_glVertexStream4sATI( params->stream, params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -23376,7 +23376,7 @@ static NTSTATUS ext_glVertexStream4svATI( void *args )
 {
     struct glVertexStream4svATI_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexStream4svATI( params->stream, params->coords );
+    funcs->p_glVertexStream4svATI( params->stream, params->coords );
     return STATUS_SUCCESS;
 }
 
@@ -23384,7 +23384,7 @@ static NTSTATUS ext_glVertexWeightPointerEXT( void *args )
 {
     struct glVertexWeightPointerEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexWeightPointerEXT( params->size, params->type, params->stride, params->pointer );
+    funcs->p_glVertexWeightPointerEXT( params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -23392,7 +23392,7 @@ static NTSTATUS ext_glVertexWeightfEXT( void *args )
 {
     struct glVertexWeightfEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexWeightfEXT( params->weight );
+    funcs->p_glVertexWeightfEXT( params->weight );
     return STATUS_SUCCESS;
 }
 
@@ -23400,7 +23400,7 @@ static NTSTATUS ext_glVertexWeightfvEXT( void *args )
 {
     struct glVertexWeightfvEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexWeightfvEXT( params->weight );
+    funcs->p_glVertexWeightfvEXT( params->weight );
     return STATUS_SUCCESS;
 }
 
@@ -23408,7 +23408,7 @@ static NTSTATUS ext_glVertexWeighthNV( void *args )
 {
     struct glVertexWeighthNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexWeighthNV( params->weight );
+    funcs->p_glVertexWeighthNV( params->weight );
     return STATUS_SUCCESS;
 }
 
@@ -23416,7 +23416,7 @@ static NTSTATUS ext_glVertexWeighthvNV( void *args )
 {
     struct glVertexWeighthvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVertexWeighthvNV( params->weight );
+    funcs->p_glVertexWeighthvNV( params->weight );
     return STATUS_SUCCESS;
 }
 
@@ -23424,7 +23424,7 @@ static NTSTATUS ext_glVideoCaptureNV( void *args )
 {
     struct glVideoCaptureNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_glVideoCaptureNV( params->video_capture_slot, params->sequence_num, params->capture_time );
+    params->ret = funcs->p_glVideoCaptureNV( params->video_capture_slot, params->sequence_num, params->capture_time );
     return STATUS_SUCCESS;
 }
 
@@ -23432,7 +23432,7 @@ static NTSTATUS ext_glVideoCaptureStreamParameterdvNV( void *args )
 {
     struct glVideoCaptureStreamParameterdvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVideoCaptureStreamParameterdvNV( params->video_capture_slot, params->stream, params->pname, params->params );
+    funcs->p_glVideoCaptureStreamParameterdvNV( params->video_capture_slot, params->stream, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -23440,7 +23440,7 @@ static NTSTATUS ext_glVideoCaptureStreamParameterfvNV( void *args )
 {
     struct glVideoCaptureStreamParameterfvNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVideoCaptureStreamParameterfvNV( params->video_capture_slot, params->stream, params->pname, params->params );
+    funcs->p_glVideoCaptureStreamParameterfvNV( params->video_capture_slot, params->stream, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -23448,7 +23448,7 @@ static NTSTATUS ext_glVideoCaptureStreamParameterivNV( void *args )
 {
     struct glVideoCaptureStreamParameterivNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glVideoCaptureStreamParameterivNV( params->video_capture_slot, params->stream, params->pname, params->params );
+    funcs->p_glVideoCaptureStreamParameterivNV( params->video_capture_slot, params->stream, params->pname, params->params );
     return STATUS_SUCCESS;
 }
 
@@ -23456,7 +23456,7 @@ static NTSTATUS ext_glViewportArrayv( void *args )
 {
     struct glViewportArrayv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glViewportArrayv( params->first, params->count, params->v );
+    funcs->p_glViewportArrayv( params->first, params->count, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23464,7 +23464,7 @@ static NTSTATUS ext_glViewportIndexedf( void *args )
 {
     struct glViewportIndexedf_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glViewportIndexedf( params->index, params->x, params->y, params->w, params->h );
+    funcs->p_glViewportIndexedf( params->index, params->x, params->y, params->w, params->h );
     return STATUS_SUCCESS;
 }
 
@@ -23472,7 +23472,7 @@ static NTSTATUS ext_glViewportIndexedfv( void *args )
 {
     struct glViewportIndexedfv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glViewportIndexedfv( params->index, params->v );
+    funcs->p_glViewportIndexedfv( params->index, params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23480,7 +23480,7 @@ static NTSTATUS ext_glViewportPositionWScaleNV( void *args )
 {
     struct glViewportPositionWScaleNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glViewportPositionWScaleNV( params->index, params->xcoeff, params->ycoeff );
+    funcs->p_glViewportPositionWScaleNV( params->index, params->xcoeff, params->ycoeff );
     return STATUS_SUCCESS;
 }
 
@@ -23488,7 +23488,7 @@ static NTSTATUS ext_glViewportSwizzleNV( void *args )
 {
     struct glViewportSwizzleNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glViewportSwizzleNV( params->index, params->swizzlex, params->swizzley, params->swizzlez, params->swizzlew );
+    funcs->p_glViewportSwizzleNV( params->index, params->swizzlex, params->swizzley, params->swizzlez, params->swizzlew );
     return STATUS_SUCCESS;
 }
 
@@ -23496,7 +23496,7 @@ static NTSTATUS ext_glWaitSemaphoreEXT( void *args )
 {
     struct glWaitSemaphoreEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWaitSemaphoreEXT( params->semaphore, params->numBufferBarriers, params->buffers, params->numTextureBarriers, params->textures, params->srcLayouts );
+    funcs->p_glWaitSemaphoreEXT( params->semaphore, params->numBufferBarriers, params->buffers, params->numTextureBarriers, params->textures, params->srcLayouts );
     return STATUS_SUCCESS;
 }
 
@@ -23504,7 +23504,7 @@ static NTSTATUS ext_glWaitSemaphoreui64NVX( void *args )
 {
     struct glWaitSemaphoreui64NVX_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWaitSemaphoreui64NVX( params->waitGpu, params->fenceObjectCount, params->semaphoreArray, params->fenceValueArray );
+    funcs->p_glWaitSemaphoreui64NVX( params->waitGpu, params->fenceObjectCount, params->semaphoreArray, params->fenceValueArray );
     return STATUS_SUCCESS;
 }
 
@@ -23512,7 +23512,7 @@ NTSTATUS ext_glWaitSync( void *args )
 {
     struct glWaitSync_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWaitSync( params->sync, params->flags, params->timeout );
+    funcs->p_glWaitSync( params->sync, params->flags, params->timeout );
     return STATUS_SUCCESS;
 }
 
@@ -23520,7 +23520,7 @@ static NTSTATUS ext_glWaitVkSemaphoreNV( void *args )
 {
     struct glWaitVkSemaphoreNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWaitVkSemaphoreNV( params->vkSemaphore );
+    funcs->p_glWaitVkSemaphoreNV( params->vkSemaphore );
     return STATUS_SUCCESS;
 }
 
@@ -23528,7 +23528,7 @@ static NTSTATUS ext_glWeightPathsNV( void *args )
 {
     struct glWeightPathsNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightPathsNV( params->resultPath, params->numPaths, params->paths, params->weights );
+    funcs->p_glWeightPathsNV( params->resultPath, params->numPaths, params->paths, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -23536,7 +23536,7 @@ static NTSTATUS ext_glWeightPointerARB( void *args )
 {
     struct glWeightPointerARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightPointerARB( params->size, params->type, params->stride, params->pointer );
+    funcs->p_glWeightPointerARB( params->size, params->type, params->stride, params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -23544,7 +23544,7 @@ static NTSTATUS ext_glWeightbvARB( void *args )
 {
     struct glWeightbvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightbvARB( params->size, params->weights );
+    funcs->p_glWeightbvARB( params->size, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -23552,7 +23552,7 @@ static NTSTATUS ext_glWeightdvARB( void *args )
 {
     struct glWeightdvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightdvARB( params->size, params->weights );
+    funcs->p_glWeightdvARB( params->size, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -23560,7 +23560,7 @@ static NTSTATUS ext_glWeightfvARB( void *args )
 {
     struct glWeightfvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightfvARB( params->size, params->weights );
+    funcs->p_glWeightfvARB( params->size, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -23568,7 +23568,7 @@ static NTSTATUS ext_glWeightivARB( void *args )
 {
     struct glWeightivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightivARB( params->size, params->weights );
+    funcs->p_glWeightivARB( params->size, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -23576,7 +23576,7 @@ static NTSTATUS ext_glWeightsvARB( void *args )
 {
     struct glWeightsvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightsvARB( params->size, params->weights );
+    funcs->p_glWeightsvARB( params->size, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -23584,7 +23584,7 @@ static NTSTATUS ext_glWeightubvARB( void *args )
 {
     struct glWeightubvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightubvARB( params->size, params->weights );
+    funcs->p_glWeightubvARB( params->size, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -23592,7 +23592,7 @@ static NTSTATUS ext_glWeightuivARB( void *args )
 {
     struct glWeightuivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightuivARB( params->size, params->weights );
+    funcs->p_glWeightuivARB( params->size, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -23600,7 +23600,7 @@ static NTSTATUS ext_glWeightusvARB( void *args )
 {
     struct glWeightusvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWeightusvARB( params->size, params->weights );
+    funcs->p_glWeightusvARB( params->size, params->weights );
     return STATUS_SUCCESS;
 }
 
@@ -23608,7 +23608,7 @@ static NTSTATUS ext_glWindowPos2d( void *args )
 {
     struct glWindowPos2d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2d( params->x, params->y );
+    funcs->p_glWindowPos2d( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23616,7 +23616,7 @@ static NTSTATUS ext_glWindowPos2dARB( void *args )
 {
     struct glWindowPos2dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2dARB( params->x, params->y );
+    funcs->p_glWindowPos2dARB( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23624,7 +23624,7 @@ static NTSTATUS ext_glWindowPos2dMESA( void *args )
 {
     struct glWindowPos2dMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2dMESA( params->x, params->y );
+    funcs->p_glWindowPos2dMESA( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23632,7 +23632,7 @@ static NTSTATUS ext_glWindowPos2dv( void *args )
 {
     struct glWindowPos2dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2dv( params->v );
+    funcs->p_glWindowPos2dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23640,7 +23640,7 @@ static NTSTATUS ext_glWindowPos2dvARB( void *args )
 {
     struct glWindowPos2dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2dvARB( params->v );
+    funcs->p_glWindowPos2dvARB( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23648,7 +23648,7 @@ static NTSTATUS ext_glWindowPos2dvMESA( void *args )
 {
     struct glWindowPos2dvMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2dvMESA( params->v );
+    funcs->p_glWindowPos2dvMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23656,7 +23656,7 @@ static NTSTATUS ext_glWindowPos2f( void *args )
 {
     struct glWindowPos2f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2f( params->x, params->y );
+    funcs->p_glWindowPos2f( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23664,7 +23664,7 @@ static NTSTATUS ext_glWindowPos2fARB( void *args )
 {
     struct glWindowPos2fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2fARB( params->x, params->y );
+    funcs->p_glWindowPos2fARB( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23672,7 +23672,7 @@ static NTSTATUS ext_glWindowPos2fMESA( void *args )
 {
     struct glWindowPos2fMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2fMESA( params->x, params->y );
+    funcs->p_glWindowPos2fMESA( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23680,7 +23680,7 @@ static NTSTATUS ext_glWindowPos2fv( void *args )
 {
     struct glWindowPos2fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2fv( params->v );
+    funcs->p_glWindowPos2fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23688,7 +23688,7 @@ static NTSTATUS ext_glWindowPos2fvARB( void *args )
 {
     struct glWindowPos2fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2fvARB( params->v );
+    funcs->p_glWindowPos2fvARB( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23696,7 +23696,7 @@ static NTSTATUS ext_glWindowPos2fvMESA( void *args )
 {
     struct glWindowPos2fvMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2fvMESA( params->v );
+    funcs->p_glWindowPos2fvMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23704,7 +23704,7 @@ static NTSTATUS ext_glWindowPos2i( void *args )
 {
     struct glWindowPos2i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2i( params->x, params->y );
+    funcs->p_glWindowPos2i( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23712,7 +23712,7 @@ static NTSTATUS ext_glWindowPos2iARB( void *args )
 {
     struct glWindowPos2iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2iARB( params->x, params->y );
+    funcs->p_glWindowPos2iARB( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23720,7 +23720,7 @@ static NTSTATUS ext_glWindowPos2iMESA( void *args )
 {
     struct glWindowPos2iMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2iMESA( params->x, params->y );
+    funcs->p_glWindowPos2iMESA( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23728,7 +23728,7 @@ static NTSTATUS ext_glWindowPos2iv( void *args )
 {
     struct glWindowPos2iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2iv( params->v );
+    funcs->p_glWindowPos2iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23736,7 +23736,7 @@ static NTSTATUS ext_glWindowPos2ivARB( void *args )
 {
     struct glWindowPos2ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2ivARB( params->v );
+    funcs->p_glWindowPos2ivARB( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23744,7 +23744,7 @@ static NTSTATUS ext_glWindowPos2ivMESA( void *args )
 {
     struct glWindowPos2ivMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2ivMESA( params->v );
+    funcs->p_glWindowPos2ivMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23752,7 +23752,7 @@ static NTSTATUS ext_glWindowPos2s( void *args )
 {
     struct glWindowPos2s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2s( params->x, params->y );
+    funcs->p_glWindowPos2s( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23760,7 +23760,7 @@ static NTSTATUS ext_glWindowPos2sARB( void *args )
 {
     struct glWindowPos2sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2sARB( params->x, params->y );
+    funcs->p_glWindowPos2sARB( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23768,7 +23768,7 @@ static NTSTATUS ext_glWindowPos2sMESA( void *args )
 {
     struct glWindowPos2sMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2sMESA( params->x, params->y );
+    funcs->p_glWindowPos2sMESA( params->x, params->y );
     return STATUS_SUCCESS;
 }
 
@@ -23776,7 +23776,7 @@ static NTSTATUS ext_glWindowPos2sv( void *args )
 {
     struct glWindowPos2sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2sv( params->v );
+    funcs->p_glWindowPos2sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23784,7 +23784,7 @@ static NTSTATUS ext_glWindowPos2svARB( void *args )
 {
     struct glWindowPos2svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2svARB( params->v );
+    funcs->p_glWindowPos2svARB( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23792,7 +23792,7 @@ static NTSTATUS ext_glWindowPos2svMESA( void *args )
 {
     struct glWindowPos2svMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos2svMESA( params->v );
+    funcs->p_glWindowPos2svMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23800,7 +23800,7 @@ static NTSTATUS ext_glWindowPos3d( void *args )
 {
     struct glWindowPos3d_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3d( params->x, params->y, params->z );
+    funcs->p_glWindowPos3d( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23808,7 +23808,7 @@ static NTSTATUS ext_glWindowPos3dARB( void *args )
 {
     struct glWindowPos3dARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3dARB( params->x, params->y, params->z );
+    funcs->p_glWindowPos3dARB( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23816,7 +23816,7 @@ static NTSTATUS ext_glWindowPos3dMESA( void *args )
 {
     struct glWindowPos3dMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3dMESA( params->x, params->y, params->z );
+    funcs->p_glWindowPos3dMESA( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23824,7 +23824,7 @@ static NTSTATUS ext_glWindowPos3dv( void *args )
 {
     struct glWindowPos3dv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3dv( params->v );
+    funcs->p_glWindowPos3dv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23832,7 +23832,7 @@ static NTSTATUS ext_glWindowPos3dvARB( void *args )
 {
     struct glWindowPos3dvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3dvARB( params->v );
+    funcs->p_glWindowPos3dvARB( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23840,7 +23840,7 @@ static NTSTATUS ext_glWindowPos3dvMESA( void *args )
 {
     struct glWindowPos3dvMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3dvMESA( params->v );
+    funcs->p_glWindowPos3dvMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23848,7 +23848,7 @@ static NTSTATUS ext_glWindowPos3f( void *args )
 {
     struct glWindowPos3f_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3f( params->x, params->y, params->z );
+    funcs->p_glWindowPos3f( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23856,7 +23856,7 @@ static NTSTATUS ext_glWindowPos3fARB( void *args )
 {
     struct glWindowPos3fARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3fARB( params->x, params->y, params->z );
+    funcs->p_glWindowPos3fARB( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23864,7 +23864,7 @@ static NTSTATUS ext_glWindowPos3fMESA( void *args )
 {
     struct glWindowPos3fMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3fMESA( params->x, params->y, params->z );
+    funcs->p_glWindowPos3fMESA( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23872,7 +23872,7 @@ static NTSTATUS ext_glWindowPos3fv( void *args )
 {
     struct glWindowPos3fv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3fv( params->v );
+    funcs->p_glWindowPos3fv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23880,7 +23880,7 @@ static NTSTATUS ext_glWindowPos3fvARB( void *args )
 {
     struct glWindowPos3fvARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3fvARB( params->v );
+    funcs->p_glWindowPos3fvARB( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23888,7 +23888,7 @@ static NTSTATUS ext_glWindowPos3fvMESA( void *args )
 {
     struct glWindowPos3fvMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3fvMESA( params->v );
+    funcs->p_glWindowPos3fvMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23896,7 +23896,7 @@ static NTSTATUS ext_glWindowPos3i( void *args )
 {
     struct glWindowPos3i_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3i( params->x, params->y, params->z );
+    funcs->p_glWindowPos3i( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23904,7 +23904,7 @@ static NTSTATUS ext_glWindowPos3iARB( void *args )
 {
     struct glWindowPos3iARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3iARB( params->x, params->y, params->z );
+    funcs->p_glWindowPos3iARB( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23912,7 +23912,7 @@ static NTSTATUS ext_glWindowPos3iMESA( void *args )
 {
     struct glWindowPos3iMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3iMESA( params->x, params->y, params->z );
+    funcs->p_glWindowPos3iMESA( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23920,7 +23920,7 @@ static NTSTATUS ext_glWindowPos3iv( void *args )
 {
     struct glWindowPos3iv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3iv( params->v );
+    funcs->p_glWindowPos3iv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23928,7 +23928,7 @@ static NTSTATUS ext_glWindowPos3ivARB( void *args )
 {
     struct glWindowPos3ivARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3ivARB( params->v );
+    funcs->p_glWindowPos3ivARB( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23936,7 +23936,7 @@ static NTSTATUS ext_glWindowPos3ivMESA( void *args )
 {
     struct glWindowPos3ivMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3ivMESA( params->v );
+    funcs->p_glWindowPos3ivMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23944,7 +23944,7 @@ static NTSTATUS ext_glWindowPos3s( void *args )
 {
     struct glWindowPos3s_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3s( params->x, params->y, params->z );
+    funcs->p_glWindowPos3s( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23952,7 +23952,7 @@ static NTSTATUS ext_glWindowPos3sARB( void *args )
 {
     struct glWindowPos3sARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3sARB( params->x, params->y, params->z );
+    funcs->p_glWindowPos3sARB( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23960,7 +23960,7 @@ static NTSTATUS ext_glWindowPos3sMESA( void *args )
 {
     struct glWindowPos3sMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3sMESA( params->x, params->y, params->z );
+    funcs->p_glWindowPos3sMESA( params->x, params->y, params->z );
     return STATUS_SUCCESS;
 }
 
@@ -23968,7 +23968,7 @@ static NTSTATUS ext_glWindowPos3sv( void *args )
 {
     struct glWindowPos3sv_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3sv( params->v );
+    funcs->p_glWindowPos3sv( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23976,7 +23976,7 @@ static NTSTATUS ext_glWindowPos3svARB( void *args )
 {
     struct glWindowPos3svARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3svARB( params->v );
+    funcs->p_glWindowPos3svARB( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23984,7 +23984,7 @@ static NTSTATUS ext_glWindowPos3svMESA( void *args )
 {
     struct glWindowPos3svMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos3svMESA( params->v );
+    funcs->p_glWindowPos3svMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -23992,7 +23992,7 @@ static NTSTATUS ext_glWindowPos4dMESA( void *args )
 {
     struct glWindowPos4dMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos4dMESA( params->x, params->y, params->z, params->w );
+    funcs->p_glWindowPos4dMESA( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -24000,7 +24000,7 @@ static NTSTATUS ext_glWindowPos4dvMESA( void *args )
 {
     struct glWindowPos4dvMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos4dvMESA( params->v );
+    funcs->p_glWindowPos4dvMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -24008,7 +24008,7 @@ static NTSTATUS ext_glWindowPos4fMESA( void *args )
 {
     struct glWindowPos4fMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos4fMESA( params->x, params->y, params->z, params->w );
+    funcs->p_glWindowPos4fMESA( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -24016,7 +24016,7 @@ static NTSTATUS ext_glWindowPos4fvMESA( void *args )
 {
     struct glWindowPos4fvMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos4fvMESA( params->v );
+    funcs->p_glWindowPos4fvMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -24024,7 +24024,7 @@ static NTSTATUS ext_glWindowPos4iMESA( void *args )
 {
     struct glWindowPos4iMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos4iMESA( params->x, params->y, params->z, params->w );
+    funcs->p_glWindowPos4iMESA( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -24032,7 +24032,7 @@ static NTSTATUS ext_glWindowPos4ivMESA( void *args )
 {
     struct glWindowPos4ivMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos4ivMESA( params->v );
+    funcs->p_glWindowPos4ivMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -24040,7 +24040,7 @@ static NTSTATUS ext_glWindowPos4sMESA( void *args )
 {
     struct glWindowPos4sMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos4sMESA( params->x, params->y, params->z, params->w );
+    funcs->p_glWindowPos4sMESA( params->x, params->y, params->z, params->w );
     return STATUS_SUCCESS;
 }
 
@@ -24048,7 +24048,7 @@ static NTSTATUS ext_glWindowPos4svMESA( void *args )
 {
     struct glWindowPos4svMESA_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowPos4svMESA( params->v );
+    funcs->p_glWindowPos4svMESA( params->v );
     return STATUS_SUCCESS;
 }
 
@@ -24056,7 +24056,7 @@ static NTSTATUS ext_glWindowRectanglesEXT( void *args )
 {
     struct glWindowRectanglesEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWindowRectanglesEXT( params->mode, params->count, params->box );
+    funcs->p_glWindowRectanglesEXT( params->mode, params->count, params->box );
     return STATUS_SUCCESS;
 }
 
@@ -24064,7 +24064,7 @@ static NTSTATUS ext_glWriteMaskEXT( void *args )
 {
     struct glWriteMaskEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_glWriteMaskEXT( params->res, params->in, params->outX, params->outY, params->outZ, params->outW );
+    funcs->p_glWriteMaskEXT( params->res, params->in, params->outX, params->outY, params->outZ, params->outW );
     return STATUS_SUCCESS;
 }
 
@@ -24072,7 +24072,7 @@ static NTSTATUS ext_wglAllocateMemoryNV( void *args )
 {
     struct wglAllocateMemoryNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_wglAllocateMemoryNV( params->size, params->readfreq, params->writefreq, params->priority );
+    params->ret = funcs->p_wglAllocateMemoryNV( params->size, params->readfreq, params->writefreq, params->priority );
     return STATUS_SUCCESS;
 }
 
@@ -24080,8 +24080,8 @@ static NTSTATUS ext_wglChoosePixelFormatARB( void *args )
 {
     struct wglChoosePixelFormatARB_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->ext.p_wglChoosePixelFormatARB) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->ext.p_wglChoosePixelFormatARB( params->hdc, params->piAttribIList, params->pfAttribFList, params->nMaxFormats, params->piFormats, params->nNumFormats );
+    if (!funcs || !funcs->p_wglChoosePixelFormatARB) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglChoosePixelFormatARB( params->hdc, params->piAttribIList, params->pfAttribFList, params->nMaxFormats, params->piFormats, params->nNumFormats );
     return STATUS_SUCCESS;
 }
 
@@ -24089,7 +24089,7 @@ static NTSTATUS ext_wglFreeMemoryNV( void *args )
 {
     struct wglFreeMemoryNV_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    funcs->ext.p_wglFreeMemoryNV( params->pointer );
+    funcs->p_wglFreeMemoryNV( params->pointer );
     return STATUS_SUCCESS;
 }
 
@@ -24097,7 +24097,7 @@ static NTSTATUS ext_wglGetCurrentReadDCARB( void *args )
 {
     struct wglGetCurrentReadDCARB_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_wglGetCurrentReadDCARB();
+    params->ret = funcs->p_wglGetCurrentReadDCARB();
     return STATUS_SUCCESS;
 }
 
@@ -24105,8 +24105,8 @@ NTSTATUS ext_wglGetExtensionsStringARB( void *args )
 {
     struct wglGetExtensionsStringARB_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->ext.p_wglGetExtensionsStringARB) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->ext.p_wglGetExtensionsStringARB( params->hdc );
+    if (!funcs || !funcs->p_wglGetExtensionsStringARB) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglGetExtensionsStringARB( params->hdc );
     return STATUS_SUCCESS;
 }
 
@@ -24114,7 +24114,7 @@ NTSTATUS ext_wglGetExtensionsStringEXT( void *args )
 {
     struct wglGetExtensionsStringEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_wglGetExtensionsStringEXT();
+    params->ret = funcs->p_wglGetExtensionsStringEXT();
     return STATUS_SUCCESS;
 }
 
@@ -24122,8 +24122,8 @@ static NTSTATUS ext_wglGetPixelFormatAttribfvARB( void *args )
 {
     struct wglGetPixelFormatAttribfvARB_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->ext.p_wglGetPixelFormatAttribfvARB) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->ext.p_wglGetPixelFormatAttribfvARB( params->hdc, params->iPixelFormat, params->iLayerPlane, params->nAttributes, params->piAttributes, params->pfValues );
+    if (!funcs || !funcs->p_wglGetPixelFormatAttribfvARB) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglGetPixelFormatAttribfvARB( params->hdc, params->iPixelFormat, params->iLayerPlane, params->nAttributes, params->piAttributes, params->pfValues );
     return STATUS_SUCCESS;
 }
 
@@ -24131,8 +24131,8 @@ static NTSTATUS ext_wglGetPixelFormatAttribivARB( void *args )
 {
     struct wglGetPixelFormatAttribivARB_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->ext.p_wglGetPixelFormatAttribivARB) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->ext.p_wglGetPixelFormatAttribivARB( params->hdc, params->iPixelFormat, params->iLayerPlane, params->nAttributes, params->piAttributes, params->piValues );
+    if (!funcs || !funcs->p_wglGetPixelFormatAttribivARB) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglGetPixelFormatAttribivARB( params->hdc, params->iPixelFormat, params->iLayerPlane, params->nAttributes, params->piAttributes, params->piValues );
     return STATUS_SUCCESS;
 }
 
@@ -24140,7 +24140,7 @@ static NTSTATUS ext_wglGetSwapIntervalEXT( void *args )
 {
     struct wglGetSwapIntervalEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_wglGetSwapIntervalEXT();
+    params->ret = funcs->p_wglGetSwapIntervalEXT();
     return STATUS_SUCCESS;
 }
 
@@ -24148,7 +24148,7 @@ static NTSTATUS ext_wglQueryCurrentRendererIntegerWINE( void *args )
 {
     struct wglQueryCurrentRendererIntegerWINE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_wglQueryCurrentRendererIntegerWINE( params->attribute, params->value );
+    params->ret = funcs->p_wglQueryCurrentRendererIntegerWINE( params->attribute, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -24156,7 +24156,7 @@ NTSTATUS ext_wglQueryCurrentRendererStringWINE( void *args )
 {
     struct wglQueryCurrentRendererStringWINE_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_wglQueryCurrentRendererStringWINE( params->attribute );
+    params->ret = funcs->p_wglQueryCurrentRendererStringWINE( params->attribute );
     return STATUS_SUCCESS;
 }
 
@@ -24164,8 +24164,8 @@ static NTSTATUS ext_wglQueryRendererIntegerWINE( void *args )
 {
     struct wglQueryRendererIntegerWINE_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->dc );
-    if (!funcs || !funcs->ext.p_wglQueryRendererIntegerWINE) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->ext.p_wglQueryRendererIntegerWINE( params->dc, params->renderer, params->attribute, params->value );
+    if (!funcs || !funcs->p_wglQueryRendererIntegerWINE) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglQueryRendererIntegerWINE( params->dc, params->renderer, params->attribute, params->value );
     return STATUS_SUCCESS;
 }
 
@@ -24173,8 +24173,8 @@ NTSTATUS ext_wglQueryRendererStringWINE( void *args )
 {
     struct wglQueryRendererStringWINE_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->dc );
-    if (!funcs || !funcs->ext.p_wglQueryRendererStringWINE) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->ext.p_wglQueryRendererStringWINE( params->dc, params->renderer, params->attribute );
+    if (!funcs || !funcs->p_wglQueryRendererStringWINE) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglQueryRendererStringWINE( params->dc, params->renderer, params->attribute );
     return STATUS_SUCCESS;
 }
 
@@ -24182,8 +24182,8 @@ static NTSTATUS ext_wglSetPixelFormatWINE( void *args )
 {
     struct wglSetPixelFormatWINE_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->ext.p_wglSetPixelFormatWINE) return STATUS_NOT_IMPLEMENTED;
-    params->ret = funcs->ext.p_wglSetPixelFormatWINE( params->hdc, params->format );
+    if (!funcs || !funcs->p_wglSetPixelFormatWINE) return STATUS_NOT_IMPLEMENTED;
+    params->ret = funcs->p_wglSetPixelFormatWINE( params->hdc, params->format );
     return STATUS_SUCCESS;
 }
 
@@ -24191,7 +24191,7 @@ static NTSTATUS ext_wglSwapIntervalEXT( void *args )
 {
     struct wglSwapIntervalEXT_params *params = args;
     const struct opengl_funcs *funcs = params->teb->glTable;
-    params->ret = funcs->ext.p_wglSwapIntervalEXT( params->interval );
+    params->ret = funcs->p_wglSwapIntervalEXT( params->interval );
     return STATUS_SUCCESS;
 }
 
@@ -98387,5748 +98387,5742 @@ static BOOL null_wglSwapIntervalEXT( int interval ) { return 0; }
 
 struct opengl_funcs null_opengl_funcs =
 {
-    {
-        null_wglCopyContext,
-        null_wglCreateContext,
-        null_wglDeleteContext,
-        null_wglGetPixelFormat,
-        null_wglGetProcAddress,
-        null_wglMakeCurrent,
-        null_wglSetPixelFormat,
-        null_wglShareLists,
-        null_wglSwapBuffers,
-    },
-    {
-        null_glAccum,
-        null_glAlphaFunc,
-        null_glAreTexturesResident,
-        null_glArrayElement,
-        null_glBegin,
-        null_glBindTexture,
-        null_glBitmap,
-        null_glBlendFunc,
-        null_glCallList,
-        null_glCallLists,
-        null_glClear,
-        null_glClearAccum,
-        null_glClearColor,
-        null_glClearDepth,
-        null_glClearIndex,
-        null_glClearStencil,
-        null_glClipPlane,
-        null_glColor3b,
-        null_glColor3bv,
-        null_glColor3d,
-        null_glColor3dv,
-        null_glColor3f,
-        null_glColor3fv,
-        null_glColor3i,
-        null_glColor3iv,
-        null_glColor3s,
-        null_glColor3sv,
-        null_glColor3ub,
-        null_glColor3ubv,
-        null_glColor3ui,
-        null_glColor3uiv,
-        null_glColor3us,
-        null_glColor3usv,
-        null_glColor4b,
-        null_glColor4bv,
-        null_glColor4d,
-        null_glColor4dv,
-        null_glColor4f,
-        null_glColor4fv,
-        null_glColor4i,
-        null_glColor4iv,
-        null_glColor4s,
-        null_glColor4sv,
-        null_glColor4ub,
-        null_glColor4ubv,
-        null_glColor4ui,
-        null_glColor4uiv,
-        null_glColor4us,
-        null_glColor4usv,
-        null_glColorMask,
-        null_glColorMaterial,
-        null_glColorPointer,
-        null_glCopyPixels,
-        null_glCopyTexImage1D,
-        null_glCopyTexImage2D,
-        null_glCopyTexSubImage1D,
-        null_glCopyTexSubImage2D,
-        null_glCullFace,
-        null_glDeleteLists,
-        null_glDeleteTextures,
-        null_glDepthFunc,
-        null_glDepthMask,
-        null_glDepthRange,
-        null_glDisable,
-        null_glDisableClientState,
-        null_glDrawArrays,
-        null_glDrawBuffer,
-        null_glDrawElements,
-        null_glDrawPixels,
-        null_glEdgeFlag,
-        null_glEdgeFlagPointer,
-        null_glEdgeFlagv,
-        null_glEnable,
-        null_glEnableClientState,
-        null_glEnd,
-        null_glEndList,
-        null_glEvalCoord1d,
-        null_glEvalCoord1dv,
-        null_glEvalCoord1f,
-        null_glEvalCoord1fv,
-        null_glEvalCoord2d,
-        null_glEvalCoord2dv,
-        null_glEvalCoord2f,
-        null_glEvalCoord2fv,
-        null_glEvalMesh1,
-        null_glEvalMesh2,
-        null_glEvalPoint1,
-        null_glEvalPoint2,
-        null_glFeedbackBuffer,
-        null_glFinish,
-        null_glFlush,
-        null_glFogf,
-        null_glFogfv,
-        null_glFogi,
-        null_glFogiv,
-        null_glFrontFace,
-        null_glFrustum,
-        null_glGenLists,
-        null_glGenTextures,
-        null_glGetBooleanv,
-        null_glGetClipPlane,
-        null_glGetDoublev,
-        null_glGetError,
-        null_glGetFloatv,
-        null_glGetIntegerv,
-        null_glGetLightfv,
-        null_glGetLightiv,
-        null_glGetMapdv,
-        null_glGetMapfv,
-        null_glGetMapiv,
-        null_glGetMaterialfv,
-        null_glGetMaterialiv,
-        null_glGetPixelMapfv,
-        null_glGetPixelMapuiv,
-        null_glGetPixelMapusv,
-        null_glGetPointerv,
-        null_glGetPolygonStipple,
-        null_glGetString,
-        null_glGetTexEnvfv,
-        null_glGetTexEnviv,
-        null_glGetTexGendv,
-        null_glGetTexGenfv,
-        null_glGetTexGeniv,
-        null_glGetTexImage,
-        null_glGetTexLevelParameterfv,
-        null_glGetTexLevelParameteriv,
-        null_glGetTexParameterfv,
-        null_glGetTexParameteriv,
-        null_glHint,
-        null_glIndexMask,
-        null_glIndexPointer,
-        null_glIndexd,
-        null_glIndexdv,
-        null_glIndexf,
-        null_glIndexfv,
-        null_glIndexi,
-        null_glIndexiv,
-        null_glIndexs,
-        null_glIndexsv,
-        null_glIndexub,
-        null_glIndexubv,
-        null_glInitNames,
-        null_glInterleavedArrays,
-        null_glIsEnabled,
-        null_glIsList,
-        null_glIsTexture,
-        null_glLightModelf,
-        null_glLightModelfv,
-        null_glLightModeli,
-        null_glLightModeliv,
-        null_glLightf,
-        null_glLightfv,
-        null_glLighti,
-        null_glLightiv,
-        null_glLineStipple,
-        null_glLineWidth,
-        null_glListBase,
-        null_glLoadIdentity,
-        null_glLoadMatrixd,
-        null_glLoadMatrixf,
-        null_glLoadName,
-        null_glLogicOp,
-        null_glMap1d,
-        null_glMap1f,
-        null_glMap2d,
-        null_glMap2f,
-        null_glMapGrid1d,
-        null_glMapGrid1f,
-        null_glMapGrid2d,
-        null_glMapGrid2f,
-        null_glMaterialf,
-        null_glMaterialfv,
-        null_glMateriali,
-        null_glMaterialiv,
-        null_glMatrixMode,
-        null_glMultMatrixd,
-        null_glMultMatrixf,
-        null_glNewList,
-        null_glNormal3b,
-        null_glNormal3bv,
-        null_glNormal3d,
-        null_glNormal3dv,
-        null_glNormal3f,
-        null_glNormal3fv,
-        null_glNormal3i,
-        null_glNormal3iv,
-        null_glNormal3s,
-        null_glNormal3sv,
-        null_glNormalPointer,
-        null_glOrtho,
-        null_glPassThrough,
-        null_glPixelMapfv,
-        null_glPixelMapuiv,
-        null_glPixelMapusv,
-        null_glPixelStoref,
-        null_glPixelStorei,
-        null_glPixelTransferf,
-        null_glPixelTransferi,
-        null_glPixelZoom,
-        null_glPointSize,
-        null_glPolygonMode,
-        null_glPolygonOffset,
-        null_glPolygonStipple,
-        null_glPopAttrib,
-        null_glPopClientAttrib,
-        null_glPopMatrix,
-        null_glPopName,
-        null_glPrioritizeTextures,
-        null_glPushAttrib,
-        null_glPushClientAttrib,
-        null_glPushMatrix,
-        null_glPushName,
-        null_glRasterPos2d,
-        null_glRasterPos2dv,
-        null_glRasterPos2f,
-        null_glRasterPos2fv,
-        null_glRasterPos2i,
-        null_glRasterPos2iv,
-        null_glRasterPos2s,
-        null_glRasterPos2sv,
-        null_glRasterPos3d,
-        null_glRasterPos3dv,
-        null_glRasterPos3f,
-        null_glRasterPos3fv,
-        null_glRasterPos3i,
-        null_glRasterPos3iv,
-        null_glRasterPos3s,
-        null_glRasterPos3sv,
-        null_glRasterPos4d,
-        null_glRasterPos4dv,
-        null_glRasterPos4f,
-        null_glRasterPos4fv,
-        null_glRasterPos4i,
-        null_glRasterPos4iv,
-        null_glRasterPos4s,
-        null_glRasterPos4sv,
-        null_glReadBuffer,
-        null_glReadPixels,
-        null_glRectd,
-        null_glRectdv,
-        null_glRectf,
-        null_glRectfv,
-        null_glRecti,
-        null_glRectiv,
-        null_glRects,
-        null_glRectsv,
-        null_glRenderMode,
-        null_glRotated,
-        null_glRotatef,
-        null_glScaled,
-        null_glScalef,
-        null_glScissor,
-        null_glSelectBuffer,
-        null_glShadeModel,
-        null_glStencilFunc,
-        null_glStencilMask,
-        null_glStencilOp,
-        null_glTexCoord1d,
-        null_glTexCoord1dv,
-        null_glTexCoord1f,
-        null_glTexCoord1fv,
-        null_glTexCoord1i,
-        null_glTexCoord1iv,
-        null_glTexCoord1s,
-        null_glTexCoord1sv,
-        null_glTexCoord2d,
-        null_glTexCoord2dv,
-        null_glTexCoord2f,
-        null_glTexCoord2fv,
-        null_glTexCoord2i,
-        null_glTexCoord2iv,
-        null_glTexCoord2s,
-        null_glTexCoord2sv,
-        null_glTexCoord3d,
-        null_glTexCoord3dv,
-        null_glTexCoord3f,
-        null_glTexCoord3fv,
-        null_glTexCoord3i,
-        null_glTexCoord3iv,
-        null_glTexCoord3s,
-        null_glTexCoord3sv,
-        null_glTexCoord4d,
-        null_glTexCoord4dv,
-        null_glTexCoord4f,
-        null_glTexCoord4fv,
-        null_glTexCoord4i,
-        null_glTexCoord4iv,
-        null_glTexCoord4s,
-        null_glTexCoord4sv,
-        null_glTexCoordPointer,
-        null_glTexEnvf,
-        null_glTexEnvfv,
-        null_glTexEnvi,
-        null_glTexEnviv,
-        null_glTexGend,
-        null_glTexGendv,
-        null_glTexGenf,
-        null_glTexGenfv,
-        null_glTexGeni,
-        null_glTexGeniv,
-        null_glTexImage1D,
-        null_glTexImage2D,
-        null_glTexParameterf,
-        null_glTexParameterfv,
-        null_glTexParameteri,
-        null_glTexParameteriv,
-        null_glTexSubImage1D,
-        null_glTexSubImage2D,
-        null_glTranslated,
-        null_glTranslatef,
-        null_glVertex2d,
-        null_glVertex2dv,
-        null_glVertex2f,
-        null_glVertex2fv,
-        null_glVertex2i,
-        null_glVertex2iv,
-        null_glVertex2s,
-        null_glVertex2sv,
-        null_glVertex3d,
-        null_glVertex3dv,
-        null_glVertex3f,
-        null_glVertex3fv,
-        null_glVertex3i,
-        null_glVertex3iv,
-        null_glVertex3s,
-        null_glVertex3sv,
-        null_glVertex4d,
-        null_glVertex4dv,
-        null_glVertex4f,
-        null_glVertex4fv,
-        null_glVertex4i,
-        null_glVertex4iv,
-        null_glVertex4s,
-        null_glVertex4sv,
-        null_glVertexPointer,
-        null_glViewport,
-    },
-    {
-        null_glAccumxOES,
-        null_glAcquireKeyedMutexWin32EXT,
-        null_glActiveProgramEXT,
-        null_glActiveShaderProgram,
-        null_glActiveStencilFaceEXT,
-        null_glActiveTexture,
-        null_glActiveTextureARB,
-        null_glActiveVaryingNV,
-        null_glAlphaFragmentOp1ATI,
-        null_glAlphaFragmentOp2ATI,
-        null_glAlphaFragmentOp3ATI,
-        null_glAlphaFuncxOES,
-        null_glAlphaToCoverageDitherControlNV,
-        null_glApplyFramebufferAttachmentCMAAINTEL,
-        null_glApplyTextureEXT,
-        null_glAreProgramsResidentNV,
-        null_glAreTexturesResidentEXT,
-        null_glArrayElementEXT,
-        null_glArrayObjectATI,
-        null_glAsyncCopyBufferSubDataNVX,
-        null_glAsyncCopyImageSubDataNVX,
-        null_glAsyncMarkerSGIX,
-        null_glAttachObjectARB,
-        null_glAttachShader,
-        null_glBeginConditionalRender,
-        null_glBeginConditionalRenderNV,
-        null_glBeginConditionalRenderNVX,
-        null_glBeginFragmentShaderATI,
-        null_glBeginOcclusionQueryNV,
-        null_glBeginPerfMonitorAMD,
-        null_glBeginPerfQueryINTEL,
-        null_glBeginQuery,
-        null_glBeginQueryARB,
-        null_glBeginQueryIndexed,
-        null_glBeginTransformFeedback,
-        null_glBeginTransformFeedbackEXT,
-        null_glBeginTransformFeedbackNV,
-        null_glBeginVertexShaderEXT,
-        null_glBeginVideoCaptureNV,
-        null_glBindAttribLocation,
-        null_glBindAttribLocationARB,
-        null_glBindBuffer,
-        null_glBindBufferARB,
-        null_glBindBufferBase,
-        null_glBindBufferBaseEXT,
-        null_glBindBufferBaseNV,
-        null_glBindBufferOffsetEXT,
-        null_glBindBufferOffsetNV,
-        null_glBindBufferRange,
-        null_glBindBufferRangeEXT,
-        null_glBindBufferRangeNV,
-        null_glBindBuffersBase,
-        null_glBindBuffersRange,
-        null_glBindFragDataLocation,
-        null_glBindFragDataLocationEXT,
-        null_glBindFragDataLocationIndexed,
-        null_glBindFragmentShaderATI,
-        null_glBindFramebuffer,
-        null_glBindFramebufferEXT,
-        null_glBindImageTexture,
-        null_glBindImageTextureEXT,
-        null_glBindImageTextures,
-        null_glBindLightParameterEXT,
-        null_glBindMaterialParameterEXT,
-        null_glBindMultiTextureEXT,
-        null_glBindParameterEXT,
-        null_glBindProgramARB,
-        null_glBindProgramNV,
-        null_glBindProgramPipeline,
-        null_glBindRenderbuffer,
-        null_glBindRenderbufferEXT,
-        null_glBindSampler,
-        null_glBindSamplers,
-        null_glBindShadingRateImageNV,
-        null_glBindTexGenParameterEXT,
-        null_glBindTextureEXT,
-        null_glBindTextureUnit,
-        null_glBindTextureUnitParameterEXT,
-        null_glBindTextures,
-        null_glBindTransformFeedback,
-        null_glBindTransformFeedbackNV,
-        null_glBindVertexArray,
-        null_glBindVertexArrayAPPLE,
-        null_glBindVertexBuffer,
-        null_glBindVertexBuffers,
-        null_glBindVertexShaderEXT,
-        null_glBindVideoCaptureStreamBufferNV,
-        null_glBindVideoCaptureStreamTextureNV,
-        null_glBinormal3bEXT,
-        null_glBinormal3bvEXT,
-        null_glBinormal3dEXT,
-        null_glBinormal3dvEXT,
-        null_glBinormal3fEXT,
-        null_glBinormal3fvEXT,
-        null_glBinormal3iEXT,
-        null_glBinormal3ivEXT,
-        null_glBinormal3sEXT,
-        null_glBinormal3svEXT,
-        null_glBinormalPointerEXT,
-        null_glBitmapxOES,
-        null_glBlendBarrierKHR,
-        null_glBlendBarrierNV,
-        null_glBlendColor,
-        null_glBlendColorEXT,
-        null_glBlendColorxOES,
-        null_glBlendEquation,
-        null_glBlendEquationEXT,
-        null_glBlendEquationIndexedAMD,
-        null_glBlendEquationSeparate,
-        null_glBlendEquationSeparateEXT,
-        null_glBlendEquationSeparateIndexedAMD,
-        null_glBlendEquationSeparatei,
-        null_glBlendEquationSeparateiARB,
-        null_glBlendEquationi,
-        null_glBlendEquationiARB,
-        null_glBlendFuncIndexedAMD,
-        null_glBlendFuncSeparate,
-        null_glBlendFuncSeparateEXT,
-        null_glBlendFuncSeparateINGR,
-        null_glBlendFuncSeparateIndexedAMD,
-        null_glBlendFuncSeparatei,
-        null_glBlendFuncSeparateiARB,
-        null_glBlendFunci,
-        null_glBlendFunciARB,
-        null_glBlendParameteriNV,
-        null_glBlitFramebuffer,
-        null_glBlitFramebufferEXT,
-        null_glBlitNamedFramebuffer,
-        null_glBufferAddressRangeNV,
-        null_glBufferAttachMemoryNV,
-        null_glBufferData,
-        null_glBufferDataARB,
-        null_glBufferPageCommitmentARB,
-        null_glBufferParameteriAPPLE,
-        null_glBufferRegionEnabled,
-        null_glBufferStorage,
-        null_glBufferStorageExternalEXT,
-        null_glBufferStorageMemEXT,
-        null_glBufferSubData,
-        null_glBufferSubDataARB,
-        null_glCallCommandListNV,
-        null_glCheckFramebufferStatus,
-        null_glCheckFramebufferStatusEXT,
-        null_glCheckNamedFramebufferStatus,
-        null_glCheckNamedFramebufferStatusEXT,
-        null_glClampColor,
-        null_glClampColorARB,
-        null_glClearAccumxOES,
-        null_glClearBufferData,
-        null_glClearBufferSubData,
-        null_glClearBufferfi,
-        null_glClearBufferfv,
-        null_glClearBufferiv,
-        null_glClearBufferuiv,
-        null_glClearColorIiEXT,
-        null_glClearColorIuiEXT,
-        null_glClearColorxOES,
-        null_glClearDepthdNV,
-        null_glClearDepthf,
-        null_glClearDepthfOES,
-        null_glClearDepthxOES,
-        null_glClearNamedBufferData,
-        null_glClearNamedBufferDataEXT,
-        null_glClearNamedBufferSubData,
-        null_glClearNamedBufferSubDataEXT,
-        null_glClearNamedFramebufferfi,
-        null_glClearNamedFramebufferfv,
-        null_glClearNamedFramebufferiv,
-        null_glClearNamedFramebufferuiv,
-        null_glClearTexImage,
-        null_glClearTexSubImage,
-        null_glClientActiveTexture,
-        null_glClientActiveTextureARB,
-        null_glClientActiveVertexStreamATI,
-        null_glClientAttribDefaultEXT,
-        null_glClientWaitSemaphoreui64NVX,
-        null_glClientWaitSync,
-        null_glClipControl,
-        null_glClipPlanefOES,
-        null_glClipPlanexOES,
-        null_glColor3fVertex3fSUN,
-        null_glColor3fVertex3fvSUN,
-        null_glColor3hNV,
-        null_glColor3hvNV,
-        null_glColor3xOES,
-        null_glColor3xvOES,
-        null_glColor4fNormal3fVertex3fSUN,
-        null_glColor4fNormal3fVertex3fvSUN,
-        null_glColor4hNV,
-        null_glColor4hvNV,
-        null_glColor4ubVertex2fSUN,
-        null_glColor4ubVertex2fvSUN,
-        null_glColor4ubVertex3fSUN,
-        null_glColor4ubVertex3fvSUN,
-        null_glColor4xOES,
-        null_glColor4xvOES,
-        null_glColorFormatNV,
-        null_glColorFragmentOp1ATI,
-        null_glColorFragmentOp2ATI,
-        null_glColorFragmentOp3ATI,
-        null_glColorMaskIndexedEXT,
-        null_glColorMaski,
-        null_glColorP3ui,
-        null_glColorP3uiv,
-        null_glColorP4ui,
-        null_glColorP4uiv,
-        null_glColorPointerEXT,
-        null_glColorPointerListIBM,
-        null_glColorPointervINTEL,
-        null_glColorSubTable,
-        null_glColorSubTableEXT,
-        null_glColorTable,
-        null_glColorTableEXT,
-        null_glColorTableParameterfv,
-        null_glColorTableParameterfvSGI,
-        null_glColorTableParameteriv,
-        null_glColorTableParameterivSGI,
-        null_glColorTableSGI,
-        null_glCombinerInputNV,
-        null_glCombinerOutputNV,
-        null_glCombinerParameterfNV,
-        null_glCombinerParameterfvNV,
-        null_glCombinerParameteriNV,
-        null_glCombinerParameterivNV,
-        null_glCombinerStageParameterfvNV,
-        null_glCommandListSegmentsNV,
-        null_glCompileCommandListNV,
-        null_glCompileShader,
-        null_glCompileShaderARB,
-        null_glCompileShaderIncludeARB,
-        null_glCompressedMultiTexImage1DEXT,
-        null_glCompressedMultiTexImage2DEXT,
-        null_glCompressedMultiTexImage3DEXT,
-        null_glCompressedMultiTexSubImage1DEXT,
-        null_glCompressedMultiTexSubImage2DEXT,
-        null_glCompressedMultiTexSubImage3DEXT,
-        null_glCompressedTexImage1D,
-        null_glCompressedTexImage1DARB,
-        null_glCompressedTexImage2D,
-        null_glCompressedTexImage2DARB,
-        null_glCompressedTexImage3D,
-        null_glCompressedTexImage3DARB,
-        null_glCompressedTexSubImage1D,
-        null_glCompressedTexSubImage1DARB,
-        null_glCompressedTexSubImage2D,
-        null_glCompressedTexSubImage2DARB,
-        null_glCompressedTexSubImage3D,
-        null_glCompressedTexSubImage3DARB,
-        null_glCompressedTextureImage1DEXT,
-        null_glCompressedTextureImage2DEXT,
-        null_glCompressedTextureImage3DEXT,
-        null_glCompressedTextureSubImage1D,
-        null_glCompressedTextureSubImage1DEXT,
-        null_glCompressedTextureSubImage2D,
-        null_glCompressedTextureSubImage2DEXT,
-        null_glCompressedTextureSubImage3D,
-        null_glCompressedTextureSubImage3DEXT,
-        null_glConservativeRasterParameterfNV,
-        null_glConservativeRasterParameteriNV,
-        null_glConvolutionFilter1D,
-        null_glConvolutionFilter1DEXT,
-        null_glConvolutionFilter2D,
-        null_glConvolutionFilter2DEXT,
-        null_glConvolutionParameterf,
-        null_glConvolutionParameterfEXT,
-        null_glConvolutionParameterfv,
-        null_glConvolutionParameterfvEXT,
-        null_glConvolutionParameteri,
-        null_glConvolutionParameteriEXT,
-        null_glConvolutionParameteriv,
-        null_glConvolutionParameterivEXT,
-        null_glConvolutionParameterxOES,
-        null_glConvolutionParameterxvOES,
-        null_glCopyBufferSubData,
-        null_glCopyColorSubTable,
-        null_glCopyColorSubTableEXT,
-        null_glCopyColorTable,
-        null_glCopyColorTableSGI,
-        null_glCopyConvolutionFilter1D,
-        null_glCopyConvolutionFilter1DEXT,
-        null_glCopyConvolutionFilter2D,
-        null_glCopyConvolutionFilter2DEXT,
-        null_glCopyImageSubData,
-        null_glCopyImageSubDataNV,
-        null_glCopyMultiTexImage1DEXT,
-        null_glCopyMultiTexImage2DEXT,
-        null_glCopyMultiTexSubImage1DEXT,
-        null_glCopyMultiTexSubImage2DEXT,
-        null_glCopyMultiTexSubImage3DEXT,
-        null_glCopyNamedBufferSubData,
-        null_glCopyPathNV,
-        null_glCopyTexImage1DEXT,
-        null_glCopyTexImage2DEXT,
-        null_glCopyTexSubImage1DEXT,
-        null_glCopyTexSubImage2DEXT,
-        null_glCopyTexSubImage3D,
-        null_glCopyTexSubImage3DEXT,
-        null_glCopyTextureImage1DEXT,
-        null_glCopyTextureImage2DEXT,
-        null_glCopyTextureSubImage1D,
-        null_glCopyTextureSubImage1DEXT,
-        null_glCopyTextureSubImage2D,
-        null_glCopyTextureSubImage2DEXT,
-        null_glCopyTextureSubImage3D,
-        null_glCopyTextureSubImage3DEXT,
-        null_glCoverFillPathInstancedNV,
-        null_glCoverFillPathNV,
-        null_glCoverStrokePathInstancedNV,
-        null_glCoverStrokePathNV,
-        null_glCoverageModulationNV,
-        null_glCoverageModulationTableNV,
-        null_glCreateBuffers,
-        null_glCreateCommandListsNV,
-        null_glCreateFramebuffers,
-        null_glCreateMemoryObjectsEXT,
-        null_glCreatePerfQueryINTEL,
-        null_glCreateProgram,
-        null_glCreateProgramObjectARB,
-        null_glCreateProgramPipelines,
-        null_glCreateProgressFenceNVX,
-        null_glCreateQueries,
-        null_glCreateRenderbuffers,
-        null_glCreateSamplers,
-        null_glCreateShader,
-        null_glCreateShaderObjectARB,
-        null_glCreateShaderProgramEXT,
-        null_glCreateShaderProgramv,
-        null_glCreateStatesNV,
-        null_glCreateSyncFromCLeventARB,
-        null_glCreateTextures,
-        null_glCreateTransformFeedbacks,
-        null_glCreateVertexArrays,
-        null_glCullParameterdvEXT,
-        null_glCullParameterfvEXT,
-        null_glCurrentPaletteMatrixARB,
-        null_glDebugMessageCallback,
-        null_glDebugMessageCallbackAMD,
-        null_glDebugMessageCallbackARB,
-        null_glDebugMessageControl,
-        null_glDebugMessageControlARB,
-        null_glDebugMessageEnableAMD,
-        null_glDebugMessageInsert,
-        null_glDebugMessageInsertAMD,
-        null_glDebugMessageInsertARB,
-        null_glDeformSGIX,
-        null_glDeformationMap3dSGIX,
-        null_glDeformationMap3fSGIX,
-        null_glDeleteAsyncMarkersSGIX,
-        null_glDeleteBufferRegion,
-        null_glDeleteBuffers,
-        null_glDeleteBuffersARB,
-        null_glDeleteCommandListsNV,
-        null_glDeleteFencesAPPLE,
-        null_glDeleteFencesNV,
-        null_glDeleteFragmentShaderATI,
-        null_glDeleteFramebuffers,
-        null_glDeleteFramebuffersEXT,
-        null_glDeleteMemoryObjectsEXT,
-        null_glDeleteNamedStringARB,
-        null_glDeleteNamesAMD,
-        null_glDeleteObjectARB,
-        null_glDeleteObjectBufferATI,
-        null_glDeleteOcclusionQueriesNV,
-        null_glDeletePathsNV,
-        null_glDeletePerfMonitorsAMD,
-        null_glDeletePerfQueryINTEL,
-        null_glDeleteProgram,
-        null_glDeleteProgramPipelines,
-        null_glDeleteProgramsARB,
-        null_glDeleteProgramsNV,
-        null_glDeleteQueries,
-        null_glDeleteQueriesARB,
-        null_glDeleteQueryResourceTagNV,
-        null_glDeleteRenderbuffers,
-        null_glDeleteRenderbuffersEXT,
-        null_glDeleteSamplers,
-        null_glDeleteSemaphoresEXT,
-        null_glDeleteShader,
-        null_glDeleteStatesNV,
-        null_glDeleteSync,
-        null_glDeleteTexturesEXT,
-        null_glDeleteTransformFeedbacks,
-        null_glDeleteTransformFeedbacksNV,
-        null_glDeleteVertexArrays,
-        null_glDeleteVertexArraysAPPLE,
-        null_glDeleteVertexShaderEXT,
-        null_glDepthBoundsEXT,
-        null_glDepthBoundsdNV,
-        null_glDepthRangeArraydvNV,
-        null_glDepthRangeArrayv,
-        null_glDepthRangeIndexed,
-        null_glDepthRangeIndexeddNV,
-        null_glDepthRangedNV,
-        null_glDepthRangef,
-        null_glDepthRangefOES,
-        null_glDepthRangexOES,
-        null_glDetachObjectARB,
-        null_glDetachShader,
-        null_glDetailTexFuncSGIS,
-        null_glDisableClientStateIndexedEXT,
-        null_glDisableClientStateiEXT,
-        null_glDisableIndexedEXT,
-        null_glDisableVariantClientStateEXT,
-        null_glDisableVertexArrayAttrib,
-        null_glDisableVertexArrayAttribEXT,
-        null_glDisableVertexArrayEXT,
-        null_glDisableVertexAttribAPPLE,
-        null_glDisableVertexAttribArray,
-        null_glDisableVertexAttribArrayARB,
-        null_glDisablei,
-        null_glDispatchCompute,
-        null_glDispatchComputeGroupSizeARB,
-        null_glDispatchComputeIndirect,
-        null_glDrawArraysEXT,
-        null_glDrawArraysIndirect,
-        null_glDrawArraysInstanced,
-        null_glDrawArraysInstancedARB,
-        null_glDrawArraysInstancedBaseInstance,
-        null_glDrawArraysInstancedEXT,
-        null_glDrawBufferRegion,
-        null_glDrawBuffers,
-        null_glDrawBuffersARB,
-        null_glDrawBuffersATI,
-        null_glDrawCommandsAddressNV,
-        null_glDrawCommandsNV,
-        null_glDrawCommandsStatesAddressNV,
-        null_glDrawCommandsStatesNV,
-        null_glDrawElementArrayAPPLE,
-        null_glDrawElementArrayATI,
-        null_glDrawElementsBaseVertex,
-        null_glDrawElementsIndirect,
-        null_glDrawElementsInstanced,
-        null_glDrawElementsInstancedARB,
-        null_glDrawElementsInstancedBaseInstance,
-        null_glDrawElementsInstancedBaseVertex,
-        null_glDrawElementsInstancedBaseVertexBaseInstance,
-        null_glDrawElementsInstancedEXT,
-        null_glDrawMeshArraysSUN,
-        null_glDrawMeshTasksIndirectNV,
-        null_glDrawMeshTasksNV,
-        null_glDrawRangeElementArrayAPPLE,
-        null_glDrawRangeElementArrayATI,
-        null_glDrawRangeElements,
-        null_glDrawRangeElementsBaseVertex,
-        null_glDrawRangeElementsEXT,
-        null_glDrawTextureNV,
-        null_glDrawTransformFeedback,
-        null_glDrawTransformFeedbackInstanced,
-        null_glDrawTransformFeedbackNV,
-        null_glDrawTransformFeedbackStream,
-        null_glDrawTransformFeedbackStreamInstanced,
-        null_glDrawVkImageNV,
-        null_glEGLImageTargetTexStorageEXT,
-        null_glEGLImageTargetTextureStorageEXT,
-        null_glEdgeFlagFormatNV,
-        null_glEdgeFlagPointerEXT,
-        null_glEdgeFlagPointerListIBM,
-        null_glElementPointerAPPLE,
-        null_glElementPointerATI,
-        null_glEnableClientStateIndexedEXT,
-        null_glEnableClientStateiEXT,
-        null_glEnableIndexedEXT,
-        null_glEnableVariantClientStateEXT,
-        null_glEnableVertexArrayAttrib,
-        null_glEnableVertexArrayAttribEXT,
-        null_glEnableVertexArrayEXT,
-        null_glEnableVertexAttribAPPLE,
-        null_glEnableVertexAttribArray,
-        null_glEnableVertexAttribArrayARB,
-        null_glEnablei,
-        null_glEndConditionalRender,
-        null_glEndConditionalRenderNV,
-        null_glEndConditionalRenderNVX,
-        null_glEndFragmentShaderATI,
-        null_glEndOcclusionQueryNV,
-        null_glEndPerfMonitorAMD,
-        null_glEndPerfQueryINTEL,
-        null_glEndQuery,
-        null_glEndQueryARB,
-        null_glEndQueryIndexed,
-        null_glEndTransformFeedback,
-        null_glEndTransformFeedbackEXT,
-        null_glEndTransformFeedbackNV,
-        null_glEndVertexShaderEXT,
-        null_glEndVideoCaptureNV,
-        null_glEvalCoord1xOES,
-        null_glEvalCoord1xvOES,
-        null_glEvalCoord2xOES,
-        null_glEvalCoord2xvOES,
-        null_glEvalMapsNV,
-        null_glEvaluateDepthValuesARB,
-        null_glExecuteProgramNV,
-        null_glExtractComponentEXT,
-        null_glFeedbackBufferxOES,
-        null_glFenceSync,
-        null_glFinalCombinerInputNV,
-        null_glFinishAsyncSGIX,
-        null_glFinishFenceAPPLE,
-        null_glFinishFenceNV,
-        null_glFinishObjectAPPLE,
-        null_glFinishTextureSUNX,
-        null_glFlushMappedBufferRange,
-        null_glFlushMappedBufferRangeAPPLE,
-        null_glFlushMappedNamedBufferRange,
-        null_glFlushMappedNamedBufferRangeEXT,
-        null_glFlushPixelDataRangeNV,
-        null_glFlushRasterSGIX,
-        null_glFlushStaticDataIBM,
-        null_glFlushVertexArrayRangeAPPLE,
-        null_glFlushVertexArrayRangeNV,
-        null_glFogCoordFormatNV,
-        null_glFogCoordPointer,
-        null_glFogCoordPointerEXT,
-        null_glFogCoordPointerListIBM,
-        null_glFogCoordd,
-        null_glFogCoorddEXT,
-        null_glFogCoorddv,
-        null_glFogCoorddvEXT,
-        null_glFogCoordf,
-        null_glFogCoordfEXT,
-        null_glFogCoordfv,
-        null_glFogCoordfvEXT,
-        null_glFogCoordhNV,
-        null_glFogCoordhvNV,
-        null_glFogFuncSGIS,
-        null_glFogxOES,
-        null_glFogxvOES,
-        null_glFragmentColorMaterialSGIX,
-        null_glFragmentCoverageColorNV,
-        null_glFragmentLightModelfSGIX,
-        null_glFragmentLightModelfvSGIX,
-        null_glFragmentLightModeliSGIX,
-        null_glFragmentLightModelivSGIX,
-        null_glFragmentLightfSGIX,
-        null_glFragmentLightfvSGIX,
-        null_glFragmentLightiSGIX,
-        null_glFragmentLightivSGIX,
-        null_glFragmentMaterialfSGIX,
-        null_glFragmentMaterialfvSGIX,
-        null_glFragmentMaterialiSGIX,
-        null_glFragmentMaterialivSGIX,
-        null_glFrameTerminatorGREMEDY,
-        null_glFrameZoomSGIX,
-        null_glFramebufferDrawBufferEXT,
-        null_glFramebufferDrawBuffersEXT,
-        null_glFramebufferFetchBarrierEXT,
-        null_glFramebufferParameteri,
-        null_glFramebufferParameteriMESA,
-        null_glFramebufferReadBufferEXT,
-        null_glFramebufferRenderbuffer,
-        null_glFramebufferRenderbufferEXT,
-        null_glFramebufferSampleLocationsfvARB,
-        null_glFramebufferSampleLocationsfvNV,
-        null_glFramebufferSamplePositionsfvAMD,
-        null_glFramebufferTexture,
-        null_glFramebufferTexture1D,
-        null_glFramebufferTexture1DEXT,
-        null_glFramebufferTexture2D,
-        null_glFramebufferTexture2DEXT,
-        null_glFramebufferTexture3D,
-        null_glFramebufferTexture3DEXT,
-        null_glFramebufferTextureARB,
-        null_glFramebufferTextureEXT,
-        null_glFramebufferTextureFaceARB,
-        null_glFramebufferTextureFaceEXT,
-        null_glFramebufferTextureLayer,
-        null_glFramebufferTextureLayerARB,
-        null_glFramebufferTextureLayerEXT,
-        null_glFramebufferTextureMultiviewOVR,
-        null_glFreeObjectBufferATI,
-        null_glFrustumfOES,
-        null_glFrustumxOES,
-        null_glGenAsyncMarkersSGIX,
-        null_glGenBuffers,
-        null_glGenBuffersARB,
-        null_glGenFencesAPPLE,
-        null_glGenFencesNV,
-        null_glGenFragmentShadersATI,
-        null_glGenFramebuffers,
-        null_glGenFramebuffersEXT,
-        null_glGenNamesAMD,
-        null_glGenOcclusionQueriesNV,
-        null_glGenPathsNV,
-        null_glGenPerfMonitorsAMD,
-        null_glGenProgramPipelines,
-        null_glGenProgramsARB,
-        null_glGenProgramsNV,
-        null_glGenQueries,
-        null_glGenQueriesARB,
-        null_glGenQueryResourceTagNV,
-        null_glGenRenderbuffers,
-        null_glGenRenderbuffersEXT,
-        null_glGenSamplers,
-        null_glGenSemaphoresEXT,
-        null_glGenSymbolsEXT,
-        null_glGenTexturesEXT,
-        null_glGenTransformFeedbacks,
-        null_glGenTransformFeedbacksNV,
-        null_glGenVertexArrays,
-        null_glGenVertexArraysAPPLE,
-        null_glGenVertexShadersEXT,
-        null_glGenerateMipmap,
-        null_glGenerateMipmapEXT,
-        null_glGenerateMultiTexMipmapEXT,
-        null_glGenerateTextureMipmap,
-        null_glGenerateTextureMipmapEXT,
-        null_glGetActiveAtomicCounterBufferiv,
-        null_glGetActiveAttrib,
-        null_glGetActiveAttribARB,
-        null_glGetActiveSubroutineName,
-        null_glGetActiveSubroutineUniformName,
-        null_glGetActiveSubroutineUniformiv,
-        null_glGetActiveUniform,
-        null_glGetActiveUniformARB,
-        null_glGetActiveUniformBlockName,
-        null_glGetActiveUniformBlockiv,
-        null_glGetActiveUniformName,
-        null_glGetActiveUniformsiv,
-        null_glGetActiveVaryingNV,
-        null_glGetArrayObjectfvATI,
-        null_glGetArrayObjectivATI,
-        null_glGetAttachedObjectsARB,
-        null_glGetAttachedShaders,
-        null_glGetAttribLocation,
-        null_glGetAttribLocationARB,
-        null_glGetBooleanIndexedvEXT,
-        null_glGetBooleani_v,
-        null_glGetBufferParameteri64v,
-        null_glGetBufferParameteriv,
-        null_glGetBufferParameterivARB,
-        null_glGetBufferParameterui64vNV,
-        null_glGetBufferPointerv,
-        null_glGetBufferPointervARB,
-        null_glGetBufferSubData,
-        null_glGetBufferSubDataARB,
-        null_glGetClipPlanefOES,
-        null_glGetClipPlanexOES,
-        null_glGetColorTable,
-        null_glGetColorTableEXT,
-        null_glGetColorTableParameterfv,
-        null_glGetColorTableParameterfvEXT,
-        null_glGetColorTableParameterfvSGI,
-        null_glGetColorTableParameteriv,
-        null_glGetColorTableParameterivEXT,
-        null_glGetColorTableParameterivSGI,
-        null_glGetColorTableSGI,
-        null_glGetCombinerInputParameterfvNV,
-        null_glGetCombinerInputParameterivNV,
-        null_glGetCombinerOutputParameterfvNV,
-        null_glGetCombinerOutputParameterivNV,
-        null_glGetCombinerStageParameterfvNV,
-        null_glGetCommandHeaderNV,
-        null_glGetCompressedMultiTexImageEXT,
-        null_glGetCompressedTexImage,
-        null_glGetCompressedTexImageARB,
-        null_glGetCompressedTextureImage,
-        null_glGetCompressedTextureImageEXT,
-        null_glGetCompressedTextureSubImage,
-        null_glGetConvolutionFilter,
-        null_glGetConvolutionFilterEXT,
-        null_glGetConvolutionParameterfv,
-        null_glGetConvolutionParameterfvEXT,
-        null_glGetConvolutionParameteriv,
-        null_glGetConvolutionParameterivEXT,
-        null_glGetConvolutionParameterxvOES,
-        null_glGetCoverageModulationTableNV,
-        null_glGetDebugMessageLog,
-        null_glGetDebugMessageLogAMD,
-        null_glGetDebugMessageLogARB,
-        null_glGetDetailTexFuncSGIS,
-        null_glGetDoubleIndexedvEXT,
-        null_glGetDoublei_v,
-        null_glGetDoublei_vEXT,
-        null_glGetFenceivNV,
-        null_glGetFinalCombinerInputParameterfvNV,
-        null_glGetFinalCombinerInputParameterivNV,
-        null_glGetFirstPerfQueryIdINTEL,
-        null_glGetFixedvOES,
-        null_glGetFloatIndexedvEXT,
-        null_glGetFloati_v,
-        null_glGetFloati_vEXT,
-        null_glGetFogFuncSGIS,
-        null_glGetFragDataIndex,
-        null_glGetFragDataLocation,
-        null_glGetFragDataLocationEXT,
-        null_glGetFragmentLightfvSGIX,
-        null_glGetFragmentLightivSGIX,
-        null_glGetFragmentMaterialfvSGIX,
-        null_glGetFragmentMaterialivSGIX,
-        null_glGetFramebufferAttachmentParameteriv,
-        null_glGetFramebufferAttachmentParameterivEXT,
-        null_glGetFramebufferParameterfvAMD,
-        null_glGetFramebufferParameteriv,
-        null_glGetFramebufferParameterivEXT,
-        null_glGetFramebufferParameterivMESA,
-        null_glGetGraphicsResetStatus,
-        null_glGetGraphicsResetStatusARB,
-        null_glGetHandleARB,
-        null_glGetHistogram,
-        null_glGetHistogramEXT,
-        null_glGetHistogramParameterfv,
-        null_glGetHistogramParameterfvEXT,
-        null_glGetHistogramParameteriv,
-        null_glGetHistogramParameterivEXT,
-        null_glGetHistogramParameterxvOES,
-        null_glGetImageHandleARB,
-        null_glGetImageHandleNV,
-        null_glGetImageTransformParameterfvHP,
-        null_glGetImageTransformParameterivHP,
-        null_glGetInfoLogARB,
-        null_glGetInstrumentsSGIX,
-        null_glGetInteger64i_v,
-        null_glGetInteger64v,
-        null_glGetIntegerIndexedvEXT,
-        null_glGetIntegeri_v,
-        null_glGetIntegerui64i_vNV,
-        null_glGetIntegerui64vNV,
-        null_glGetInternalformatSampleivNV,
-        null_glGetInternalformati64v,
-        null_glGetInternalformativ,
-        null_glGetInvariantBooleanvEXT,
-        null_glGetInvariantFloatvEXT,
-        null_glGetInvariantIntegervEXT,
-        null_glGetLightxOES,
-        null_glGetListParameterfvSGIX,
-        null_glGetListParameterivSGIX,
-        null_glGetLocalConstantBooleanvEXT,
-        null_glGetLocalConstantFloatvEXT,
-        null_glGetLocalConstantIntegervEXT,
-        null_glGetMapAttribParameterfvNV,
-        null_glGetMapAttribParameterivNV,
-        null_glGetMapControlPointsNV,
-        null_glGetMapParameterfvNV,
-        null_glGetMapParameterivNV,
-        null_glGetMapxvOES,
-        null_glGetMaterialxOES,
-        null_glGetMemoryObjectDetachedResourcesuivNV,
-        null_glGetMemoryObjectParameterivEXT,
-        null_glGetMinmax,
-        null_glGetMinmaxEXT,
-        null_glGetMinmaxParameterfv,
-        null_glGetMinmaxParameterfvEXT,
-        null_glGetMinmaxParameteriv,
-        null_glGetMinmaxParameterivEXT,
-        null_glGetMultiTexEnvfvEXT,
-        null_glGetMultiTexEnvivEXT,
-        null_glGetMultiTexGendvEXT,
-        null_glGetMultiTexGenfvEXT,
-        null_glGetMultiTexGenivEXT,
-        null_glGetMultiTexImageEXT,
-        null_glGetMultiTexLevelParameterfvEXT,
-        null_glGetMultiTexLevelParameterivEXT,
-        null_glGetMultiTexParameterIivEXT,
-        null_glGetMultiTexParameterIuivEXT,
-        null_glGetMultiTexParameterfvEXT,
-        null_glGetMultiTexParameterivEXT,
-        null_glGetMultisamplefv,
-        null_glGetMultisamplefvNV,
-        null_glGetNamedBufferParameteri64v,
-        null_glGetNamedBufferParameteriv,
-        null_glGetNamedBufferParameterivEXT,
-        null_glGetNamedBufferParameterui64vNV,
-        null_glGetNamedBufferPointerv,
-        null_glGetNamedBufferPointervEXT,
-        null_glGetNamedBufferSubData,
-        null_glGetNamedBufferSubDataEXT,
-        null_glGetNamedFramebufferAttachmentParameteriv,
-        null_glGetNamedFramebufferAttachmentParameterivEXT,
-        null_glGetNamedFramebufferParameterfvAMD,
-        null_glGetNamedFramebufferParameteriv,
-        null_glGetNamedFramebufferParameterivEXT,
-        null_glGetNamedProgramLocalParameterIivEXT,
-        null_glGetNamedProgramLocalParameterIuivEXT,
-        null_glGetNamedProgramLocalParameterdvEXT,
-        null_glGetNamedProgramLocalParameterfvEXT,
-        null_glGetNamedProgramStringEXT,
-        null_glGetNamedProgramivEXT,
-        null_glGetNamedRenderbufferParameteriv,
-        null_glGetNamedRenderbufferParameterivEXT,
-        null_glGetNamedStringARB,
-        null_glGetNamedStringivARB,
-        null_glGetNextPerfQueryIdINTEL,
-        null_glGetObjectBufferfvATI,
-        null_glGetObjectBufferivATI,
-        null_glGetObjectLabel,
-        null_glGetObjectLabelEXT,
-        null_glGetObjectParameterfvARB,
-        null_glGetObjectParameterivAPPLE,
-        null_glGetObjectParameterivARB,
-        null_glGetObjectPtrLabel,
-        null_glGetOcclusionQueryivNV,
-        null_glGetOcclusionQueryuivNV,
-        null_glGetPathColorGenfvNV,
-        null_glGetPathColorGenivNV,
-        null_glGetPathCommandsNV,
-        null_glGetPathCoordsNV,
-        null_glGetPathDashArrayNV,
-        null_glGetPathLengthNV,
-        null_glGetPathMetricRangeNV,
-        null_glGetPathMetricsNV,
-        null_glGetPathParameterfvNV,
-        null_glGetPathParameterivNV,
-        null_glGetPathSpacingNV,
-        null_glGetPathTexGenfvNV,
-        null_glGetPathTexGenivNV,
-        null_glGetPerfCounterInfoINTEL,
-        null_glGetPerfMonitorCounterDataAMD,
-        null_glGetPerfMonitorCounterInfoAMD,
-        null_glGetPerfMonitorCounterStringAMD,
-        null_glGetPerfMonitorCountersAMD,
-        null_glGetPerfMonitorGroupStringAMD,
-        null_glGetPerfMonitorGroupsAMD,
-        null_glGetPerfQueryDataINTEL,
-        null_glGetPerfQueryIdByNameINTEL,
-        null_glGetPerfQueryInfoINTEL,
-        null_glGetPixelMapxv,
-        null_glGetPixelTexGenParameterfvSGIS,
-        null_glGetPixelTexGenParameterivSGIS,
-        null_glGetPixelTransformParameterfvEXT,
-        null_glGetPixelTransformParameterivEXT,
-        null_glGetPointerIndexedvEXT,
-        null_glGetPointeri_vEXT,
-        null_glGetPointervEXT,
-        null_glGetProgramBinary,
-        null_glGetProgramEnvParameterIivNV,
-        null_glGetProgramEnvParameterIuivNV,
-        null_glGetProgramEnvParameterdvARB,
-        null_glGetProgramEnvParameterfvARB,
-        null_glGetProgramInfoLog,
-        null_glGetProgramInterfaceiv,
-        null_glGetProgramLocalParameterIivNV,
-        null_glGetProgramLocalParameterIuivNV,
-        null_glGetProgramLocalParameterdvARB,
-        null_glGetProgramLocalParameterfvARB,
-        null_glGetProgramNamedParameterdvNV,
-        null_glGetProgramNamedParameterfvNV,
-        null_glGetProgramParameterdvNV,
-        null_glGetProgramParameterfvNV,
-        null_glGetProgramPipelineInfoLog,
-        null_glGetProgramPipelineiv,
-        null_glGetProgramResourceIndex,
-        null_glGetProgramResourceLocation,
-        null_glGetProgramResourceLocationIndex,
-        null_glGetProgramResourceName,
-        null_glGetProgramResourcefvNV,
-        null_glGetProgramResourceiv,
-        null_glGetProgramStageiv,
-        null_glGetProgramStringARB,
-        null_glGetProgramStringNV,
-        null_glGetProgramSubroutineParameteruivNV,
-        null_glGetProgramiv,
-        null_glGetProgramivARB,
-        null_glGetProgramivNV,
-        null_glGetQueryBufferObjecti64v,
-        null_glGetQueryBufferObjectiv,
-        null_glGetQueryBufferObjectui64v,
-        null_glGetQueryBufferObjectuiv,
-        null_glGetQueryIndexediv,
-        null_glGetQueryObjecti64v,
-        null_glGetQueryObjecti64vEXT,
-        null_glGetQueryObjectiv,
-        null_glGetQueryObjectivARB,
-        null_glGetQueryObjectui64v,
-        null_glGetQueryObjectui64vEXT,
-        null_glGetQueryObjectuiv,
-        null_glGetQueryObjectuivARB,
-        null_glGetQueryiv,
-        null_glGetQueryivARB,
-        null_glGetRenderbufferParameteriv,
-        null_glGetRenderbufferParameterivEXT,
-        null_glGetSamplerParameterIiv,
-        null_glGetSamplerParameterIuiv,
-        null_glGetSamplerParameterfv,
-        null_glGetSamplerParameteriv,
-        null_glGetSemaphoreParameterui64vEXT,
-        null_glGetSeparableFilter,
-        null_glGetSeparableFilterEXT,
-        null_glGetShaderInfoLog,
-        null_glGetShaderPrecisionFormat,
-        null_glGetShaderSource,
-        null_glGetShaderSourceARB,
-        null_glGetShaderiv,
-        null_glGetShadingRateImagePaletteNV,
-        null_glGetShadingRateSampleLocationivNV,
-        null_glGetSharpenTexFuncSGIS,
-        null_glGetStageIndexNV,
-        null_glGetStringi,
-        null_glGetSubroutineIndex,
-        null_glGetSubroutineUniformLocation,
-        null_glGetSynciv,
-        null_glGetTexBumpParameterfvATI,
-        null_glGetTexBumpParameterivATI,
-        null_glGetTexEnvxvOES,
-        null_glGetTexFilterFuncSGIS,
-        null_glGetTexGenxvOES,
-        null_glGetTexLevelParameterxvOES,
-        null_glGetTexParameterIiv,
-        null_glGetTexParameterIivEXT,
-        null_glGetTexParameterIuiv,
-        null_glGetTexParameterIuivEXT,
-        null_glGetTexParameterPointervAPPLE,
-        null_glGetTexParameterxvOES,
-        null_glGetTextureHandleARB,
-        null_glGetTextureHandleNV,
-        null_glGetTextureImage,
-        null_glGetTextureImageEXT,
-        null_glGetTextureLevelParameterfv,
-        null_glGetTextureLevelParameterfvEXT,
-        null_glGetTextureLevelParameteriv,
-        null_glGetTextureLevelParameterivEXT,
-        null_glGetTextureParameterIiv,
-        null_glGetTextureParameterIivEXT,
-        null_glGetTextureParameterIuiv,
-        null_glGetTextureParameterIuivEXT,
-        null_glGetTextureParameterfv,
-        null_glGetTextureParameterfvEXT,
-        null_glGetTextureParameteriv,
-        null_glGetTextureParameterivEXT,
-        null_glGetTextureSamplerHandleARB,
-        null_glGetTextureSamplerHandleNV,
-        null_glGetTextureSubImage,
-        null_glGetTrackMatrixivNV,
-        null_glGetTransformFeedbackVarying,
-        null_glGetTransformFeedbackVaryingEXT,
-        null_glGetTransformFeedbackVaryingNV,
-        null_glGetTransformFeedbacki64_v,
-        null_glGetTransformFeedbacki_v,
-        null_glGetTransformFeedbackiv,
-        null_glGetUniformBlockIndex,
-        null_glGetUniformBufferSizeEXT,
-        null_glGetUniformIndices,
-        null_glGetUniformLocation,
-        null_glGetUniformLocationARB,
-        null_glGetUniformOffsetEXT,
-        null_glGetUniformSubroutineuiv,
-        null_glGetUniformdv,
-        null_glGetUniformfv,
-        null_glGetUniformfvARB,
-        null_glGetUniformi64vARB,
-        null_glGetUniformi64vNV,
-        null_glGetUniformiv,
-        null_glGetUniformivARB,
-        null_glGetUniformui64vARB,
-        null_glGetUniformui64vNV,
-        null_glGetUniformuiv,
-        null_glGetUniformuivEXT,
-        null_glGetUnsignedBytei_vEXT,
-        null_glGetUnsignedBytevEXT,
-        null_glGetVariantArrayObjectfvATI,
-        null_glGetVariantArrayObjectivATI,
-        null_glGetVariantBooleanvEXT,
-        null_glGetVariantFloatvEXT,
-        null_glGetVariantIntegervEXT,
-        null_glGetVariantPointervEXT,
-        null_glGetVaryingLocationNV,
-        null_glGetVertexArrayIndexed64iv,
-        null_glGetVertexArrayIndexediv,
-        null_glGetVertexArrayIntegeri_vEXT,
-        null_glGetVertexArrayIntegervEXT,
-        null_glGetVertexArrayPointeri_vEXT,
-        null_glGetVertexArrayPointervEXT,
-        null_glGetVertexArrayiv,
-        null_glGetVertexAttribArrayObjectfvATI,
-        null_glGetVertexAttribArrayObjectivATI,
-        null_glGetVertexAttribIiv,
-        null_glGetVertexAttribIivEXT,
-        null_glGetVertexAttribIuiv,
-        null_glGetVertexAttribIuivEXT,
-        null_glGetVertexAttribLdv,
-        null_glGetVertexAttribLdvEXT,
-        null_glGetVertexAttribLi64vNV,
-        null_glGetVertexAttribLui64vARB,
-        null_glGetVertexAttribLui64vNV,
-        null_glGetVertexAttribPointerv,
-        null_glGetVertexAttribPointervARB,
-        null_glGetVertexAttribPointervNV,
-        null_glGetVertexAttribdv,
-        null_glGetVertexAttribdvARB,
-        null_glGetVertexAttribdvNV,
-        null_glGetVertexAttribfv,
-        null_glGetVertexAttribfvARB,
-        null_glGetVertexAttribfvNV,
-        null_glGetVertexAttribiv,
-        null_glGetVertexAttribivARB,
-        null_glGetVertexAttribivNV,
-        null_glGetVideoCaptureStreamdvNV,
-        null_glGetVideoCaptureStreamfvNV,
-        null_glGetVideoCaptureStreamivNV,
-        null_glGetVideoCaptureivNV,
-        null_glGetVideoi64vNV,
-        null_glGetVideoivNV,
-        null_glGetVideoui64vNV,
-        null_glGetVideouivNV,
-        null_glGetVkProcAddrNV,
-        null_glGetnColorTable,
-        null_glGetnColorTableARB,
-        null_glGetnCompressedTexImage,
-        null_glGetnCompressedTexImageARB,
-        null_glGetnConvolutionFilter,
-        null_glGetnConvolutionFilterARB,
-        null_glGetnHistogram,
-        null_glGetnHistogramARB,
-        null_glGetnMapdv,
-        null_glGetnMapdvARB,
-        null_glGetnMapfv,
-        null_glGetnMapfvARB,
-        null_glGetnMapiv,
-        null_glGetnMapivARB,
-        null_glGetnMinmax,
-        null_glGetnMinmaxARB,
-        null_glGetnPixelMapfv,
-        null_glGetnPixelMapfvARB,
-        null_glGetnPixelMapuiv,
-        null_glGetnPixelMapuivARB,
-        null_glGetnPixelMapusv,
-        null_glGetnPixelMapusvARB,
-        null_glGetnPolygonStipple,
-        null_glGetnPolygonStippleARB,
-        null_glGetnSeparableFilter,
-        null_glGetnSeparableFilterARB,
-        null_glGetnTexImage,
-        null_glGetnTexImageARB,
-        null_glGetnUniformdv,
-        null_glGetnUniformdvARB,
-        null_glGetnUniformfv,
-        null_glGetnUniformfvARB,
-        null_glGetnUniformi64vARB,
-        null_glGetnUniformiv,
-        null_glGetnUniformivARB,
-        null_glGetnUniformui64vARB,
-        null_glGetnUniformuiv,
-        null_glGetnUniformuivARB,
-        null_glGlobalAlphaFactorbSUN,
-        null_glGlobalAlphaFactordSUN,
-        null_glGlobalAlphaFactorfSUN,
-        null_glGlobalAlphaFactoriSUN,
-        null_glGlobalAlphaFactorsSUN,
-        null_glGlobalAlphaFactorubSUN,
-        null_glGlobalAlphaFactoruiSUN,
-        null_glGlobalAlphaFactorusSUN,
-        null_glHintPGI,
-        null_glHistogram,
-        null_glHistogramEXT,
-        null_glIglooInterfaceSGIX,
-        null_glImageTransformParameterfHP,
-        null_glImageTransformParameterfvHP,
-        null_glImageTransformParameteriHP,
-        null_glImageTransformParameterivHP,
-        null_glImportMemoryFdEXT,
-        null_glImportMemoryWin32HandleEXT,
-        null_glImportMemoryWin32NameEXT,
-        null_glImportSemaphoreFdEXT,
-        null_glImportSemaphoreWin32HandleEXT,
-        null_glImportSemaphoreWin32NameEXT,
-        null_glImportSyncEXT,
-        null_glIndexFormatNV,
-        null_glIndexFuncEXT,
-        null_glIndexMaterialEXT,
-        null_glIndexPointerEXT,
-        null_glIndexPointerListIBM,
-        null_glIndexxOES,
-        null_glIndexxvOES,
-        null_glInsertComponentEXT,
-        null_glInsertEventMarkerEXT,
-        null_glInstrumentsBufferSGIX,
-        null_glInterpolatePathsNV,
-        null_glInvalidateBufferData,
-        null_glInvalidateBufferSubData,
-        null_glInvalidateFramebuffer,
-        null_glInvalidateNamedFramebufferData,
-        null_glInvalidateNamedFramebufferSubData,
-        null_glInvalidateSubFramebuffer,
-        null_glInvalidateTexImage,
-        null_glInvalidateTexSubImage,
-        null_glIsAsyncMarkerSGIX,
-        null_glIsBuffer,
-        null_glIsBufferARB,
-        null_glIsBufferResidentNV,
-        null_glIsCommandListNV,
-        null_glIsEnabledIndexedEXT,
-        null_glIsEnabledi,
-        null_glIsFenceAPPLE,
-        null_glIsFenceNV,
-        null_glIsFramebuffer,
-        null_glIsFramebufferEXT,
-        null_glIsImageHandleResidentARB,
-        null_glIsImageHandleResidentNV,
-        null_glIsMemoryObjectEXT,
-        null_glIsNameAMD,
-        null_glIsNamedBufferResidentNV,
-        null_glIsNamedStringARB,
-        null_glIsObjectBufferATI,
-        null_glIsOcclusionQueryNV,
-        null_glIsPathNV,
-        null_glIsPointInFillPathNV,
-        null_glIsPointInStrokePathNV,
-        null_glIsProgram,
-        null_glIsProgramARB,
-        null_glIsProgramNV,
-        null_glIsProgramPipeline,
-        null_glIsQuery,
-        null_glIsQueryARB,
-        null_glIsRenderbuffer,
-        null_glIsRenderbufferEXT,
-        null_glIsSampler,
-        null_glIsSemaphoreEXT,
-        null_glIsShader,
-        null_glIsStateNV,
-        null_glIsSync,
-        null_glIsTextureEXT,
-        null_glIsTextureHandleResidentARB,
-        null_glIsTextureHandleResidentNV,
-        null_glIsTransformFeedback,
-        null_glIsTransformFeedbackNV,
-        null_glIsVariantEnabledEXT,
-        null_glIsVertexArray,
-        null_glIsVertexArrayAPPLE,
-        null_glIsVertexAttribEnabledAPPLE,
-        null_glLGPUCopyImageSubDataNVX,
-        null_glLGPUInterlockNVX,
-        null_glLGPUNamedBufferSubDataNVX,
-        null_glLabelObjectEXT,
-        null_glLightEnviSGIX,
-        null_glLightModelxOES,
-        null_glLightModelxvOES,
-        null_glLightxOES,
-        null_glLightxvOES,
-        null_glLineWidthxOES,
-        null_glLinkProgram,
-        null_glLinkProgramARB,
-        null_glListDrawCommandsStatesClientNV,
-        null_glListParameterfSGIX,
-        null_glListParameterfvSGIX,
-        null_glListParameteriSGIX,
-        null_glListParameterivSGIX,
-        null_glLoadIdentityDeformationMapSGIX,
-        null_glLoadMatrixxOES,
-        null_glLoadProgramNV,
-        null_glLoadTransposeMatrixd,
-        null_glLoadTransposeMatrixdARB,
-        null_glLoadTransposeMatrixf,
-        null_glLoadTransposeMatrixfARB,
-        null_glLoadTransposeMatrixxOES,
-        null_glLockArraysEXT,
-        null_glMTexCoord2fSGIS,
-        null_glMTexCoord2fvSGIS,
-        null_glMakeBufferNonResidentNV,
-        null_glMakeBufferResidentNV,
-        null_glMakeImageHandleNonResidentARB,
-        null_glMakeImageHandleNonResidentNV,
-        null_glMakeImageHandleResidentARB,
-        null_glMakeImageHandleResidentNV,
-        null_glMakeNamedBufferNonResidentNV,
-        null_glMakeNamedBufferResidentNV,
-        null_glMakeTextureHandleNonResidentARB,
-        null_glMakeTextureHandleNonResidentNV,
-        null_glMakeTextureHandleResidentARB,
-        null_glMakeTextureHandleResidentNV,
-        null_glMap1xOES,
-        null_glMap2xOES,
-        null_glMapBuffer,
-        null_glMapBufferARB,
-        null_glMapBufferRange,
-        null_glMapControlPointsNV,
-        null_glMapGrid1xOES,
-        null_glMapGrid2xOES,
-        null_glMapNamedBuffer,
-        null_glMapNamedBufferEXT,
-        null_glMapNamedBufferRange,
-        null_glMapNamedBufferRangeEXT,
-        null_glMapObjectBufferATI,
-        null_glMapParameterfvNV,
-        null_glMapParameterivNV,
-        null_glMapTexture2DINTEL,
-        null_glMapVertexAttrib1dAPPLE,
-        null_glMapVertexAttrib1fAPPLE,
-        null_glMapVertexAttrib2dAPPLE,
-        null_glMapVertexAttrib2fAPPLE,
-        null_glMaterialxOES,
-        null_glMaterialxvOES,
-        null_glMatrixFrustumEXT,
-        null_glMatrixIndexPointerARB,
-        null_glMatrixIndexubvARB,
-        null_glMatrixIndexuivARB,
-        null_glMatrixIndexusvARB,
-        null_glMatrixLoad3x2fNV,
-        null_glMatrixLoad3x3fNV,
-        null_glMatrixLoadIdentityEXT,
-        null_glMatrixLoadTranspose3x3fNV,
-        null_glMatrixLoadTransposedEXT,
-        null_glMatrixLoadTransposefEXT,
-        null_glMatrixLoaddEXT,
-        null_glMatrixLoadfEXT,
-        null_glMatrixMult3x2fNV,
-        null_glMatrixMult3x3fNV,
-        null_glMatrixMultTranspose3x3fNV,
-        null_glMatrixMultTransposedEXT,
-        null_glMatrixMultTransposefEXT,
-        null_glMatrixMultdEXT,
-        null_glMatrixMultfEXT,
-        null_glMatrixOrthoEXT,
-        null_glMatrixPopEXT,
-        null_glMatrixPushEXT,
-        null_glMatrixRotatedEXT,
-        null_glMatrixRotatefEXT,
-        null_glMatrixScaledEXT,
-        null_glMatrixScalefEXT,
-        null_glMatrixTranslatedEXT,
-        null_glMatrixTranslatefEXT,
-        null_glMaxShaderCompilerThreadsARB,
-        null_glMaxShaderCompilerThreadsKHR,
-        null_glMemoryBarrier,
-        null_glMemoryBarrierByRegion,
-        null_glMemoryBarrierEXT,
-        null_glMemoryObjectParameterivEXT,
-        null_glMinSampleShading,
-        null_glMinSampleShadingARB,
-        null_glMinmax,
-        null_glMinmaxEXT,
-        null_glMultMatrixxOES,
-        null_glMultTransposeMatrixd,
-        null_glMultTransposeMatrixdARB,
-        null_glMultTransposeMatrixf,
-        null_glMultTransposeMatrixfARB,
-        null_glMultTransposeMatrixxOES,
-        null_glMultiDrawArrays,
-        null_glMultiDrawArraysEXT,
-        null_glMultiDrawArraysIndirect,
-        null_glMultiDrawArraysIndirectAMD,
-        null_glMultiDrawArraysIndirectBindlessCountNV,
-        null_glMultiDrawArraysIndirectBindlessNV,
-        null_glMultiDrawArraysIndirectCount,
-        null_glMultiDrawArraysIndirectCountARB,
-        null_glMultiDrawElementArrayAPPLE,
-        null_glMultiDrawElements,
-        null_glMultiDrawElementsBaseVertex,
-        null_glMultiDrawElementsEXT,
-        null_glMultiDrawElementsIndirect,
-        null_glMultiDrawElementsIndirectAMD,
-        null_glMultiDrawElementsIndirectBindlessCountNV,
-        null_glMultiDrawElementsIndirectBindlessNV,
-        null_glMultiDrawElementsIndirectCount,
-        null_glMultiDrawElementsIndirectCountARB,
-        null_glMultiDrawMeshTasksIndirectCountNV,
-        null_glMultiDrawMeshTasksIndirectNV,
-        null_glMultiDrawRangeElementArrayAPPLE,
-        null_glMultiModeDrawArraysIBM,
-        null_glMultiModeDrawElementsIBM,
-        null_glMultiTexBufferEXT,
-        null_glMultiTexCoord1bOES,
-        null_glMultiTexCoord1bvOES,
-        null_glMultiTexCoord1d,
-        null_glMultiTexCoord1dARB,
-        null_glMultiTexCoord1dSGIS,
-        null_glMultiTexCoord1dv,
-        null_glMultiTexCoord1dvARB,
-        null_glMultiTexCoord1dvSGIS,
-        null_glMultiTexCoord1f,
-        null_glMultiTexCoord1fARB,
-        null_glMultiTexCoord1fSGIS,
-        null_glMultiTexCoord1fv,
-        null_glMultiTexCoord1fvARB,
-        null_glMultiTexCoord1fvSGIS,
-        null_glMultiTexCoord1hNV,
-        null_glMultiTexCoord1hvNV,
-        null_glMultiTexCoord1i,
-        null_glMultiTexCoord1iARB,
-        null_glMultiTexCoord1iSGIS,
-        null_glMultiTexCoord1iv,
-        null_glMultiTexCoord1ivARB,
-        null_glMultiTexCoord1ivSGIS,
-        null_glMultiTexCoord1s,
-        null_glMultiTexCoord1sARB,
-        null_glMultiTexCoord1sSGIS,
-        null_glMultiTexCoord1sv,
-        null_glMultiTexCoord1svARB,
-        null_glMultiTexCoord1svSGIS,
-        null_glMultiTexCoord1xOES,
-        null_glMultiTexCoord1xvOES,
-        null_glMultiTexCoord2bOES,
-        null_glMultiTexCoord2bvOES,
-        null_glMultiTexCoord2d,
-        null_glMultiTexCoord2dARB,
-        null_glMultiTexCoord2dSGIS,
-        null_glMultiTexCoord2dv,
-        null_glMultiTexCoord2dvARB,
-        null_glMultiTexCoord2dvSGIS,
-        null_glMultiTexCoord2f,
-        null_glMultiTexCoord2fARB,
-        null_glMultiTexCoord2fSGIS,
-        null_glMultiTexCoord2fv,
-        null_glMultiTexCoord2fvARB,
-        null_glMultiTexCoord2fvSGIS,
-        null_glMultiTexCoord2hNV,
-        null_glMultiTexCoord2hvNV,
-        null_glMultiTexCoord2i,
-        null_glMultiTexCoord2iARB,
-        null_glMultiTexCoord2iSGIS,
-        null_glMultiTexCoord2iv,
-        null_glMultiTexCoord2ivARB,
-        null_glMultiTexCoord2ivSGIS,
-        null_glMultiTexCoord2s,
-        null_glMultiTexCoord2sARB,
-        null_glMultiTexCoord2sSGIS,
-        null_glMultiTexCoord2sv,
-        null_glMultiTexCoord2svARB,
-        null_glMultiTexCoord2svSGIS,
-        null_glMultiTexCoord2xOES,
-        null_glMultiTexCoord2xvOES,
-        null_glMultiTexCoord3bOES,
-        null_glMultiTexCoord3bvOES,
-        null_glMultiTexCoord3d,
-        null_glMultiTexCoord3dARB,
-        null_glMultiTexCoord3dSGIS,
-        null_glMultiTexCoord3dv,
-        null_glMultiTexCoord3dvARB,
-        null_glMultiTexCoord3dvSGIS,
-        null_glMultiTexCoord3f,
-        null_glMultiTexCoord3fARB,
-        null_glMultiTexCoord3fSGIS,
-        null_glMultiTexCoord3fv,
-        null_glMultiTexCoord3fvARB,
-        null_glMultiTexCoord3fvSGIS,
-        null_glMultiTexCoord3hNV,
-        null_glMultiTexCoord3hvNV,
-        null_glMultiTexCoord3i,
-        null_glMultiTexCoord3iARB,
-        null_glMultiTexCoord3iSGIS,
-        null_glMultiTexCoord3iv,
-        null_glMultiTexCoord3ivARB,
-        null_glMultiTexCoord3ivSGIS,
-        null_glMultiTexCoord3s,
-        null_glMultiTexCoord3sARB,
-        null_glMultiTexCoord3sSGIS,
-        null_glMultiTexCoord3sv,
-        null_glMultiTexCoord3svARB,
-        null_glMultiTexCoord3svSGIS,
-        null_glMultiTexCoord3xOES,
-        null_glMultiTexCoord3xvOES,
-        null_glMultiTexCoord4bOES,
-        null_glMultiTexCoord4bvOES,
-        null_glMultiTexCoord4d,
-        null_glMultiTexCoord4dARB,
-        null_glMultiTexCoord4dSGIS,
-        null_glMultiTexCoord4dv,
-        null_glMultiTexCoord4dvARB,
-        null_glMultiTexCoord4dvSGIS,
-        null_glMultiTexCoord4f,
-        null_glMultiTexCoord4fARB,
-        null_glMultiTexCoord4fSGIS,
-        null_glMultiTexCoord4fv,
-        null_glMultiTexCoord4fvARB,
-        null_glMultiTexCoord4fvSGIS,
-        null_glMultiTexCoord4hNV,
-        null_glMultiTexCoord4hvNV,
-        null_glMultiTexCoord4i,
-        null_glMultiTexCoord4iARB,
-        null_glMultiTexCoord4iSGIS,
-        null_glMultiTexCoord4iv,
-        null_glMultiTexCoord4ivARB,
-        null_glMultiTexCoord4ivSGIS,
-        null_glMultiTexCoord4s,
-        null_glMultiTexCoord4sARB,
-        null_glMultiTexCoord4sSGIS,
-        null_glMultiTexCoord4sv,
-        null_glMultiTexCoord4svARB,
-        null_glMultiTexCoord4svSGIS,
-        null_glMultiTexCoord4xOES,
-        null_glMultiTexCoord4xvOES,
-        null_glMultiTexCoordP1ui,
-        null_glMultiTexCoordP1uiv,
-        null_glMultiTexCoordP2ui,
-        null_glMultiTexCoordP2uiv,
-        null_glMultiTexCoordP3ui,
-        null_glMultiTexCoordP3uiv,
-        null_glMultiTexCoordP4ui,
-        null_glMultiTexCoordP4uiv,
-        null_glMultiTexCoordPointerEXT,
-        null_glMultiTexCoordPointerSGIS,
-        null_glMultiTexEnvfEXT,
-        null_glMultiTexEnvfvEXT,
-        null_glMultiTexEnviEXT,
-        null_glMultiTexEnvivEXT,
-        null_glMultiTexGendEXT,
-        null_glMultiTexGendvEXT,
-        null_glMultiTexGenfEXT,
-        null_glMultiTexGenfvEXT,
-        null_glMultiTexGeniEXT,
-        null_glMultiTexGenivEXT,
-        null_glMultiTexImage1DEXT,
-        null_glMultiTexImage2DEXT,
-        null_glMultiTexImage3DEXT,
-        null_glMultiTexParameterIivEXT,
-        null_glMultiTexParameterIuivEXT,
-        null_glMultiTexParameterfEXT,
-        null_glMultiTexParameterfvEXT,
-        null_glMultiTexParameteriEXT,
-        null_glMultiTexParameterivEXT,
-        null_glMultiTexRenderbufferEXT,
-        null_glMultiTexSubImage1DEXT,
-        null_glMultiTexSubImage2DEXT,
-        null_glMultiTexSubImage3DEXT,
-        null_glMulticastBarrierNV,
-        null_glMulticastBlitFramebufferNV,
-        null_glMulticastBufferSubDataNV,
-        null_glMulticastCopyBufferSubDataNV,
-        null_glMulticastCopyImageSubDataNV,
-        null_glMulticastFramebufferSampleLocationsfvNV,
-        null_glMulticastGetQueryObjecti64vNV,
-        null_glMulticastGetQueryObjectivNV,
-        null_glMulticastGetQueryObjectui64vNV,
-        null_glMulticastGetQueryObjectuivNV,
-        null_glMulticastScissorArrayvNVX,
-        null_glMulticastViewportArrayvNVX,
-        null_glMulticastViewportPositionWScaleNVX,
-        null_glMulticastWaitSyncNV,
-        null_glNamedBufferAttachMemoryNV,
-        null_glNamedBufferData,
-        null_glNamedBufferDataEXT,
-        null_glNamedBufferPageCommitmentARB,
-        null_glNamedBufferPageCommitmentEXT,
-        null_glNamedBufferStorage,
-        null_glNamedBufferStorageEXT,
-        null_glNamedBufferStorageExternalEXT,
-        null_glNamedBufferStorageMemEXT,
-        null_glNamedBufferSubData,
-        null_glNamedBufferSubDataEXT,
-        null_glNamedCopyBufferSubDataEXT,
-        null_glNamedFramebufferDrawBuffer,
-        null_glNamedFramebufferDrawBuffers,
-        null_glNamedFramebufferParameteri,
-        null_glNamedFramebufferParameteriEXT,
-        null_glNamedFramebufferReadBuffer,
-        null_glNamedFramebufferRenderbuffer,
-        null_glNamedFramebufferRenderbufferEXT,
-        null_glNamedFramebufferSampleLocationsfvARB,
-        null_glNamedFramebufferSampleLocationsfvNV,
-        null_glNamedFramebufferSamplePositionsfvAMD,
-        null_glNamedFramebufferTexture,
-        null_glNamedFramebufferTexture1DEXT,
-        null_glNamedFramebufferTexture2DEXT,
-        null_glNamedFramebufferTexture3DEXT,
-        null_glNamedFramebufferTextureEXT,
-        null_glNamedFramebufferTextureFaceEXT,
-        null_glNamedFramebufferTextureLayer,
-        null_glNamedFramebufferTextureLayerEXT,
-        null_glNamedProgramLocalParameter4dEXT,
-        null_glNamedProgramLocalParameter4dvEXT,
-        null_glNamedProgramLocalParameter4fEXT,
-        null_glNamedProgramLocalParameter4fvEXT,
-        null_glNamedProgramLocalParameterI4iEXT,
-        null_glNamedProgramLocalParameterI4ivEXT,
-        null_glNamedProgramLocalParameterI4uiEXT,
-        null_glNamedProgramLocalParameterI4uivEXT,
-        null_glNamedProgramLocalParameters4fvEXT,
-        null_glNamedProgramLocalParametersI4ivEXT,
-        null_glNamedProgramLocalParametersI4uivEXT,
-        null_glNamedProgramStringEXT,
-        null_glNamedRenderbufferStorage,
-        null_glNamedRenderbufferStorageEXT,
-        null_glNamedRenderbufferStorageMultisample,
-        null_glNamedRenderbufferStorageMultisampleAdvancedAMD,
-        null_glNamedRenderbufferStorageMultisampleCoverageEXT,
-        null_glNamedRenderbufferStorageMultisampleEXT,
-        null_glNamedStringARB,
-        null_glNewBufferRegion,
-        null_glNewObjectBufferATI,
-        null_glNormal3fVertex3fSUN,
-        null_glNormal3fVertex3fvSUN,
-        null_glNormal3hNV,
-        null_glNormal3hvNV,
-        null_glNormal3xOES,
-        null_glNormal3xvOES,
-        null_glNormalFormatNV,
-        null_glNormalP3ui,
-        null_glNormalP3uiv,
-        null_glNormalPointerEXT,
-        null_glNormalPointerListIBM,
-        null_glNormalPointervINTEL,
-        null_glNormalStream3bATI,
-        null_glNormalStream3bvATI,
-        null_glNormalStream3dATI,
-        null_glNormalStream3dvATI,
-        null_glNormalStream3fATI,
-        null_glNormalStream3fvATI,
-        null_glNormalStream3iATI,
-        null_glNormalStream3ivATI,
-        null_glNormalStream3sATI,
-        null_glNormalStream3svATI,
-        null_glObjectLabel,
-        null_glObjectPtrLabel,
-        null_glObjectPurgeableAPPLE,
-        null_glObjectUnpurgeableAPPLE,
-        null_glOrthofOES,
-        null_glOrthoxOES,
-        null_glPNTrianglesfATI,
-        null_glPNTrianglesiATI,
-        null_glPassTexCoordATI,
-        null_glPassThroughxOES,
-        null_glPatchParameterfv,
-        null_glPatchParameteri,
-        null_glPathColorGenNV,
-        null_glPathCommandsNV,
-        null_glPathCoordsNV,
-        null_glPathCoverDepthFuncNV,
-        null_glPathDashArrayNV,
-        null_glPathFogGenNV,
-        null_glPathGlyphIndexArrayNV,
-        null_glPathGlyphIndexRangeNV,
-        null_glPathGlyphRangeNV,
-        null_glPathGlyphsNV,
-        null_glPathMemoryGlyphIndexArrayNV,
-        null_glPathParameterfNV,
-        null_glPathParameterfvNV,
-        null_glPathParameteriNV,
-        null_glPathParameterivNV,
-        null_glPathStencilDepthOffsetNV,
-        null_glPathStencilFuncNV,
-        null_glPathStringNV,
-        null_glPathSubCommandsNV,
-        null_glPathSubCoordsNV,
-        null_glPathTexGenNV,
-        null_glPauseTransformFeedback,
-        null_glPauseTransformFeedbackNV,
-        null_glPixelDataRangeNV,
-        null_glPixelMapx,
-        null_glPixelStorex,
-        null_glPixelTexGenParameterfSGIS,
-        null_glPixelTexGenParameterfvSGIS,
-        null_glPixelTexGenParameteriSGIS,
-        null_glPixelTexGenParameterivSGIS,
-        null_glPixelTexGenSGIX,
-        null_glPixelTransferxOES,
-        null_glPixelTransformParameterfEXT,
-        null_glPixelTransformParameterfvEXT,
-        null_glPixelTransformParameteriEXT,
-        null_glPixelTransformParameterivEXT,
-        null_glPixelZoomxOES,
-        null_glPointAlongPathNV,
-        null_glPointParameterf,
-        null_glPointParameterfARB,
-        null_glPointParameterfEXT,
-        null_glPointParameterfSGIS,
-        null_glPointParameterfv,
-        null_glPointParameterfvARB,
-        null_glPointParameterfvEXT,
-        null_glPointParameterfvSGIS,
-        null_glPointParameteri,
-        null_glPointParameteriNV,
-        null_glPointParameteriv,
-        null_glPointParameterivNV,
-        null_glPointParameterxvOES,
-        null_glPointSizexOES,
-        null_glPollAsyncSGIX,
-        null_glPollInstrumentsSGIX,
-        null_glPolygonOffsetClamp,
-        null_glPolygonOffsetClampEXT,
-        null_glPolygonOffsetEXT,
-        null_glPolygonOffsetxOES,
-        null_glPopDebugGroup,
-        null_glPopGroupMarkerEXT,
-        null_glPresentFrameDualFillNV,
-        null_glPresentFrameKeyedNV,
-        null_glPrimitiveBoundingBoxARB,
-        null_glPrimitiveRestartIndex,
-        null_glPrimitiveRestartIndexNV,
-        null_glPrimitiveRestartNV,
-        null_glPrioritizeTexturesEXT,
-        null_glPrioritizeTexturesxOES,
-        null_glProgramBinary,
-        null_glProgramBufferParametersIivNV,
-        null_glProgramBufferParametersIuivNV,
-        null_glProgramBufferParametersfvNV,
-        null_glProgramEnvParameter4dARB,
-        null_glProgramEnvParameter4dvARB,
-        null_glProgramEnvParameter4fARB,
-        null_glProgramEnvParameter4fvARB,
-        null_glProgramEnvParameterI4iNV,
-        null_glProgramEnvParameterI4ivNV,
-        null_glProgramEnvParameterI4uiNV,
-        null_glProgramEnvParameterI4uivNV,
-        null_glProgramEnvParameters4fvEXT,
-        null_glProgramEnvParametersI4ivNV,
-        null_glProgramEnvParametersI4uivNV,
-        null_glProgramLocalParameter4dARB,
-        null_glProgramLocalParameter4dvARB,
-        null_glProgramLocalParameter4fARB,
-        null_glProgramLocalParameter4fvARB,
-        null_glProgramLocalParameterI4iNV,
-        null_glProgramLocalParameterI4ivNV,
-        null_glProgramLocalParameterI4uiNV,
-        null_glProgramLocalParameterI4uivNV,
-        null_glProgramLocalParameters4fvEXT,
-        null_glProgramLocalParametersI4ivNV,
-        null_glProgramLocalParametersI4uivNV,
-        null_glProgramNamedParameter4dNV,
-        null_glProgramNamedParameter4dvNV,
-        null_glProgramNamedParameter4fNV,
-        null_glProgramNamedParameter4fvNV,
-        null_glProgramParameter4dNV,
-        null_glProgramParameter4dvNV,
-        null_glProgramParameter4fNV,
-        null_glProgramParameter4fvNV,
-        null_glProgramParameteri,
-        null_glProgramParameteriARB,
-        null_glProgramParameteriEXT,
-        null_glProgramParameters4dvNV,
-        null_glProgramParameters4fvNV,
-        null_glProgramPathFragmentInputGenNV,
-        null_glProgramStringARB,
-        null_glProgramSubroutineParametersuivNV,
-        null_glProgramUniform1d,
-        null_glProgramUniform1dEXT,
-        null_glProgramUniform1dv,
-        null_glProgramUniform1dvEXT,
-        null_glProgramUniform1f,
-        null_glProgramUniform1fEXT,
-        null_glProgramUniform1fv,
-        null_glProgramUniform1fvEXT,
-        null_glProgramUniform1i,
-        null_glProgramUniform1i64ARB,
-        null_glProgramUniform1i64NV,
-        null_glProgramUniform1i64vARB,
-        null_glProgramUniform1i64vNV,
-        null_glProgramUniform1iEXT,
-        null_glProgramUniform1iv,
-        null_glProgramUniform1ivEXT,
-        null_glProgramUniform1ui,
-        null_glProgramUniform1ui64ARB,
-        null_glProgramUniform1ui64NV,
-        null_glProgramUniform1ui64vARB,
-        null_glProgramUniform1ui64vNV,
-        null_glProgramUniform1uiEXT,
-        null_glProgramUniform1uiv,
-        null_glProgramUniform1uivEXT,
-        null_glProgramUniform2d,
-        null_glProgramUniform2dEXT,
-        null_glProgramUniform2dv,
-        null_glProgramUniform2dvEXT,
-        null_glProgramUniform2f,
-        null_glProgramUniform2fEXT,
-        null_glProgramUniform2fv,
-        null_glProgramUniform2fvEXT,
-        null_glProgramUniform2i,
-        null_glProgramUniform2i64ARB,
-        null_glProgramUniform2i64NV,
-        null_glProgramUniform2i64vARB,
-        null_glProgramUniform2i64vNV,
-        null_glProgramUniform2iEXT,
-        null_glProgramUniform2iv,
-        null_glProgramUniform2ivEXT,
-        null_glProgramUniform2ui,
-        null_glProgramUniform2ui64ARB,
-        null_glProgramUniform2ui64NV,
-        null_glProgramUniform2ui64vARB,
-        null_glProgramUniform2ui64vNV,
-        null_glProgramUniform2uiEXT,
-        null_glProgramUniform2uiv,
-        null_glProgramUniform2uivEXT,
-        null_glProgramUniform3d,
-        null_glProgramUniform3dEXT,
-        null_glProgramUniform3dv,
-        null_glProgramUniform3dvEXT,
-        null_glProgramUniform3f,
-        null_glProgramUniform3fEXT,
-        null_glProgramUniform3fv,
-        null_glProgramUniform3fvEXT,
-        null_glProgramUniform3i,
-        null_glProgramUniform3i64ARB,
-        null_glProgramUniform3i64NV,
-        null_glProgramUniform3i64vARB,
-        null_glProgramUniform3i64vNV,
-        null_glProgramUniform3iEXT,
-        null_glProgramUniform3iv,
-        null_glProgramUniform3ivEXT,
-        null_glProgramUniform3ui,
-        null_glProgramUniform3ui64ARB,
-        null_glProgramUniform3ui64NV,
-        null_glProgramUniform3ui64vARB,
-        null_glProgramUniform3ui64vNV,
-        null_glProgramUniform3uiEXT,
-        null_glProgramUniform3uiv,
-        null_glProgramUniform3uivEXT,
-        null_glProgramUniform4d,
-        null_glProgramUniform4dEXT,
-        null_glProgramUniform4dv,
-        null_glProgramUniform4dvEXT,
-        null_glProgramUniform4f,
-        null_glProgramUniform4fEXT,
-        null_glProgramUniform4fv,
-        null_glProgramUniform4fvEXT,
-        null_glProgramUniform4i,
-        null_glProgramUniform4i64ARB,
-        null_glProgramUniform4i64NV,
-        null_glProgramUniform4i64vARB,
-        null_glProgramUniform4i64vNV,
-        null_glProgramUniform4iEXT,
-        null_glProgramUniform4iv,
-        null_glProgramUniform4ivEXT,
-        null_glProgramUniform4ui,
-        null_glProgramUniform4ui64ARB,
-        null_glProgramUniform4ui64NV,
-        null_glProgramUniform4ui64vARB,
-        null_glProgramUniform4ui64vNV,
-        null_glProgramUniform4uiEXT,
-        null_glProgramUniform4uiv,
-        null_glProgramUniform4uivEXT,
-        null_glProgramUniformHandleui64ARB,
-        null_glProgramUniformHandleui64NV,
-        null_glProgramUniformHandleui64vARB,
-        null_glProgramUniformHandleui64vNV,
-        null_glProgramUniformMatrix2dv,
-        null_glProgramUniformMatrix2dvEXT,
-        null_glProgramUniformMatrix2fv,
-        null_glProgramUniformMatrix2fvEXT,
-        null_glProgramUniformMatrix2x3dv,
-        null_glProgramUniformMatrix2x3dvEXT,
-        null_glProgramUniformMatrix2x3fv,
-        null_glProgramUniformMatrix2x3fvEXT,
-        null_glProgramUniformMatrix2x4dv,
-        null_glProgramUniformMatrix2x4dvEXT,
-        null_glProgramUniformMatrix2x4fv,
-        null_glProgramUniformMatrix2x4fvEXT,
-        null_glProgramUniformMatrix3dv,
-        null_glProgramUniformMatrix3dvEXT,
-        null_glProgramUniformMatrix3fv,
-        null_glProgramUniformMatrix3fvEXT,
-        null_glProgramUniformMatrix3x2dv,
-        null_glProgramUniformMatrix3x2dvEXT,
-        null_glProgramUniformMatrix3x2fv,
-        null_glProgramUniformMatrix3x2fvEXT,
-        null_glProgramUniformMatrix3x4dv,
-        null_glProgramUniformMatrix3x4dvEXT,
-        null_glProgramUniformMatrix3x4fv,
-        null_glProgramUniformMatrix3x4fvEXT,
-        null_glProgramUniformMatrix4dv,
-        null_glProgramUniformMatrix4dvEXT,
-        null_glProgramUniformMatrix4fv,
-        null_glProgramUniformMatrix4fvEXT,
-        null_glProgramUniformMatrix4x2dv,
-        null_glProgramUniformMatrix4x2dvEXT,
-        null_glProgramUniformMatrix4x2fv,
-        null_glProgramUniformMatrix4x2fvEXT,
-        null_glProgramUniformMatrix4x3dv,
-        null_glProgramUniformMatrix4x3dvEXT,
-        null_glProgramUniformMatrix4x3fv,
-        null_glProgramUniformMatrix4x3fvEXT,
-        null_glProgramUniformui64NV,
-        null_glProgramUniformui64vNV,
-        null_glProgramVertexLimitNV,
-        null_glProvokingVertex,
-        null_glProvokingVertexEXT,
-        null_glPushClientAttribDefaultEXT,
-        null_glPushDebugGroup,
-        null_glPushGroupMarkerEXT,
-        null_glQueryCounter,
-        null_glQueryMatrixxOES,
-        null_glQueryObjectParameteruiAMD,
-        null_glQueryResourceNV,
-        null_glQueryResourceTagNV,
-        null_glRasterPos2xOES,
-        null_glRasterPos2xvOES,
-        null_glRasterPos3xOES,
-        null_glRasterPos3xvOES,
-        null_glRasterPos4xOES,
-        null_glRasterPos4xvOES,
-        null_glRasterSamplesEXT,
-        null_glReadBufferRegion,
-        null_glReadInstrumentsSGIX,
-        null_glReadnPixels,
-        null_glReadnPixelsARB,
-        null_glRectxOES,
-        null_glRectxvOES,
-        null_glReferencePlaneSGIX,
-        null_glReleaseKeyedMutexWin32EXT,
-        null_glReleaseShaderCompiler,
-        null_glRenderGpuMaskNV,
-        null_glRenderbufferStorage,
-        null_glRenderbufferStorageEXT,
-        null_glRenderbufferStorageMultisample,
-        null_glRenderbufferStorageMultisampleAdvancedAMD,
-        null_glRenderbufferStorageMultisampleCoverageNV,
-        null_glRenderbufferStorageMultisampleEXT,
-        null_glReplacementCodePointerSUN,
-        null_glReplacementCodeubSUN,
-        null_glReplacementCodeubvSUN,
-        null_glReplacementCodeuiColor3fVertex3fSUN,
-        null_glReplacementCodeuiColor3fVertex3fvSUN,
-        null_glReplacementCodeuiColor4fNormal3fVertex3fSUN,
-        null_glReplacementCodeuiColor4fNormal3fVertex3fvSUN,
-        null_glReplacementCodeuiColor4ubVertex3fSUN,
-        null_glReplacementCodeuiColor4ubVertex3fvSUN,
-        null_glReplacementCodeuiNormal3fVertex3fSUN,
-        null_glReplacementCodeuiNormal3fVertex3fvSUN,
-        null_glReplacementCodeuiSUN,
-        null_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN,
-        null_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN,
-        null_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN,
-        null_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN,
-        null_glReplacementCodeuiTexCoord2fVertex3fSUN,
-        null_glReplacementCodeuiTexCoord2fVertex3fvSUN,
-        null_glReplacementCodeuiVertex3fSUN,
-        null_glReplacementCodeuiVertex3fvSUN,
-        null_glReplacementCodeuivSUN,
-        null_glReplacementCodeusSUN,
-        null_glReplacementCodeusvSUN,
-        null_glRequestResidentProgramsNV,
-        null_glResetHistogram,
-        null_glResetHistogramEXT,
-        null_glResetMemoryObjectParameterNV,
-        null_glResetMinmax,
-        null_glResetMinmaxEXT,
-        null_glResizeBuffersMESA,
-        null_glResolveDepthValuesNV,
-        null_glResumeTransformFeedback,
-        null_glResumeTransformFeedbackNV,
-        null_glRotatexOES,
-        null_glSampleCoverage,
-        null_glSampleCoverageARB,
-        null_glSampleMapATI,
-        null_glSampleMaskEXT,
-        null_glSampleMaskIndexedNV,
-        null_glSampleMaskSGIS,
-        null_glSampleMaski,
-        null_glSamplePatternEXT,
-        null_glSamplePatternSGIS,
-        null_glSamplerParameterIiv,
-        null_glSamplerParameterIuiv,
-        null_glSamplerParameterf,
-        null_glSamplerParameterfv,
-        null_glSamplerParameteri,
-        null_glSamplerParameteriv,
-        null_glScalexOES,
-        null_glScissorArrayv,
-        null_glScissorExclusiveArrayvNV,
-        null_glScissorExclusiveNV,
-        null_glScissorIndexed,
-        null_glScissorIndexedv,
-        null_glSecondaryColor3b,
-        null_glSecondaryColor3bEXT,
-        null_glSecondaryColor3bv,
-        null_glSecondaryColor3bvEXT,
-        null_glSecondaryColor3d,
-        null_glSecondaryColor3dEXT,
-        null_glSecondaryColor3dv,
-        null_glSecondaryColor3dvEXT,
-        null_glSecondaryColor3f,
-        null_glSecondaryColor3fEXT,
-        null_glSecondaryColor3fv,
-        null_glSecondaryColor3fvEXT,
-        null_glSecondaryColor3hNV,
-        null_glSecondaryColor3hvNV,
-        null_glSecondaryColor3i,
-        null_glSecondaryColor3iEXT,
-        null_glSecondaryColor3iv,
-        null_glSecondaryColor3ivEXT,
-        null_glSecondaryColor3s,
-        null_glSecondaryColor3sEXT,
-        null_glSecondaryColor3sv,
-        null_glSecondaryColor3svEXT,
-        null_glSecondaryColor3ub,
-        null_glSecondaryColor3ubEXT,
-        null_glSecondaryColor3ubv,
-        null_glSecondaryColor3ubvEXT,
-        null_glSecondaryColor3ui,
-        null_glSecondaryColor3uiEXT,
-        null_glSecondaryColor3uiv,
-        null_glSecondaryColor3uivEXT,
-        null_glSecondaryColor3us,
-        null_glSecondaryColor3usEXT,
-        null_glSecondaryColor3usv,
-        null_glSecondaryColor3usvEXT,
-        null_glSecondaryColorFormatNV,
-        null_glSecondaryColorP3ui,
-        null_glSecondaryColorP3uiv,
-        null_glSecondaryColorPointer,
-        null_glSecondaryColorPointerEXT,
-        null_glSecondaryColorPointerListIBM,
-        null_glSelectPerfMonitorCountersAMD,
-        null_glSelectTextureCoordSetSGIS,
-        null_glSelectTextureSGIS,
-        null_glSemaphoreParameterui64vEXT,
-        null_glSeparableFilter2D,
-        null_glSeparableFilter2DEXT,
-        null_glSetFenceAPPLE,
-        null_glSetFenceNV,
-        null_glSetFragmentShaderConstantATI,
-        null_glSetInvariantEXT,
-        null_glSetLocalConstantEXT,
-        null_glSetMultisamplefvAMD,
-        null_glShaderBinary,
-        null_glShaderOp1EXT,
-        null_glShaderOp2EXT,
-        null_glShaderOp3EXT,
-        null_glShaderSource,
-        null_glShaderSourceARB,
-        null_glShaderStorageBlockBinding,
-        null_glShadingRateImageBarrierNV,
-        null_glShadingRateImagePaletteNV,
-        null_glShadingRateSampleOrderCustomNV,
-        null_glShadingRateSampleOrderNV,
-        null_glSharpenTexFuncSGIS,
-        null_glSignalSemaphoreEXT,
-        null_glSignalSemaphoreui64NVX,
-        null_glSignalVkFenceNV,
-        null_glSignalVkSemaphoreNV,
-        null_glSpecializeShader,
-        null_glSpecializeShaderARB,
-        null_glSpriteParameterfSGIX,
-        null_glSpriteParameterfvSGIX,
-        null_glSpriteParameteriSGIX,
-        null_glSpriteParameterivSGIX,
-        null_glStartInstrumentsSGIX,
-        null_glStateCaptureNV,
-        null_glStencilClearTagEXT,
-        null_glStencilFillPathInstancedNV,
-        null_glStencilFillPathNV,
-        null_glStencilFuncSeparate,
-        null_glStencilFuncSeparateATI,
-        null_glStencilMaskSeparate,
-        null_glStencilOpSeparate,
-        null_glStencilOpSeparateATI,
-        null_glStencilOpValueAMD,
-        null_glStencilStrokePathInstancedNV,
-        null_glStencilStrokePathNV,
-        null_glStencilThenCoverFillPathInstancedNV,
-        null_glStencilThenCoverFillPathNV,
-        null_glStencilThenCoverStrokePathInstancedNV,
-        null_glStencilThenCoverStrokePathNV,
-        null_glStopInstrumentsSGIX,
-        null_glStringMarkerGREMEDY,
-        null_glSubpixelPrecisionBiasNV,
-        null_glSwizzleEXT,
-        null_glSyncTextureINTEL,
-        null_glTagSampleBufferSGIX,
-        null_glTangent3bEXT,
-        null_glTangent3bvEXT,
-        null_glTangent3dEXT,
-        null_glTangent3dvEXT,
-        null_glTangent3fEXT,
-        null_glTangent3fvEXT,
-        null_glTangent3iEXT,
-        null_glTangent3ivEXT,
-        null_glTangent3sEXT,
-        null_glTangent3svEXT,
-        null_glTangentPointerEXT,
-        null_glTbufferMask3DFX,
-        null_glTessellationFactorAMD,
-        null_glTessellationModeAMD,
-        null_glTestFenceAPPLE,
-        null_glTestFenceNV,
-        null_glTestObjectAPPLE,
-        null_glTexAttachMemoryNV,
-        null_glTexBuffer,
-        null_glTexBufferARB,
-        null_glTexBufferEXT,
-        null_glTexBufferRange,
-        null_glTexBumpParameterfvATI,
-        null_glTexBumpParameterivATI,
-        null_glTexCoord1bOES,
-        null_glTexCoord1bvOES,
-        null_glTexCoord1hNV,
-        null_glTexCoord1hvNV,
-        null_glTexCoord1xOES,
-        null_glTexCoord1xvOES,
-        null_glTexCoord2bOES,
-        null_glTexCoord2bvOES,
-        null_glTexCoord2fColor3fVertex3fSUN,
-        null_glTexCoord2fColor3fVertex3fvSUN,
-        null_glTexCoord2fColor4fNormal3fVertex3fSUN,
-        null_glTexCoord2fColor4fNormal3fVertex3fvSUN,
-        null_glTexCoord2fColor4ubVertex3fSUN,
-        null_glTexCoord2fColor4ubVertex3fvSUN,
-        null_glTexCoord2fNormal3fVertex3fSUN,
-        null_glTexCoord2fNormal3fVertex3fvSUN,
-        null_glTexCoord2fVertex3fSUN,
-        null_glTexCoord2fVertex3fvSUN,
-        null_glTexCoord2hNV,
-        null_glTexCoord2hvNV,
-        null_glTexCoord2xOES,
-        null_glTexCoord2xvOES,
-        null_glTexCoord3bOES,
-        null_glTexCoord3bvOES,
-        null_glTexCoord3hNV,
-        null_glTexCoord3hvNV,
-        null_glTexCoord3xOES,
-        null_glTexCoord3xvOES,
-        null_glTexCoord4bOES,
-        null_glTexCoord4bvOES,
-        null_glTexCoord4fColor4fNormal3fVertex4fSUN,
-        null_glTexCoord4fColor4fNormal3fVertex4fvSUN,
-        null_glTexCoord4fVertex4fSUN,
-        null_glTexCoord4fVertex4fvSUN,
-        null_glTexCoord4hNV,
-        null_glTexCoord4hvNV,
-        null_glTexCoord4xOES,
-        null_glTexCoord4xvOES,
-        null_glTexCoordFormatNV,
-        null_glTexCoordP1ui,
-        null_glTexCoordP1uiv,
-        null_glTexCoordP2ui,
-        null_glTexCoordP2uiv,
-        null_glTexCoordP3ui,
-        null_glTexCoordP3uiv,
-        null_glTexCoordP4ui,
-        null_glTexCoordP4uiv,
-        null_glTexCoordPointerEXT,
-        null_glTexCoordPointerListIBM,
-        null_glTexCoordPointervINTEL,
-        null_glTexEnvxOES,
-        null_glTexEnvxvOES,
-        null_glTexFilterFuncSGIS,
-        null_glTexGenxOES,
-        null_glTexGenxvOES,
-        null_glTexImage2DMultisample,
-        null_glTexImage2DMultisampleCoverageNV,
-        null_glTexImage3D,
-        null_glTexImage3DEXT,
-        null_glTexImage3DMultisample,
-        null_glTexImage3DMultisampleCoverageNV,
-        null_glTexImage4DSGIS,
-        null_glTexPageCommitmentARB,
-        null_glTexParameterIiv,
-        null_glTexParameterIivEXT,
-        null_glTexParameterIuiv,
-        null_glTexParameterIuivEXT,
-        null_glTexParameterxOES,
-        null_glTexParameterxvOES,
-        null_glTexRenderbufferNV,
-        null_glTexStorage1D,
-        null_glTexStorage2D,
-        null_glTexStorage2DMultisample,
-        null_glTexStorage3D,
-        null_glTexStorage3DMultisample,
-        null_glTexStorageMem1DEXT,
-        null_glTexStorageMem2DEXT,
-        null_glTexStorageMem2DMultisampleEXT,
-        null_glTexStorageMem3DEXT,
-        null_glTexStorageMem3DMultisampleEXT,
-        null_glTexStorageSparseAMD,
-        null_glTexSubImage1DEXT,
-        null_glTexSubImage2DEXT,
-        null_glTexSubImage3D,
-        null_glTexSubImage3DEXT,
-        null_glTexSubImage4DSGIS,
-        null_glTextureAttachMemoryNV,
-        null_glTextureBarrier,
-        null_glTextureBarrierNV,
-        null_glTextureBuffer,
-        null_glTextureBufferEXT,
-        null_glTextureBufferRange,
-        null_glTextureBufferRangeEXT,
-        null_glTextureColorMaskSGIS,
-        null_glTextureImage1DEXT,
-        null_glTextureImage2DEXT,
-        null_glTextureImage2DMultisampleCoverageNV,
-        null_glTextureImage2DMultisampleNV,
-        null_glTextureImage3DEXT,
-        null_glTextureImage3DMultisampleCoverageNV,
-        null_glTextureImage3DMultisampleNV,
-        null_glTextureLightEXT,
-        null_glTextureMaterialEXT,
-        null_glTextureNormalEXT,
-        null_glTexturePageCommitmentEXT,
-        null_glTextureParameterIiv,
-        null_glTextureParameterIivEXT,
-        null_glTextureParameterIuiv,
-        null_glTextureParameterIuivEXT,
-        null_glTextureParameterf,
-        null_glTextureParameterfEXT,
-        null_glTextureParameterfv,
-        null_glTextureParameterfvEXT,
-        null_glTextureParameteri,
-        null_glTextureParameteriEXT,
-        null_glTextureParameteriv,
-        null_glTextureParameterivEXT,
-        null_glTextureRangeAPPLE,
-        null_glTextureRenderbufferEXT,
-        null_glTextureStorage1D,
-        null_glTextureStorage1DEXT,
-        null_glTextureStorage2D,
-        null_glTextureStorage2DEXT,
-        null_glTextureStorage2DMultisample,
-        null_glTextureStorage2DMultisampleEXT,
-        null_glTextureStorage3D,
-        null_glTextureStorage3DEXT,
-        null_glTextureStorage3DMultisample,
-        null_glTextureStorage3DMultisampleEXT,
-        null_glTextureStorageMem1DEXT,
-        null_glTextureStorageMem2DEXT,
-        null_glTextureStorageMem2DMultisampleEXT,
-        null_glTextureStorageMem3DEXT,
-        null_glTextureStorageMem3DMultisampleEXT,
-        null_glTextureStorageSparseAMD,
-        null_glTextureSubImage1D,
-        null_glTextureSubImage1DEXT,
-        null_glTextureSubImage2D,
-        null_glTextureSubImage2DEXT,
-        null_glTextureSubImage3D,
-        null_glTextureSubImage3DEXT,
-        null_glTextureView,
-        null_glTrackMatrixNV,
-        null_glTransformFeedbackAttribsNV,
-        null_glTransformFeedbackBufferBase,
-        null_glTransformFeedbackBufferRange,
-        null_glTransformFeedbackStreamAttribsNV,
-        null_glTransformFeedbackVaryings,
-        null_glTransformFeedbackVaryingsEXT,
-        null_glTransformFeedbackVaryingsNV,
-        null_glTransformPathNV,
-        null_glTranslatexOES,
-        null_glUniform1d,
-        null_glUniform1dv,
-        null_glUniform1f,
-        null_glUniform1fARB,
-        null_glUniform1fv,
-        null_glUniform1fvARB,
-        null_glUniform1i,
-        null_glUniform1i64ARB,
-        null_glUniform1i64NV,
-        null_glUniform1i64vARB,
-        null_glUniform1i64vNV,
-        null_glUniform1iARB,
-        null_glUniform1iv,
-        null_glUniform1ivARB,
-        null_glUniform1ui,
-        null_glUniform1ui64ARB,
-        null_glUniform1ui64NV,
-        null_glUniform1ui64vARB,
-        null_glUniform1ui64vNV,
-        null_glUniform1uiEXT,
-        null_glUniform1uiv,
-        null_glUniform1uivEXT,
-        null_glUniform2d,
-        null_glUniform2dv,
-        null_glUniform2f,
-        null_glUniform2fARB,
-        null_glUniform2fv,
-        null_glUniform2fvARB,
-        null_glUniform2i,
-        null_glUniform2i64ARB,
-        null_glUniform2i64NV,
-        null_glUniform2i64vARB,
-        null_glUniform2i64vNV,
-        null_glUniform2iARB,
-        null_glUniform2iv,
-        null_glUniform2ivARB,
-        null_glUniform2ui,
-        null_glUniform2ui64ARB,
-        null_glUniform2ui64NV,
-        null_glUniform2ui64vARB,
-        null_glUniform2ui64vNV,
-        null_glUniform2uiEXT,
-        null_glUniform2uiv,
-        null_glUniform2uivEXT,
-        null_glUniform3d,
-        null_glUniform3dv,
-        null_glUniform3f,
-        null_glUniform3fARB,
-        null_glUniform3fv,
-        null_glUniform3fvARB,
-        null_glUniform3i,
-        null_glUniform3i64ARB,
-        null_glUniform3i64NV,
-        null_glUniform3i64vARB,
-        null_glUniform3i64vNV,
-        null_glUniform3iARB,
-        null_glUniform3iv,
-        null_glUniform3ivARB,
-        null_glUniform3ui,
-        null_glUniform3ui64ARB,
-        null_glUniform3ui64NV,
-        null_glUniform3ui64vARB,
-        null_glUniform3ui64vNV,
-        null_glUniform3uiEXT,
-        null_glUniform3uiv,
-        null_glUniform3uivEXT,
-        null_glUniform4d,
-        null_glUniform4dv,
-        null_glUniform4f,
-        null_glUniform4fARB,
-        null_glUniform4fv,
-        null_glUniform4fvARB,
-        null_glUniform4i,
-        null_glUniform4i64ARB,
-        null_glUniform4i64NV,
-        null_glUniform4i64vARB,
-        null_glUniform4i64vNV,
-        null_glUniform4iARB,
-        null_glUniform4iv,
-        null_glUniform4ivARB,
-        null_glUniform4ui,
-        null_glUniform4ui64ARB,
-        null_glUniform4ui64NV,
-        null_glUniform4ui64vARB,
-        null_glUniform4ui64vNV,
-        null_glUniform4uiEXT,
-        null_glUniform4uiv,
-        null_glUniform4uivEXT,
-        null_glUniformBlockBinding,
-        null_glUniformBufferEXT,
-        null_glUniformHandleui64ARB,
-        null_glUniformHandleui64NV,
-        null_glUniformHandleui64vARB,
-        null_glUniformHandleui64vNV,
-        null_glUniformMatrix2dv,
-        null_glUniformMatrix2fv,
-        null_glUniformMatrix2fvARB,
-        null_glUniformMatrix2x3dv,
-        null_glUniformMatrix2x3fv,
-        null_glUniformMatrix2x4dv,
-        null_glUniformMatrix2x4fv,
-        null_glUniformMatrix3dv,
-        null_glUniformMatrix3fv,
-        null_glUniformMatrix3fvARB,
-        null_glUniformMatrix3x2dv,
-        null_glUniformMatrix3x2fv,
-        null_glUniformMatrix3x4dv,
-        null_glUniformMatrix3x4fv,
-        null_glUniformMatrix4dv,
-        null_glUniformMatrix4fv,
-        null_glUniformMatrix4fvARB,
-        null_glUniformMatrix4x2dv,
-        null_glUniformMatrix4x2fv,
-        null_glUniformMatrix4x3dv,
-        null_glUniformMatrix4x3fv,
-        null_glUniformSubroutinesuiv,
-        null_glUniformui64NV,
-        null_glUniformui64vNV,
-        null_glUnlockArraysEXT,
-        null_glUnmapBuffer,
-        null_glUnmapBufferARB,
-        null_glUnmapNamedBuffer,
-        null_glUnmapNamedBufferEXT,
-        null_glUnmapObjectBufferATI,
-        null_glUnmapTexture2DINTEL,
-        null_glUpdateObjectBufferATI,
-        null_glUploadGpuMaskNVX,
-        null_glUseProgram,
-        null_glUseProgramObjectARB,
-        null_glUseProgramStages,
-        null_glUseShaderProgramEXT,
-        null_glVDPAUFiniNV,
-        null_glVDPAUGetSurfaceivNV,
-        null_glVDPAUInitNV,
-        null_glVDPAUIsSurfaceNV,
-        null_glVDPAUMapSurfacesNV,
-        null_glVDPAURegisterOutputSurfaceNV,
-        null_glVDPAURegisterVideoSurfaceNV,
-        null_glVDPAURegisterVideoSurfaceWithPictureStructureNV,
-        null_glVDPAUSurfaceAccessNV,
-        null_glVDPAUUnmapSurfacesNV,
-        null_glVDPAUUnregisterSurfaceNV,
-        null_glValidateProgram,
-        null_glValidateProgramARB,
-        null_glValidateProgramPipeline,
-        null_glVariantArrayObjectATI,
-        null_glVariantPointerEXT,
-        null_glVariantbvEXT,
-        null_glVariantdvEXT,
-        null_glVariantfvEXT,
-        null_glVariantivEXT,
-        null_glVariantsvEXT,
-        null_glVariantubvEXT,
-        null_glVariantuivEXT,
-        null_glVariantusvEXT,
-        null_glVertex2bOES,
-        null_glVertex2bvOES,
-        null_glVertex2hNV,
-        null_glVertex2hvNV,
-        null_glVertex2xOES,
-        null_glVertex2xvOES,
-        null_glVertex3bOES,
-        null_glVertex3bvOES,
-        null_glVertex3hNV,
-        null_glVertex3hvNV,
-        null_glVertex3xOES,
-        null_glVertex3xvOES,
-        null_glVertex4bOES,
-        null_glVertex4bvOES,
-        null_glVertex4hNV,
-        null_glVertex4hvNV,
-        null_glVertex4xOES,
-        null_glVertex4xvOES,
-        null_glVertexArrayAttribBinding,
-        null_glVertexArrayAttribFormat,
-        null_glVertexArrayAttribIFormat,
-        null_glVertexArrayAttribLFormat,
-        null_glVertexArrayBindVertexBufferEXT,
-        null_glVertexArrayBindingDivisor,
-        null_glVertexArrayColorOffsetEXT,
-        null_glVertexArrayEdgeFlagOffsetEXT,
-        null_glVertexArrayElementBuffer,
-        null_glVertexArrayFogCoordOffsetEXT,
-        null_glVertexArrayIndexOffsetEXT,
-        null_glVertexArrayMultiTexCoordOffsetEXT,
-        null_glVertexArrayNormalOffsetEXT,
-        null_glVertexArrayParameteriAPPLE,
-        null_glVertexArrayRangeAPPLE,
-        null_glVertexArrayRangeNV,
-        null_glVertexArraySecondaryColorOffsetEXT,
-        null_glVertexArrayTexCoordOffsetEXT,
-        null_glVertexArrayVertexAttribBindingEXT,
-        null_glVertexArrayVertexAttribDivisorEXT,
-        null_glVertexArrayVertexAttribFormatEXT,
-        null_glVertexArrayVertexAttribIFormatEXT,
-        null_glVertexArrayVertexAttribIOffsetEXT,
-        null_glVertexArrayVertexAttribLFormatEXT,
-        null_glVertexArrayVertexAttribLOffsetEXT,
-        null_glVertexArrayVertexAttribOffsetEXT,
-        null_glVertexArrayVertexBindingDivisorEXT,
-        null_glVertexArrayVertexBuffer,
-        null_glVertexArrayVertexBuffers,
-        null_glVertexArrayVertexOffsetEXT,
-        null_glVertexAttrib1d,
-        null_glVertexAttrib1dARB,
-        null_glVertexAttrib1dNV,
-        null_glVertexAttrib1dv,
-        null_glVertexAttrib1dvARB,
-        null_glVertexAttrib1dvNV,
-        null_glVertexAttrib1f,
-        null_glVertexAttrib1fARB,
-        null_glVertexAttrib1fNV,
-        null_glVertexAttrib1fv,
-        null_glVertexAttrib1fvARB,
-        null_glVertexAttrib1fvNV,
-        null_glVertexAttrib1hNV,
-        null_glVertexAttrib1hvNV,
-        null_glVertexAttrib1s,
-        null_glVertexAttrib1sARB,
-        null_glVertexAttrib1sNV,
-        null_glVertexAttrib1sv,
-        null_glVertexAttrib1svARB,
-        null_glVertexAttrib1svNV,
-        null_glVertexAttrib2d,
-        null_glVertexAttrib2dARB,
-        null_glVertexAttrib2dNV,
-        null_glVertexAttrib2dv,
-        null_glVertexAttrib2dvARB,
-        null_glVertexAttrib2dvNV,
-        null_glVertexAttrib2f,
-        null_glVertexAttrib2fARB,
-        null_glVertexAttrib2fNV,
-        null_glVertexAttrib2fv,
-        null_glVertexAttrib2fvARB,
-        null_glVertexAttrib2fvNV,
-        null_glVertexAttrib2hNV,
-        null_glVertexAttrib2hvNV,
-        null_glVertexAttrib2s,
-        null_glVertexAttrib2sARB,
-        null_glVertexAttrib2sNV,
-        null_glVertexAttrib2sv,
-        null_glVertexAttrib2svARB,
-        null_glVertexAttrib2svNV,
-        null_glVertexAttrib3d,
-        null_glVertexAttrib3dARB,
-        null_glVertexAttrib3dNV,
-        null_glVertexAttrib3dv,
-        null_glVertexAttrib3dvARB,
-        null_glVertexAttrib3dvNV,
-        null_glVertexAttrib3f,
-        null_glVertexAttrib3fARB,
-        null_glVertexAttrib3fNV,
-        null_glVertexAttrib3fv,
-        null_glVertexAttrib3fvARB,
-        null_glVertexAttrib3fvNV,
-        null_glVertexAttrib3hNV,
-        null_glVertexAttrib3hvNV,
-        null_glVertexAttrib3s,
-        null_glVertexAttrib3sARB,
-        null_glVertexAttrib3sNV,
-        null_glVertexAttrib3sv,
-        null_glVertexAttrib3svARB,
-        null_glVertexAttrib3svNV,
-        null_glVertexAttrib4Nbv,
-        null_glVertexAttrib4NbvARB,
-        null_glVertexAttrib4Niv,
-        null_glVertexAttrib4NivARB,
-        null_glVertexAttrib4Nsv,
-        null_glVertexAttrib4NsvARB,
-        null_glVertexAttrib4Nub,
-        null_glVertexAttrib4NubARB,
-        null_glVertexAttrib4Nubv,
-        null_glVertexAttrib4NubvARB,
-        null_glVertexAttrib4Nuiv,
-        null_glVertexAttrib4NuivARB,
-        null_glVertexAttrib4Nusv,
-        null_glVertexAttrib4NusvARB,
-        null_glVertexAttrib4bv,
-        null_glVertexAttrib4bvARB,
-        null_glVertexAttrib4d,
-        null_glVertexAttrib4dARB,
-        null_glVertexAttrib4dNV,
-        null_glVertexAttrib4dv,
-        null_glVertexAttrib4dvARB,
-        null_glVertexAttrib4dvNV,
-        null_glVertexAttrib4f,
-        null_glVertexAttrib4fARB,
-        null_glVertexAttrib4fNV,
-        null_glVertexAttrib4fv,
-        null_glVertexAttrib4fvARB,
-        null_glVertexAttrib4fvNV,
-        null_glVertexAttrib4hNV,
-        null_glVertexAttrib4hvNV,
-        null_glVertexAttrib4iv,
-        null_glVertexAttrib4ivARB,
-        null_glVertexAttrib4s,
-        null_glVertexAttrib4sARB,
-        null_glVertexAttrib4sNV,
-        null_glVertexAttrib4sv,
-        null_glVertexAttrib4svARB,
-        null_glVertexAttrib4svNV,
-        null_glVertexAttrib4ubNV,
-        null_glVertexAttrib4ubv,
-        null_glVertexAttrib4ubvARB,
-        null_glVertexAttrib4ubvNV,
-        null_glVertexAttrib4uiv,
-        null_glVertexAttrib4uivARB,
-        null_glVertexAttrib4usv,
-        null_glVertexAttrib4usvARB,
-        null_glVertexAttribArrayObjectATI,
-        null_glVertexAttribBinding,
-        null_glVertexAttribDivisor,
-        null_glVertexAttribDivisorARB,
-        null_glVertexAttribFormat,
-        null_glVertexAttribFormatNV,
-        null_glVertexAttribI1i,
-        null_glVertexAttribI1iEXT,
-        null_glVertexAttribI1iv,
-        null_glVertexAttribI1ivEXT,
-        null_glVertexAttribI1ui,
-        null_glVertexAttribI1uiEXT,
-        null_glVertexAttribI1uiv,
-        null_glVertexAttribI1uivEXT,
-        null_glVertexAttribI2i,
-        null_glVertexAttribI2iEXT,
-        null_glVertexAttribI2iv,
-        null_glVertexAttribI2ivEXT,
-        null_glVertexAttribI2ui,
-        null_glVertexAttribI2uiEXT,
-        null_glVertexAttribI2uiv,
-        null_glVertexAttribI2uivEXT,
-        null_glVertexAttribI3i,
-        null_glVertexAttribI3iEXT,
-        null_glVertexAttribI3iv,
-        null_glVertexAttribI3ivEXT,
-        null_glVertexAttribI3ui,
-        null_glVertexAttribI3uiEXT,
-        null_glVertexAttribI3uiv,
-        null_glVertexAttribI3uivEXT,
-        null_glVertexAttribI4bv,
-        null_glVertexAttribI4bvEXT,
-        null_glVertexAttribI4i,
-        null_glVertexAttribI4iEXT,
-        null_glVertexAttribI4iv,
-        null_glVertexAttribI4ivEXT,
-        null_glVertexAttribI4sv,
-        null_glVertexAttribI4svEXT,
-        null_glVertexAttribI4ubv,
-        null_glVertexAttribI4ubvEXT,
-        null_glVertexAttribI4ui,
-        null_glVertexAttribI4uiEXT,
-        null_glVertexAttribI4uiv,
-        null_glVertexAttribI4uivEXT,
-        null_glVertexAttribI4usv,
-        null_glVertexAttribI4usvEXT,
-        null_glVertexAttribIFormat,
-        null_glVertexAttribIFormatNV,
-        null_glVertexAttribIPointer,
-        null_glVertexAttribIPointerEXT,
-        null_glVertexAttribL1d,
-        null_glVertexAttribL1dEXT,
-        null_glVertexAttribL1dv,
-        null_glVertexAttribL1dvEXT,
-        null_glVertexAttribL1i64NV,
-        null_glVertexAttribL1i64vNV,
-        null_glVertexAttribL1ui64ARB,
-        null_glVertexAttribL1ui64NV,
-        null_glVertexAttribL1ui64vARB,
-        null_glVertexAttribL1ui64vNV,
-        null_glVertexAttribL2d,
-        null_glVertexAttribL2dEXT,
-        null_glVertexAttribL2dv,
-        null_glVertexAttribL2dvEXT,
-        null_glVertexAttribL2i64NV,
-        null_glVertexAttribL2i64vNV,
-        null_glVertexAttribL2ui64NV,
-        null_glVertexAttribL2ui64vNV,
-        null_glVertexAttribL3d,
-        null_glVertexAttribL3dEXT,
-        null_glVertexAttribL3dv,
-        null_glVertexAttribL3dvEXT,
-        null_glVertexAttribL3i64NV,
-        null_glVertexAttribL3i64vNV,
-        null_glVertexAttribL3ui64NV,
-        null_glVertexAttribL3ui64vNV,
-        null_glVertexAttribL4d,
-        null_glVertexAttribL4dEXT,
-        null_glVertexAttribL4dv,
-        null_glVertexAttribL4dvEXT,
-        null_glVertexAttribL4i64NV,
-        null_glVertexAttribL4i64vNV,
-        null_glVertexAttribL4ui64NV,
-        null_glVertexAttribL4ui64vNV,
-        null_glVertexAttribLFormat,
-        null_glVertexAttribLFormatNV,
-        null_glVertexAttribLPointer,
-        null_glVertexAttribLPointerEXT,
-        null_glVertexAttribP1ui,
-        null_glVertexAttribP1uiv,
-        null_glVertexAttribP2ui,
-        null_glVertexAttribP2uiv,
-        null_glVertexAttribP3ui,
-        null_glVertexAttribP3uiv,
-        null_glVertexAttribP4ui,
-        null_glVertexAttribP4uiv,
-        null_glVertexAttribParameteriAMD,
-        null_glVertexAttribPointer,
-        null_glVertexAttribPointerARB,
-        null_glVertexAttribPointerNV,
-        null_glVertexAttribs1dvNV,
-        null_glVertexAttribs1fvNV,
-        null_glVertexAttribs1hvNV,
-        null_glVertexAttribs1svNV,
-        null_glVertexAttribs2dvNV,
-        null_glVertexAttribs2fvNV,
-        null_glVertexAttribs2hvNV,
-        null_glVertexAttribs2svNV,
-        null_glVertexAttribs3dvNV,
-        null_glVertexAttribs3fvNV,
-        null_glVertexAttribs3hvNV,
-        null_glVertexAttribs3svNV,
-        null_glVertexAttribs4dvNV,
-        null_glVertexAttribs4fvNV,
-        null_glVertexAttribs4hvNV,
-        null_glVertexAttribs4svNV,
-        null_glVertexAttribs4ubvNV,
-        null_glVertexBindingDivisor,
-        null_glVertexBlendARB,
-        null_glVertexBlendEnvfATI,
-        null_glVertexBlendEnviATI,
-        null_glVertexFormatNV,
-        null_glVertexP2ui,
-        null_glVertexP2uiv,
-        null_glVertexP3ui,
-        null_glVertexP3uiv,
-        null_glVertexP4ui,
-        null_glVertexP4uiv,
-        null_glVertexPointerEXT,
-        null_glVertexPointerListIBM,
-        null_glVertexPointervINTEL,
-        null_glVertexStream1dATI,
-        null_glVertexStream1dvATI,
-        null_glVertexStream1fATI,
-        null_glVertexStream1fvATI,
-        null_glVertexStream1iATI,
-        null_glVertexStream1ivATI,
-        null_glVertexStream1sATI,
-        null_glVertexStream1svATI,
-        null_glVertexStream2dATI,
-        null_glVertexStream2dvATI,
-        null_glVertexStream2fATI,
-        null_glVertexStream2fvATI,
-        null_glVertexStream2iATI,
-        null_glVertexStream2ivATI,
-        null_glVertexStream2sATI,
-        null_glVertexStream2svATI,
-        null_glVertexStream3dATI,
-        null_glVertexStream3dvATI,
-        null_glVertexStream3fATI,
-        null_glVertexStream3fvATI,
-        null_glVertexStream3iATI,
-        null_glVertexStream3ivATI,
-        null_glVertexStream3sATI,
-        null_glVertexStream3svATI,
-        null_glVertexStream4dATI,
-        null_glVertexStream4dvATI,
-        null_glVertexStream4fATI,
-        null_glVertexStream4fvATI,
-        null_glVertexStream4iATI,
-        null_glVertexStream4ivATI,
-        null_glVertexStream4sATI,
-        null_glVertexStream4svATI,
-        null_glVertexWeightPointerEXT,
-        null_glVertexWeightfEXT,
-        null_glVertexWeightfvEXT,
-        null_glVertexWeighthNV,
-        null_glVertexWeighthvNV,
-        null_glVideoCaptureNV,
-        null_glVideoCaptureStreamParameterdvNV,
-        null_glVideoCaptureStreamParameterfvNV,
-        null_glVideoCaptureStreamParameterivNV,
-        null_glViewportArrayv,
-        null_glViewportIndexedf,
-        null_glViewportIndexedfv,
-        null_glViewportPositionWScaleNV,
-        null_glViewportSwizzleNV,
-        null_glWaitSemaphoreEXT,
-        null_glWaitSemaphoreui64NVX,
-        null_glWaitSync,
-        null_glWaitVkSemaphoreNV,
-        null_glWeightPathsNV,
-        null_glWeightPointerARB,
-        null_glWeightbvARB,
-        null_glWeightdvARB,
-        null_glWeightfvARB,
-        null_glWeightivARB,
-        null_glWeightsvARB,
-        null_glWeightubvARB,
-        null_glWeightuivARB,
-        null_glWeightusvARB,
-        null_glWindowPos2d,
-        null_glWindowPos2dARB,
-        null_glWindowPos2dMESA,
-        null_glWindowPos2dv,
-        null_glWindowPos2dvARB,
-        null_glWindowPos2dvMESA,
-        null_glWindowPos2f,
-        null_glWindowPos2fARB,
-        null_glWindowPos2fMESA,
-        null_glWindowPos2fv,
-        null_glWindowPos2fvARB,
-        null_glWindowPos2fvMESA,
-        null_glWindowPos2i,
-        null_glWindowPos2iARB,
-        null_glWindowPos2iMESA,
-        null_glWindowPos2iv,
-        null_glWindowPos2ivARB,
-        null_glWindowPos2ivMESA,
-        null_glWindowPos2s,
-        null_glWindowPos2sARB,
-        null_glWindowPos2sMESA,
-        null_glWindowPos2sv,
-        null_glWindowPos2svARB,
-        null_glWindowPos2svMESA,
-        null_glWindowPos3d,
-        null_glWindowPos3dARB,
-        null_glWindowPos3dMESA,
-        null_glWindowPos3dv,
-        null_glWindowPos3dvARB,
-        null_glWindowPos3dvMESA,
-        null_glWindowPos3f,
-        null_glWindowPos3fARB,
-        null_glWindowPos3fMESA,
-        null_glWindowPos3fv,
-        null_glWindowPos3fvARB,
-        null_glWindowPos3fvMESA,
-        null_glWindowPos3i,
-        null_glWindowPos3iARB,
-        null_glWindowPos3iMESA,
-        null_glWindowPos3iv,
-        null_glWindowPos3ivARB,
-        null_glWindowPos3ivMESA,
-        null_glWindowPos3s,
-        null_glWindowPos3sARB,
-        null_glWindowPos3sMESA,
-        null_glWindowPos3sv,
-        null_glWindowPos3svARB,
-        null_glWindowPos3svMESA,
-        null_glWindowPos4dMESA,
-        null_glWindowPos4dvMESA,
-        null_glWindowPos4fMESA,
-        null_glWindowPos4fvMESA,
-        null_glWindowPos4iMESA,
-        null_glWindowPos4ivMESA,
-        null_glWindowPos4sMESA,
-        null_glWindowPos4svMESA,
-        null_glWindowRectanglesEXT,
-        null_glWriteMaskEXT,
-        null_wglAllocateMemoryNV,
-        null_wglBindTexImageARB,
-        null_wglChoosePixelFormatARB,
-        null_wglCreateContextAttribsARB,
-        null_wglCreatePbufferARB,
-        null_wglDestroyPbufferARB,
-        null_wglFreeMemoryNV,
-        null_wglGetCurrentReadDCARB,
-        null_wglGetExtensionsStringARB,
-        null_wglGetExtensionsStringEXT,
-        null_wglGetPbufferDCARB,
-        null_wglGetPixelFormatAttribfvARB,
-        null_wglGetPixelFormatAttribivARB,
-        null_wglGetSwapIntervalEXT,
-        null_wglMakeContextCurrentARB,
-        null_wglQueryCurrentRendererIntegerWINE,
-        null_wglQueryCurrentRendererStringWINE,
-        null_wglQueryPbufferARB,
-        null_wglQueryRendererIntegerWINE,
-        null_wglQueryRendererStringWINE,
-        null_wglReleasePbufferDCARB,
-        null_wglReleaseTexImageARB,
-        null_wglSetPbufferAttribARB,
-        null_wglSetPixelFormatWINE,
-        null_wglSwapIntervalEXT,
-    },
+    .p_wglCopyContext = null_wglCopyContext,
+    .p_wglCreateContext = null_wglCreateContext,
+    .p_wglDeleteContext = null_wglDeleteContext,
+    .p_wglGetPixelFormat = null_wglGetPixelFormat,
+    .p_wglGetProcAddress = null_wglGetProcAddress,
+    .p_wglMakeCurrent = null_wglMakeCurrent,
+    .p_wglSetPixelFormat = null_wglSetPixelFormat,
+    .p_wglShareLists = null_wglShareLists,
+    .p_wglSwapBuffers = null_wglSwapBuffers,
+    .p_glAccum = null_glAccum,
+    .p_glAlphaFunc = null_glAlphaFunc,
+    .p_glAreTexturesResident = null_glAreTexturesResident,
+    .p_glArrayElement = null_glArrayElement,
+    .p_glBegin = null_glBegin,
+    .p_glBindTexture = null_glBindTexture,
+    .p_glBitmap = null_glBitmap,
+    .p_glBlendFunc = null_glBlendFunc,
+    .p_glCallList = null_glCallList,
+    .p_glCallLists = null_glCallLists,
+    .p_glClear = null_glClear,
+    .p_glClearAccum = null_glClearAccum,
+    .p_glClearColor = null_glClearColor,
+    .p_glClearDepth = null_glClearDepth,
+    .p_glClearIndex = null_glClearIndex,
+    .p_glClearStencil = null_glClearStencil,
+    .p_glClipPlane = null_glClipPlane,
+    .p_glColor3b = null_glColor3b,
+    .p_glColor3bv = null_glColor3bv,
+    .p_glColor3d = null_glColor3d,
+    .p_glColor3dv = null_glColor3dv,
+    .p_glColor3f = null_glColor3f,
+    .p_glColor3fv = null_glColor3fv,
+    .p_glColor3i = null_glColor3i,
+    .p_glColor3iv = null_glColor3iv,
+    .p_glColor3s = null_glColor3s,
+    .p_glColor3sv = null_glColor3sv,
+    .p_glColor3ub = null_glColor3ub,
+    .p_glColor3ubv = null_glColor3ubv,
+    .p_glColor3ui = null_glColor3ui,
+    .p_glColor3uiv = null_glColor3uiv,
+    .p_glColor3us = null_glColor3us,
+    .p_glColor3usv = null_glColor3usv,
+    .p_glColor4b = null_glColor4b,
+    .p_glColor4bv = null_glColor4bv,
+    .p_glColor4d = null_glColor4d,
+    .p_glColor4dv = null_glColor4dv,
+    .p_glColor4f = null_glColor4f,
+    .p_glColor4fv = null_glColor4fv,
+    .p_glColor4i = null_glColor4i,
+    .p_glColor4iv = null_glColor4iv,
+    .p_glColor4s = null_glColor4s,
+    .p_glColor4sv = null_glColor4sv,
+    .p_glColor4ub = null_glColor4ub,
+    .p_glColor4ubv = null_glColor4ubv,
+    .p_glColor4ui = null_glColor4ui,
+    .p_glColor4uiv = null_glColor4uiv,
+    .p_glColor4us = null_glColor4us,
+    .p_glColor4usv = null_glColor4usv,
+    .p_glColorMask = null_glColorMask,
+    .p_glColorMaterial = null_glColorMaterial,
+    .p_glColorPointer = null_glColorPointer,
+    .p_glCopyPixels = null_glCopyPixels,
+    .p_glCopyTexImage1D = null_glCopyTexImage1D,
+    .p_glCopyTexImage2D = null_glCopyTexImage2D,
+    .p_glCopyTexSubImage1D = null_glCopyTexSubImage1D,
+    .p_glCopyTexSubImage2D = null_glCopyTexSubImage2D,
+    .p_glCullFace = null_glCullFace,
+    .p_glDeleteLists = null_glDeleteLists,
+    .p_glDeleteTextures = null_glDeleteTextures,
+    .p_glDepthFunc = null_glDepthFunc,
+    .p_glDepthMask = null_glDepthMask,
+    .p_glDepthRange = null_glDepthRange,
+    .p_glDisable = null_glDisable,
+    .p_glDisableClientState = null_glDisableClientState,
+    .p_glDrawArrays = null_glDrawArrays,
+    .p_glDrawBuffer = null_glDrawBuffer,
+    .p_glDrawElements = null_glDrawElements,
+    .p_glDrawPixels = null_glDrawPixels,
+    .p_glEdgeFlag = null_glEdgeFlag,
+    .p_glEdgeFlagPointer = null_glEdgeFlagPointer,
+    .p_glEdgeFlagv = null_glEdgeFlagv,
+    .p_glEnable = null_glEnable,
+    .p_glEnableClientState = null_glEnableClientState,
+    .p_glEnd = null_glEnd,
+    .p_glEndList = null_glEndList,
+    .p_glEvalCoord1d = null_glEvalCoord1d,
+    .p_glEvalCoord1dv = null_glEvalCoord1dv,
+    .p_glEvalCoord1f = null_glEvalCoord1f,
+    .p_glEvalCoord1fv = null_glEvalCoord1fv,
+    .p_glEvalCoord2d = null_glEvalCoord2d,
+    .p_glEvalCoord2dv = null_glEvalCoord2dv,
+    .p_glEvalCoord2f = null_glEvalCoord2f,
+    .p_glEvalCoord2fv = null_glEvalCoord2fv,
+    .p_glEvalMesh1 = null_glEvalMesh1,
+    .p_glEvalMesh2 = null_glEvalMesh2,
+    .p_glEvalPoint1 = null_glEvalPoint1,
+    .p_glEvalPoint2 = null_glEvalPoint2,
+    .p_glFeedbackBuffer = null_glFeedbackBuffer,
+    .p_glFinish = null_glFinish,
+    .p_glFlush = null_glFlush,
+    .p_glFogf = null_glFogf,
+    .p_glFogfv = null_glFogfv,
+    .p_glFogi = null_glFogi,
+    .p_glFogiv = null_glFogiv,
+    .p_glFrontFace = null_glFrontFace,
+    .p_glFrustum = null_glFrustum,
+    .p_glGenLists = null_glGenLists,
+    .p_glGenTextures = null_glGenTextures,
+    .p_glGetBooleanv = null_glGetBooleanv,
+    .p_glGetClipPlane = null_glGetClipPlane,
+    .p_glGetDoublev = null_glGetDoublev,
+    .p_glGetError = null_glGetError,
+    .p_glGetFloatv = null_glGetFloatv,
+    .p_glGetIntegerv = null_glGetIntegerv,
+    .p_glGetLightfv = null_glGetLightfv,
+    .p_glGetLightiv = null_glGetLightiv,
+    .p_glGetMapdv = null_glGetMapdv,
+    .p_glGetMapfv = null_glGetMapfv,
+    .p_glGetMapiv = null_glGetMapiv,
+    .p_glGetMaterialfv = null_glGetMaterialfv,
+    .p_glGetMaterialiv = null_glGetMaterialiv,
+    .p_glGetPixelMapfv = null_glGetPixelMapfv,
+    .p_glGetPixelMapuiv = null_glGetPixelMapuiv,
+    .p_glGetPixelMapusv = null_glGetPixelMapusv,
+    .p_glGetPointerv = null_glGetPointerv,
+    .p_glGetPolygonStipple = null_glGetPolygonStipple,
+    .p_glGetString = null_glGetString,
+    .p_glGetTexEnvfv = null_glGetTexEnvfv,
+    .p_glGetTexEnviv = null_glGetTexEnviv,
+    .p_glGetTexGendv = null_glGetTexGendv,
+    .p_glGetTexGenfv = null_glGetTexGenfv,
+    .p_glGetTexGeniv = null_glGetTexGeniv,
+    .p_glGetTexImage = null_glGetTexImage,
+    .p_glGetTexLevelParameterfv = null_glGetTexLevelParameterfv,
+    .p_glGetTexLevelParameteriv = null_glGetTexLevelParameteriv,
+    .p_glGetTexParameterfv = null_glGetTexParameterfv,
+    .p_glGetTexParameteriv = null_glGetTexParameteriv,
+    .p_glHint = null_glHint,
+    .p_glIndexMask = null_glIndexMask,
+    .p_glIndexPointer = null_glIndexPointer,
+    .p_glIndexd = null_glIndexd,
+    .p_glIndexdv = null_glIndexdv,
+    .p_glIndexf = null_glIndexf,
+    .p_glIndexfv = null_glIndexfv,
+    .p_glIndexi = null_glIndexi,
+    .p_glIndexiv = null_glIndexiv,
+    .p_glIndexs = null_glIndexs,
+    .p_glIndexsv = null_glIndexsv,
+    .p_glIndexub = null_glIndexub,
+    .p_glIndexubv = null_glIndexubv,
+    .p_glInitNames = null_glInitNames,
+    .p_glInterleavedArrays = null_glInterleavedArrays,
+    .p_glIsEnabled = null_glIsEnabled,
+    .p_glIsList = null_glIsList,
+    .p_glIsTexture = null_glIsTexture,
+    .p_glLightModelf = null_glLightModelf,
+    .p_glLightModelfv = null_glLightModelfv,
+    .p_glLightModeli = null_glLightModeli,
+    .p_glLightModeliv = null_glLightModeliv,
+    .p_glLightf = null_glLightf,
+    .p_glLightfv = null_glLightfv,
+    .p_glLighti = null_glLighti,
+    .p_glLightiv = null_glLightiv,
+    .p_glLineStipple = null_glLineStipple,
+    .p_glLineWidth = null_glLineWidth,
+    .p_glListBase = null_glListBase,
+    .p_glLoadIdentity = null_glLoadIdentity,
+    .p_glLoadMatrixd = null_glLoadMatrixd,
+    .p_glLoadMatrixf = null_glLoadMatrixf,
+    .p_glLoadName = null_glLoadName,
+    .p_glLogicOp = null_glLogicOp,
+    .p_glMap1d = null_glMap1d,
+    .p_glMap1f = null_glMap1f,
+    .p_glMap2d = null_glMap2d,
+    .p_glMap2f = null_glMap2f,
+    .p_glMapGrid1d = null_glMapGrid1d,
+    .p_glMapGrid1f = null_glMapGrid1f,
+    .p_glMapGrid2d = null_glMapGrid2d,
+    .p_glMapGrid2f = null_glMapGrid2f,
+    .p_glMaterialf = null_glMaterialf,
+    .p_glMaterialfv = null_glMaterialfv,
+    .p_glMateriali = null_glMateriali,
+    .p_glMaterialiv = null_glMaterialiv,
+    .p_glMatrixMode = null_glMatrixMode,
+    .p_glMultMatrixd = null_glMultMatrixd,
+    .p_glMultMatrixf = null_glMultMatrixf,
+    .p_glNewList = null_glNewList,
+    .p_glNormal3b = null_glNormal3b,
+    .p_glNormal3bv = null_glNormal3bv,
+    .p_glNormal3d = null_glNormal3d,
+    .p_glNormal3dv = null_glNormal3dv,
+    .p_glNormal3f = null_glNormal3f,
+    .p_glNormal3fv = null_glNormal3fv,
+    .p_glNormal3i = null_glNormal3i,
+    .p_glNormal3iv = null_glNormal3iv,
+    .p_glNormal3s = null_glNormal3s,
+    .p_glNormal3sv = null_glNormal3sv,
+    .p_glNormalPointer = null_glNormalPointer,
+    .p_glOrtho = null_glOrtho,
+    .p_glPassThrough = null_glPassThrough,
+    .p_glPixelMapfv = null_glPixelMapfv,
+    .p_glPixelMapuiv = null_glPixelMapuiv,
+    .p_glPixelMapusv = null_glPixelMapusv,
+    .p_glPixelStoref = null_glPixelStoref,
+    .p_glPixelStorei = null_glPixelStorei,
+    .p_glPixelTransferf = null_glPixelTransferf,
+    .p_glPixelTransferi = null_glPixelTransferi,
+    .p_glPixelZoom = null_glPixelZoom,
+    .p_glPointSize = null_glPointSize,
+    .p_glPolygonMode = null_glPolygonMode,
+    .p_glPolygonOffset = null_glPolygonOffset,
+    .p_glPolygonStipple = null_glPolygonStipple,
+    .p_glPopAttrib = null_glPopAttrib,
+    .p_glPopClientAttrib = null_glPopClientAttrib,
+    .p_glPopMatrix = null_glPopMatrix,
+    .p_glPopName = null_glPopName,
+    .p_glPrioritizeTextures = null_glPrioritizeTextures,
+    .p_glPushAttrib = null_glPushAttrib,
+    .p_glPushClientAttrib = null_glPushClientAttrib,
+    .p_glPushMatrix = null_glPushMatrix,
+    .p_glPushName = null_glPushName,
+    .p_glRasterPos2d = null_glRasterPos2d,
+    .p_glRasterPos2dv = null_glRasterPos2dv,
+    .p_glRasterPos2f = null_glRasterPos2f,
+    .p_glRasterPos2fv = null_glRasterPos2fv,
+    .p_glRasterPos2i = null_glRasterPos2i,
+    .p_glRasterPos2iv = null_glRasterPos2iv,
+    .p_glRasterPos2s = null_glRasterPos2s,
+    .p_glRasterPos2sv = null_glRasterPos2sv,
+    .p_glRasterPos3d = null_glRasterPos3d,
+    .p_glRasterPos3dv = null_glRasterPos3dv,
+    .p_glRasterPos3f = null_glRasterPos3f,
+    .p_glRasterPos3fv = null_glRasterPos3fv,
+    .p_glRasterPos3i = null_glRasterPos3i,
+    .p_glRasterPos3iv = null_glRasterPos3iv,
+    .p_glRasterPos3s = null_glRasterPos3s,
+    .p_glRasterPos3sv = null_glRasterPos3sv,
+    .p_glRasterPos4d = null_glRasterPos4d,
+    .p_glRasterPos4dv = null_glRasterPos4dv,
+    .p_glRasterPos4f = null_glRasterPos4f,
+    .p_glRasterPos4fv = null_glRasterPos4fv,
+    .p_glRasterPos4i = null_glRasterPos4i,
+    .p_glRasterPos4iv = null_glRasterPos4iv,
+    .p_glRasterPos4s = null_glRasterPos4s,
+    .p_glRasterPos4sv = null_glRasterPos4sv,
+    .p_glReadBuffer = null_glReadBuffer,
+    .p_glReadPixels = null_glReadPixels,
+    .p_glRectd = null_glRectd,
+    .p_glRectdv = null_glRectdv,
+    .p_glRectf = null_glRectf,
+    .p_glRectfv = null_glRectfv,
+    .p_glRecti = null_glRecti,
+    .p_glRectiv = null_glRectiv,
+    .p_glRects = null_glRects,
+    .p_glRectsv = null_glRectsv,
+    .p_glRenderMode = null_glRenderMode,
+    .p_glRotated = null_glRotated,
+    .p_glRotatef = null_glRotatef,
+    .p_glScaled = null_glScaled,
+    .p_glScalef = null_glScalef,
+    .p_glScissor = null_glScissor,
+    .p_glSelectBuffer = null_glSelectBuffer,
+    .p_glShadeModel = null_glShadeModel,
+    .p_glStencilFunc = null_glStencilFunc,
+    .p_glStencilMask = null_glStencilMask,
+    .p_glStencilOp = null_glStencilOp,
+    .p_glTexCoord1d = null_glTexCoord1d,
+    .p_glTexCoord1dv = null_glTexCoord1dv,
+    .p_glTexCoord1f = null_glTexCoord1f,
+    .p_glTexCoord1fv = null_glTexCoord1fv,
+    .p_glTexCoord1i = null_glTexCoord1i,
+    .p_glTexCoord1iv = null_glTexCoord1iv,
+    .p_glTexCoord1s = null_glTexCoord1s,
+    .p_glTexCoord1sv = null_glTexCoord1sv,
+    .p_glTexCoord2d = null_glTexCoord2d,
+    .p_glTexCoord2dv = null_glTexCoord2dv,
+    .p_glTexCoord2f = null_glTexCoord2f,
+    .p_glTexCoord2fv = null_glTexCoord2fv,
+    .p_glTexCoord2i = null_glTexCoord2i,
+    .p_glTexCoord2iv = null_glTexCoord2iv,
+    .p_glTexCoord2s = null_glTexCoord2s,
+    .p_glTexCoord2sv = null_glTexCoord2sv,
+    .p_glTexCoord3d = null_glTexCoord3d,
+    .p_glTexCoord3dv = null_glTexCoord3dv,
+    .p_glTexCoord3f = null_glTexCoord3f,
+    .p_glTexCoord3fv = null_glTexCoord3fv,
+    .p_glTexCoord3i = null_glTexCoord3i,
+    .p_glTexCoord3iv = null_glTexCoord3iv,
+    .p_glTexCoord3s = null_glTexCoord3s,
+    .p_glTexCoord3sv = null_glTexCoord3sv,
+    .p_glTexCoord4d = null_glTexCoord4d,
+    .p_glTexCoord4dv = null_glTexCoord4dv,
+    .p_glTexCoord4f = null_glTexCoord4f,
+    .p_glTexCoord4fv = null_glTexCoord4fv,
+    .p_glTexCoord4i = null_glTexCoord4i,
+    .p_glTexCoord4iv = null_glTexCoord4iv,
+    .p_glTexCoord4s = null_glTexCoord4s,
+    .p_glTexCoord4sv = null_glTexCoord4sv,
+    .p_glTexCoordPointer = null_glTexCoordPointer,
+    .p_glTexEnvf = null_glTexEnvf,
+    .p_glTexEnvfv = null_glTexEnvfv,
+    .p_glTexEnvi = null_glTexEnvi,
+    .p_glTexEnviv = null_glTexEnviv,
+    .p_glTexGend = null_glTexGend,
+    .p_glTexGendv = null_glTexGendv,
+    .p_glTexGenf = null_glTexGenf,
+    .p_glTexGenfv = null_glTexGenfv,
+    .p_glTexGeni = null_glTexGeni,
+    .p_glTexGeniv = null_glTexGeniv,
+    .p_glTexImage1D = null_glTexImage1D,
+    .p_glTexImage2D = null_glTexImage2D,
+    .p_glTexParameterf = null_glTexParameterf,
+    .p_glTexParameterfv = null_glTexParameterfv,
+    .p_glTexParameteri = null_glTexParameteri,
+    .p_glTexParameteriv = null_glTexParameteriv,
+    .p_glTexSubImage1D = null_glTexSubImage1D,
+    .p_glTexSubImage2D = null_glTexSubImage2D,
+    .p_glTranslated = null_glTranslated,
+    .p_glTranslatef = null_glTranslatef,
+    .p_glVertex2d = null_glVertex2d,
+    .p_glVertex2dv = null_glVertex2dv,
+    .p_glVertex2f = null_glVertex2f,
+    .p_glVertex2fv = null_glVertex2fv,
+    .p_glVertex2i = null_glVertex2i,
+    .p_glVertex2iv = null_glVertex2iv,
+    .p_glVertex2s = null_glVertex2s,
+    .p_glVertex2sv = null_glVertex2sv,
+    .p_glVertex3d = null_glVertex3d,
+    .p_glVertex3dv = null_glVertex3dv,
+    .p_glVertex3f = null_glVertex3f,
+    .p_glVertex3fv = null_glVertex3fv,
+    .p_glVertex3i = null_glVertex3i,
+    .p_glVertex3iv = null_glVertex3iv,
+    .p_glVertex3s = null_glVertex3s,
+    .p_glVertex3sv = null_glVertex3sv,
+    .p_glVertex4d = null_glVertex4d,
+    .p_glVertex4dv = null_glVertex4dv,
+    .p_glVertex4f = null_glVertex4f,
+    .p_glVertex4fv = null_glVertex4fv,
+    .p_glVertex4i = null_glVertex4i,
+    .p_glVertex4iv = null_glVertex4iv,
+    .p_glVertex4s = null_glVertex4s,
+    .p_glVertex4sv = null_glVertex4sv,
+    .p_glVertexPointer = null_glVertexPointer,
+    .p_glViewport = null_glViewport,
+    .p_glAccumxOES = null_glAccumxOES,
+    .p_glAcquireKeyedMutexWin32EXT = null_glAcquireKeyedMutexWin32EXT,
+    .p_glActiveProgramEXT = null_glActiveProgramEXT,
+    .p_glActiveShaderProgram = null_glActiveShaderProgram,
+    .p_glActiveStencilFaceEXT = null_glActiveStencilFaceEXT,
+    .p_glActiveTexture = null_glActiveTexture,
+    .p_glActiveTextureARB = null_glActiveTextureARB,
+    .p_glActiveVaryingNV = null_glActiveVaryingNV,
+    .p_glAlphaFragmentOp1ATI = null_glAlphaFragmentOp1ATI,
+    .p_glAlphaFragmentOp2ATI = null_glAlphaFragmentOp2ATI,
+    .p_glAlphaFragmentOp3ATI = null_glAlphaFragmentOp3ATI,
+    .p_glAlphaFuncxOES = null_glAlphaFuncxOES,
+    .p_glAlphaToCoverageDitherControlNV = null_glAlphaToCoverageDitherControlNV,
+    .p_glApplyFramebufferAttachmentCMAAINTEL = null_glApplyFramebufferAttachmentCMAAINTEL,
+    .p_glApplyTextureEXT = null_glApplyTextureEXT,
+    .p_glAreProgramsResidentNV = null_glAreProgramsResidentNV,
+    .p_glAreTexturesResidentEXT = null_glAreTexturesResidentEXT,
+    .p_glArrayElementEXT = null_glArrayElementEXT,
+    .p_glArrayObjectATI = null_glArrayObjectATI,
+    .p_glAsyncCopyBufferSubDataNVX = null_glAsyncCopyBufferSubDataNVX,
+    .p_glAsyncCopyImageSubDataNVX = null_glAsyncCopyImageSubDataNVX,
+    .p_glAsyncMarkerSGIX = null_glAsyncMarkerSGIX,
+    .p_glAttachObjectARB = null_glAttachObjectARB,
+    .p_glAttachShader = null_glAttachShader,
+    .p_glBeginConditionalRender = null_glBeginConditionalRender,
+    .p_glBeginConditionalRenderNV = null_glBeginConditionalRenderNV,
+    .p_glBeginConditionalRenderNVX = null_glBeginConditionalRenderNVX,
+    .p_glBeginFragmentShaderATI = null_glBeginFragmentShaderATI,
+    .p_glBeginOcclusionQueryNV = null_glBeginOcclusionQueryNV,
+    .p_glBeginPerfMonitorAMD = null_glBeginPerfMonitorAMD,
+    .p_glBeginPerfQueryINTEL = null_glBeginPerfQueryINTEL,
+    .p_glBeginQuery = null_glBeginQuery,
+    .p_glBeginQueryARB = null_glBeginQueryARB,
+    .p_glBeginQueryIndexed = null_glBeginQueryIndexed,
+    .p_glBeginTransformFeedback = null_glBeginTransformFeedback,
+    .p_glBeginTransformFeedbackEXT = null_glBeginTransformFeedbackEXT,
+    .p_glBeginTransformFeedbackNV = null_glBeginTransformFeedbackNV,
+    .p_glBeginVertexShaderEXT = null_glBeginVertexShaderEXT,
+    .p_glBeginVideoCaptureNV = null_glBeginVideoCaptureNV,
+    .p_glBindAttribLocation = null_glBindAttribLocation,
+    .p_glBindAttribLocationARB = null_glBindAttribLocationARB,
+    .p_glBindBuffer = null_glBindBuffer,
+    .p_glBindBufferARB = null_glBindBufferARB,
+    .p_glBindBufferBase = null_glBindBufferBase,
+    .p_glBindBufferBaseEXT = null_glBindBufferBaseEXT,
+    .p_glBindBufferBaseNV = null_glBindBufferBaseNV,
+    .p_glBindBufferOffsetEXT = null_glBindBufferOffsetEXT,
+    .p_glBindBufferOffsetNV = null_glBindBufferOffsetNV,
+    .p_glBindBufferRange = null_glBindBufferRange,
+    .p_glBindBufferRangeEXT = null_glBindBufferRangeEXT,
+    .p_glBindBufferRangeNV = null_glBindBufferRangeNV,
+    .p_glBindBuffersBase = null_glBindBuffersBase,
+    .p_glBindBuffersRange = null_glBindBuffersRange,
+    .p_glBindFragDataLocation = null_glBindFragDataLocation,
+    .p_glBindFragDataLocationEXT = null_glBindFragDataLocationEXT,
+    .p_glBindFragDataLocationIndexed = null_glBindFragDataLocationIndexed,
+    .p_glBindFragmentShaderATI = null_glBindFragmentShaderATI,
+    .p_glBindFramebuffer = null_glBindFramebuffer,
+    .p_glBindFramebufferEXT = null_glBindFramebufferEXT,
+    .p_glBindImageTexture = null_glBindImageTexture,
+    .p_glBindImageTextureEXT = null_glBindImageTextureEXT,
+    .p_glBindImageTextures = null_glBindImageTextures,
+    .p_glBindLightParameterEXT = null_glBindLightParameterEXT,
+    .p_glBindMaterialParameterEXT = null_glBindMaterialParameterEXT,
+    .p_glBindMultiTextureEXT = null_glBindMultiTextureEXT,
+    .p_glBindParameterEXT = null_glBindParameterEXT,
+    .p_glBindProgramARB = null_glBindProgramARB,
+    .p_glBindProgramNV = null_glBindProgramNV,
+    .p_glBindProgramPipeline = null_glBindProgramPipeline,
+    .p_glBindRenderbuffer = null_glBindRenderbuffer,
+    .p_glBindRenderbufferEXT = null_glBindRenderbufferEXT,
+    .p_glBindSampler = null_glBindSampler,
+    .p_glBindSamplers = null_glBindSamplers,
+    .p_glBindShadingRateImageNV = null_glBindShadingRateImageNV,
+    .p_glBindTexGenParameterEXT = null_glBindTexGenParameterEXT,
+    .p_glBindTextureEXT = null_glBindTextureEXT,
+    .p_glBindTextureUnit = null_glBindTextureUnit,
+    .p_glBindTextureUnitParameterEXT = null_glBindTextureUnitParameterEXT,
+    .p_glBindTextures = null_glBindTextures,
+    .p_glBindTransformFeedback = null_glBindTransformFeedback,
+    .p_glBindTransformFeedbackNV = null_glBindTransformFeedbackNV,
+    .p_glBindVertexArray = null_glBindVertexArray,
+    .p_glBindVertexArrayAPPLE = null_glBindVertexArrayAPPLE,
+    .p_glBindVertexBuffer = null_glBindVertexBuffer,
+    .p_glBindVertexBuffers = null_glBindVertexBuffers,
+    .p_glBindVertexShaderEXT = null_glBindVertexShaderEXT,
+    .p_glBindVideoCaptureStreamBufferNV = null_glBindVideoCaptureStreamBufferNV,
+    .p_glBindVideoCaptureStreamTextureNV = null_glBindVideoCaptureStreamTextureNV,
+    .p_glBinormal3bEXT = null_glBinormal3bEXT,
+    .p_glBinormal3bvEXT = null_glBinormal3bvEXT,
+    .p_glBinormal3dEXT = null_glBinormal3dEXT,
+    .p_glBinormal3dvEXT = null_glBinormal3dvEXT,
+    .p_glBinormal3fEXT = null_glBinormal3fEXT,
+    .p_glBinormal3fvEXT = null_glBinormal3fvEXT,
+    .p_glBinormal3iEXT = null_glBinormal3iEXT,
+    .p_glBinormal3ivEXT = null_glBinormal3ivEXT,
+    .p_glBinormal3sEXT = null_glBinormal3sEXT,
+    .p_glBinormal3svEXT = null_glBinormal3svEXT,
+    .p_glBinormalPointerEXT = null_glBinormalPointerEXT,
+    .p_glBitmapxOES = null_glBitmapxOES,
+    .p_glBlendBarrierKHR = null_glBlendBarrierKHR,
+    .p_glBlendBarrierNV = null_glBlendBarrierNV,
+    .p_glBlendColor = null_glBlendColor,
+    .p_glBlendColorEXT = null_glBlendColorEXT,
+    .p_glBlendColorxOES = null_glBlendColorxOES,
+    .p_glBlendEquation = null_glBlendEquation,
+    .p_glBlendEquationEXT = null_glBlendEquationEXT,
+    .p_glBlendEquationIndexedAMD = null_glBlendEquationIndexedAMD,
+    .p_glBlendEquationSeparate = null_glBlendEquationSeparate,
+    .p_glBlendEquationSeparateEXT = null_glBlendEquationSeparateEXT,
+    .p_glBlendEquationSeparateIndexedAMD = null_glBlendEquationSeparateIndexedAMD,
+    .p_glBlendEquationSeparatei = null_glBlendEquationSeparatei,
+    .p_glBlendEquationSeparateiARB = null_glBlendEquationSeparateiARB,
+    .p_glBlendEquationi = null_glBlendEquationi,
+    .p_glBlendEquationiARB = null_glBlendEquationiARB,
+    .p_glBlendFuncIndexedAMD = null_glBlendFuncIndexedAMD,
+    .p_glBlendFuncSeparate = null_glBlendFuncSeparate,
+    .p_glBlendFuncSeparateEXT = null_glBlendFuncSeparateEXT,
+    .p_glBlendFuncSeparateINGR = null_glBlendFuncSeparateINGR,
+    .p_glBlendFuncSeparateIndexedAMD = null_glBlendFuncSeparateIndexedAMD,
+    .p_glBlendFuncSeparatei = null_glBlendFuncSeparatei,
+    .p_glBlendFuncSeparateiARB = null_glBlendFuncSeparateiARB,
+    .p_glBlendFunci = null_glBlendFunci,
+    .p_glBlendFunciARB = null_glBlendFunciARB,
+    .p_glBlendParameteriNV = null_glBlendParameteriNV,
+    .p_glBlitFramebuffer = null_glBlitFramebuffer,
+    .p_glBlitFramebufferEXT = null_glBlitFramebufferEXT,
+    .p_glBlitNamedFramebuffer = null_glBlitNamedFramebuffer,
+    .p_glBufferAddressRangeNV = null_glBufferAddressRangeNV,
+    .p_glBufferAttachMemoryNV = null_glBufferAttachMemoryNV,
+    .p_glBufferData = null_glBufferData,
+    .p_glBufferDataARB = null_glBufferDataARB,
+    .p_glBufferPageCommitmentARB = null_glBufferPageCommitmentARB,
+    .p_glBufferParameteriAPPLE = null_glBufferParameteriAPPLE,
+    .p_glBufferRegionEnabled = null_glBufferRegionEnabled,
+    .p_glBufferStorage = null_glBufferStorage,
+    .p_glBufferStorageExternalEXT = null_glBufferStorageExternalEXT,
+    .p_glBufferStorageMemEXT = null_glBufferStorageMemEXT,
+    .p_glBufferSubData = null_glBufferSubData,
+    .p_glBufferSubDataARB = null_glBufferSubDataARB,
+    .p_glCallCommandListNV = null_glCallCommandListNV,
+    .p_glCheckFramebufferStatus = null_glCheckFramebufferStatus,
+    .p_glCheckFramebufferStatusEXT = null_glCheckFramebufferStatusEXT,
+    .p_glCheckNamedFramebufferStatus = null_glCheckNamedFramebufferStatus,
+    .p_glCheckNamedFramebufferStatusEXT = null_glCheckNamedFramebufferStatusEXT,
+    .p_glClampColor = null_glClampColor,
+    .p_glClampColorARB = null_glClampColorARB,
+    .p_glClearAccumxOES = null_glClearAccumxOES,
+    .p_glClearBufferData = null_glClearBufferData,
+    .p_glClearBufferSubData = null_glClearBufferSubData,
+    .p_glClearBufferfi = null_glClearBufferfi,
+    .p_glClearBufferfv = null_glClearBufferfv,
+    .p_glClearBufferiv = null_glClearBufferiv,
+    .p_glClearBufferuiv = null_glClearBufferuiv,
+    .p_glClearColorIiEXT = null_glClearColorIiEXT,
+    .p_glClearColorIuiEXT = null_glClearColorIuiEXT,
+    .p_glClearColorxOES = null_glClearColorxOES,
+    .p_glClearDepthdNV = null_glClearDepthdNV,
+    .p_glClearDepthf = null_glClearDepthf,
+    .p_glClearDepthfOES = null_glClearDepthfOES,
+    .p_glClearDepthxOES = null_glClearDepthxOES,
+    .p_glClearNamedBufferData = null_glClearNamedBufferData,
+    .p_glClearNamedBufferDataEXT = null_glClearNamedBufferDataEXT,
+    .p_glClearNamedBufferSubData = null_glClearNamedBufferSubData,
+    .p_glClearNamedBufferSubDataEXT = null_glClearNamedBufferSubDataEXT,
+    .p_glClearNamedFramebufferfi = null_glClearNamedFramebufferfi,
+    .p_glClearNamedFramebufferfv = null_glClearNamedFramebufferfv,
+    .p_glClearNamedFramebufferiv = null_glClearNamedFramebufferiv,
+    .p_glClearNamedFramebufferuiv = null_glClearNamedFramebufferuiv,
+    .p_glClearTexImage = null_glClearTexImage,
+    .p_glClearTexSubImage = null_glClearTexSubImage,
+    .p_glClientActiveTexture = null_glClientActiveTexture,
+    .p_glClientActiveTextureARB = null_glClientActiveTextureARB,
+    .p_glClientActiveVertexStreamATI = null_glClientActiveVertexStreamATI,
+    .p_glClientAttribDefaultEXT = null_glClientAttribDefaultEXT,
+    .p_glClientWaitSemaphoreui64NVX = null_glClientWaitSemaphoreui64NVX,
+    .p_glClientWaitSync = null_glClientWaitSync,
+    .p_glClipControl = null_glClipControl,
+    .p_glClipPlanefOES = null_glClipPlanefOES,
+    .p_glClipPlanexOES = null_glClipPlanexOES,
+    .p_glColor3fVertex3fSUN = null_glColor3fVertex3fSUN,
+    .p_glColor3fVertex3fvSUN = null_glColor3fVertex3fvSUN,
+    .p_glColor3hNV = null_glColor3hNV,
+    .p_glColor3hvNV = null_glColor3hvNV,
+    .p_glColor3xOES = null_glColor3xOES,
+    .p_glColor3xvOES = null_glColor3xvOES,
+    .p_glColor4fNormal3fVertex3fSUN = null_glColor4fNormal3fVertex3fSUN,
+    .p_glColor4fNormal3fVertex3fvSUN = null_glColor4fNormal3fVertex3fvSUN,
+    .p_glColor4hNV = null_glColor4hNV,
+    .p_glColor4hvNV = null_glColor4hvNV,
+    .p_glColor4ubVertex2fSUN = null_glColor4ubVertex2fSUN,
+    .p_glColor4ubVertex2fvSUN = null_glColor4ubVertex2fvSUN,
+    .p_glColor4ubVertex3fSUN = null_glColor4ubVertex3fSUN,
+    .p_glColor4ubVertex3fvSUN = null_glColor4ubVertex3fvSUN,
+    .p_glColor4xOES = null_glColor4xOES,
+    .p_glColor4xvOES = null_glColor4xvOES,
+    .p_glColorFormatNV = null_glColorFormatNV,
+    .p_glColorFragmentOp1ATI = null_glColorFragmentOp1ATI,
+    .p_glColorFragmentOp2ATI = null_glColorFragmentOp2ATI,
+    .p_glColorFragmentOp3ATI = null_glColorFragmentOp3ATI,
+    .p_glColorMaskIndexedEXT = null_glColorMaskIndexedEXT,
+    .p_glColorMaski = null_glColorMaski,
+    .p_glColorP3ui = null_glColorP3ui,
+    .p_glColorP3uiv = null_glColorP3uiv,
+    .p_glColorP4ui = null_glColorP4ui,
+    .p_glColorP4uiv = null_glColorP4uiv,
+    .p_glColorPointerEXT = null_glColorPointerEXT,
+    .p_glColorPointerListIBM = null_glColorPointerListIBM,
+    .p_glColorPointervINTEL = null_glColorPointervINTEL,
+    .p_glColorSubTable = null_glColorSubTable,
+    .p_glColorSubTableEXT = null_glColorSubTableEXT,
+    .p_glColorTable = null_glColorTable,
+    .p_glColorTableEXT = null_glColorTableEXT,
+    .p_glColorTableParameterfv = null_glColorTableParameterfv,
+    .p_glColorTableParameterfvSGI = null_glColorTableParameterfvSGI,
+    .p_glColorTableParameteriv = null_glColorTableParameteriv,
+    .p_glColorTableParameterivSGI = null_glColorTableParameterivSGI,
+    .p_glColorTableSGI = null_glColorTableSGI,
+    .p_glCombinerInputNV = null_glCombinerInputNV,
+    .p_glCombinerOutputNV = null_glCombinerOutputNV,
+    .p_glCombinerParameterfNV = null_glCombinerParameterfNV,
+    .p_glCombinerParameterfvNV = null_glCombinerParameterfvNV,
+    .p_glCombinerParameteriNV = null_glCombinerParameteriNV,
+    .p_glCombinerParameterivNV = null_glCombinerParameterivNV,
+    .p_glCombinerStageParameterfvNV = null_glCombinerStageParameterfvNV,
+    .p_glCommandListSegmentsNV = null_glCommandListSegmentsNV,
+    .p_glCompileCommandListNV = null_glCompileCommandListNV,
+    .p_glCompileShader = null_glCompileShader,
+    .p_glCompileShaderARB = null_glCompileShaderARB,
+    .p_glCompileShaderIncludeARB = null_glCompileShaderIncludeARB,
+    .p_glCompressedMultiTexImage1DEXT = null_glCompressedMultiTexImage1DEXT,
+    .p_glCompressedMultiTexImage2DEXT = null_glCompressedMultiTexImage2DEXT,
+    .p_glCompressedMultiTexImage3DEXT = null_glCompressedMultiTexImage3DEXT,
+    .p_glCompressedMultiTexSubImage1DEXT = null_glCompressedMultiTexSubImage1DEXT,
+    .p_glCompressedMultiTexSubImage2DEXT = null_glCompressedMultiTexSubImage2DEXT,
+    .p_glCompressedMultiTexSubImage3DEXT = null_glCompressedMultiTexSubImage3DEXT,
+    .p_glCompressedTexImage1D = null_glCompressedTexImage1D,
+    .p_glCompressedTexImage1DARB = null_glCompressedTexImage1DARB,
+    .p_glCompressedTexImage2D = null_glCompressedTexImage2D,
+    .p_glCompressedTexImage2DARB = null_glCompressedTexImage2DARB,
+    .p_glCompressedTexImage3D = null_glCompressedTexImage3D,
+    .p_glCompressedTexImage3DARB = null_glCompressedTexImage3DARB,
+    .p_glCompressedTexSubImage1D = null_glCompressedTexSubImage1D,
+    .p_glCompressedTexSubImage1DARB = null_glCompressedTexSubImage1DARB,
+    .p_glCompressedTexSubImage2D = null_glCompressedTexSubImage2D,
+    .p_glCompressedTexSubImage2DARB = null_glCompressedTexSubImage2DARB,
+    .p_glCompressedTexSubImage3D = null_glCompressedTexSubImage3D,
+    .p_glCompressedTexSubImage3DARB = null_glCompressedTexSubImage3DARB,
+    .p_glCompressedTextureImage1DEXT = null_glCompressedTextureImage1DEXT,
+    .p_glCompressedTextureImage2DEXT = null_glCompressedTextureImage2DEXT,
+    .p_glCompressedTextureImage3DEXT = null_glCompressedTextureImage3DEXT,
+    .p_glCompressedTextureSubImage1D = null_glCompressedTextureSubImage1D,
+    .p_glCompressedTextureSubImage1DEXT = null_glCompressedTextureSubImage1DEXT,
+    .p_glCompressedTextureSubImage2D = null_glCompressedTextureSubImage2D,
+    .p_glCompressedTextureSubImage2DEXT = null_glCompressedTextureSubImage2DEXT,
+    .p_glCompressedTextureSubImage3D = null_glCompressedTextureSubImage3D,
+    .p_glCompressedTextureSubImage3DEXT = null_glCompressedTextureSubImage3DEXT,
+    .p_glConservativeRasterParameterfNV = null_glConservativeRasterParameterfNV,
+    .p_glConservativeRasterParameteriNV = null_glConservativeRasterParameteriNV,
+    .p_glConvolutionFilter1D = null_glConvolutionFilter1D,
+    .p_glConvolutionFilter1DEXT = null_glConvolutionFilter1DEXT,
+    .p_glConvolutionFilter2D = null_glConvolutionFilter2D,
+    .p_glConvolutionFilter2DEXT = null_glConvolutionFilter2DEXT,
+    .p_glConvolutionParameterf = null_glConvolutionParameterf,
+    .p_glConvolutionParameterfEXT = null_glConvolutionParameterfEXT,
+    .p_glConvolutionParameterfv = null_glConvolutionParameterfv,
+    .p_glConvolutionParameterfvEXT = null_glConvolutionParameterfvEXT,
+    .p_glConvolutionParameteri = null_glConvolutionParameteri,
+    .p_glConvolutionParameteriEXT = null_glConvolutionParameteriEXT,
+    .p_glConvolutionParameteriv = null_glConvolutionParameteriv,
+    .p_glConvolutionParameterivEXT = null_glConvolutionParameterivEXT,
+    .p_glConvolutionParameterxOES = null_glConvolutionParameterxOES,
+    .p_glConvolutionParameterxvOES = null_glConvolutionParameterxvOES,
+    .p_glCopyBufferSubData = null_glCopyBufferSubData,
+    .p_glCopyColorSubTable = null_glCopyColorSubTable,
+    .p_glCopyColorSubTableEXT = null_glCopyColorSubTableEXT,
+    .p_glCopyColorTable = null_glCopyColorTable,
+    .p_glCopyColorTableSGI = null_glCopyColorTableSGI,
+    .p_glCopyConvolutionFilter1D = null_glCopyConvolutionFilter1D,
+    .p_glCopyConvolutionFilter1DEXT = null_glCopyConvolutionFilter1DEXT,
+    .p_glCopyConvolutionFilter2D = null_glCopyConvolutionFilter2D,
+    .p_glCopyConvolutionFilter2DEXT = null_glCopyConvolutionFilter2DEXT,
+    .p_glCopyImageSubData = null_glCopyImageSubData,
+    .p_glCopyImageSubDataNV = null_glCopyImageSubDataNV,
+    .p_glCopyMultiTexImage1DEXT = null_glCopyMultiTexImage1DEXT,
+    .p_glCopyMultiTexImage2DEXT = null_glCopyMultiTexImage2DEXT,
+    .p_glCopyMultiTexSubImage1DEXT = null_glCopyMultiTexSubImage1DEXT,
+    .p_glCopyMultiTexSubImage2DEXT = null_glCopyMultiTexSubImage2DEXT,
+    .p_glCopyMultiTexSubImage3DEXT = null_glCopyMultiTexSubImage3DEXT,
+    .p_glCopyNamedBufferSubData = null_glCopyNamedBufferSubData,
+    .p_glCopyPathNV = null_glCopyPathNV,
+    .p_glCopyTexImage1DEXT = null_glCopyTexImage1DEXT,
+    .p_glCopyTexImage2DEXT = null_glCopyTexImage2DEXT,
+    .p_glCopyTexSubImage1DEXT = null_glCopyTexSubImage1DEXT,
+    .p_glCopyTexSubImage2DEXT = null_glCopyTexSubImage2DEXT,
+    .p_glCopyTexSubImage3D = null_glCopyTexSubImage3D,
+    .p_glCopyTexSubImage3DEXT = null_glCopyTexSubImage3DEXT,
+    .p_glCopyTextureImage1DEXT = null_glCopyTextureImage1DEXT,
+    .p_glCopyTextureImage2DEXT = null_glCopyTextureImage2DEXT,
+    .p_glCopyTextureSubImage1D = null_glCopyTextureSubImage1D,
+    .p_glCopyTextureSubImage1DEXT = null_glCopyTextureSubImage1DEXT,
+    .p_glCopyTextureSubImage2D = null_glCopyTextureSubImage2D,
+    .p_glCopyTextureSubImage2DEXT = null_glCopyTextureSubImage2DEXT,
+    .p_glCopyTextureSubImage3D = null_glCopyTextureSubImage3D,
+    .p_glCopyTextureSubImage3DEXT = null_glCopyTextureSubImage3DEXT,
+    .p_glCoverFillPathInstancedNV = null_glCoverFillPathInstancedNV,
+    .p_glCoverFillPathNV = null_glCoverFillPathNV,
+    .p_glCoverStrokePathInstancedNV = null_glCoverStrokePathInstancedNV,
+    .p_glCoverStrokePathNV = null_glCoverStrokePathNV,
+    .p_glCoverageModulationNV = null_glCoverageModulationNV,
+    .p_glCoverageModulationTableNV = null_glCoverageModulationTableNV,
+    .p_glCreateBuffers = null_glCreateBuffers,
+    .p_glCreateCommandListsNV = null_glCreateCommandListsNV,
+    .p_glCreateFramebuffers = null_glCreateFramebuffers,
+    .p_glCreateMemoryObjectsEXT = null_glCreateMemoryObjectsEXT,
+    .p_glCreatePerfQueryINTEL = null_glCreatePerfQueryINTEL,
+    .p_glCreateProgram = null_glCreateProgram,
+    .p_glCreateProgramObjectARB = null_glCreateProgramObjectARB,
+    .p_glCreateProgramPipelines = null_glCreateProgramPipelines,
+    .p_glCreateProgressFenceNVX = null_glCreateProgressFenceNVX,
+    .p_glCreateQueries = null_glCreateQueries,
+    .p_glCreateRenderbuffers = null_glCreateRenderbuffers,
+    .p_glCreateSamplers = null_glCreateSamplers,
+    .p_glCreateShader = null_glCreateShader,
+    .p_glCreateShaderObjectARB = null_glCreateShaderObjectARB,
+    .p_glCreateShaderProgramEXT = null_glCreateShaderProgramEXT,
+    .p_glCreateShaderProgramv = null_glCreateShaderProgramv,
+    .p_glCreateStatesNV = null_glCreateStatesNV,
+    .p_glCreateSyncFromCLeventARB = null_glCreateSyncFromCLeventARB,
+    .p_glCreateTextures = null_glCreateTextures,
+    .p_glCreateTransformFeedbacks = null_glCreateTransformFeedbacks,
+    .p_glCreateVertexArrays = null_glCreateVertexArrays,
+    .p_glCullParameterdvEXT = null_glCullParameterdvEXT,
+    .p_glCullParameterfvEXT = null_glCullParameterfvEXT,
+    .p_glCurrentPaletteMatrixARB = null_glCurrentPaletteMatrixARB,
+    .p_glDebugMessageCallback = null_glDebugMessageCallback,
+    .p_glDebugMessageCallbackAMD = null_glDebugMessageCallbackAMD,
+    .p_glDebugMessageCallbackARB = null_glDebugMessageCallbackARB,
+    .p_glDebugMessageControl = null_glDebugMessageControl,
+    .p_glDebugMessageControlARB = null_glDebugMessageControlARB,
+    .p_glDebugMessageEnableAMD = null_glDebugMessageEnableAMD,
+    .p_glDebugMessageInsert = null_glDebugMessageInsert,
+    .p_glDebugMessageInsertAMD = null_glDebugMessageInsertAMD,
+    .p_glDebugMessageInsertARB = null_glDebugMessageInsertARB,
+    .p_glDeformSGIX = null_glDeformSGIX,
+    .p_glDeformationMap3dSGIX = null_glDeformationMap3dSGIX,
+    .p_glDeformationMap3fSGIX = null_glDeformationMap3fSGIX,
+    .p_glDeleteAsyncMarkersSGIX = null_glDeleteAsyncMarkersSGIX,
+    .p_glDeleteBufferRegion = null_glDeleteBufferRegion,
+    .p_glDeleteBuffers = null_glDeleteBuffers,
+    .p_glDeleteBuffersARB = null_glDeleteBuffersARB,
+    .p_glDeleteCommandListsNV = null_glDeleteCommandListsNV,
+    .p_glDeleteFencesAPPLE = null_glDeleteFencesAPPLE,
+    .p_glDeleteFencesNV = null_glDeleteFencesNV,
+    .p_glDeleteFragmentShaderATI = null_glDeleteFragmentShaderATI,
+    .p_glDeleteFramebuffers = null_glDeleteFramebuffers,
+    .p_glDeleteFramebuffersEXT = null_glDeleteFramebuffersEXT,
+    .p_glDeleteMemoryObjectsEXT = null_glDeleteMemoryObjectsEXT,
+    .p_glDeleteNamedStringARB = null_glDeleteNamedStringARB,
+    .p_glDeleteNamesAMD = null_glDeleteNamesAMD,
+    .p_glDeleteObjectARB = null_glDeleteObjectARB,
+    .p_glDeleteObjectBufferATI = null_glDeleteObjectBufferATI,
+    .p_glDeleteOcclusionQueriesNV = null_glDeleteOcclusionQueriesNV,
+    .p_glDeletePathsNV = null_glDeletePathsNV,
+    .p_glDeletePerfMonitorsAMD = null_glDeletePerfMonitorsAMD,
+    .p_glDeletePerfQueryINTEL = null_glDeletePerfQueryINTEL,
+    .p_glDeleteProgram = null_glDeleteProgram,
+    .p_glDeleteProgramPipelines = null_glDeleteProgramPipelines,
+    .p_glDeleteProgramsARB = null_glDeleteProgramsARB,
+    .p_glDeleteProgramsNV = null_glDeleteProgramsNV,
+    .p_glDeleteQueries = null_glDeleteQueries,
+    .p_glDeleteQueriesARB = null_glDeleteQueriesARB,
+    .p_glDeleteQueryResourceTagNV = null_glDeleteQueryResourceTagNV,
+    .p_glDeleteRenderbuffers = null_glDeleteRenderbuffers,
+    .p_glDeleteRenderbuffersEXT = null_glDeleteRenderbuffersEXT,
+    .p_glDeleteSamplers = null_glDeleteSamplers,
+    .p_glDeleteSemaphoresEXT = null_glDeleteSemaphoresEXT,
+    .p_glDeleteShader = null_glDeleteShader,
+    .p_glDeleteStatesNV = null_glDeleteStatesNV,
+    .p_glDeleteSync = null_glDeleteSync,
+    .p_glDeleteTexturesEXT = null_glDeleteTexturesEXT,
+    .p_glDeleteTransformFeedbacks = null_glDeleteTransformFeedbacks,
+    .p_glDeleteTransformFeedbacksNV = null_glDeleteTransformFeedbacksNV,
+    .p_glDeleteVertexArrays = null_glDeleteVertexArrays,
+    .p_glDeleteVertexArraysAPPLE = null_glDeleteVertexArraysAPPLE,
+    .p_glDeleteVertexShaderEXT = null_glDeleteVertexShaderEXT,
+    .p_glDepthBoundsEXT = null_glDepthBoundsEXT,
+    .p_glDepthBoundsdNV = null_glDepthBoundsdNV,
+    .p_glDepthRangeArraydvNV = null_glDepthRangeArraydvNV,
+    .p_glDepthRangeArrayv = null_glDepthRangeArrayv,
+    .p_glDepthRangeIndexed = null_glDepthRangeIndexed,
+    .p_glDepthRangeIndexeddNV = null_glDepthRangeIndexeddNV,
+    .p_glDepthRangedNV = null_glDepthRangedNV,
+    .p_glDepthRangef = null_glDepthRangef,
+    .p_glDepthRangefOES = null_glDepthRangefOES,
+    .p_glDepthRangexOES = null_glDepthRangexOES,
+    .p_glDetachObjectARB = null_glDetachObjectARB,
+    .p_glDetachShader = null_glDetachShader,
+    .p_glDetailTexFuncSGIS = null_glDetailTexFuncSGIS,
+    .p_glDisableClientStateIndexedEXT = null_glDisableClientStateIndexedEXT,
+    .p_glDisableClientStateiEXT = null_glDisableClientStateiEXT,
+    .p_glDisableIndexedEXT = null_glDisableIndexedEXT,
+    .p_glDisableVariantClientStateEXT = null_glDisableVariantClientStateEXT,
+    .p_glDisableVertexArrayAttrib = null_glDisableVertexArrayAttrib,
+    .p_glDisableVertexArrayAttribEXT = null_glDisableVertexArrayAttribEXT,
+    .p_glDisableVertexArrayEXT = null_glDisableVertexArrayEXT,
+    .p_glDisableVertexAttribAPPLE = null_glDisableVertexAttribAPPLE,
+    .p_glDisableVertexAttribArray = null_glDisableVertexAttribArray,
+    .p_glDisableVertexAttribArrayARB = null_glDisableVertexAttribArrayARB,
+    .p_glDisablei = null_glDisablei,
+    .p_glDispatchCompute = null_glDispatchCompute,
+    .p_glDispatchComputeGroupSizeARB = null_glDispatchComputeGroupSizeARB,
+    .p_glDispatchComputeIndirect = null_glDispatchComputeIndirect,
+    .p_glDrawArraysEXT = null_glDrawArraysEXT,
+    .p_glDrawArraysIndirect = null_glDrawArraysIndirect,
+    .p_glDrawArraysInstanced = null_glDrawArraysInstanced,
+    .p_glDrawArraysInstancedARB = null_glDrawArraysInstancedARB,
+    .p_glDrawArraysInstancedBaseInstance = null_glDrawArraysInstancedBaseInstance,
+    .p_glDrawArraysInstancedEXT = null_glDrawArraysInstancedEXT,
+    .p_glDrawBufferRegion = null_glDrawBufferRegion,
+    .p_glDrawBuffers = null_glDrawBuffers,
+    .p_glDrawBuffersARB = null_glDrawBuffersARB,
+    .p_glDrawBuffersATI = null_glDrawBuffersATI,
+    .p_glDrawCommandsAddressNV = null_glDrawCommandsAddressNV,
+    .p_glDrawCommandsNV = null_glDrawCommandsNV,
+    .p_glDrawCommandsStatesAddressNV = null_glDrawCommandsStatesAddressNV,
+    .p_glDrawCommandsStatesNV = null_glDrawCommandsStatesNV,
+    .p_glDrawElementArrayAPPLE = null_glDrawElementArrayAPPLE,
+    .p_glDrawElementArrayATI = null_glDrawElementArrayATI,
+    .p_glDrawElementsBaseVertex = null_glDrawElementsBaseVertex,
+    .p_glDrawElementsIndirect = null_glDrawElementsIndirect,
+    .p_glDrawElementsInstanced = null_glDrawElementsInstanced,
+    .p_glDrawElementsInstancedARB = null_glDrawElementsInstancedARB,
+    .p_glDrawElementsInstancedBaseInstance = null_glDrawElementsInstancedBaseInstance,
+    .p_glDrawElementsInstancedBaseVertex = null_glDrawElementsInstancedBaseVertex,
+    .p_glDrawElementsInstancedBaseVertexBaseInstance = null_glDrawElementsInstancedBaseVertexBaseInstance,
+    .p_glDrawElementsInstancedEXT = null_glDrawElementsInstancedEXT,
+    .p_glDrawMeshArraysSUN = null_glDrawMeshArraysSUN,
+    .p_glDrawMeshTasksIndirectNV = null_glDrawMeshTasksIndirectNV,
+    .p_glDrawMeshTasksNV = null_glDrawMeshTasksNV,
+    .p_glDrawRangeElementArrayAPPLE = null_glDrawRangeElementArrayAPPLE,
+    .p_glDrawRangeElementArrayATI = null_glDrawRangeElementArrayATI,
+    .p_glDrawRangeElements = null_glDrawRangeElements,
+    .p_glDrawRangeElementsBaseVertex = null_glDrawRangeElementsBaseVertex,
+    .p_glDrawRangeElementsEXT = null_glDrawRangeElementsEXT,
+    .p_glDrawTextureNV = null_glDrawTextureNV,
+    .p_glDrawTransformFeedback = null_glDrawTransformFeedback,
+    .p_glDrawTransformFeedbackInstanced = null_glDrawTransformFeedbackInstanced,
+    .p_glDrawTransformFeedbackNV = null_glDrawTransformFeedbackNV,
+    .p_glDrawTransformFeedbackStream = null_glDrawTransformFeedbackStream,
+    .p_glDrawTransformFeedbackStreamInstanced = null_glDrawTransformFeedbackStreamInstanced,
+    .p_glDrawVkImageNV = null_glDrawVkImageNV,
+    .p_glEGLImageTargetTexStorageEXT = null_glEGLImageTargetTexStorageEXT,
+    .p_glEGLImageTargetTextureStorageEXT = null_glEGLImageTargetTextureStorageEXT,
+    .p_glEdgeFlagFormatNV = null_glEdgeFlagFormatNV,
+    .p_glEdgeFlagPointerEXT = null_glEdgeFlagPointerEXT,
+    .p_glEdgeFlagPointerListIBM = null_glEdgeFlagPointerListIBM,
+    .p_glElementPointerAPPLE = null_glElementPointerAPPLE,
+    .p_glElementPointerATI = null_glElementPointerATI,
+    .p_glEnableClientStateIndexedEXT = null_glEnableClientStateIndexedEXT,
+    .p_glEnableClientStateiEXT = null_glEnableClientStateiEXT,
+    .p_glEnableIndexedEXT = null_glEnableIndexedEXT,
+    .p_glEnableVariantClientStateEXT = null_glEnableVariantClientStateEXT,
+    .p_glEnableVertexArrayAttrib = null_glEnableVertexArrayAttrib,
+    .p_glEnableVertexArrayAttribEXT = null_glEnableVertexArrayAttribEXT,
+    .p_glEnableVertexArrayEXT = null_glEnableVertexArrayEXT,
+    .p_glEnableVertexAttribAPPLE = null_glEnableVertexAttribAPPLE,
+    .p_glEnableVertexAttribArray = null_glEnableVertexAttribArray,
+    .p_glEnableVertexAttribArrayARB = null_glEnableVertexAttribArrayARB,
+    .p_glEnablei = null_glEnablei,
+    .p_glEndConditionalRender = null_glEndConditionalRender,
+    .p_glEndConditionalRenderNV = null_glEndConditionalRenderNV,
+    .p_glEndConditionalRenderNVX = null_glEndConditionalRenderNVX,
+    .p_glEndFragmentShaderATI = null_glEndFragmentShaderATI,
+    .p_glEndOcclusionQueryNV = null_glEndOcclusionQueryNV,
+    .p_glEndPerfMonitorAMD = null_glEndPerfMonitorAMD,
+    .p_glEndPerfQueryINTEL = null_glEndPerfQueryINTEL,
+    .p_glEndQuery = null_glEndQuery,
+    .p_glEndQueryARB = null_glEndQueryARB,
+    .p_glEndQueryIndexed = null_glEndQueryIndexed,
+    .p_glEndTransformFeedback = null_glEndTransformFeedback,
+    .p_glEndTransformFeedbackEXT = null_glEndTransformFeedbackEXT,
+    .p_glEndTransformFeedbackNV = null_glEndTransformFeedbackNV,
+    .p_glEndVertexShaderEXT = null_glEndVertexShaderEXT,
+    .p_glEndVideoCaptureNV = null_glEndVideoCaptureNV,
+    .p_glEvalCoord1xOES = null_glEvalCoord1xOES,
+    .p_glEvalCoord1xvOES = null_glEvalCoord1xvOES,
+    .p_glEvalCoord2xOES = null_glEvalCoord2xOES,
+    .p_glEvalCoord2xvOES = null_glEvalCoord2xvOES,
+    .p_glEvalMapsNV = null_glEvalMapsNV,
+    .p_glEvaluateDepthValuesARB = null_glEvaluateDepthValuesARB,
+    .p_glExecuteProgramNV = null_glExecuteProgramNV,
+    .p_glExtractComponentEXT = null_glExtractComponentEXT,
+    .p_glFeedbackBufferxOES = null_glFeedbackBufferxOES,
+    .p_glFenceSync = null_glFenceSync,
+    .p_glFinalCombinerInputNV = null_glFinalCombinerInputNV,
+    .p_glFinishAsyncSGIX = null_glFinishAsyncSGIX,
+    .p_glFinishFenceAPPLE = null_glFinishFenceAPPLE,
+    .p_glFinishFenceNV = null_glFinishFenceNV,
+    .p_glFinishObjectAPPLE = null_glFinishObjectAPPLE,
+    .p_glFinishTextureSUNX = null_glFinishTextureSUNX,
+    .p_glFlushMappedBufferRange = null_glFlushMappedBufferRange,
+    .p_glFlushMappedBufferRangeAPPLE = null_glFlushMappedBufferRangeAPPLE,
+    .p_glFlushMappedNamedBufferRange = null_glFlushMappedNamedBufferRange,
+    .p_glFlushMappedNamedBufferRangeEXT = null_glFlushMappedNamedBufferRangeEXT,
+    .p_glFlushPixelDataRangeNV = null_glFlushPixelDataRangeNV,
+    .p_glFlushRasterSGIX = null_glFlushRasterSGIX,
+    .p_glFlushStaticDataIBM = null_glFlushStaticDataIBM,
+    .p_glFlushVertexArrayRangeAPPLE = null_glFlushVertexArrayRangeAPPLE,
+    .p_glFlushVertexArrayRangeNV = null_glFlushVertexArrayRangeNV,
+    .p_glFogCoordFormatNV = null_glFogCoordFormatNV,
+    .p_glFogCoordPointer = null_glFogCoordPointer,
+    .p_glFogCoordPointerEXT = null_glFogCoordPointerEXT,
+    .p_glFogCoordPointerListIBM = null_glFogCoordPointerListIBM,
+    .p_glFogCoordd = null_glFogCoordd,
+    .p_glFogCoorddEXT = null_glFogCoorddEXT,
+    .p_glFogCoorddv = null_glFogCoorddv,
+    .p_glFogCoorddvEXT = null_glFogCoorddvEXT,
+    .p_glFogCoordf = null_glFogCoordf,
+    .p_glFogCoordfEXT = null_glFogCoordfEXT,
+    .p_glFogCoordfv = null_glFogCoordfv,
+    .p_glFogCoordfvEXT = null_glFogCoordfvEXT,
+    .p_glFogCoordhNV = null_glFogCoordhNV,
+    .p_glFogCoordhvNV = null_glFogCoordhvNV,
+    .p_glFogFuncSGIS = null_glFogFuncSGIS,
+    .p_glFogxOES = null_glFogxOES,
+    .p_glFogxvOES = null_glFogxvOES,
+    .p_glFragmentColorMaterialSGIX = null_glFragmentColorMaterialSGIX,
+    .p_glFragmentCoverageColorNV = null_glFragmentCoverageColorNV,
+    .p_glFragmentLightModelfSGIX = null_glFragmentLightModelfSGIX,
+    .p_glFragmentLightModelfvSGIX = null_glFragmentLightModelfvSGIX,
+    .p_glFragmentLightModeliSGIX = null_glFragmentLightModeliSGIX,
+    .p_glFragmentLightModelivSGIX = null_glFragmentLightModelivSGIX,
+    .p_glFragmentLightfSGIX = null_glFragmentLightfSGIX,
+    .p_glFragmentLightfvSGIX = null_glFragmentLightfvSGIX,
+    .p_glFragmentLightiSGIX = null_glFragmentLightiSGIX,
+    .p_glFragmentLightivSGIX = null_glFragmentLightivSGIX,
+    .p_glFragmentMaterialfSGIX = null_glFragmentMaterialfSGIX,
+    .p_glFragmentMaterialfvSGIX = null_glFragmentMaterialfvSGIX,
+    .p_glFragmentMaterialiSGIX = null_glFragmentMaterialiSGIX,
+    .p_glFragmentMaterialivSGIX = null_glFragmentMaterialivSGIX,
+    .p_glFrameTerminatorGREMEDY = null_glFrameTerminatorGREMEDY,
+    .p_glFrameZoomSGIX = null_glFrameZoomSGIX,
+    .p_glFramebufferDrawBufferEXT = null_glFramebufferDrawBufferEXT,
+    .p_glFramebufferDrawBuffersEXT = null_glFramebufferDrawBuffersEXT,
+    .p_glFramebufferFetchBarrierEXT = null_glFramebufferFetchBarrierEXT,
+    .p_glFramebufferParameteri = null_glFramebufferParameteri,
+    .p_glFramebufferParameteriMESA = null_glFramebufferParameteriMESA,
+    .p_glFramebufferReadBufferEXT = null_glFramebufferReadBufferEXT,
+    .p_glFramebufferRenderbuffer = null_glFramebufferRenderbuffer,
+    .p_glFramebufferRenderbufferEXT = null_glFramebufferRenderbufferEXT,
+    .p_glFramebufferSampleLocationsfvARB = null_glFramebufferSampleLocationsfvARB,
+    .p_glFramebufferSampleLocationsfvNV = null_glFramebufferSampleLocationsfvNV,
+    .p_glFramebufferSamplePositionsfvAMD = null_glFramebufferSamplePositionsfvAMD,
+    .p_glFramebufferTexture = null_glFramebufferTexture,
+    .p_glFramebufferTexture1D = null_glFramebufferTexture1D,
+    .p_glFramebufferTexture1DEXT = null_glFramebufferTexture1DEXT,
+    .p_glFramebufferTexture2D = null_glFramebufferTexture2D,
+    .p_glFramebufferTexture2DEXT = null_glFramebufferTexture2DEXT,
+    .p_glFramebufferTexture3D = null_glFramebufferTexture3D,
+    .p_glFramebufferTexture3DEXT = null_glFramebufferTexture3DEXT,
+    .p_glFramebufferTextureARB = null_glFramebufferTextureARB,
+    .p_glFramebufferTextureEXT = null_glFramebufferTextureEXT,
+    .p_glFramebufferTextureFaceARB = null_glFramebufferTextureFaceARB,
+    .p_glFramebufferTextureFaceEXT = null_glFramebufferTextureFaceEXT,
+    .p_glFramebufferTextureLayer = null_glFramebufferTextureLayer,
+    .p_glFramebufferTextureLayerARB = null_glFramebufferTextureLayerARB,
+    .p_glFramebufferTextureLayerEXT = null_glFramebufferTextureLayerEXT,
+    .p_glFramebufferTextureMultiviewOVR = null_glFramebufferTextureMultiviewOVR,
+    .p_glFreeObjectBufferATI = null_glFreeObjectBufferATI,
+    .p_glFrustumfOES = null_glFrustumfOES,
+    .p_glFrustumxOES = null_glFrustumxOES,
+    .p_glGenAsyncMarkersSGIX = null_glGenAsyncMarkersSGIX,
+    .p_glGenBuffers = null_glGenBuffers,
+    .p_glGenBuffersARB = null_glGenBuffersARB,
+    .p_glGenFencesAPPLE = null_glGenFencesAPPLE,
+    .p_glGenFencesNV = null_glGenFencesNV,
+    .p_glGenFragmentShadersATI = null_glGenFragmentShadersATI,
+    .p_glGenFramebuffers = null_glGenFramebuffers,
+    .p_glGenFramebuffersEXT = null_glGenFramebuffersEXT,
+    .p_glGenNamesAMD = null_glGenNamesAMD,
+    .p_glGenOcclusionQueriesNV = null_glGenOcclusionQueriesNV,
+    .p_glGenPathsNV = null_glGenPathsNV,
+    .p_glGenPerfMonitorsAMD = null_glGenPerfMonitorsAMD,
+    .p_glGenProgramPipelines = null_glGenProgramPipelines,
+    .p_glGenProgramsARB = null_glGenProgramsARB,
+    .p_glGenProgramsNV = null_glGenProgramsNV,
+    .p_glGenQueries = null_glGenQueries,
+    .p_glGenQueriesARB = null_glGenQueriesARB,
+    .p_glGenQueryResourceTagNV = null_glGenQueryResourceTagNV,
+    .p_glGenRenderbuffers = null_glGenRenderbuffers,
+    .p_glGenRenderbuffersEXT = null_glGenRenderbuffersEXT,
+    .p_glGenSamplers = null_glGenSamplers,
+    .p_glGenSemaphoresEXT = null_glGenSemaphoresEXT,
+    .p_glGenSymbolsEXT = null_glGenSymbolsEXT,
+    .p_glGenTexturesEXT = null_glGenTexturesEXT,
+    .p_glGenTransformFeedbacks = null_glGenTransformFeedbacks,
+    .p_glGenTransformFeedbacksNV = null_glGenTransformFeedbacksNV,
+    .p_glGenVertexArrays = null_glGenVertexArrays,
+    .p_glGenVertexArraysAPPLE = null_glGenVertexArraysAPPLE,
+    .p_glGenVertexShadersEXT = null_glGenVertexShadersEXT,
+    .p_glGenerateMipmap = null_glGenerateMipmap,
+    .p_glGenerateMipmapEXT = null_glGenerateMipmapEXT,
+    .p_glGenerateMultiTexMipmapEXT = null_glGenerateMultiTexMipmapEXT,
+    .p_glGenerateTextureMipmap = null_glGenerateTextureMipmap,
+    .p_glGenerateTextureMipmapEXT = null_glGenerateTextureMipmapEXT,
+    .p_glGetActiveAtomicCounterBufferiv = null_glGetActiveAtomicCounterBufferiv,
+    .p_glGetActiveAttrib = null_glGetActiveAttrib,
+    .p_glGetActiveAttribARB = null_glGetActiveAttribARB,
+    .p_glGetActiveSubroutineName = null_glGetActiveSubroutineName,
+    .p_glGetActiveSubroutineUniformName = null_glGetActiveSubroutineUniformName,
+    .p_glGetActiveSubroutineUniformiv = null_glGetActiveSubroutineUniformiv,
+    .p_glGetActiveUniform = null_glGetActiveUniform,
+    .p_glGetActiveUniformARB = null_glGetActiveUniformARB,
+    .p_glGetActiveUniformBlockName = null_glGetActiveUniformBlockName,
+    .p_glGetActiveUniformBlockiv = null_glGetActiveUniformBlockiv,
+    .p_glGetActiveUniformName = null_glGetActiveUniformName,
+    .p_glGetActiveUniformsiv = null_glGetActiveUniformsiv,
+    .p_glGetActiveVaryingNV = null_glGetActiveVaryingNV,
+    .p_glGetArrayObjectfvATI = null_glGetArrayObjectfvATI,
+    .p_glGetArrayObjectivATI = null_glGetArrayObjectivATI,
+    .p_glGetAttachedObjectsARB = null_glGetAttachedObjectsARB,
+    .p_glGetAttachedShaders = null_glGetAttachedShaders,
+    .p_glGetAttribLocation = null_glGetAttribLocation,
+    .p_glGetAttribLocationARB = null_glGetAttribLocationARB,
+    .p_glGetBooleanIndexedvEXT = null_glGetBooleanIndexedvEXT,
+    .p_glGetBooleani_v = null_glGetBooleani_v,
+    .p_glGetBufferParameteri64v = null_glGetBufferParameteri64v,
+    .p_glGetBufferParameteriv = null_glGetBufferParameteriv,
+    .p_glGetBufferParameterivARB = null_glGetBufferParameterivARB,
+    .p_glGetBufferParameterui64vNV = null_glGetBufferParameterui64vNV,
+    .p_glGetBufferPointerv = null_glGetBufferPointerv,
+    .p_glGetBufferPointervARB = null_glGetBufferPointervARB,
+    .p_glGetBufferSubData = null_glGetBufferSubData,
+    .p_glGetBufferSubDataARB = null_glGetBufferSubDataARB,
+    .p_glGetClipPlanefOES = null_glGetClipPlanefOES,
+    .p_glGetClipPlanexOES = null_glGetClipPlanexOES,
+    .p_glGetColorTable = null_glGetColorTable,
+    .p_glGetColorTableEXT = null_glGetColorTableEXT,
+    .p_glGetColorTableParameterfv = null_glGetColorTableParameterfv,
+    .p_glGetColorTableParameterfvEXT = null_glGetColorTableParameterfvEXT,
+    .p_glGetColorTableParameterfvSGI = null_glGetColorTableParameterfvSGI,
+    .p_glGetColorTableParameteriv = null_glGetColorTableParameteriv,
+    .p_glGetColorTableParameterivEXT = null_glGetColorTableParameterivEXT,
+    .p_glGetColorTableParameterivSGI = null_glGetColorTableParameterivSGI,
+    .p_glGetColorTableSGI = null_glGetColorTableSGI,
+    .p_glGetCombinerInputParameterfvNV = null_glGetCombinerInputParameterfvNV,
+    .p_glGetCombinerInputParameterivNV = null_glGetCombinerInputParameterivNV,
+    .p_glGetCombinerOutputParameterfvNV = null_glGetCombinerOutputParameterfvNV,
+    .p_glGetCombinerOutputParameterivNV = null_glGetCombinerOutputParameterivNV,
+    .p_glGetCombinerStageParameterfvNV = null_glGetCombinerStageParameterfvNV,
+    .p_glGetCommandHeaderNV = null_glGetCommandHeaderNV,
+    .p_glGetCompressedMultiTexImageEXT = null_glGetCompressedMultiTexImageEXT,
+    .p_glGetCompressedTexImage = null_glGetCompressedTexImage,
+    .p_glGetCompressedTexImageARB = null_glGetCompressedTexImageARB,
+    .p_glGetCompressedTextureImage = null_glGetCompressedTextureImage,
+    .p_glGetCompressedTextureImageEXT = null_glGetCompressedTextureImageEXT,
+    .p_glGetCompressedTextureSubImage = null_glGetCompressedTextureSubImage,
+    .p_glGetConvolutionFilter = null_glGetConvolutionFilter,
+    .p_glGetConvolutionFilterEXT = null_glGetConvolutionFilterEXT,
+    .p_glGetConvolutionParameterfv = null_glGetConvolutionParameterfv,
+    .p_glGetConvolutionParameterfvEXT = null_glGetConvolutionParameterfvEXT,
+    .p_glGetConvolutionParameteriv = null_glGetConvolutionParameteriv,
+    .p_glGetConvolutionParameterivEXT = null_glGetConvolutionParameterivEXT,
+    .p_glGetConvolutionParameterxvOES = null_glGetConvolutionParameterxvOES,
+    .p_glGetCoverageModulationTableNV = null_glGetCoverageModulationTableNV,
+    .p_glGetDebugMessageLog = null_glGetDebugMessageLog,
+    .p_glGetDebugMessageLogAMD = null_glGetDebugMessageLogAMD,
+    .p_glGetDebugMessageLogARB = null_glGetDebugMessageLogARB,
+    .p_glGetDetailTexFuncSGIS = null_glGetDetailTexFuncSGIS,
+    .p_glGetDoubleIndexedvEXT = null_glGetDoubleIndexedvEXT,
+    .p_glGetDoublei_v = null_glGetDoublei_v,
+    .p_glGetDoublei_vEXT = null_glGetDoublei_vEXT,
+    .p_glGetFenceivNV = null_glGetFenceivNV,
+    .p_glGetFinalCombinerInputParameterfvNV = null_glGetFinalCombinerInputParameterfvNV,
+    .p_glGetFinalCombinerInputParameterivNV = null_glGetFinalCombinerInputParameterivNV,
+    .p_glGetFirstPerfQueryIdINTEL = null_glGetFirstPerfQueryIdINTEL,
+    .p_glGetFixedvOES = null_glGetFixedvOES,
+    .p_glGetFloatIndexedvEXT = null_glGetFloatIndexedvEXT,
+    .p_glGetFloati_v = null_glGetFloati_v,
+    .p_glGetFloati_vEXT = null_glGetFloati_vEXT,
+    .p_glGetFogFuncSGIS = null_glGetFogFuncSGIS,
+    .p_glGetFragDataIndex = null_glGetFragDataIndex,
+    .p_glGetFragDataLocation = null_glGetFragDataLocation,
+    .p_glGetFragDataLocationEXT = null_glGetFragDataLocationEXT,
+    .p_glGetFragmentLightfvSGIX = null_glGetFragmentLightfvSGIX,
+    .p_glGetFragmentLightivSGIX = null_glGetFragmentLightivSGIX,
+    .p_glGetFragmentMaterialfvSGIX = null_glGetFragmentMaterialfvSGIX,
+    .p_glGetFragmentMaterialivSGIX = null_glGetFragmentMaterialivSGIX,
+    .p_glGetFramebufferAttachmentParameteriv = null_glGetFramebufferAttachmentParameteriv,
+    .p_glGetFramebufferAttachmentParameterivEXT = null_glGetFramebufferAttachmentParameterivEXT,
+    .p_glGetFramebufferParameterfvAMD = null_glGetFramebufferParameterfvAMD,
+    .p_glGetFramebufferParameteriv = null_glGetFramebufferParameteriv,
+    .p_glGetFramebufferParameterivEXT = null_glGetFramebufferParameterivEXT,
+    .p_glGetFramebufferParameterivMESA = null_glGetFramebufferParameterivMESA,
+    .p_glGetGraphicsResetStatus = null_glGetGraphicsResetStatus,
+    .p_glGetGraphicsResetStatusARB = null_glGetGraphicsResetStatusARB,
+    .p_glGetHandleARB = null_glGetHandleARB,
+    .p_glGetHistogram = null_glGetHistogram,
+    .p_glGetHistogramEXT = null_glGetHistogramEXT,
+    .p_glGetHistogramParameterfv = null_glGetHistogramParameterfv,
+    .p_glGetHistogramParameterfvEXT = null_glGetHistogramParameterfvEXT,
+    .p_glGetHistogramParameteriv = null_glGetHistogramParameteriv,
+    .p_glGetHistogramParameterivEXT = null_glGetHistogramParameterivEXT,
+    .p_glGetHistogramParameterxvOES = null_glGetHistogramParameterxvOES,
+    .p_glGetImageHandleARB = null_glGetImageHandleARB,
+    .p_glGetImageHandleNV = null_glGetImageHandleNV,
+    .p_glGetImageTransformParameterfvHP = null_glGetImageTransformParameterfvHP,
+    .p_glGetImageTransformParameterivHP = null_glGetImageTransformParameterivHP,
+    .p_glGetInfoLogARB = null_glGetInfoLogARB,
+    .p_glGetInstrumentsSGIX = null_glGetInstrumentsSGIX,
+    .p_glGetInteger64i_v = null_glGetInteger64i_v,
+    .p_glGetInteger64v = null_glGetInteger64v,
+    .p_glGetIntegerIndexedvEXT = null_glGetIntegerIndexedvEXT,
+    .p_glGetIntegeri_v = null_glGetIntegeri_v,
+    .p_glGetIntegerui64i_vNV = null_glGetIntegerui64i_vNV,
+    .p_glGetIntegerui64vNV = null_glGetIntegerui64vNV,
+    .p_glGetInternalformatSampleivNV = null_glGetInternalformatSampleivNV,
+    .p_glGetInternalformati64v = null_glGetInternalformati64v,
+    .p_glGetInternalformativ = null_glGetInternalformativ,
+    .p_glGetInvariantBooleanvEXT = null_glGetInvariantBooleanvEXT,
+    .p_glGetInvariantFloatvEXT = null_glGetInvariantFloatvEXT,
+    .p_glGetInvariantIntegervEXT = null_glGetInvariantIntegervEXT,
+    .p_glGetLightxOES = null_glGetLightxOES,
+    .p_glGetListParameterfvSGIX = null_glGetListParameterfvSGIX,
+    .p_glGetListParameterivSGIX = null_glGetListParameterivSGIX,
+    .p_glGetLocalConstantBooleanvEXT = null_glGetLocalConstantBooleanvEXT,
+    .p_glGetLocalConstantFloatvEXT = null_glGetLocalConstantFloatvEXT,
+    .p_glGetLocalConstantIntegervEXT = null_glGetLocalConstantIntegervEXT,
+    .p_glGetMapAttribParameterfvNV = null_glGetMapAttribParameterfvNV,
+    .p_glGetMapAttribParameterivNV = null_glGetMapAttribParameterivNV,
+    .p_glGetMapControlPointsNV = null_glGetMapControlPointsNV,
+    .p_glGetMapParameterfvNV = null_glGetMapParameterfvNV,
+    .p_glGetMapParameterivNV = null_glGetMapParameterivNV,
+    .p_glGetMapxvOES = null_glGetMapxvOES,
+    .p_glGetMaterialxOES = null_glGetMaterialxOES,
+    .p_glGetMemoryObjectDetachedResourcesuivNV = null_glGetMemoryObjectDetachedResourcesuivNV,
+    .p_glGetMemoryObjectParameterivEXT = null_glGetMemoryObjectParameterivEXT,
+    .p_glGetMinmax = null_glGetMinmax,
+    .p_glGetMinmaxEXT = null_glGetMinmaxEXT,
+    .p_glGetMinmaxParameterfv = null_glGetMinmaxParameterfv,
+    .p_glGetMinmaxParameterfvEXT = null_glGetMinmaxParameterfvEXT,
+    .p_glGetMinmaxParameteriv = null_glGetMinmaxParameteriv,
+    .p_glGetMinmaxParameterivEXT = null_glGetMinmaxParameterivEXT,
+    .p_glGetMultiTexEnvfvEXT = null_glGetMultiTexEnvfvEXT,
+    .p_glGetMultiTexEnvivEXT = null_glGetMultiTexEnvivEXT,
+    .p_glGetMultiTexGendvEXT = null_glGetMultiTexGendvEXT,
+    .p_glGetMultiTexGenfvEXT = null_glGetMultiTexGenfvEXT,
+    .p_glGetMultiTexGenivEXT = null_glGetMultiTexGenivEXT,
+    .p_glGetMultiTexImageEXT = null_glGetMultiTexImageEXT,
+    .p_glGetMultiTexLevelParameterfvEXT = null_glGetMultiTexLevelParameterfvEXT,
+    .p_glGetMultiTexLevelParameterivEXT = null_glGetMultiTexLevelParameterivEXT,
+    .p_glGetMultiTexParameterIivEXT = null_glGetMultiTexParameterIivEXT,
+    .p_glGetMultiTexParameterIuivEXT = null_glGetMultiTexParameterIuivEXT,
+    .p_glGetMultiTexParameterfvEXT = null_glGetMultiTexParameterfvEXT,
+    .p_glGetMultiTexParameterivEXT = null_glGetMultiTexParameterivEXT,
+    .p_glGetMultisamplefv = null_glGetMultisamplefv,
+    .p_glGetMultisamplefvNV = null_glGetMultisamplefvNV,
+    .p_glGetNamedBufferParameteri64v = null_glGetNamedBufferParameteri64v,
+    .p_glGetNamedBufferParameteriv = null_glGetNamedBufferParameteriv,
+    .p_glGetNamedBufferParameterivEXT = null_glGetNamedBufferParameterivEXT,
+    .p_glGetNamedBufferParameterui64vNV = null_glGetNamedBufferParameterui64vNV,
+    .p_glGetNamedBufferPointerv = null_glGetNamedBufferPointerv,
+    .p_glGetNamedBufferPointervEXT = null_glGetNamedBufferPointervEXT,
+    .p_glGetNamedBufferSubData = null_glGetNamedBufferSubData,
+    .p_glGetNamedBufferSubDataEXT = null_glGetNamedBufferSubDataEXT,
+    .p_glGetNamedFramebufferAttachmentParameteriv = null_glGetNamedFramebufferAttachmentParameteriv,
+    .p_glGetNamedFramebufferAttachmentParameterivEXT = null_glGetNamedFramebufferAttachmentParameterivEXT,
+    .p_glGetNamedFramebufferParameterfvAMD = null_glGetNamedFramebufferParameterfvAMD,
+    .p_glGetNamedFramebufferParameteriv = null_glGetNamedFramebufferParameteriv,
+    .p_glGetNamedFramebufferParameterivEXT = null_glGetNamedFramebufferParameterivEXT,
+    .p_glGetNamedProgramLocalParameterIivEXT = null_glGetNamedProgramLocalParameterIivEXT,
+    .p_glGetNamedProgramLocalParameterIuivEXT = null_glGetNamedProgramLocalParameterIuivEXT,
+    .p_glGetNamedProgramLocalParameterdvEXT = null_glGetNamedProgramLocalParameterdvEXT,
+    .p_glGetNamedProgramLocalParameterfvEXT = null_glGetNamedProgramLocalParameterfvEXT,
+    .p_glGetNamedProgramStringEXT = null_glGetNamedProgramStringEXT,
+    .p_glGetNamedProgramivEXT = null_glGetNamedProgramivEXT,
+    .p_glGetNamedRenderbufferParameteriv = null_glGetNamedRenderbufferParameteriv,
+    .p_glGetNamedRenderbufferParameterivEXT = null_glGetNamedRenderbufferParameterivEXT,
+    .p_glGetNamedStringARB = null_glGetNamedStringARB,
+    .p_glGetNamedStringivARB = null_glGetNamedStringivARB,
+    .p_glGetNextPerfQueryIdINTEL = null_glGetNextPerfQueryIdINTEL,
+    .p_glGetObjectBufferfvATI = null_glGetObjectBufferfvATI,
+    .p_glGetObjectBufferivATI = null_glGetObjectBufferivATI,
+    .p_glGetObjectLabel = null_glGetObjectLabel,
+    .p_glGetObjectLabelEXT = null_glGetObjectLabelEXT,
+    .p_glGetObjectParameterfvARB = null_glGetObjectParameterfvARB,
+    .p_glGetObjectParameterivAPPLE = null_glGetObjectParameterivAPPLE,
+    .p_glGetObjectParameterivARB = null_glGetObjectParameterivARB,
+    .p_glGetObjectPtrLabel = null_glGetObjectPtrLabel,
+    .p_glGetOcclusionQueryivNV = null_glGetOcclusionQueryivNV,
+    .p_glGetOcclusionQueryuivNV = null_glGetOcclusionQueryuivNV,
+    .p_glGetPathColorGenfvNV = null_glGetPathColorGenfvNV,
+    .p_glGetPathColorGenivNV = null_glGetPathColorGenivNV,
+    .p_glGetPathCommandsNV = null_glGetPathCommandsNV,
+    .p_glGetPathCoordsNV = null_glGetPathCoordsNV,
+    .p_glGetPathDashArrayNV = null_glGetPathDashArrayNV,
+    .p_glGetPathLengthNV = null_glGetPathLengthNV,
+    .p_glGetPathMetricRangeNV = null_glGetPathMetricRangeNV,
+    .p_glGetPathMetricsNV = null_glGetPathMetricsNV,
+    .p_glGetPathParameterfvNV = null_glGetPathParameterfvNV,
+    .p_glGetPathParameterivNV = null_glGetPathParameterivNV,
+    .p_glGetPathSpacingNV = null_glGetPathSpacingNV,
+    .p_glGetPathTexGenfvNV = null_glGetPathTexGenfvNV,
+    .p_glGetPathTexGenivNV = null_glGetPathTexGenivNV,
+    .p_glGetPerfCounterInfoINTEL = null_glGetPerfCounterInfoINTEL,
+    .p_glGetPerfMonitorCounterDataAMD = null_glGetPerfMonitorCounterDataAMD,
+    .p_glGetPerfMonitorCounterInfoAMD = null_glGetPerfMonitorCounterInfoAMD,
+    .p_glGetPerfMonitorCounterStringAMD = null_glGetPerfMonitorCounterStringAMD,
+    .p_glGetPerfMonitorCountersAMD = null_glGetPerfMonitorCountersAMD,
+    .p_glGetPerfMonitorGroupStringAMD = null_glGetPerfMonitorGroupStringAMD,
+    .p_glGetPerfMonitorGroupsAMD = null_glGetPerfMonitorGroupsAMD,
+    .p_glGetPerfQueryDataINTEL = null_glGetPerfQueryDataINTEL,
+    .p_glGetPerfQueryIdByNameINTEL = null_glGetPerfQueryIdByNameINTEL,
+    .p_glGetPerfQueryInfoINTEL = null_glGetPerfQueryInfoINTEL,
+    .p_glGetPixelMapxv = null_glGetPixelMapxv,
+    .p_glGetPixelTexGenParameterfvSGIS = null_glGetPixelTexGenParameterfvSGIS,
+    .p_glGetPixelTexGenParameterivSGIS = null_glGetPixelTexGenParameterivSGIS,
+    .p_glGetPixelTransformParameterfvEXT = null_glGetPixelTransformParameterfvEXT,
+    .p_glGetPixelTransformParameterivEXT = null_glGetPixelTransformParameterivEXT,
+    .p_glGetPointerIndexedvEXT = null_glGetPointerIndexedvEXT,
+    .p_glGetPointeri_vEXT = null_glGetPointeri_vEXT,
+    .p_glGetPointervEXT = null_glGetPointervEXT,
+    .p_glGetProgramBinary = null_glGetProgramBinary,
+    .p_glGetProgramEnvParameterIivNV = null_glGetProgramEnvParameterIivNV,
+    .p_glGetProgramEnvParameterIuivNV = null_glGetProgramEnvParameterIuivNV,
+    .p_glGetProgramEnvParameterdvARB = null_glGetProgramEnvParameterdvARB,
+    .p_glGetProgramEnvParameterfvARB = null_glGetProgramEnvParameterfvARB,
+    .p_glGetProgramInfoLog = null_glGetProgramInfoLog,
+    .p_glGetProgramInterfaceiv = null_glGetProgramInterfaceiv,
+    .p_glGetProgramLocalParameterIivNV = null_glGetProgramLocalParameterIivNV,
+    .p_glGetProgramLocalParameterIuivNV = null_glGetProgramLocalParameterIuivNV,
+    .p_glGetProgramLocalParameterdvARB = null_glGetProgramLocalParameterdvARB,
+    .p_glGetProgramLocalParameterfvARB = null_glGetProgramLocalParameterfvARB,
+    .p_glGetProgramNamedParameterdvNV = null_glGetProgramNamedParameterdvNV,
+    .p_glGetProgramNamedParameterfvNV = null_glGetProgramNamedParameterfvNV,
+    .p_glGetProgramParameterdvNV = null_glGetProgramParameterdvNV,
+    .p_glGetProgramParameterfvNV = null_glGetProgramParameterfvNV,
+    .p_glGetProgramPipelineInfoLog = null_glGetProgramPipelineInfoLog,
+    .p_glGetProgramPipelineiv = null_glGetProgramPipelineiv,
+    .p_glGetProgramResourceIndex = null_glGetProgramResourceIndex,
+    .p_glGetProgramResourceLocation = null_glGetProgramResourceLocation,
+    .p_glGetProgramResourceLocationIndex = null_glGetProgramResourceLocationIndex,
+    .p_glGetProgramResourceName = null_glGetProgramResourceName,
+    .p_glGetProgramResourcefvNV = null_glGetProgramResourcefvNV,
+    .p_glGetProgramResourceiv = null_glGetProgramResourceiv,
+    .p_glGetProgramStageiv = null_glGetProgramStageiv,
+    .p_glGetProgramStringARB = null_glGetProgramStringARB,
+    .p_glGetProgramStringNV = null_glGetProgramStringNV,
+    .p_glGetProgramSubroutineParameteruivNV = null_glGetProgramSubroutineParameteruivNV,
+    .p_glGetProgramiv = null_glGetProgramiv,
+    .p_glGetProgramivARB = null_glGetProgramivARB,
+    .p_glGetProgramivNV = null_glGetProgramivNV,
+    .p_glGetQueryBufferObjecti64v = null_glGetQueryBufferObjecti64v,
+    .p_glGetQueryBufferObjectiv = null_glGetQueryBufferObjectiv,
+    .p_glGetQueryBufferObjectui64v = null_glGetQueryBufferObjectui64v,
+    .p_glGetQueryBufferObjectuiv = null_glGetQueryBufferObjectuiv,
+    .p_glGetQueryIndexediv = null_glGetQueryIndexediv,
+    .p_glGetQueryObjecti64v = null_glGetQueryObjecti64v,
+    .p_glGetQueryObjecti64vEXT = null_glGetQueryObjecti64vEXT,
+    .p_glGetQueryObjectiv = null_glGetQueryObjectiv,
+    .p_glGetQueryObjectivARB = null_glGetQueryObjectivARB,
+    .p_glGetQueryObjectui64v = null_glGetQueryObjectui64v,
+    .p_glGetQueryObjectui64vEXT = null_glGetQueryObjectui64vEXT,
+    .p_glGetQueryObjectuiv = null_glGetQueryObjectuiv,
+    .p_glGetQueryObjectuivARB = null_glGetQueryObjectuivARB,
+    .p_glGetQueryiv = null_glGetQueryiv,
+    .p_glGetQueryivARB = null_glGetQueryivARB,
+    .p_glGetRenderbufferParameteriv = null_glGetRenderbufferParameteriv,
+    .p_glGetRenderbufferParameterivEXT = null_glGetRenderbufferParameterivEXT,
+    .p_glGetSamplerParameterIiv = null_glGetSamplerParameterIiv,
+    .p_glGetSamplerParameterIuiv = null_glGetSamplerParameterIuiv,
+    .p_glGetSamplerParameterfv = null_glGetSamplerParameterfv,
+    .p_glGetSamplerParameteriv = null_glGetSamplerParameteriv,
+    .p_glGetSemaphoreParameterui64vEXT = null_glGetSemaphoreParameterui64vEXT,
+    .p_glGetSeparableFilter = null_glGetSeparableFilter,
+    .p_glGetSeparableFilterEXT = null_glGetSeparableFilterEXT,
+    .p_glGetShaderInfoLog = null_glGetShaderInfoLog,
+    .p_glGetShaderPrecisionFormat = null_glGetShaderPrecisionFormat,
+    .p_glGetShaderSource = null_glGetShaderSource,
+    .p_glGetShaderSourceARB = null_glGetShaderSourceARB,
+    .p_glGetShaderiv = null_glGetShaderiv,
+    .p_glGetShadingRateImagePaletteNV = null_glGetShadingRateImagePaletteNV,
+    .p_glGetShadingRateSampleLocationivNV = null_glGetShadingRateSampleLocationivNV,
+    .p_glGetSharpenTexFuncSGIS = null_glGetSharpenTexFuncSGIS,
+    .p_glGetStageIndexNV = null_glGetStageIndexNV,
+    .p_glGetStringi = null_glGetStringi,
+    .p_glGetSubroutineIndex = null_glGetSubroutineIndex,
+    .p_glGetSubroutineUniformLocation = null_glGetSubroutineUniformLocation,
+    .p_glGetSynciv = null_glGetSynciv,
+    .p_glGetTexBumpParameterfvATI = null_glGetTexBumpParameterfvATI,
+    .p_glGetTexBumpParameterivATI = null_glGetTexBumpParameterivATI,
+    .p_glGetTexEnvxvOES = null_glGetTexEnvxvOES,
+    .p_glGetTexFilterFuncSGIS = null_glGetTexFilterFuncSGIS,
+    .p_glGetTexGenxvOES = null_glGetTexGenxvOES,
+    .p_glGetTexLevelParameterxvOES = null_glGetTexLevelParameterxvOES,
+    .p_glGetTexParameterIiv = null_glGetTexParameterIiv,
+    .p_glGetTexParameterIivEXT = null_glGetTexParameterIivEXT,
+    .p_glGetTexParameterIuiv = null_glGetTexParameterIuiv,
+    .p_glGetTexParameterIuivEXT = null_glGetTexParameterIuivEXT,
+    .p_glGetTexParameterPointervAPPLE = null_glGetTexParameterPointervAPPLE,
+    .p_glGetTexParameterxvOES = null_glGetTexParameterxvOES,
+    .p_glGetTextureHandleARB = null_glGetTextureHandleARB,
+    .p_glGetTextureHandleNV = null_glGetTextureHandleNV,
+    .p_glGetTextureImage = null_glGetTextureImage,
+    .p_glGetTextureImageEXT = null_glGetTextureImageEXT,
+    .p_glGetTextureLevelParameterfv = null_glGetTextureLevelParameterfv,
+    .p_glGetTextureLevelParameterfvEXT = null_glGetTextureLevelParameterfvEXT,
+    .p_glGetTextureLevelParameteriv = null_glGetTextureLevelParameteriv,
+    .p_glGetTextureLevelParameterivEXT = null_glGetTextureLevelParameterivEXT,
+    .p_glGetTextureParameterIiv = null_glGetTextureParameterIiv,
+    .p_glGetTextureParameterIivEXT = null_glGetTextureParameterIivEXT,
+    .p_glGetTextureParameterIuiv = null_glGetTextureParameterIuiv,
+    .p_glGetTextureParameterIuivEXT = null_glGetTextureParameterIuivEXT,
+    .p_glGetTextureParameterfv = null_glGetTextureParameterfv,
+    .p_glGetTextureParameterfvEXT = null_glGetTextureParameterfvEXT,
+    .p_glGetTextureParameteriv = null_glGetTextureParameteriv,
+    .p_glGetTextureParameterivEXT = null_glGetTextureParameterivEXT,
+    .p_glGetTextureSamplerHandleARB = null_glGetTextureSamplerHandleARB,
+    .p_glGetTextureSamplerHandleNV = null_glGetTextureSamplerHandleNV,
+    .p_glGetTextureSubImage = null_glGetTextureSubImage,
+    .p_glGetTrackMatrixivNV = null_glGetTrackMatrixivNV,
+    .p_glGetTransformFeedbackVarying = null_glGetTransformFeedbackVarying,
+    .p_glGetTransformFeedbackVaryingEXT = null_glGetTransformFeedbackVaryingEXT,
+    .p_glGetTransformFeedbackVaryingNV = null_glGetTransformFeedbackVaryingNV,
+    .p_glGetTransformFeedbacki64_v = null_glGetTransformFeedbacki64_v,
+    .p_glGetTransformFeedbacki_v = null_glGetTransformFeedbacki_v,
+    .p_glGetTransformFeedbackiv = null_glGetTransformFeedbackiv,
+    .p_glGetUniformBlockIndex = null_glGetUniformBlockIndex,
+    .p_glGetUniformBufferSizeEXT = null_glGetUniformBufferSizeEXT,
+    .p_glGetUniformIndices = null_glGetUniformIndices,
+    .p_glGetUniformLocation = null_glGetUniformLocation,
+    .p_glGetUniformLocationARB = null_glGetUniformLocationARB,
+    .p_glGetUniformOffsetEXT = null_glGetUniformOffsetEXT,
+    .p_glGetUniformSubroutineuiv = null_glGetUniformSubroutineuiv,
+    .p_glGetUniformdv = null_glGetUniformdv,
+    .p_glGetUniformfv = null_glGetUniformfv,
+    .p_glGetUniformfvARB = null_glGetUniformfvARB,
+    .p_glGetUniformi64vARB = null_glGetUniformi64vARB,
+    .p_glGetUniformi64vNV = null_glGetUniformi64vNV,
+    .p_glGetUniformiv = null_glGetUniformiv,
+    .p_glGetUniformivARB = null_glGetUniformivARB,
+    .p_glGetUniformui64vARB = null_glGetUniformui64vARB,
+    .p_glGetUniformui64vNV = null_glGetUniformui64vNV,
+    .p_glGetUniformuiv = null_glGetUniformuiv,
+    .p_glGetUniformuivEXT = null_glGetUniformuivEXT,
+    .p_glGetUnsignedBytei_vEXT = null_glGetUnsignedBytei_vEXT,
+    .p_glGetUnsignedBytevEXT = null_glGetUnsignedBytevEXT,
+    .p_glGetVariantArrayObjectfvATI = null_glGetVariantArrayObjectfvATI,
+    .p_glGetVariantArrayObjectivATI = null_glGetVariantArrayObjectivATI,
+    .p_glGetVariantBooleanvEXT = null_glGetVariantBooleanvEXT,
+    .p_glGetVariantFloatvEXT = null_glGetVariantFloatvEXT,
+    .p_glGetVariantIntegervEXT = null_glGetVariantIntegervEXT,
+    .p_glGetVariantPointervEXT = null_glGetVariantPointervEXT,
+    .p_glGetVaryingLocationNV = null_glGetVaryingLocationNV,
+    .p_glGetVertexArrayIndexed64iv = null_glGetVertexArrayIndexed64iv,
+    .p_glGetVertexArrayIndexediv = null_glGetVertexArrayIndexediv,
+    .p_glGetVertexArrayIntegeri_vEXT = null_glGetVertexArrayIntegeri_vEXT,
+    .p_glGetVertexArrayIntegervEXT = null_glGetVertexArrayIntegervEXT,
+    .p_glGetVertexArrayPointeri_vEXT = null_glGetVertexArrayPointeri_vEXT,
+    .p_glGetVertexArrayPointervEXT = null_glGetVertexArrayPointervEXT,
+    .p_glGetVertexArrayiv = null_glGetVertexArrayiv,
+    .p_glGetVertexAttribArrayObjectfvATI = null_glGetVertexAttribArrayObjectfvATI,
+    .p_glGetVertexAttribArrayObjectivATI = null_glGetVertexAttribArrayObjectivATI,
+    .p_glGetVertexAttribIiv = null_glGetVertexAttribIiv,
+    .p_glGetVertexAttribIivEXT = null_glGetVertexAttribIivEXT,
+    .p_glGetVertexAttribIuiv = null_glGetVertexAttribIuiv,
+    .p_glGetVertexAttribIuivEXT = null_glGetVertexAttribIuivEXT,
+    .p_glGetVertexAttribLdv = null_glGetVertexAttribLdv,
+    .p_glGetVertexAttribLdvEXT = null_glGetVertexAttribLdvEXT,
+    .p_glGetVertexAttribLi64vNV = null_glGetVertexAttribLi64vNV,
+    .p_glGetVertexAttribLui64vARB = null_glGetVertexAttribLui64vARB,
+    .p_glGetVertexAttribLui64vNV = null_glGetVertexAttribLui64vNV,
+    .p_glGetVertexAttribPointerv = null_glGetVertexAttribPointerv,
+    .p_glGetVertexAttribPointervARB = null_glGetVertexAttribPointervARB,
+    .p_glGetVertexAttribPointervNV = null_glGetVertexAttribPointervNV,
+    .p_glGetVertexAttribdv = null_glGetVertexAttribdv,
+    .p_glGetVertexAttribdvARB = null_glGetVertexAttribdvARB,
+    .p_glGetVertexAttribdvNV = null_glGetVertexAttribdvNV,
+    .p_glGetVertexAttribfv = null_glGetVertexAttribfv,
+    .p_glGetVertexAttribfvARB = null_glGetVertexAttribfvARB,
+    .p_glGetVertexAttribfvNV = null_glGetVertexAttribfvNV,
+    .p_glGetVertexAttribiv = null_glGetVertexAttribiv,
+    .p_glGetVertexAttribivARB = null_glGetVertexAttribivARB,
+    .p_glGetVertexAttribivNV = null_glGetVertexAttribivNV,
+    .p_glGetVideoCaptureStreamdvNV = null_glGetVideoCaptureStreamdvNV,
+    .p_glGetVideoCaptureStreamfvNV = null_glGetVideoCaptureStreamfvNV,
+    .p_glGetVideoCaptureStreamivNV = null_glGetVideoCaptureStreamivNV,
+    .p_glGetVideoCaptureivNV = null_glGetVideoCaptureivNV,
+    .p_glGetVideoi64vNV = null_glGetVideoi64vNV,
+    .p_glGetVideoivNV = null_glGetVideoivNV,
+    .p_glGetVideoui64vNV = null_glGetVideoui64vNV,
+    .p_glGetVideouivNV = null_glGetVideouivNV,
+    .p_glGetVkProcAddrNV = null_glGetVkProcAddrNV,
+    .p_glGetnColorTable = null_glGetnColorTable,
+    .p_glGetnColorTableARB = null_glGetnColorTableARB,
+    .p_glGetnCompressedTexImage = null_glGetnCompressedTexImage,
+    .p_glGetnCompressedTexImageARB = null_glGetnCompressedTexImageARB,
+    .p_glGetnConvolutionFilter = null_glGetnConvolutionFilter,
+    .p_glGetnConvolutionFilterARB = null_glGetnConvolutionFilterARB,
+    .p_glGetnHistogram = null_glGetnHistogram,
+    .p_glGetnHistogramARB = null_glGetnHistogramARB,
+    .p_glGetnMapdv = null_glGetnMapdv,
+    .p_glGetnMapdvARB = null_glGetnMapdvARB,
+    .p_glGetnMapfv = null_glGetnMapfv,
+    .p_glGetnMapfvARB = null_glGetnMapfvARB,
+    .p_glGetnMapiv = null_glGetnMapiv,
+    .p_glGetnMapivARB = null_glGetnMapivARB,
+    .p_glGetnMinmax = null_glGetnMinmax,
+    .p_glGetnMinmaxARB = null_glGetnMinmaxARB,
+    .p_glGetnPixelMapfv = null_glGetnPixelMapfv,
+    .p_glGetnPixelMapfvARB = null_glGetnPixelMapfvARB,
+    .p_glGetnPixelMapuiv = null_glGetnPixelMapuiv,
+    .p_glGetnPixelMapuivARB = null_glGetnPixelMapuivARB,
+    .p_glGetnPixelMapusv = null_glGetnPixelMapusv,
+    .p_glGetnPixelMapusvARB = null_glGetnPixelMapusvARB,
+    .p_glGetnPolygonStipple = null_glGetnPolygonStipple,
+    .p_glGetnPolygonStippleARB = null_glGetnPolygonStippleARB,
+    .p_glGetnSeparableFilter = null_glGetnSeparableFilter,
+    .p_glGetnSeparableFilterARB = null_glGetnSeparableFilterARB,
+    .p_glGetnTexImage = null_glGetnTexImage,
+    .p_glGetnTexImageARB = null_glGetnTexImageARB,
+    .p_glGetnUniformdv = null_glGetnUniformdv,
+    .p_glGetnUniformdvARB = null_glGetnUniformdvARB,
+    .p_glGetnUniformfv = null_glGetnUniformfv,
+    .p_glGetnUniformfvARB = null_glGetnUniformfvARB,
+    .p_glGetnUniformi64vARB = null_glGetnUniformi64vARB,
+    .p_glGetnUniformiv = null_glGetnUniformiv,
+    .p_glGetnUniformivARB = null_glGetnUniformivARB,
+    .p_glGetnUniformui64vARB = null_glGetnUniformui64vARB,
+    .p_glGetnUniformuiv = null_glGetnUniformuiv,
+    .p_glGetnUniformuivARB = null_glGetnUniformuivARB,
+    .p_glGlobalAlphaFactorbSUN = null_glGlobalAlphaFactorbSUN,
+    .p_glGlobalAlphaFactordSUN = null_glGlobalAlphaFactordSUN,
+    .p_glGlobalAlphaFactorfSUN = null_glGlobalAlphaFactorfSUN,
+    .p_glGlobalAlphaFactoriSUN = null_glGlobalAlphaFactoriSUN,
+    .p_glGlobalAlphaFactorsSUN = null_glGlobalAlphaFactorsSUN,
+    .p_glGlobalAlphaFactorubSUN = null_glGlobalAlphaFactorubSUN,
+    .p_glGlobalAlphaFactoruiSUN = null_glGlobalAlphaFactoruiSUN,
+    .p_glGlobalAlphaFactorusSUN = null_glGlobalAlphaFactorusSUN,
+    .p_glHintPGI = null_glHintPGI,
+    .p_glHistogram = null_glHistogram,
+    .p_glHistogramEXT = null_glHistogramEXT,
+    .p_glIglooInterfaceSGIX = null_glIglooInterfaceSGIX,
+    .p_glImageTransformParameterfHP = null_glImageTransformParameterfHP,
+    .p_glImageTransformParameterfvHP = null_glImageTransformParameterfvHP,
+    .p_glImageTransformParameteriHP = null_glImageTransformParameteriHP,
+    .p_glImageTransformParameterivHP = null_glImageTransformParameterivHP,
+    .p_glImportMemoryFdEXT = null_glImportMemoryFdEXT,
+    .p_glImportMemoryWin32HandleEXT = null_glImportMemoryWin32HandleEXT,
+    .p_glImportMemoryWin32NameEXT = null_glImportMemoryWin32NameEXT,
+    .p_glImportSemaphoreFdEXT = null_glImportSemaphoreFdEXT,
+    .p_glImportSemaphoreWin32HandleEXT = null_glImportSemaphoreWin32HandleEXT,
+    .p_glImportSemaphoreWin32NameEXT = null_glImportSemaphoreWin32NameEXT,
+    .p_glImportSyncEXT = null_glImportSyncEXT,
+    .p_glIndexFormatNV = null_glIndexFormatNV,
+    .p_glIndexFuncEXT = null_glIndexFuncEXT,
+    .p_glIndexMaterialEXT = null_glIndexMaterialEXT,
+    .p_glIndexPointerEXT = null_glIndexPointerEXT,
+    .p_glIndexPointerListIBM = null_glIndexPointerListIBM,
+    .p_glIndexxOES = null_glIndexxOES,
+    .p_glIndexxvOES = null_glIndexxvOES,
+    .p_glInsertComponentEXT = null_glInsertComponentEXT,
+    .p_glInsertEventMarkerEXT = null_glInsertEventMarkerEXT,
+    .p_glInstrumentsBufferSGIX = null_glInstrumentsBufferSGIX,
+    .p_glInterpolatePathsNV = null_glInterpolatePathsNV,
+    .p_glInvalidateBufferData = null_glInvalidateBufferData,
+    .p_glInvalidateBufferSubData = null_glInvalidateBufferSubData,
+    .p_glInvalidateFramebuffer = null_glInvalidateFramebuffer,
+    .p_glInvalidateNamedFramebufferData = null_glInvalidateNamedFramebufferData,
+    .p_glInvalidateNamedFramebufferSubData = null_glInvalidateNamedFramebufferSubData,
+    .p_glInvalidateSubFramebuffer = null_glInvalidateSubFramebuffer,
+    .p_glInvalidateTexImage = null_glInvalidateTexImage,
+    .p_glInvalidateTexSubImage = null_glInvalidateTexSubImage,
+    .p_glIsAsyncMarkerSGIX = null_glIsAsyncMarkerSGIX,
+    .p_glIsBuffer = null_glIsBuffer,
+    .p_glIsBufferARB = null_glIsBufferARB,
+    .p_glIsBufferResidentNV = null_glIsBufferResidentNV,
+    .p_glIsCommandListNV = null_glIsCommandListNV,
+    .p_glIsEnabledIndexedEXT = null_glIsEnabledIndexedEXT,
+    .p_glIsEnabledi = null_glIsEnabledi,
+    .p_glIsFenceAPPLE = null_glIsFenceAPPLE,
+    .p_glIsFenceNV = null_glIsFenceNV,
+    .p_glIsFramebuffer = null_glIsFramebuffer,
+    .p_glIsFramebufferEXT = null_glIsFramebufferEXT,
+    .p_glIsImageHandleResidentARB = null_glIsImageHandleResidentARB,
+    .p_glIsImageHandleResidentNV = null_glIsImageHandleResidentNV,
+    .p_glIsMemoryObjectEXT = null_glIsMemoryObjectEXT,
+    .p_glIsNameAMD = null_glIsNameAMD,
+    .p_glIsNamedBufferResidentNV = null_glIsNamedBufferResidentNV,
+    .p_glIsNamedStringARB = null_glIsNamedStringARB,
+    .p_glIsObjectBufferATI = null_glIsObjectBufferATI,
+    .p_glIsOcclusionQueryNV = null_glIsOcclusionQueryNV,
+    .p_glIsPathNV = null_glIsPathNV,
+    .p_glIsPointInFillPathNV = null_glIsPointInFillPathNV,
+    .p_glIsPointInStrokePathNV = null_glIsPointInStrokePathNV,
+    .p_glIsProgram = null_glIsProgram,
+    .p_glIsProgramARB = null_glIsProgramARB,
+    .p_glIsProgramNV = null_glIsProgramNV,
+    .p_glIsProgramPipeline = null_glIsProgramPipeline,
+    .p_glIsQuery = null_glIsQuery,
+    .p_glIsQueryARB = null_glIsQueryARB,
+    .p_glIsRenderbuffer = null_glIsRenderbuffer,
+    .p_glIsRenderbufferEXT = null_glIsRenderbufferEXT,
+    .p_glIsSampler = null_glIsSampler,
+    .p_glIsSemaphoreEXT = null_glIsSemaphoreEXT,
+    .p_glIsShader = null_glIsShader,
+    .p_glIsStateNV = null_glIsStateNV,
+    .p_glIsSync = null_glIsSync,
+    .p_glIsTextureEXT = null_glIsTextureEXT,
+    .p_glIsTextureHandleResidentARB = null_glIsTextureHandleResidentARB,
+    .p_glIsTextureHandleResidentNV = null_glIsTextureHandleResidentNV,
+    .p_glIsTransformFeedback = null_glIsTransformFeedback,
+    .p_glIsTransformFeedbackNV = null_glIsTransformFeedbackNV,
+    .p_glIsVariantEnabledEXT = null_glIsVariantEnabledEXT,
+    .p_glIsVertexArray = null_glIsVertexArray,
+    .p_glIsVertexArrayAPPLE = null_glIsVertexArrayAPPLE,
+    .p_glIsVertexAttribEnabledAPPLE = null_glIsVertexAttribEnabledAPPLE,
+    .p_glLGPUCopyImageSubDataNVX = null_glLGPUCopyImageSubDataNVX,
+    .p_glLGPUInterlockNVX = null_glLGPUInterlockNVX,
+    .p_glLGPUNamedBufferSubDataNVX = null_glLGPUNamedBufferSubDataNVX,
+    .p_glLabelObjectEXT = null_glLabelObjectEXT,
+    .p_glLightEnviSGIX = null_glLightEnviSGIX,
+    .p_glLightModelxOES = null_glLightModelxOES,
+    .p_glLightModelxvOES = null_glLightModelxvOES,
+    .p_glLightxOES = null_glLightxOES,
+    .p_glLightxvOES = null_glLightxvOES,
+    .p_glLineWidthxOES = null_glLineWidthxOES,
+    .p_glLinkProgram = null_glLinkProgram,
+    .p_glLinkProgramARB = null_glLinkProgramARB,
+    .p_glListDrawCommandsStatesClientNV = null_glListDrawCommandsStatesClientNV,
+    .p_glListParameterfSGIX = null_glListParameterfSGIX,
+    .p_glListParameterfvSGIX = null_glListParameterfvSGIX,
+    .p_glListParameteriSGIX = null_glListParameteriSGIX,
+    .p_glListParameterivSGIX = null_glListParameterivSGIX,
+    .p_glLoadIdentityDeformationMapSGIX = null_glLoadIdentityDeformationMapSGIX,
+    .p_glLoadMatrixxOES = null_glLoadMatrixxOES,
+    .p_glLoadProgramNV = null_glLoadProgramNV,
+    .p_glLoadTransposeMatrixd = null_glLoadTransposeMatrixd,
+    .p_glLoadTransposeMatrixdARB = null_glLoadTransposeMatrixdARB,
+    .p_glLoadTransposeMatrixf = null_glLoadTransposeMatrixf,
+    .p_glLoadTransposeMatrixfARB = null_glLoadTransposeMatrixfARB,
+    .p_glLoadTransposeMatrixxOES = null_glLoadTransposeMatrixxOES,
+    .p_glLockArraysEXT = null_glLockArraysEXT,
+    .p_glMTexCoord2fSGIS = null_glMTexCoord2fSGIS,
+    .p_glMTexCoord2fvSGIS = null_glMTexCoord2fvSGIS,
+    .p_glMakeBufferNonResidentNV = null_glMakeBufferNonResidentNV,
+    .p_glMakeBufferResidentNV = null_glMakeBufferResidentNV,
+    .p_glMakeImageHandleNonResidentARB = null_glMakeImageHandleNonResidentARB,
+    .p_glMakeImageHandleNonResidentNV = null_glMakeImageHandleNonResidentNV,
+    .p_glMakeImageHandleResidentARB = null_glMakeImageHandleResidentARB,
+    .p_glMakeImageHandleResidentNV = null_glMakeImageHandleResidentNV,
+    .p_glMakeNamedBufferNonResidentNV = null_glMakeNamedBufferNonResidentNV,
+    .p_glMakeNamedBufferResidentNV = null_glMakeNamedBufferResidentNV,
+    .p_glMakeTextureHandleNonResidentARB = null_glMakeTextureHandleNonResidentARB,
+    .p_glMakeTextureHandleNonResidentNV = null_glMakeTextureHandleNonResidentNV,
+    .p_glMakeTextureHandleResidentARB = null_glMakeTextureHandleResidentARB,
+    .p_glMakeTextureHandleResidentNV = null_glMakeTextureHandleResidentNV,
+    .p_glMap1xOES = null_glMap1xOES,
+    .p_glMap2xOES = null_glMap2xOES,
+    .p_glMapBuffer = null_glMapBuffer,
+    .p_glMapBufferARB = null_glMapBufferARB,
+    .p_glMapBufferRange = null_glMapBufferRange,
+    .p_glMapControlPointsNV = null_glMapControlPointsNV,
+    .p_glMapGrid1xOES = null_glMapGrid1xOES,
+    .p_glMapGrid2xOES = null_glMapGrid2xOES,
+    .p_glMapNamedBuffer = null_glMapNamedBuffer,
+    .p_glMapNamedBufferEXT = null_glMapNamedBufferEXT,
+    .p_glMapNamedBufferRange = null_glMapNamedBufferRange,
+    .p_glMapNamedBufferRangeEXT = null_glMapNamedBufferRangeEXT,
+    .p_glMapObjectBufferATI = null_glMapObjectBufferATI,
+    .p_glMapParameterfvNV = null_glMapParameterfvNV,
+    .p_glMapParameterivNV = null_glMapParameterivNV,
+    .p_glMapTexture2DINTEL = null_glMapTexture2DINTEL,
+    .p_glMapVertexAttrib1dAPPLE = null_glMapVertexAttrib1dAPPLE,
+    .p_glMapVertexAttrib1fAPPLE = null_glMapVertexAttrib1fAPPLE,
+    .p_glMapVertexAttrib2dAPPLE = null_glMapVertexAttrib2dAPPLE,
+    .p_glMapVertexAttrib2fAPPLE = null_glMapVertexAttrib2fAPPLE,
+    .p_glMaterialxOES = null_glMaterialxOES,
+    .p_glMaterialxvOES = null_glMaterialxvOES,
+    .p_glMatrixFrustumEXT = null_glMatrixFrustumEXT,
+    .p_glMatrixIndexPointerARB = null_glMatrixIndexPointerARB,
+    .p_glMatrixIndexubvARB = null_glMatrixIndexubvARB,
+    .p_glMatrixIndexuivARB = null_glMatrixIndexuivARB,
+    .p_glMatrixIndexusvARB = null_glMatrixIndexusvARB,
+    .p_glMatrixLoad3x2fNV = null_glMatrixLoad3x2fNV,
+    .p_glMatrixLoad3x3fNV = null_glMatrixLoad3x3fNV,
+    .p_glMatrixLoadIdentityEXT = null_glMatrixLoadIdentityEXT,
+    .p_glMatrixLoadTranspose3x3fNV = null_glMatrixLoadTranspose3x3fNV,
+    .p_glMatrixLoadTransposedEXT = null_glMatrixLoadTransposedEXT,
+    .p_glMatrixLoadTransposefEXT = null_glMatrixLoadTransposefEXT,
+    .p_glMatrixLoaddEXT = null_glMatrixLoaddEXT,
+    .p_glMatrixLoadfEXT = null_glMatrixLoadfEXT,
+    .p_glMatrixMult3x2fNV = null_glMatrixMult3x2fNV,
+    .p_glMatrixMult3x3fNV = null_glMatrixMult3x3fNV,
+    .p_glMatrixMultTranspose3x3fNV = null_glMatrixMultTranspose3x3fNV,
+    .p_glMatrixMultTransposedEXT = null_glMatrixMultTransposedEXT,
+    .p_glMatrixMultTransposefEXT = null_glMatrixMultTransposefEXT,
+    .p_glMatrixMultdEXT = null_glMatrixMultdEXT,
+    .p_glMatrixMultfEXT = null_glMatrixMultfEXT,
+    .p_glMatrixOrthoEXT = null_glMatrixOrthoEXT,
+    .p_glMatrixPopEXT = null_glMatrixPopEXT,
+    .p_glMatrixPushEXT = null_glMatrixPushEXT,
+    .p_glMatrixRotatedEXT = null_glMatrixRotatedEXT,
+    .p_glMatrixRotatefEXT = null_glMatrixRotatefEXT,
+    .p_glMatrixScaledEXT = null_glMatrixScaledEXT,
+    .p_glMatrixScalefEXT = null_glMatrixScalefEXT,
+    .p_glMatrixTranslatedEXT = null_glMatrixTranslatedEXT,
+    .p_glMatrixTranslatefEXT = null_glMatrixTranslatefEXT,
+    .p_glMaxShaderCompilerThreadsARB = null_glMaxShaderCompilerThreadsARB,
+    .p_glMaxShaderCompilerThreadsKHR = null_glMaxShaderCompilerThreadsKHR,
+    .p_glMemoryBarrier = null_glMemoryBarrier,
+    .p_glMemoryBarrierByRegion = null_glMemoryBarrierByRegion,
+    .p_glMemoryBarrierEXT = null_glMemoryBarrierEXT,
+    .p_glMemoryObjectParameterivEXT = null_glMemoryObjectParameterivEXT,
+    .p_glMinSampleShading = null_glMinSampleShading,
+    .p_glMinSampleShadingARB = null_glMinSampleShadingARB,
+    .p_glMinmax = null_glMinmax,
+    .p_glMinmaxEXT = null_glMinmaxEXT,
+    .p_glMultMatrixxOES = null_glMultMatrixxOES,
+    .p_glMultTransposeMatrixd = null_glMultTransposeMatrixd,
+    .p_glMultTransposeMatrixdARB = null_glMultTransposeMatrixdARB,
+    .p_glMultTransposeMatrixf = null_glMultTransposeMatrixf,
+    .p_glMultTransposeMatrixfARB = null_glMultTransposeMatrixfARB,
+    .p_glMultTransposeMatrixxOES = null_glMultTransposeMatrixxOES,
+    .p_glMultiDrawArrays = null_glMultiDrawArrays,
+    .p_glMultiDrawArraysEXT = null_glMultiDrawArraysEXT,
+    .p_glMultiDrawArraysIndirect = null_glMultiDrawArraysIndirect,
+    .p_glMultiDrawArraysIndirectAMD = null_glMultiDrawArraysIndirectAMD,
+    .p_glMultiDrawArraysIndirectBindlessCountNV = null_glMultiDrawArraysIndirectBindlessCountNV,
+    .p_glMultiDrawArraysIndirectBindlessNV = null_glMultiDrawArraysIndirectBindlessNV,
+    .p_glMultiDrawArraysIndirectCount = null_glMultiDrawArraysIndirectCount,
+    .p_glMultiDrawArraysIndirectCountARB = null_glMultiDrawArraysIndirectCountARB,
+    .p_glMultiDrawElementArrayAPPLE = null_glMultiDrawElementArrayAPPLE,
+    .p_glMultiDrawElements = null_glMultiDrawElements,
+    .p_glMultiDrawElementsBaseVertex = null_glMultiDrawElementsBaseVertex,
+    .p_glMultiDrawElementsEXT = null_glMultiDrawElementsEXT,
+    .p_glMultiDrawElementsIndirect = null_glMultiDrawElementsIndirect,
+    .p_glMultiDrawElementsIndirectAMD = null_glMultiDrawElementsIndirectAMD,
+    .p_glMultiDrawElementsIndirectBindlessCountNV = null_glMultiDrawElementsIndirectBindlessCountNV,
+    .p_glMultiDrawElementsIndirectBindlessNV = null_glMultiDrawElementsIndirectBindlessNV,
+    .p_glMultiDrawElementsIndirectCount = null_glMultiDrawElementsIndirectCount,
+    .p_glMultiDrawElementsIndirectCountARB = null_glMultiDrawElementsIndirectCountARB,
+    .p_glMultiDrawMeshTasksIndirectCountNV = null_glMultiDrawMeshTasksIndirectCountNV,
+    .p_glMultiDrawMeshTasksIndirectNV = null_glMultiDrawMeshTasksIndirectNV,
+    .p_glMultiDrawRangeElementArrayAPPLE = null_glMultiDrawRangeElementArrayAPPLE,
+    .p_glMultiModeDrawArraysIBM = null_glMultiModeDrawArraysIBM,
+    .p_glMultiModeDrawElementsIBM = null_glMultiModeDrawElementsIBM,
+    .p_glMultiTexBufferEXT = null_glMultiTexBufferEXT,
+    .p_glMultiTexCoord1bOES = null_glMultiTexCoord1bOES,
+    .p_glMultiTexCoord1bvOES = null_glMultiTexCoord1bvOES,
+    .p_glMultiTexCoord1d = null_glMultiTexCoord1d,
+    .p_glMultiTexCoord1dARB = null_glMultiTexCoord1dARB,
+    .p_glMultiTexCoord1dSGIS = null_glMultiTexCoord1dSGIS,
+    .p_glMultiTexCoord1dv = null_glMultiTexCoord1dv,
+    .p_glMultiTexCoord1dvARB = null_glMultiTexCoord1dvARB,
+    .p_glMultiTexCoord1dvSGIS = null_glMultiTexCoord1dvSGIS,
+    .p_glMultiTexCoord1f = null_glMultiTexCoord1f,
+    .p_glMultiTexCoord1fARB = null_glMultiTexCoord1fARB,
+    .p_glMultiTexCoord1fSGIS = null_glMultiTexCoord1fSGIS,
+    .p_glMultiTexCoord1fv = null_glMultiTexCoord1fv,
+    .p_glMultiTexCoord1fvARB = null_glMultiTexCoord1fvARB,
+    .p_glMultiTexCoord1fvSGIS = null_glMultiTexCoord1fvSGIS,
+    .p_glMultiTexCoord1hNV = null_glMultiTexCoord1hNV,
+    .p_glMultiTexCoord1hvNV = null_glMultiTexCoord1hvNV,
+    .p_glMultiTexCoord1i = null_glMultiTexCoord1i,
+    .p_glMultiTexCoord1iARB = null_glMultiTexCoord1iARB,
+    .p_glMultiTexCoord1iSGIS = null_glMultiTexCoord1iSGIS,
+    .p_glMultiTexCoord1iv = null_glMultiTexCoord1iv,
+    .p_glMultiTexCoord1ivARB = null_glMultiTexCoord1ivARB,
+    .p_glMultiTexCoord1ivSGIS = null_glMultiTexCoord1ivSGIS,
+    .p_glMultiTexCoord1s = null_glMultiTexCoord1s,
+    .p_glMultiTexCoord1sARB = null_glMultiTexCoord1sARB,
+    .p_glMultiTexCoord1sSGIS = null_glMultiTexCoord1sSGIS,
+    .p_glMultiTexCoord1sv = null_glMultiTexCoord1sv,
+    .p_glMultiTexCoord1svARB = null_glMultiTexCoord1svARB,
+    .p_glMultiTexCoord1svSGIS = null_glMultiTexCoord1svSGIS,
+    .p_glMultiTexCoord1xOES = null_glMultiTexCoord1xOES,
+    .p_glMultiTexCoord1xvOES = null_glMultiTexCoord1xvOES,
+    .p_glMultiTexCoord2bOES = null_glMultiTexCoord2bOES,
+    .p_glMultiTexCoord2bvOES = null_glMultiTexCoord2bvOES,
+    .p_glMultiTexCoord2d = null_glMultiTexCoord2d,
+    .p_glMultiTexCoord2dARB = null_glMultiTexCoord2dARB,
+    .p_glMultiTexCoord2dSGIS = null_glMultiTexCoord2dSGIS,
+    .p_glMultiTexCoord2dv = null_glMultiTexCoord2dv,
+    .p_glMultiTexCoord2dvARB = null_glMultiTexCoord2dvARB,
+    .p_glMultiTexCoord2dvSGIS = null_glMultiTexCoord2dvSGIS,
+    .p_glMultiTexCoord2f = null_glMultiTexCoord2f,
+    .p_glMultiTexCoord2fARB = null_glMultiTexCoord2fARB,
+    .p_glMultiTexCoord2fSGIS = null_glMultiTexCoord2fSGIS,
+    .p_glMultiTexCoord2fv = null_glMultiTexCoord2fv,
+    .p_glMultiTexCoord2fvARB = null_glMultiTexCoord2fvARB,
+    .p_glMultiTexCoord2fvSGIS = null_glMultiTexCoord2fvSGIS,
+    .p_glMultiTexCoord2hNV = null_glMultiTexCoord2hNV,
+    .p_glMultiTexCoord2hvNV = null_glMultiTexCoord2hvNV,
+    .p_glMultiTexCoord2i = null_glMultiTexCoord2i,
+    .p_glMultiTexCoord2iARB = null_glMultiTexCoord2iARB,
+    .p_glMultiTexCoord2iSGIS = null_glMultiTexCoord2iSGIS,
+    .p_glMultiTexCoord2iv = null_glMultiTexCoord2iv,
+    .p_glMultiTexCoord2ivARB = null_glMultiTexCoord2ivARB,
+    .p_glMultiTexCoord2ivSGIS = null_glMultiTexCoord2ivSGIS,
+    .p_glMultiTexCoord2s = null_glMultiTexCoord2s,
+    .p_glMultiTexCoord2sARB = null_glMultiTexCoord2sARB,
+    .p_glMultiTexCoord2sSGIS = null_glMultiTexCoord2sSGIS,
+    .p_glMultiTexCoord2sv = null_glMultiTexCoord2sv,
+    .p_glMultiTexCoord2svARB = null_glMultiTexCoord2svARB,
+    .p_glMultiTexCoord2svSGIS = null_glMultiTexCoord2svSGIS,
+    .p_glMultiTexCoord2xOES = null_glMultiTexCoord2xOES,
+    .p_glMultiTexCoord2xvOES = null_glMultiTexCoord2xvOES,
+    .p_glMultiTexCoord3bOES = null_glMultiTexCoord3bOES,
+    .p_glMultiTexCoord3bvOES = null_glMultiTexCoord3bvOES,
+    .p_glMultiTexCoord3d = null_glMultiTexCoord3d,
+    .p_glMultiTexCoord3dARB = null_glMultiTexCoord3dARB,
+    .p_glMultiTexCoord3dSGIS = null_glMultiTexCoord3dSGIS,
+    .p_glMultiTexCoord3dv = null_glMultiTexCoord3dv,
+    .p_glMultiTexCoord3dvARB = null_glMultiTexCoord3dvARB,
+    .p_glMultiTexCoord3dvSGIS = null_glMultiTexCoord3dvSGIS,
+    .p_glMultiTexCoord3f = null_glMultiTexCoord3f,
+    .p_glMultiTexCoord3fARB = null_glMultiTexCoord3fARB,
+    .p_glMultiTexCoord3fSGIS = null_glMultiTexCoord3fSGIS,
+    .p_glMultiTexCoord3fv = null_glMultiTexCoord3fv,
+    .p_glMultiTexCoord3fvARB = null_glMultiTexCoord3fvARB,
+    .p_glMultiTexCoord3fvSGIS = null_glMultiTexCoord3fvSGIS,
+    .p_glMultiTexCoord3hNV = null_glMultiTexCoord3hNV,
+    .p_glMultiTexCoord3hvNV = null_glMultiTexCoord3hvNV,
+    .p_glMultiTexCoord3i = null_glMultiTexCoord3i,
+    .p_glMultiTexCoord3iARB = null_glMultiTexCoord3iARB,
+    .p_glMultiTexCoord3iSGIS = null_glMultiTexCoord3iSGIS,
+    .p_glMultiTexCoord3iv = null_glMultiTexCoord3iv,
+    .p_glMultiTexCoord3ivARB = null_glMultiTexCoord3ivARB,
+    .p_glMultiTexCoord3ivSGIS = null_glMultiTexCoord3ivSGIS,
+    .p_glMultiTexCoord3s = null_glMultiTexCoord3s,
+    .p_glMultiTexCoord3sARB = null_glMultiTexCoord3sARB,
+    .p_glMultiTexCoord3sSGIS = null_glMultiTexCoord3sSGIS,
+    .p_glMultiTexCoord3sv = null_glMultiTexCoord3sv,
+    .p_glMultiTexCoord3svARB = null_glMultiTexCoord3svARB,
+    .p_glMultiTexCoord3svSGIS = null_glMultiTexCoord3svSGIS,
+    .p_glMultiTexCoord3xOES = null_glMultiTexCoord3xOES,
+    .p_glMultiTexCoord3xvOES = null_glMultiTexCoord3xvOES,
+    .p_glMultiTexCoord4bOES = null_glMultiTexCoord4bOES,
+    .p_glMultiTexCoord4bvOES = null_glMultiTexCoord4bvOES,
+    .p_glMultiTexCoord4d = null_glMultiTexCoord4d,
+    .p_glMultiTexCoord4dARB = null_glMultiTexCoord4dARB,
+    .p_glMultiTexCoord4dSGIS = null_glMultiTexCoord4dSGIS,
+    .p_glMultiTexCoord4dv = null_glMultiTexCoord4dv,
+    .p_glMultiTexCoord4dvARB = null_glMultiTexCoord4dvARB,
+    .p_glMultiTexCoord4dvSGIS = null_glMultiTexCoord4dvSGIS,
+    .p_glMultiTexCoord4f = null_glMultiTexCoord4f,
+    .p_glMultiTexCoord4fARB = null_glMultiTexCoord4fARB,
+    .p_glMultiTexCoord4fSGIS = null_glMultiTexCoord4fSGIS,
+    .p_glMultiTexCoord4fv = null_glMultiTexCoord4fv,
+    .p_glMultiTexCoord4fvARB = null_glMultiTexCoord4fvARB,
+    .p_glMultiTexCoord4fvSGIS = null_glMultiTexCoord4fvSGIS,
+    .p_glMultiTexCoord4hNV = null_glMultiTexCoord4hNV,
+    .p_glMultiTexCoord4hvNV = null_glMultiTexCoord4hvNV,
+    .p_glMultiTexCoord4i = null_glMultiTexCoord4i,
+    .p_glMultiTexCoord4iARB = null_glMultiTexCoord4iARB,
+    .p_glMultiTexCoord4iSGIS = null_glMultiTexCoord4iSGIS,
+    .p_glMultiTexCoord4iv = null_glMultiTexCoord4iv,
+    .p_glMultiTexCoord4ivARB = null_glMultiTexCoord4ivARB,
+    .p_glMultiTexCoord4ivSGIS = null_glMultiTexCoord4ivSGIS,
+    .p_glMultiTexCoord4s = null_glMultiTexCoord4s,
+    .p_glMultiTexCoord4sARB = null_glMultiTexCoord4sARB,
+    .p_glMultiTexCoord4sSGIS = null_glMultiTexCoord4sSGIS,
+    .p_glMultiTexCoord4sv = null_glMultiTexCoord4sv,
+    .p_glMultiTexCoord4svARB = null_glMultiTexCoord4svARB,
+    .p_glMultiTexCoord4svSGIS = null_glMultiTexCoord4svSGIS,
+    .p_glMultiTexCoord4xOES = null_glMultiTexCoord4xOES,
+    .p_glMultiTexCoord4xvOES = null_glMultiTexCoord4xvOES,
+    .p_glMultiTexCoordP1ui = null_glMultiTexCoordP1ui,
+    .p_glMultiTexCoordP1uiv = null_glMultiTexCoordP1uiv,
+    .p_glMultiTexCoordP2ui = null_glMultiTexCoordP2ui,
+    .p_glMultiTexCoordP2uiv = null_glMultiTexCoordP2uiv,
+    .p_glMultiTexCoordP3ui = null_glMultiTexCoordP3ui,
+    .p_glMultiTexCoordP3uiv = null_glMultiTexCoordP3uiv,
+    .p_glMultiTexCoordP4ui = null_glMultiTexCoordP4ui,
+    .p_glMultiTexCoordP4uiv = null_glMultiTexCoordP4uiv,
+    .p_glMultiTexCoordPointerEXT = null_glMultiTexCoordPointerEXT,
+    .p_glMultiTexCoordPointerSGIS = null_glMultiTexCoordPointerSGIS,
+    .p_glMultiTexEnvfEXT = null_glMultiTexEnvfEXT,
+    .p_glMultiTexEnvfvEXT = null_glMultiTexEnvfvEXT,
+    .p_glMultiTexEnviEXT = null_glMultiTexEnviEXT,
+    .p_glMultiTexEnvivEXT = null_glMultiTexEnvivEXT,
+    .p_glMultiTexGendEXT = null_glMultiTexGendEXT,
+    .p_glMultiTexGendvEXT = null_glMultiTexGendvEXT,
+    .p_glMultiTexGenfEXT = null_glMultiTexGenfEXT,
+    .p_glMultiTexGenfvEXT = null_glMultiTexGenfvEXT,
+    .p_glMultiTexGeniEXT = null_glMultiTexGeniEXT,
+    .p_glMultiTexGenivEXT = null_glMultiTexGenivEXT,
+    .p_glMultiTexImage1DEXT = null_glMultiTexImage1DEXT,
+    .p_glMultiTexImage2DEXT = null_glMultiTexImage2DEXT,
+    .p_glMultiTexImage3DEXT = null_glMultiTexImage3DEXT,
+    .p_glMultiTexParameterIivEXT = null_glMultiTexParameterIivEXT,
+    .p_glMultiTexParameterIuivEXT = null_glMultiTexParameterIuivEXT,
+    .p_glMultiTexParameterfEXT = null_glMultiTexParameterfEXT,
+    .p_glMultiTexParameterfvEXT = null_glMultiTexParameterfvEXT,
+    .p_glMultiTexParameteriEXT = null_glMultiTexParameteriEXT,
+    .p_glMultiTexParameterivEXT = null_glMultiTexParameterivEXT,
+    .p_glMultiTexRenderbufferEXT = null_glMultiTexRenderbufferEXT,
+    .p_glMultiTexSubImage1DEXT = null_glMultiTexSubImage1DEXT,
+    .p_glMultiTexSubImage2DEXT = null_glMultiTexSubImage2DEXT,
+    .p_glMultiTexSubImage3DEXT = null_glMultiTexSubImage3DEXT,
+    .p_glMulticastBarrierNV = null_glMulticastBarrierNV,
+    .p_glMulticastBlitFramebufferNV = null_glMulticastBlitFramebufferNV,
+    .p_glMulticastBufferSubDataNV = null_glMulticastBufferSubDataNV,
+    .p_glMulticastCopyBufferSubDataNV = null_glMulticastCopyBufferSubDataNV,
+    .p_glMulticastCopyImageSubDataNV = null_glMulticastCopyImageSubDataNV,
+    .p_glMulticastFramebufferSampleLocationsfvNV = null_glMulticastFramebufferSampleLocationsfvNV,
+    .p_glMulticastGetQueryObjecti64vNV = null_glMulticastGetQueryObjecti64vNV,
+    .p_glMulticastGetQueryObjectivNV = null_glMulticastGetQueryObjectivNV,
+    .p_glMulticastGetQueryObjectui64vNV = null_glMulticastGetQueryObjectui64vNV,
+    .p_glMulticastGetQueryObjectuivNV = null_glMulticastGetQueryObjectuivNV,
+    .p_glMulticastScissorArrayvNVX = null_glMulticastScissorArrayvNVX,
+    .p_glMulticastViewportArrayvNVX = null_glMulticastViewportArrayvNVX,
+    .p_glMulticastViewportPositionWScaleNVX = null_glMulticastViewportPositionWScaleNVX,
+    .p_glMulticastWaitSyncNV = null_glMulticastWaitSyncNV,
+    .p_glNamedBufferAttachMemoryNV = null_glNamedBufferAttachMemoryNV,
+    .p_glNamedBufferData = null_glNamedBufferData,
+    .p_glNamedBufferDataEXT = null_glNamedBufferDataEXT,
+    .p_glNamedBufferPageCommitmentARB = null_glNamedBufferPageCommitmentARB,
+    .p_glNamedBufferPageCommitmentEXT = null_glNamedBufferPageCommitmentEXT,
+    .p_glNamedBufferStorage = null_glNamedBufferStorage,
+    .p_glNamedBufferStorageEXT = null_glNamedBufferStorageEXT,
+    .p_glNamedBufferStorageExternalEXT = null_glNamedBufferStorageExternalEXT,
+    .p_glNamedBufferStorageMemEXT = null_glNamedBufferStorageMemEXT,
+    .p_glNamedBufferSubData = null_glNamedBufferSubData,
+    .p_glNamedBufferSubDataEXT = null_glNamedBufferSubDataEXT,
+    .p_glNamedCopyBufferSubDataEXT = null_glNamedCopyBufferSubDataEXT,
+    .p_glNamedFramebufferDrawBuffer = null_glNamedFramebufferDrawBuffer,
+    .p_glNamedFramebufferDrawBuffers = null_glNamedFramebufferDrawBuffers,
+    .p_glNamedFramebufferParameteri = null_glNamedFramebufferParameteri,
+    .p_glNamedFramebufferParameteriEXT = null_glNamedFramebufferParameteriEXT,
+    .p_glNamedFramebufferReadBuffer = null_glNamedFramebufferReadBuffer,
+    .p_glNamedFramebufferRenderbuffer = null_glNamedFramebufferRenderbuffer,
+    .p_glNamedFramebufferRenderbufferEXT = null_glNamedFramebufferRenderbufferEXT,
+    .p_glNamedFramebufferSampleLocationsfvARB = null_glNamedFramebufferSampleLocationsfvARB,
+    .p_glNamedFramebufferSampleLocationsfvNV = null_glNamedFramebufferSampleLocationsfvNV,
+    .p_glNamedFramebufferSamplePositionsfvAMD = null_glNamedFramebufferSamplePositionsfvAMD,
+    .p_glNamedFramebufferTexture = null_glNamedFramebufferTexture,
+    .p_glNamedFramebufferTexture1DEXT = null_glNamedFramebufferTexture1DEXT,
+    .p_glNamedFramebufferTexture2DEXT = null_glNamedFramebufferTexture2DEXT,
+    .p_glNamedFramebufferTexture3DEXT = null_glNamedFramebufferTexture3DEXT,
+    .p_glNamedFramebufferTextureEXT = null_glNamedFramebufferTextureEXT,
+    .p_glNamedFramebufferTextureFaceEXT = null_glNamedFramebufferTextureFaceEXT,
+    .p_glNamedFramebufferTextureLayer = null_glNamedFramebufferTextureLayer,
+    .p_glNamedFramebufferTextureLayerEXT = null_glNamedFramebufferTextureLayerEXT,
+    .p_glNamedProgramLocalParameter4dEXT = null_glNamedProgramLocalParameter4dEXT,
+    .p_glNamedProgramLocalParameter4dvEXT = null_glNamedProgramLocalParameter4dvEXT,
+    .p_glNamedProgramLocalParameter4fEXT = null_glNamedProgramLocalParameter4fEXT,
+    .p_glNamedProgramLocalParameter4fvEXT = null_glNamedProgramLocalParameter4fvEXT,
+    .p_glNamedProgramLocalParameterI4iEXT = null_glNamedProgramLocalParameterI4iEXT,
+    .p_glNamedProgramLocalParameterI4ivEXT = null_glNamedProgramLocalParameterI4ivEXT,
+    .p_glNamedProgramLocalParameterI4uiEXT = null_glNamedProgramLocalParameterI4uiEXT,
+    .p_glNamedProgramLocalParameterI4uivEXT = null_glNamedProgramLocalParameterI4uivEXT,
+    .p_glNamedProgramLocalParameters4fvEXT = null_glNamedProgramLocalParameters4fvEXT,
+    .p_glNamedProgramLocalParametersI4ivEXT = null_glNamedProgramLocalParametersI4ivEXT,
+    .p_glNamedProgramLocalParametersI4uivEXT = null_glNamedProgramLocalParametersI4uivEXT,
+    .p_glNamedProgramStringEXT = null_glNamedProgramStringEXT,
+    .p_glNamedRenderbufferStorage = null_glNamedRenderbufferStorage,
+    .p_glNamedRenderbufferStorageEXT = null_glNamedRenderbufferStorageEXT,
+    .p_glNamedRenderbufferStorageMultisample = null_glNamedRenderbufferStorageMultisample,
+    .p_glNamedRenderbufferStorageMultisampleAdvancedAMD = null_glNamedRenderbufferStorageMultisampleAdvancedAMD,
+    .p_glNamedRenderbufferStorageMultisampleCoverageEXT = null_glNamedRenderbufferStorageMultisampleCoverageEXT,
+    .p_glNamedRenderbufferStorageMultisampleEXT = null_glNamedRenderbufferStorageMultisampleEXT,
+    .p_glNamedStringARB = null_glNamedStringARB,
+    .p_glNewBufferRegion = null_glNewBufferRegion,
+    .p_glNewObjectBufferATI = null_glNewObjectBufferATI,
+    .p_glNormal3fVertex3fSUN = null_glNormal3fVertex3fSUN,
+    .p_glNormal3fVertex3fvSUN = null_glNormal3fVertex3fvSUN,
+    .p_glNormal3hNV = null_glNormal3hNV,
+    .p_glNormal3hvNV = null_glNormal3hvNV,
+    .p_glNormal3xOES = null_glNormal3xOES,
+    .p_glNormal3xvOES = null_glNormal3xvOES,
+    .p_glNormalFormatNV = null_glNormalFormatNV,
+    .p_glNormalP3ui = null_glNormalP3ui,
+    .p_glNormalP3uiv = null_glNormalP3uiv,
+    .p_glNormalPointerEXT = null_glNormalPointerEXT,
+    .p_glNormalPointerListIBM = null_glNormalPointerListIBM,
+    .p_glNormalPointervINTEL = null_glNormalPointervINTEL,
+    .p_glNormalStream3bATI = null_glNormalStream3bATI,
+    .p_glNormalStream3bvATI = null_glNormalStream3bvATI,
+    .p_glNormalStream3dATI = null_glNormalStream3dATI,
+    .p_glNormalStream3dvATI = null_glNormalStream3dvATI,
+    .p_glNormalStream3fATI = null_glNormalStream3fATI,
+    .p_glNormalStream3fvATI = null_glNormalStream3fvATI,
+    .p_glNormalStream3iATI = null_glNormalStream3iATI,
+    .p_glNormalStream3ivATI = null_glNormalStream3ivATI,
+    .p_glNormalStream3sATI = null_glNormalStream3sATI,
+    .p_glNormalStream3svATI = null_glNormalStream3svATI,
+    .p_glObjectLabel = null_glObjectLabel,
+    .p_glObjectPtrLabel = null_glObjectPtrLabel,
+    .p_glObjectPurgeableAPPLE = null_glObjectPurgeableAPPLE,
+    .p_glObjectUnpurgeableAPPLE = null_glObjectUnpurgeableAPPLE,
+    .p_glOrthofOES = null_glOrthofOES,
+    .p_glOrthoxOES = null_glOrthoxOES,
+    .p_glPNTrianglesfATI = null_glPNTrianglesfATI,
+    .p_glPNTrianglesiATI = null_glPNTrianglesiATI,
+    .p_glPassTexCoordATI = null_glPassTexCoordATI,
+    .p_glPassThroughxOES = null_glPassThroughxOES,
+    .p_glPatchParameterfv = null_glPatchParameterfv,
+    .p_glPatchParameteri = null_glPatchParameteri,
+    .p_glPathColorGenNV = null_glPathColorGenNV,
+    .p_glPathCommandsNV = null_glPathCommandsNV,
+    .p_glPathCoordsNV = null_glPathCoordsNV,
+    .p_glPathCoverDepthFuncNV = null_glPathCoverDepthFuncNV,
+    .p_glPathDashArrayNV = null_glPathDashArrayNV,
+    .p_glPathFogGenNV = null_glPathFogGenNV,
+    .p_glPathGlyphIndexArrayNV = null_glPathGlyphIndexArrayNV,
+    .p_glPathGlyphIndexRangeNV = null_glPathGlyphIndexRangeNV,
+    .p_glPathGlyphRangeNV = null_glPathGlyphRangeNV,
+    .p_glPathGlyphsNV = null_glPathGlyphsNV,
+    .p_glPathMemoryGlyphIndexArrayNV = null_glPathMemoryGlyphIndexArrayNV,
+    .p_glPathParameterfNV = null_glPathParameterfNV,
+    .p_glPathParameterfvNV = null_glPathParameterfvNV,
+    .p_glPathParameteriNV = null_glPathParameteriNV,
+    .p_glPathParameterivNV = null_glPathParameterivNV,
+    .p_glPathStencilDepthOffsetNV = null_glPathStencilDepthOffsetNV,
+    .p_glPathStencilFuncNV = null_glPathStencilFuncNV,
+    .p_glPathStringNV = null_glPathStringNV,
+    .p_glPathSubCommandsNV = null_glPathSubCommandsNV,
+    .p_glPathSubCoordsNV = null_glPathSubCoordsNV,
+    .p_glPathTexGenNV = null_glPathTexGenNV,
+    .p_glPauseTransformFeedback = null_glPauseTransformFeedback,
+    .p_glPauseTransformFeedbackNV = null_glPauseTransformFeedbackNV,
+    .p_glPixelDataRangeNV = null_glPixelDataRangeNV,
+    .p_glPixelMapx = null_glPixelMapx,
+    .p_glPixelStorex = null_glPixelStorex,
+    .p_glPixelTexGenParameterfSGIS = null_glPixelTexGenParameterfSGIS,
+    .p_glPixelTexGenParameterfvSGIS = null_glPixelTexGenParameterfvSGIS,
+    .p_glPixelTexGenParameteriSGIS = null_glPixelTexGenParameteriSGIS,
+    .p_glPixelTexGenParameterivSGIS = null_glPixelTexGenParameterivSGIS,
+    .p_glPixelTexGenSGIX = null_glPixelTexGenSGIX,
+    .p_glPixelTransferxOES = null_glPixelTransferxOES,
+    .p_glPixelTransformParameterfEXT = null_glPixelTransformParameterfEXT,
+    .p_glPixelTransformParameterfvEXT = null_glPixelTransformParameterfvEXT,
+    .p_glPixelTransformParameteriEXT = null_glPixelTransformParameteriEXT,
+    .p_glPixelTransformParameterivEXT = null_glPixelTransformParameterivEXT,
+    .p_glPixelZoomxOES = null_glPixelZoomxOES,
+    .p_glPointAlongPathNV = null_glPointAlongPathNV,
+    .p_glPointParameterf = null_glPointParameterf,
+    .p_glPointParameterfARB = null_glPointParameterfARB,
+    .p_glPointParameterfEXT = null_glPointParameterfEXT,
+    .p_glPointParameterfSGIS = null_glPointParameterfSGIS,
+    .p_glPointParameterfv = null_glPointParameterfv,
+    .p_glPointParameterfvARB = null_glPointParameterfvARB,
+    .p_glPointParameterfvEXT = null_glPointParameterfvEXT,
+    .p_glPointParameterfvSGIS = null_glPointParameterfvSGIS,
+    .p_glPointParameteri = null_glPointParameteri,
+    .p_glPointParameteriNV = null_glPointParameteriNV,
+    .p_glPointParameteriv = null_glPointParameteriv,
+    .p_glPointParameterivNV = null_glPointParameterivNV,
+    .p_glPointParameterxvOES = null_glPointParameterxvOES,
+    .p_glPointSizexOES = null_glPointSizexOES,
+    .p_glPollAsyncSGIX = null_glPollAsyncSGIX,
+    .p_glPollInstrumentsSGIX = null_glPollInstrumentsSGIX,
+    .p_glPolygonOffsetClamp = null_glPolygonOffsetClamp,
+    .p_glPolygonOffsetClampEXT = null_glPolygonOffsetClampEXT,
+    .p_glPolygonOffsetEXT = null_glPolygonOffsetEXT,
+    .p_glPolygonOffsetxOES = null_glPolygonOffsetxOES,
+    .p_glPopDebugGroup = null_glPopDebugGroup,
+    .p_glPopGroupMarkerEXT = null_glPopGroupMarkerEXT,
+    .p_glPresentFrameDualFillNV = null_glPresentFrameDualFillNV,
+    .p_glPresentFrameKeyedNV = null_glPresentFrameKeyedNV,
+    .p_glPrimitiveBoundingBoxARB = null_glPrimitiveBoundingBoxARB,
+    .p_glPrimitiveRestartIndex = null_glPrimitiveRestartIndex,
+    .p_glPrimitiveRestartIndexNV = null_glPrimitiveRestartIndexNV,
+    .p_glPrimitiveRestartNV = null_glPrimitiveRestartNV,
+    .p_glPrioritizeTexturesEXT = null_glPrioritizeTexturesEXT,
+    .p_glPrioritizeTexturesxOES = null_glPrioritizeTexturesxOES,
+    .p_glProgramBinary = null_glProgramBinary,
+    .p_glProgramBufferParametersIivNV = null_glProgramBufferParametersIivNV,
+    .p_glProgramBufferParametersIuivNV = null_glProgramBufferParametersIuivNV,
+    .p_glProgramBufferParametersfvNV = null_glProgramBufferParametersfvNV,
+    .p_glProgramEnvParameter4dARB = null_glProgramEnvParameter4dARB,
+    .p_glProgramEnvParameter4dvARB = null_glProgramEnvParameter4dvARB,
+    .p_glProgramEnvParameter4fARB = null_glProgramEnvParameter4fARB,
+    .p_glProgramEnvParameter4fvARB = null_glProgramEnvParameter4fvARB,
+    .p_glProgramEnvParameterI4iNV = null_glProgramEnvParameterI4iNV,
+    .p_glProgramEnvParameterI4ivNV = null_glProgramEnvParameterI4ivNV,
+    .p_glProgramEnvParameterI4uiNV = null_glProgramEnvParameterI4uiNV,
+    .p_glProgramEnvParameterI4uivNV = null_glProgramEnvParameterI4uivNV,
+    .p_glProgramEnvParameters4fvEXT = null_glProgramEnvParameters4fvEXT,
+    .p_glProgramEnvParametersI4ivNV = null_glProgramEnvParametersI4ivNV,
+    .p_glProgramEnvParametersI4uivNV = null_glProgramEnvParametersI4uivNV,
+    .p_glProgramLocalParameter4dARB = null_glProgramLocalParameter4dARB,
+    .p_glProgramLocalParameter4dvARB = null_glProgramLocalParameter4dvARB,
+    .p_glProgramLocalParameter4fARB = null_glProgramLocalParameter4fARB,
+    .p_glProgramLocalParameter4fvARB = null_glProgramLocalParameter4fvARB,
+    .p_glProgramLocalParameterI4iNV = null_glProgramLocalParameterI4iNV,
+    .p_glProgramLocalParameterI4ivNV = null_glProgramLocalParameterI4ivNV,
+    .p_glProgramLocalParameterI4uiNV = null_glProgramLocalParameterI4uiNV,
+    .p_glProgramLocalParameterI4uivNV = null_glProgramLocalParameterI4uivNV,
+    .p_glProgramLocalParameters4fvEXT = null_glProgramLocalParameters4fvEXT,
+    .p_glProgramLocalParametersI4ivNV = null_glProgramLocalParametersI4ivNV,
+    .p_glProgramLocalParametersI4uivNV = null_glProgramLocalParametersI4uivNV,
+    .p_glProgramNamedParameter4dNV = null_glProgramNamedParameter4dNV,
+    .p_glProgramNamedParameter4dvNV = null_glProgramNamedParameter4dvNV,
+    .p_glProgramNamedParameter4fNV = null_glProgramNamedParameter4fNV,
+    .p_glProgramNamedParameter4fvNV = null_glProgramNamedParameter4fvNV,
+    .p_glProgramParameter4dNV = null_glProgramParameter4dNV,
+    .p_glProgramParameter4dvNV = null_glProgramParameter4dvNV,
+    .p_glProgramParameter4fNV = null_glProgramParameter4fNV,
+    .p_glProgramParameter4fvNV = null_glProgramParameter4fvNV,
+    .p_glProgramParameteri = null_glProgramParameteri,
+    .p_glProgramParameteriARB = null_glProgramParameteriARB,
+    .p_glProgramParameteriEXT = null_glProgramParameteriEXT,
+    .p_glProgramParameters4dvNV = null_glProgramParameters4dvNV,
+    .p_glProgramParameters4fvNV = null_glProgramParameters4fvNV,
+    .p_glProgramPathFragmentInputGenNV = null_glProgramPathFragmentInputGenNV,
+    .p_glProgramStringARB = null_glProgramStringARB,
+    .p_glProgramSubroutineParametersuivNV = null_glProgramSubroutineParametersuivNV,
+    .p_glProgramUniform1d = null_glProgramUniform1d,
+    .p_glProgramUniform1dEXT = null_glProgramUniform1dEXT,
+    .p_glProgramUniform1dv = null_glProgramUniform1dv,
+    .p_glProgramUniform1dvEXT = null_glProgramUniform1dvEXT,
+    .p_glProgramUniform1f = null_glProgramUniform1f,
+    .p_glProgramUniform1fEXT = null_glProgramUniform1fEXT,
+    .p_glProgramUniform1fv = null_glProgramUniform1fv,
+    .p_glProgramUniform1fvEXT = null_glProgramUniform1fvEXT,
+    .p_glProgramUniform1i = null_glProgramUniform1i,
+    .p_glProgramUniform1i64ARB = null_glProgramUniform1i64ARB,
+    .p_glProgramUniform1i64NV = null_glProgramUniform1i64NV,
+    .p_glProgramUniform1i64vARB = null_glProgramUniform1i64vARB,
+    .p_glProgramUniform1i64vNV = null_glProgramUniform1i64vNV,
+    .p_glProgramUniform1iEXT = null_glProgramUniform1iEXT,
+    .p_glProgramUniform1iv = null_glProgramUniform1iv,
+    .p_glProgramUniform1ivEXT = null_glProgramUniform1ivEXT,
+    .p_glProgramUniform1ui = null_glProgramUniform1ui,
+    .p_glProgramUniform1ui64ARB = null_glProgramUniform1ui64ARB,
+    .p_glProgramUniform1ui64NV = null_glProgramUniform1ui64NV,
+    .p_glProgramUniform1ui64vARB = null_glProgramUniform1ui64vARB,
+    .p_glProgramUniform1ui64vNV = null_glProgramUniform1ui64vNV,
+    .p_glProgramUniform1uiEXT = null_glProgramUniform1uiEXT,
+    .p_glProgramUniform1uiv = null_glProgramUniform1uiv,
+    .p_glProgramUniform1uivEXT = null_glProgramUniform1uivEXT,
+    .p_glProgramUniform2d = null_glProgramUniform2d,
+    .p_glProgramUniform2dEXT = null_glProgramUniform2dEXT,
+    .p_glProgramUniform2dv = null_glProgramUniform2dv,
+    .p_glProgramUniform2dvEXT = null_glProgramUniform2dvEXT,
+    .p_glProgramUniform2f = null_glProgramUniform2f,
+    .p_glProgramUniform2fEXT = null_glProgramUniform2fEXT,
+    .p_glProgramUniform2fv = null_glProgramUniform2fv,
+    .p_glProgramUniform2fvEXT = null_glProgramUniform2fvEXT,
+    .p_glProgramUniform2i = null_glProgramUniform2i,
+    .p_glProgramUniform2i64ARB = null_glProgramUniform2i64ARB,
+    .p_glProgramUniform2i64NV = null_glProgramUniform2i64NV,
+    .p_glProgramUniform2i64vARB = null_glProgramUniform2i64vARB,
+    .p_glProgramUniform2i64vNV = null_glProgramUniform2i64vNV,
+    .p_glProgramUniform2iEXT = null_glProgramUniform2iEXT,
+    .p_glProgramUniform2iv = null_glProgramUniform2iv,
+    .p_glProgramUniform2ivEXT = null_glProgramUniform2ivEXT,
+    .p_glProgramUniform2ui = null_glProgramUniform2ui,
+    .p_glProgramUniform2ui64ARB = null_glProgramUniform2ui64ARB,
+    .p_glProgramUniform2ui64NV = null_glProgramUniform2ui64NV,
+    .p_glProgramUniform2ui64vARB = null_glProgramUniform2ui64vARB,
+    .p_glProgramUniform2ui64vNV = null_glProgramUniform2ui64vNV,
+    .p_glProgramUniform2uiEXT = null_glProgramUniform2uiEXT,
+    .p_glProgramUniform2uiv = null_glProgramUniform2uiv,
+    .p_glProgramUniform2uivEXT = null_glProgramUniform2uivEXT,
+    .p_glProgramUniform3d = null_glProgramUniform3d,
+    .p_glProgramUniform3dEXT = null_glProgramUniform3dEXT,
+    .p_glProgramUniform3dv = null_glProgramUniform3dv,
+    .p_glProgramUniform3dvEXT = null_glProgramUniform3dvEXT,
+    .p_glProgramUniform3f = null_glProgramUniform3f,
+    .p_glProgramUniform3fEXT = null_glProgramUniform3fEXT,
+    .p_glProgramUniform3fv = null_glProgramUniform3fv,
+    .p_glProgramUniform3fvEXT = null_glProgramUniform3fvEXT,
+    .p_glProgramUniform3i = null_glProgramUniform3i,
+    .p_glProgramUniform3i64ARB = null_glProgramUniform3i64ARB,
+    .p_glProgramUniform3i64NV = null_glProgramUniform3i64NV,
+    .p_glProgramUniform3i64vARB = null_glProgramUniform3i64vARB,
+    .p_glProgramUniform3i64vNV = null_glProgramUniform3i64vNV,
+    .p_glProgramUniform3iEXT = null_glProgramUniform3iEXT,
+    .p_glProgramUniform3iv = null_glProgramUniform3iv,
+    .p_glProgramUniform3ivEXT = null_glProgramUniform3ivEXT,
+    .p_glProgramUniform3ui = null_glProgramUniform3ui,
+    .p_glProgramUniform3ui64ARB = null_glProgramUniform3ui64ARB,
+    .p_glProgramUniform3ui64NV = null_glProgramUniform3ui64NV,
+    .p_glProgramUniform3ui64vARB = null_glProgramUniform3ui64vARB,
+    .p_glProgramUniform3ui64vNV = null_glProgramUniform3ui64vNV,
+    .p_glProgramUniform3uiEXT = null_glProgramUniform3uiEXT,
+    .p_glProgramUniform3uiv = null_glProgramUniform3uiv,
+    .p_glProgramUniform3uivEXT = null_glProgramUniform3uivEXT,
+    .p_glProgramUniform4d = null_glProgramUniform4d,
+    .p_glProgramUniform4dEXT = null_glProgramUniform4dEXT,
+    .p_glProgramUniform4dv = null_glProgramUniform4dv,
+    .p_glProgramUniform4dvEXT = null_glProgramUniform4dvEXT,
+    .p_glProgramUniform4f = null_glProgramUniform4f,
+    .p_glProgramUniform4fEXT = null_glProgramUniform4fEXT,
+    .p_glProgramUniform4fv = null_glProgramUniform4fv,
+    .p_glProgramUniform4fvEXT = null_glProgramUniform4fvEXT,
+    .p_glProgramUniform4i = null_glProgramUniform4i,
+    .p_glProgramUniform4i64ARB = null_glProgramUniform4i64ARB,
+    .p_glProgramUniform4i64NV = null_glProgramUniform4i64NV,
+    .p_glProgramUniform4i64vARB = null_glProgramUniform4i64vARB,
+    .p_glProgramUniform4i64vNV = null_glProgramUniform4i64vNV,
+    .p_glProgramUniform4iEXT = null_glProgramUniform4iEXT,
+    .p_glProgramUniform4iv = null_glProgramUniform4iv,
+    .p_glProgramUniform4ivEXT = null_glProgramUniform4ivEXT,
+    .p_glProgramUniform4ui = null_glProgramUniform4ui,
+    .p_glProgramUniform4ui64ARB = null_glProgramUniform4ui64ARB,
+    .p_glProgramUniform4ui64NV = null_glProgramUniform4ui64NV,
+    .p_glProgramUniform4ui64vARB = null_glProgramUniform4ui64vARB,
+    .p_glProgramUniform4ui64vNV = null_glProgramUniform4ui64vNV,
+    .p_glProgramUniform4uiEXT = null_glProgramUniform4uiEXT,
+    .p_glProgramUniform4uiv = null_glProgramUniform4uiv,
+    .p_glProgramUniform4uivEXT = null_glProgramUniform4uivEXT,
+    .p_glProgramUniformHandleui64ARB = null_glProgramUniformHandleui64ARB,
+    .p_glProgramUniformHandleui64NV = null_glProgramUniformHandleui64NV,
+    .p_glProgramUniformHandleui64vARB = null_glProgramUniformHandleui64vARB,
+    .p_glProgramUniformHandleui64vNV = null_glProgramUniformHandleui64vNV,
+    .p_glProgramUniformMatrix2dv = null_glProgramUniformMatrix2dv,
+    .p_glProgramUniformMatrix2dvEXT = null_glProgramUniformMatrix2dvEXT,
+    .p_glProgramUniformMatrix2fv = null_glProgramUniformMatrix2fv,
+    .p_glProgramUniformMatrix2fvEXT = null_glProgramUniformMatrix2fvEXT,
+    .p_glProgramUniformMatrix2x3dv = null_glProgramUniformMatrix2x3dv,
+    .p_glProgramUniformMatrix2x3dvEXT = null_glProgramUniformMatrix2x3dvEXT,
+    .p_glProgramUniformMatrix2x3fv = null_glProgramUniformMatrix2x3fv,
+    .p_glProgramUniformMatrix2x3fvEXT = null_glProgramUniformMatrix2x3fvEXT,
+    .p_glProgramUniformMatrix2x4dv = null_glProgramUniformMatrix2x4dv,
+    .p_glProgramUniformMatrix2x4dvEXT = null_glProgramUniformMatrix2x4dvEXT,
+    .p_glProgramUniformMatrix2x4fv = null_glProgramUniformMatrix2x4fv,
+    .p_glProgramUniformMatrix2x4fvEXT = null_glProgramUniformMatrix2x4fvEXT,
+    .p_glProgramUniformMatrix3dv = null_glProgramUniformMatrix3dv,
+    .p_glProgramUniformMatrix3dvEXT = null_glProgramUniformMatrix3dvEXT,
+    .p_glProgramUniformMatrix3fv = null_glProgramUniformMatrix3fv,
+    .p_glProgramUniformMatrix3fvEXT = null_glProgramUniformMatrix3fvEXT,
+    .p_glProgramUniformMatrix3x2dv = null_glProgramUniformMatrix3x2dv,
+    .p_glProgramUniformMatrix3x2dvEXT = null_glProgramUniformMatrix3x2dvEXT,
+    .p_glProgramUniformMatrix3x2fv = null_glProgramUniformMatrix3x2fv,
+    .p_glProgramUniformMatrix3x2fvEXT = null_glProgramUniformMatrix3x2fvEXT,
+    .p_glProgramUniformMatrix3x4dv = null_glProgramUniformMatrix3x4dv,
+    .p_glProgramUniformMatrix3x4dvEXT = null_glProgramUniformMatrix3x4dvEXT,
+    .p_glProgramUniformMatrix3x4fv = null_glProgramUniformMatrix3x4fv,
+    .p_glProgramUniformMatrix3x4fvEXT = null_glProgramUniformMatrix3x4fvEXT,
+    .p_glProgramUniformMatrix4dv = null_glProgramUniformMatrix4dv,
+    .p_glProgramUniformMatrix4dvEXT = null_glProgramUniformMatrix4dvEXT,
+    .p_glProgramUniformMatrix4fv = null_glProgramUniformMatrix4fv,
+    .p_glProgramUniformMatrix4fvEXT = null_glProgramUniformMatrix4fvEXT,
+    .p_glProgramUniformMatrix4x2dv = null_glProgramUniformMatrix4x2dv,
+    .p_glProgramUniformMatrix4x2dvEXT = null_glProgramUniformMatrix4x2dvEXT,
+    .p_glProgramUniformMatrix4x2fv = null_glProgramUniformMatrix4x2fv,
+    .p_glProgramUniformMatrix4x2fvEXT = null_glProgramUniformMatrix4x2fvEXT,
+    .p_glProgramUniformMatrix4x3dv = null_glProgramUniformMatrix4x3dv,
+    .p_glProgramUniformMatrix4x3dvEXT = null_glProgramUniformMatrix4x3dvEXT,
+    .p_glProgramUniformMatrix4x3fv = null_glProgramUniformMatrix4x3fv,
+    .p_glProgramUniformMatrix4x3fvEXT = null_glProgramUniformMatrix4x3fvEXT,
+    .p_glProgramUniformui64NV = null_glProgramUniformui64NV,
+    .p_glProgramUniformui64vNV = null_glProgramUniformui64vNV,
+    .p_glProgramVertexLimitNV = null_glProgramVertexLimitNV,
+    .p_glProvokingVertex = null_glProvokingVertex,
+    .p_glProvokingVertexEXT = null_glProvokingVertexEXT,
+    .p_glPushClientAttribDefaultEXT = null_glPushClientAttribDefaultEXT,
+    .p_glPushDebugGroup = null_glPushDebugGroup,
+    .p_glPushGroupMarkerEXT = null_glPushGroupMarkerEXT,
+    .p_glQueryCounter = null_glQueryCounter,
+    .p_glQueryMatrixxOES = null_glQueryMatrixxOES,
+    .p_glQueryObjectParameteruiAMD = null_glQueryObjectParameteruiAMD,
+    .p_glQueryResourceNV = null_glQueryResourceNV,
+    .p_glQueryResourceTagNV = null_glQueryResourceTagNV,
+    .p_glRasterPos2xOES = null_glRasterPos2xOES,
+    .p_glRasterPos2xvOES = null_glRasterPos2xvOES,
+    .p_glRasterPos3xOES = null_glRasterPos3xOES,
+    .p_glRasterPos3xvOES = null_glRasterPos3xvOES,
+    .p_glRasterPos4xOES = null_glRasterPos4xOES,
+    .p_glRasterPos4xvOES = null_glRasterPos4xvOES,
+    .p_glRasterSamplesEXT = null_glRasterSamplesEXT,
+    .p_glReadBufferRegion = null_glReadBufferRegion,
+    .p_glReadInstrumentsSGIX = null_glReadInstrumentsSGIX,
+    .p_glReadnPixels = null_glReadnPixels,
+    .p_glReadnPixelsARB = null_glReadnPixelsARB,
+    .p_glRectxOES = null_glRectxOES,
+    .p_glRectxvOES = null_glRectxvOES,
+    .p_glReferencePlaneSGIX = null_glReferencePlaneSGIX,
+    .p_glReleaseKeyedMutexWin32EXT = null_glReleaseKeyedMutexWin32EXT,
+    .p_glReleaseShaderCompiler = null_glReleaseShaderCompiler,
+    .p_glRenderGpuMaskNV = null_glRenderGpuMaskNV,
+    .p_glRenderbufferStorage = null_glRenderbufferStorage,
+    .p_glRenderbufferStorageEXT = null_glRenderbufferStorageEXT,
+    .p_glRenderbufferStorageMultisample = null_glRenderbufferStorageMultisample,
+    .p_glRenderbufferStorageMultisampleAdvancedAMD = null_glRenderbufferStorageMultisampleAdvancedAMD,
+    .p_glRenderbufferStorageMultisampleCoverageNV = null_glRenderbufferStorageMultisampleCoverageNV,
+    .p_glRenderbufferStorageMultisampleEXT = null_glRenderbufferStorageMultisampleEXT,
+    .p_glReplacementCodePointerSUN = null_glReplacementCodePointerSUN,
+    .p_glReplacementCodeubSUN = null_glReplacementCodeubSUN,
+    .p_glReplacementCodeubvSUN = null_glReplacementCodeubvSUN,
+    .p_glReplacementCodeuiColor3fVertex3fSUN = null_glReplacementCodeuiColor3fVertex3fSUN,
+    .p_glReplacementCodeuiColor3fVertex3fvSUN = null_glReplacementCodeuiColor3fVertex3fvSUN,
+    .p_glReplacementCodeuiColor4fNormal3fVertex3fSUN = null_glReplacementCodeuiColor4fNormal3fVertex3fSUN,
+    .p_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = null_glReplacementCodeuiColor4fNormal3fVertex3fvSUN,
+    .p_glReplacementCodeuiColor4ubVertex3fSUN = null_glReplacementCodeuiColor4ubVertex3fSUN,
+    .p_glReplacementCodeuiColor4ubVertex3fvSUN = null_glReplacementCodeuiColor4ubVertex3fvSUN,
+    .p_glReplacementCodeuiNormal3fVertex3fSUN = null_glReplacementCodeuiNormal3fVertex3fSUN,
+    .p_glReplacementCodeuiNormal3fVertex3fvSUN = null_glReplacementCodeuiNormal3fVertex3fvSUN,
+    .p_glReplacementCodeuiSUN = null_glReplacementCodeuiSUN,
+    .p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = null_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN,
+    .p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = null_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN,
+    .p_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = null_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN,
+    .p_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = null_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN,
+    .p_glReplacementCodeuiTexCoord2fVertex3fSUN = null_glReplacementCodeuiTexCoord2fVertex3fSUN,
+    .p_glReplacementCodeuiTexCoord2fVertex3fvSUN = null_glReplacementCodeuiTexCoord2fVertex3fvSUN,
+    .p_glReplacementCodeuiVertex3fSUN = null_glReplacementCodeuiVertex3fSUN,
+    .p_glReplacementCodeuiVertex3fvSUN = null_glReplacementCodeuiVertex3fvSUN,
+    .p_glReplacementCodeuivSUN = null_glReplacementCodeuivSUN,
+    .p_glReplacementCodeusSUN = null_glReplacementCodeusSUN,
+    .p_glReplacementCodeusvSUN = null_glReplacementCodeusvSUN,
+    .p_glRequestResidentProgramsNV = null_glRequestResidentProgramsNV,
+    .p_glResetHistogram = null_glResetHistogram,
+    .p_glResetHistogramEXT = null_glResetHistogramEXT,
+    .p_glResetMemoryObjectParameterNV = null_glResetMemoryObjectParameterNV,
+    .p_glResetMinmax = null_glResetMinmax,
+    .p_glResetMinmaxEXT = null_glResetMinmaxEXT,
+    .p_glResizeBuffersMESA = null_glResizeBuffersMESA,
+    .p_glResolveDepthValuesNV = null_glResolveDepthValuesNV,
+    .p_glResumeTransformFeedback = null_glResumeTransformFeedback,
+    .p_glResumeTransformFeedbackNV = null_glResumeTransformFeedbackNV,
+    .p_glRotatexOES = null_glRotatexOES,
+    .p_glSampleCoverage = null_glSampleCoverage,
+    .p_glSampleCoverageARB = null_glSampleCoverageARB,
+    .p_glSampleMapATI = null_glSampleMapATI,
+    .p_glSampleMaskEXT = null_glSampleMaskEXT,
+    .p_glSampleMaskIndexedNV = null_glSampleMaskIndexedNV,
+    .p_glSampleMaskSGIS = null_glSampleMaskSGIS,
+    .p_glSampleMaski = null_glSampleMaski,
+    .p_glSamplePatternEXT = null_glSamplePatternEXT,
+    .p_glSamplePatternSGIS = null_glSamplePatternSGIS,
+    .p_glSamplerParameterIiv = null_glSamplerParameterIiv,
+    .p_glSamplerParameterIuiv = null_glSamplerParameterIuiv,
+    .p_glSamplerParameterf = null_glSamplerParameterf,
+    .p_glSamplerParameterfv = null_glSamplerParameterfv,
+    .p_glSamplerParameteri = null_glSamplerParameteri,
+    .p_glSamplerParameteriv = null_glSamplerParameteriv,
+    .p_glScalexOES = null_glScalexOES,
+    .p_glScissorArrayv = null_glScissorArrayv,
+    .p_glScissorExclusiveArrayvNV = null_glScissorExclusiveArrayvNV,
+    .p_glScissorExclusiveNV = null_glScissorExclusiveNV,
+    .p_glScissorIndexed = null_glScissorIndexed,
+    .p_glScissorIndexedv = null_glScissorIndexedv,
+    .p_glSecondaryColor3b = null_glSecondaryColor3b,
+    .p_glSecondaryColor3bEXT = null_glSecondaryColor3bEXT,
+    .p_glSecondaryColor3bv = null_glSecondaryColor3bv,
+    .p_glSecondaryColor3bvEXT = null_glSecondaryColor3bvEXT,
+    .p_glSecondaryColor3d = null_glSecondaryColor3d,
+    .p_glSecondaryColor3dEXT = null_glSecondaryColor3dEXT,
+    .p_glSecondaryColor3dv = null_glSecondaryColor3dv,
+    .p_glSecondaryColor3dvEXT = null_glSecondaryColor3dvEXT,
+    .p_glSecondaryColor3f = null_glSecondaryColor3f,
+    .p_glSecondaryColor3fEXT = null_glSecondaryColor3fEXT,
+    .p_glSecondaryColor3fv = null_glSecondaryColor3fv,
+    .p_glSecondaryColor3fvEXT = null_glSecondaryColor3fvEXT,
+    .p_glSecondaryColor3hNV = null_glSecondaryColor3hNV,
+    .p_glSecondaryColor3hvNV = null_glSecondaryColor3hvNV,
+    .p_glSecondaryColor3i = null_glSecondaryColor3i,
+    .p_glSecondaryColor3iEXT = null_glSecondaryColor3iEXT,
+    .p_glSecondaryColor3iv = null_glSecondaryColor3iv,
+    .p_glSecondaryColor3ivEXT = null_glSecondaryColor3ivEXT,
+    .p_glSecondaryColor3s = null_glSecondaryColor3s,
+    .p_glSecondaryColor3sEXT = null_glSecondaryColor3sEXT,
+    .p_glSecondaryColor3sv = null_glSecondaryColor3sv,
+    .p_glSecondaryColor3svEXT = null_glSecondaryColor3svEXT,
+    .p_glSecondaryColor3ub = null_glSecondaryColor3ub,
+    .p_glSecondaryColor3ubEXT = null_glSecondaryColor3ubEXT,
+    .p_glSecondaryColor3ubv = null_glSecondaryColor3ubv,
+    .p_glSecondaryColor3ubvEXT = null_glSecondaryColor3ubvEXT,
+    .p_glSecondaryColor3ui = null_glSecondaryColor3ui,
+    .p_glSecondaryColor3uiEXT = null_glSecondaryColor3uiEXT,
+    .p_glSecondaryColor3uiv = null_glSecondaryColor3uiv,
+    .p_glSecondaryColor3uivEXT = null_glSecondaryColor3uivEXT,
+    .p_glSecondaryColor3us = null_glSecondaryColor3us,
+    .p_glSecondaryColor3usEXT = null_glSecondaryColor3usEXT,
+    .p_glSecondaryColor3usv = null_glSecondaryColor3usv,
+    .p_glSecondaryColor3usvEXT = null_glSecondaryColor3usvEXT,
+    .p_glSecondaryColorFormatNV = null_glSecondaryColorFormatNV,
+    .p_glSecondaryColorP3ui = null_glSecondaryColorP3ui,
+    .p_glSecondaryColorP3uiv = null_glSecondaryColorP3uiv,
+    .p_glSecondaryColorPointer = null_glSecondaryColorPointer,
+    .p_glSecondaryColorPointerEXT = null_glSecondaryColorPointerEXT,
+    .p_glSecondaryColorPointerListIBM = null_glSecondaryColorPointerListIBM,
+    .p_glSelectPerfMonitorCountersAMD = null_glSelectPerfMonitorCountersAMD,
+    .p_glSelectTextureCoordSetSGIS = null_glSelectTextureCoordSetSGIS,
+    .p_glSelectTextureSGIS = null_glSelectTextureSGIS,
+    .p_glSemaphoreParameterui64vEXT = null_glSemaphoreParameterui64vEXT,
+    .p_glSeparableFilter2D = null_glSeparableFilter2D,
+    .p_glSeparableFilter2DEXT = null_glSeparableFilter2DEXT,
+    .p_glSetFenceAPPLE = null_glSetFenceAPPLE,
+    .p_glSetFenceNV = null_glSetFenceNV,
+    .p_glSetFragmentShaderConstantATI = null_glSetFragmentShaderConstantATI,
+    .p_glSetInvariantEXT = null_glSetInvariantEXT,
+    .p_glSetLocalConstantEXT = null_glSetLocalConstantEXT,
+    .p_glSetMultisamplefvAMD = null_glSetMultisamplefvAMD,
+    .p_glShaderBinary = null_glShaderBinary,
+    .p_glShaderOp1EXT = null_glShaderOp1EXT,
+    .p_glShaderOp2EXT = null_glShaderOp2EXT,
+    .p_glShaderOp3EXT = null_glShaderOp3EXT,
+    .p_glShaderSource = null_glShaderSource,
+    .p_glShaderSourceARB = null_glShaderSourceARB,
+    .p_glShaderStorageBlockBinding = null_glShaderStorageBlockBinding,
+    .p_glShadingRateImageBarrierNV = null_glShadingRateImageBarrierNV,
+    .p_glShadingRateImagePaletteNV = null_glShadingRateImagePaletteNV,
+    .p_glShadingRateSampleOrderCustomNV = null_glShadingRateSampleOrderCustomNV,
+    .p_glShadingRateSampleOrderNV = null_glShadingRateSampleOrderNV,
+    .p_glSharpenTexFuncSGIS = null_glSharpenTexFuncSGIS,
+    .p_glSignalSemaphoreEXT = null_glSignalSemaphoreEXT,
+    .p_glSignalSemaphoreui64NVX = null_glSignalSemaphoreui64NVX,
+    .p_glSignalVkFenceNV = null_glSignalVkFenceNV,
+    .p_glSignalVkSemaphoreNV = null_glSignalVkSemaphoreNV,
+    .p_glSpecializeShader = null_glSpecializeShader,
+    .p_glSpecializeShaderARB = null_glSpecializeShaderARB,
+    .p_glSpriteParameterfSGIX = null_glSpriteParameterfSGIX,
+    .p_glSpriteParameterfvSGIX = null_glSpriteParameterfvSGIX,
+    .p_glSpriteParameteriSGIX = null_glSpriteParameteriSGIX,
+    .p_glSpriteParameterivSGIX = null_glSpriteParameterivSGIX,
+    .p_glStartInstrumentsSGIX = null_glStartInstrumentsSGIX,
+    .p_glStateCaptureNV = null_glStateCaptureNV,
+    .p_glStencilClearTagEXT = null_glStencilClearTagEXT,
+    .p_glStencilFillPathInstancedNV = null_glStencilFillPathInstancedNV,
+    .p_glStencilFillPathNV = null_glStencilFillPathNV,
+    .p_glStencilFuncSeparate = null_glStencilFuncSeparate,
+    .p_glStencilFuncSeparateATI = null_glStencilFuncSeparateATI,
+    .p_glStencilMaskSeparate = null_glStencilMaskSeparate,
+    .p_glStencilOpSeparate = null_glStencilOpSeparate,
+    .p_glStencilOpSeparateATI = null_glStencilOpSeparateATI,
+    .p_glStencilOpValueAMD = null_glStencilOpValueAMD,
+    .p_glStencilStrokePathInstancedNV = null_glStencilStrokePathInstancedNV,
+    .p_glStencilStrokePathNV = null_glStencilStrokePathNV,
+    .p_glStencilThenCoverFillPathInstancedNV = null_glStencilThenCoverFillPathInstancedNV,
+    .p_glStencilThenCoverFillPathNV = null_glStencilThenCoverFillPathNV,
+    .p_glStencilThenCoverStrokePathInstancedNV = null_glStencilThenCoverStrokePathInstancedNV,
+    .p_glStencilThenCoverStrokePathNV = null_glStencilThenCoverStrokePathNV,
+    .p_glStopInstrumentsSGIX = null_glStopInstrumentsSGIX,
+    .p_glStringMarkerGREMEDY = null_glStringMarkerGREMEDY,
+    .p_glSubpixelPrecisionBiasNV = null_glSubpixelPrecisionBiasNV,
+    .p_glSwizzleEXT = null_glSwizzleEXT,
+    .p_glSyncTextureINTEL = null_glSyncTextureINTEL,
+    .p_glTagSampleBufferSGIX = null_glTagSampleBufferSGIX,
+    .p_glTangent3bEXT = null_glTangent3bEXT,
+    .p_glTangent3bvEXT = null_glTangent3bvEXT,
+    .p_glTangent3dEXT = null_glTangent3dEXT,
+    .p_glTangent3dvEXT = null_glTangent3dvEXT,
+    .p_glTangent3fEXT = null_glTangent3fEXT,
+    .p_glTangent3fvEXT = null_glTangent3fvEXT,
+    .p_glTangent3iEXT = null_glTangent3iEXT,
+    .p_glTangent3ivEXT = null_glTangent3ivEXT,
+    .p_glTangent3sEXT = null_glTangent3sEXT,
+    .p_glTangent3svEXT = null_glTangent3svEXT,
+    .p_glTangentPointerEXT = null_glTangentPointerEXT,
+    .p_glTbufferMask3DFX = null_glTbufferMask3DFX,
+    .p_glTessellationFactorAMD = null_glTessellationFactorAMD,
+    .p_glTessellationModeAMD = null_glTessellationModeAMD,
+    .p_glTestFenceAPPLE = null_glTestFenceAPPLE,
+    .p_glTestFenceNV = null_glTestFenceNV,
+    .p_glTestObjectAPPLE = null_glTestObjectAPPLE,
+    .p_glTexAttachMemoryNV = null_glTexAttachMemoryNV,
+    .p_glTexBuffer = null_glTexBuffer,
+    .p_glTexBufferARB = null_glTexBufferARB,
+    .p_glTexBufferEXT = null_glTexBufferEXT,
+    .p_glTexBufferRange = null_glTexBufferRange,
+    .p_glTexBumpParameterfvATI = null_glTexBumpParameterfvATI,
+    .p_glTexBumpParameterivATI = null_glTexBumpParameterivATI,
+    .p_glTexCoord1bOES = null_glTexCoord1bOES,
+    .p_glTexCoord1bvOES = null_glTexCoord1bvOES,
+    .p_glTexCoord1hNV = null_glTexCoord1hNV,
+    .p_glTexCoord1hvNV = null_glTexCoord1hvNV,
+    .p_glTexCoord1xOES = null_glTexCoord1xOES,
+    .p_glTexCoord1xvOES = null_glTexCoord1xvOES,
+    .p_glTexCoord2bOES = null_glTexCoord2bOES,
+    .p_glTexCoord2bvOES = null_glTexCoord2bvOES,
+    .p_glTexCoord2fColor3fVertex3fSUN = null_glTexCoord2fColor3fVertex3fSUN,
+    .p_glTexCoord2fColor3fVertex3fvSUN = null_glTexCoord2fColor3fVertex3fvSUN,
+    .p_glTexCoord2fColor4fNormal3fVertex3fSUN = null_glTexCoord2fColor4fNormal3fVertex3fSUN,
+    .p_glTexCoord2fColor4fNormal3fVertex3fvSUN = null_glTexCoord2fColor4fNormal3fVertex3fvSUN,
+    .p_glTexCoord2fColor4ubVertex3fSUN = null_glTexCoord2fColor4ubVertex3fSUN,
+    .p_glTexCoord2fColor4ubVertex3fvSUN = null_glTexCoord2fColor4ubVertex3fvSUN,
+    .p_glTexCoord2fNormal3fVertex3fSUN = null_glTexCoord2fNormal3fVertex3fSUN,
+    .p_glTexCoord2fNormal3fVertex3fvSUN = null_glTexCoord2fNormal3fVertex3fvSUN,
+    .p_glTexCoord2fVertex3fSUN = null_glTexCoord2fVertex3fSUN,
+    .p_glTexCoord2fVertex3fvSUN = null_glTexCoord2fVertex3fvSUN,
+    .p_glTexCoord2hNV = null_glTexCoord2hNV,
+    .p_glTexCoord2hvNV = null_glTexCoord2hvNV,
+    .p_glTexCoord2xOES = null_glTexCoord2xOES,
+    .p_glTexCoord2xvOES = null_glTexCoord2xvOES,
+    .p_glTexCoord3bOES = null_glTexCoord3bOES,
+    .p_glTexCoord3bvOES = null_glTexCoord3bvOES,
+    .p_glTexCoord3hNV = null_glTexCoord3hNV,
+    .p_glTexCoord3hvNV = null_glTexCoord3hvNV,
+    .p_glTexCoord3xOES = null_glTexCoord3xOES,
+    .p_glTexCoord3xvOES = null_glTexCoord3xvOES,
+    .p_glTexCoord4bOES = null_glTexCoord4bOES,
+    .p_glTexCoord4bvOES = null_glTexCoord4bvOES,
+    .p_glTexCoord4fColor4fNormal3fVertex4fSUN = null_glTexCoord4fColor4fNormal3fVertex4fSUN,
+    .p_glTexCoord4fColor4fNormal3fVertex4fvSUN = null_glTexCoord4fColor4fNormal3fVertex4fvSUN,
+    .p_glTexCoord4fVertex4fSUN = null_glTexCoord4fVertex4fSUN,
+    .p_glTexCoord4fVertex4fvSUN = null_glTexCoord4fVertex4fvSUN,
+    .p_glTexCoord4hNV = null_glTexCoord4hNV,
+    .p_glTexCoord4hvNV = null_glTexCoord4hvNV,
+    .p_glTexCoord4xOES = null_glTexCoord4xOES,
+    .p_glTexCoord4xvOES = null_glTexCoord4xvOES,
+    .p_glTexCoordFormatNV = null_glTexCoordFormatNV,
+    .p_glTexCoordP1ui = null_glTexCoordP1ui,
+    .p_glTexCoordP1uiv = null_glTexCoordP1uiv,
+    .p_glTexCoordP2ui = null_glTexCoordP2ui,
+    .p_glTexCoordP2uiv = null_glTexCoordP2uiv,
+    .p_glTexCoordP3ui = null_glTexCoordP3ui,
+    .p_glTexCoordP3uiv = null_glTexCoordP3uiv,
+    .p_glTexCoordP4ui = null_glTexCoordP4ui,
+    .p_glTexCoordP4uiv = null_glTexCoordP4uiv,
+    .p_glTexCoordPointerEXT = null_glTexCoordPointerEXT,
+    .p_glTexCoordPointerListIBM = null_glTexCoordPointerListIBM,
+    .p_glTexCoordPointervINTEL = null_glTexCoordPointervINTEL,
+    .p_glTexEnvxOES = null_glTexEnvxOES,
+    .p_glTexEnvxvOES = null_glTexEnvxvOES,
+    .p_glTexFilterFuncSGIS = null_glTexFilterFuncSGIS,
+    .p_glTexGenxOES = null_glTexGenxOES,
+    .p_glTexGenxvOES = null_glTexGenxvOES,
+    .p_glTexImage2DMultisample = null_glTexImage2DMultisample,
+    .p_glTexImage2DMultisampleCoverageNV = null_glTexImage2DMultisampleCoverageNV,
+    .p_glTexImage3D = null_glTexImage3D,
+    .p_glTexImage3DEXT = null_glTexImage3DEXT,
+    .p_glTexImage3DMultisample = null_glTexImage3DMultisample,
+    .p_glTexImage3DMultisampleCoverageNV = null_glTexImage3DMultisampleCoverageNV,
+    .p_glTexImage4DSGIS = null_glTexImage4DSGIS,
+    .p_glTexPageCommitmentARB = null_glTexPageCommitmentARB,
+    .p_glTexParameterIiv = null_glTexParameterIiv,
+    .p_glTexParameterIivEXT = null_glTexParameterIivEXT,
+    .p_glTexParameterIuiv = null_glTexParameterIuiv,
+    .p_glTexParameterIuivEXT = null_glTexParameterIuivEXT,
+    .p_glTexParameterxOES = null_glTexParameterxOES,
+    .p_glTexParameterxvOES = null_glTexParameterxvOES,
+    .p_glTexRenderbufferNV = null_glTexRenderbufferNV,
+    .p_glTexStorage1D = null_glTexStorage1D,
+    .p_glTexStorage2D = null_glTexStorage2D,
+    .p_glTexStorage2DMultisample = null_glTexStorage2DMultisample,
+    .p_glTexStorage3D = null_glTexStorage3D,
+    .p_glTexStorage3DMultisample = null_glTexStorage3DMultisample,
+    .p_glTexStorageMem1DEXT = null_glTexStorageMem1DEXT,
+    .p_glTexStorageMem2DEXT = null_glTexStorageMem2DEXT,
+    .p_glTexStorageMem2DMultisampleEXT = null_glTexStorageMem2DMultisampleEXT,
+    .p_glTexStorageMem3DEXT = null_glTexStorageMem3DEXT,
+    .p_glTexStorageMem3DMultisampleEXT = null_glTexStorageMem3DMultisampleEXT,
+    .p_glTexStorageSparseAMD = null_glTexStorageSparseAMD,
+    .p_glTexSubImage1DEXT = null_glTexSubImage1DEXT,
+    .p_glTexSubImage2DEXT = null_glTexSubImage2DEXT,
+    .p_glTexSubImage3D = null_glTexSubImage3D,
+    .p_glTexSubImage3DEXT = null_glTexSubImage3DEXT,
+    .p_glTexSubImage4DSGIS = null_glTexSubImage4DSGIS,
+    .p_glTextureAttachMemoryNV = null_glTextureAttachMemoryNV,
+    .p_glTextureBarrier = null_glTextureBarrier,
+    .p_glTextureBarrierNV = null_glTextureBarrierNV,
+    .p_glTextureBuffer = null_glTextureBuffer,
+    .p_glTextureBufferEXT = null_glTextureBufferEXT,
+    .p_glTextureBufferRange = null_glTextureBufferRange,
+    .p_glTextureBufferRangeEXT = null_glTextureBufferRangeEXT,
+    .p_glTextureColorMaskSGIS = null_glTextureColorMaskSGIS,
+    .p_glTextureImage1DEXT = null_glTextureImage1DEXT,
+    .p_glTextureImage2DEXT = null_glTextureImage2DEXT,
+    .p_glTextureImage2DMultisampleCoverageNV = null_glTextureImage2DMultisampleCoverageNV,
+    .p_glTextureImage2DMultisampleNV = null_glTextureImage2DMultisampleNV,
+    .p_glTextureImage3DEXT = null_glTextureImage3DEXT,
+    .p_glTextureImage3DMultisampleCoverageNV = null_glTextureImage3DMultisampleCoverageNV,
+    .p_glTextureImage3DMultisampleNV = null_glTextureImage3DMultisampleNV,
+    .p_glTextureLightEXT = null_glTextureLightEXT,
+    .p_glTextureMaterialEXT = null_glTextureMaterialEXT,
+    .p_glTextureNormalEXT = null_glTextureNormalEXT,
+    .p_glTexturePageCommitmentEXT = null_glTexturePageCommitmentEXT,
+    .p_glTextureParameterIiv = null_glTextureParameterIiv,
+    .p_glTextureParameterIivEXT = null_glTextureParameterIivEXT,
+    .p_glTextureParameterIuiv = null_glTextureParameterIuiv,
+    .p_glTextureParameterIuivEXT = null_glTextureParameterIuivEXT,
+    .p_glTextureParameterf = null_glTextureParameterf,
+    .p_glTextureParameterfEXT = null_glTextureParameterfEXT,
+    .p_glTextureParameterfv = null_glTextureParameterfv,
+    .p_glTextureParameterfvEXT = null_glTextureParameterfvEXT,
+    .p_glTextureParameteri = null_glTextureParameteri,
+    .p_glTextureParameteriEXT = null_glTextureParameteriEXT,
+    .p_glTextureParameteriv = null_glTextureParameteriv,
+    .p_glTextureParameterivEXT = null_glTextureParameterivEXT,
+    .p_glTextureRangeAPPLE = null_glTextureRangeAPPLE,
+    .p_glTextureRenderbufferEXT = null_glTextureRenderbufferEXT,
+    .p_glTextureStorage1D = null_glTextureStorage1D,
+    .p_glTextureStorage1DEXT = null_glTextureStorage1DEXT,
+    .p_glTextureStorage2D = null_glTextureStorage2D,
+    .p_glTextureStorage2DEXT = null_glTextureStorage2DEXT,
+    .p_glTextureStorage2DMultisample = null_glTextureStorage2DMultisample,
+    .p_glTextureStorage2DMultisampleEXT = null_glTextureStorage2DMultisampleEXT,
+    .p_glTextureStorage3D = null_glTextureStorage3D,
+    .p_glTextureStorage3DEXT = null_glTextureStorage3DEXT,
+    .p_glTextureStorage3DMultisample = null_glTextureStorage3DMultisample,
+    .p_glTextureStorage3DMultisampleEXT = null_glTextureStorage3DMultisampleEXT,
+    .p_glTextureStorageMem1DEXT = null_glTextureStorageMem1DEXT,
+    .p_glTextureStorageMem2DEXT = null_glTextureStorageMem2DEXT,
+    .p_glTextureStorageMem2DMultisampleEXT = null_glTextureStorageMem2DMultisampleEXT,
+    .p_glTextureStorageMem3DEXT = null_glTextureStorageMem3DEXT,
+    .p_glTextureStorageMem3DMultisampleEXT = null_glTextureStorageMem3DMultisampleEXT,
+    .p_glTextureStorageSparseAMD = null_glTextureStorageSparseAMD,
+    .p_glTextureSubImage1D = null_glTextureSubImage1D,
+    .p_glTextureSubImage1DEXT = null_glTextureSubImage1DEXT,
+    .p_glTextureSubImage2D = null_glTextureSubImage2D,
+    .p_glTextureSubImage2DEXT = null_glTextureSubImage2DEXT,
+    .p_glTextureSubImage3D = null_glTextureSubImage3D,
+    .p_glTextureSubImage3DEXT = null_glTextureSubImage3DEXT,
+    .p_glTextureView = null_glTextureView,
+    .p_glTrackMatrixNV = null_glTrackMatrixNV,
+    .p_glTransformFeedbackAttribsNV = null_glTransformFeedbackAttribsNV,
+    .p_glTransformFeedbackBufferBase = null_glTransformFeedbackBufferBase,
+    .p_glTransformFeedbackBufferRange = null_glTransformFeedbackBufferRange,
+    .p_glTransformFeedbackStreamAttribsNV = null_glTransformFeedbackStreamAttribsNV,
+    .p_glTransformFeedbackVaryings = null_glTransformFeedbackVaryings,
+    .p_glTransformFeedbackVaryingsEXT = null_glTransformFeedbackVaryingsEXT,
+    .p_glTransformFeedbackVaryingsNV = null_glTransformFeedbackVaryingsNV,
+    .p_glTransformPathNV = null_glTransformPathNV,
+    .p_glTranslatexOES = null_glTranslatexOES,
+    .p_glUniform1d = null_glUniform1d,
+    .p_glUniform1dv = null_glUniform1dv,
+    .p_glUniform1f = null_glUniform1f,
+    .p_glUniform1fARB = null_glUniform1fARB,
+    .p_glUniform1fv = null_glUniform1fv,
+    .p_glUniform1fvARB = null_glUniform1fvARB,
+    .p_glUniform1i = null_glUniform1i,
+    .p_glUniform1i64ARB = null_glUniform1i64ARB,
+    .p_glUniform1i64NV = null_glUniform1i64NV,
+    .p_glUniform1i64vARB = null_glUniform1i64vARB,
+    .p_glUniform1i64vNV = null_glUniform1i64vNV,
+    .p_glUniform1iARB = null_glUniform1iARB,
+    .p_glUniform1iv = null_glUniform1iv,
+    .p_glUniform1ivARB = null_glUniform1ivARB,
+    .p_glUniform1ui = null_glUniform1ui,
+    .p_glUniform1ui64ARB = null_glUniform1ui64ARB,
+    .p_glUniform1ui64NV = null_glUniform1ui64NV,
+    .p_glUniform1ui64vARB = null_glUniform1ui64vARB,
+    .p_glUniform1ui64vNV = null_glUniform1ui64vNV,
+    .p_glUniform1uiEXT = null_glUniform1uiEXT,
+    .p_glUniform1uiv = null_glUniform1uiv,
+    .p_glUniform1uivEXT = null_glUniform1uivEXT,
+    .p_glUniform2d = null_glUniform2d,
+    .p_glUniform2dv = null_glUniform2dv,
+    .p_glUniform2f = null_glUniform2f,
+    .p_glUniform2fARB = null_glUniform2fARB,
+    .p_glUniform2fv = null_glUniform2fv,
+    .p_glUniform2fvARB = null_glUniform2fvARB,
+    .p_glUniform2i = null_glUniform2i,
+    .p_glUniform2i64ARB = null_glUniform2i64ARB,
+    .p_glUniform2i64NV = null_glUniform2i64NV,
+    .p_glUniform2i64vARB = null_glUniform2i64vARB,
+    .p_glUniform2i64vNV = null_glUniform2i64vNV,
+    .p_glUniform2iARB = null_glUniform2iARB,
+    .p_glUniform2iv = null_glUniform2iv,
+    .p_glUniform2ivARB = null_glUniform2ivARB,
+    .p_glUniform2ui = null_glUniform2ui,
+    .p_glUniform2ui64ARB = null_glUniform2ui64ARB,
+    .p_glUniform2ui64NV = null_glUniform2ui64NV,
+    .p_glUniform2ui64vARB = null_glUniform2ui64vARB,
+    .p_glUniform2ui64vNV = null_glUniform2ui64vNV,
+    .p_glUniform2uiEXT = null_glUniform2uiEXT,
+    .p_glUniform2uiv = null_glUniform2uiv,
+    .p_glUniform2uivEXT = null_glUniform2uivEXT,
+    .p_glUniform3d = null_glUniform3d,
+    .p_glUniform3dv = null_glUniform3dv,
+    .p_glUniform3f = null_glUniform3f,
+    .p_glUniform3fARB = null_glUniform3fARB,
+    .p_glUniform3fv = null_glUniform3fv,
+    .p_glUniform3fvARB = null_glUniform3fvARB,
+    .p_glUniform3i = null_glUniform3i,
+    .p_glUniform3i64ARB = null_glUniform3i64ARB,
+    .p_glUniform3i64NV = null_glUniform3i64NV,
+    .p_glUniform3i64vARB = null_glUniform3i64vARB,
+    .p_glUniform3i64vNV = null_glUniform3i64vNV,
+    .p_glUniform3iARB = null_glUniform3iARB,
+    .p_glUniform3iv = null_glUniform3iv,
+    .p_glUniform3ivARB = null_glUniform3ivARB,
+    .p_glUniform3ui = null_glUniform3ui,
+    .p_glUniform3ui64ARB = null_glUniform3ui64ARB,
+    .p_glUniform3ui64NV = null_glUniform3ui64NV,
+    .p_glUniform3ui64vARB = null_glUniform3ui64vARB,
+    .p_glUniform3ui64vNV = null_glUniform3ui64vNV,
+    .p_glUniform3uiEXT = null_glUniform3uiEXT,
+    .p_glUniform3uiv = null_glUniform3uiv,
+    .p_glUniform3uivEXT = null_glUniform3uivEXT,
+    .p_glUniform4d = null_glUniform4d,
+    .p_glUniform4dv = null_glUniform4dv,
+    .p_glUniform4f = null_glUniform4f,
+    .p_glUniform4fARB = null_glUniform4fARB,
+    .p_glUniform4fv = null_glUniform4fv,
+    .p_glUniform4fvARB = null_glUniform4fvARB,
+    .p_glUniform4i = null_glUniform4i,
+    .p_glUniform4i64ARB = null_glUniform4i64ARB,
+    .p_glUniform4i64NV = null_glUniform4i64NV,
+    .p_glUniform4i64vARB = null_glUniform4i64vARB,
+    .p_glUniform4i64vNV = null_glUniform4i64vNV,
+    .p_glUniform4iARB = null_glUniform4iARB,
+    .p_glUniform4iv = null_glUniform4iv,
+    .p_glUniform4ivARB = null_glUniform4ivARB,
+    .p_glUniform4ui = null_glUniform4ui,
+    .p_glUniform4ui64ARB = null_glUniform4ui64ARB,
+    .p_glUniform4ui64NV = null_glUniform4ui64NV,
+    .p_glUniform4ui64vARB = null_glUniform4ui64vARB,
+    .p_glUniform4ui64vNV = null_glUniform4ui64vNV,
+    .p_glUniform4uiEXT = null_glUniform4uiEXT,
+    .p_glUniform4uiv = null_glUniform4uiv,
+    .p_glUniform4uivEXT = null_glUniform4uivEXT,
+    .p_glUniformBlockBinding = null_glUniformBlockBinding,
+    .p_glUniformBufferEXT = null_glUniformBufferEXT,
+    .p_glUniformHandleui64ARB = null_glUniformHandleui64ARB,
+    .p_glUniformHandleui64NV = null_glUniformHandleui64NV,
+    .p_glUniformHandleui64vARB = null_glUniformHandleui64vARB,
+    .p_glUniformHandleui64vNV = null_glUniformHandleui64vNV,
+    .p_glUniformMatrix2dv = null_glUniformMatrix2dv,
+    .p_glUniformMatrix2fv = null_glUniformMatrix2fv,
+    .p_glUniformMatrix2fvARB = null_glUniformMatrix2fvARB,
+    .p_glUniformMatrix2x3dv = null_glUniformMatrix2x3dv,
+    .p_glUniformMatrix2x3fv = null_glUniformMatrix2x3fv,
+    .p_glUniformMatrix2x4dv = null_glUniformMatrix2x4dv,
+    .p_glUniformMatrix2x4fv = null_glUniformMatrix2x4fv,
+    .p_glUniformMatrix3dv = null_glUniformMatrix3dv,
+    .p_glUniformMatrix3fv = null_glUniformMatrix3fv,
+    .p_glUniformMatrix3fvARB = null_glUniformMatrix3fvARB,
+    .p_glUniformMatrix3x2dv = null_glUniformMatrix3x2dv,
+    .p_glUniformMatrix3x2fv = null_glUniformMatrix3x2fv,
+    .p_glUniformMatrix3x4dv = null_glUniformMatrix3x4dv,
+    .p_glUniformMatrix3x4fv = null_glUniformMatrix3x4fv,
+    .p_glUniformMatrix4dv = null_glUniformMatrix4dv,
+    .p_glUniformMatrix4fv = null_glUniformMatrix4fv,
+    .p_glUniformMatrix4fvARB = null_glUniformMatrix4fvARB,
+    .p_glUniformMatrix4x2dv = null_glUniformMatrix4x2dv,
+    .p_glUniformMatrix4x2fv = null_glUniformMatrix4x2fv,
+    .p_glUniformMatrix4x3dv = null_glUniformMatrix4x3dv,
+    .p_glUniformMatrix4x3fv = null_glUniformMatrix4x3fv,
+    .p_glUniformSubroutinesuiv = null_glUniformSubroutinesuiv,
+    .p_glUniformui64NV = null_glUniformui64NV,
+    .p_glUniformui64vNV = null_glUniformui64vNV,
+    .p_glUnlockArraysEXT = null_glUnlockArraysEXT,
+    .p_glUnmapBuffer = null_glUnmapBuffer,
+    .p_glUnmapBufferARB = null_glUnmapBufferARB,
+    .p_glUnmapNamedBuffer = null_glUnmapNamedBuffer,
+    .p_glUnmapNamedBufferEXT = null_glUnmapNamedBufferEXT,
+    .p_glUnmapObjectBufferATI = null_glUnmapObjectBufferATI,
+    .p_glUnmapTexture2DINTEL = null_glUnmapTexture2DINTEL,
+    .p_glUpdateObjectBufferATI = null_glUpdateObjectBufferATI,
+    .p_glUploadGpuMaskNVX = null_glUploadGpuMaskNVX,
+    .p_glUseProgram = null_glUseProgram,
+    .p_glUseProgramObjectARB = null_glUseProgramObjectARB,
+    .p_glUseProgramStages = null_glUseProgramStages,
+    .p_glUseShaderProgramEXT = null_glUseShaderProgramEXT,
+    .p_glVDPAUFiniNV = null_glVDPAUFiniNV,
+    .p_glVDPAUGetSurfaceivNV = null_glVDPAUGetSurfaceivNV,
+    .p_glVDPAUInitNV = null_glVDPAUInitNV,
+    .p_glVDPAUIsSurfaceNV = null_glVDPAUIsSurfaceNV,
+    .p_glVDPAUMapSurfacesNV = null_glVDPAUMapSurfacesNV,
+    .p_glVDPAURegisterOutputSurfaceNV = null_glVDPAURegisterOutputSurfaceNV,
+    .p_glVDPAURegisterVideoSurfaceNV = null_glVDPAURegisterVideoSurfaceNV,
+    .p_glVDPAURegisterVideoSurfaceWithPictureStructureNV = null_glVDPAURegisterVideoSurfaceWithPictureStructureNV,
+    .p_glVDPAUSurfaceAccessNV = null_glVDPAUSurfaceAccessNV,
+    .p_glVDPAUUnmapSurfacesNV = null_glVDPAUUnmapSurfacesNV,
+    .p_glVDPAUUnregisterSurfaceNV = null_glVDPAUUnregisterSurfaceNV,
+    .p_glValidateProgram = null_glValidateProgram,
+    .p_glValidateProgramARB = null_glValidateProgramARB,
+    .p_glValidateProgramPipeline = null_glValidateProgramPipeline,
+    .p_glVariantArrayObjectATI = null_glVariantArrayObjectATI,
+    .p_glVariantPointerEXT = null_glVariantPointerEXT,
+    .p_glVariantbvEXT = null_glVariantbvEXT,
+    .p_glVariantdvEXT = null_glVariantdvEXT,
+    .p_glVariantfvEXT = null_glVariantfvEXT,
+    .p_glVariantivEXT = null_glVariantivEXT,
+    .p_glVariantsvEXT = null_glVariantsvEXT,
+    .p_glVariantubvEXT = null_glVariantubvEXT,
+    .p_glVariantuivEXT = null_glVariantuivEXT,
+    .p_glVariantusvEXT = null_glVariantusvEXT,
+    .p_glVertex2bOES = null_glVertex2bOES,
+    .p_glVertex2bvOES = null_glVertex2bvOES,
+    .p_glVertex2hNV = null_glVertex2hNV,
+    .p_glVertex2hvNV = null_glVertex2hvNV,
+    .p_glVertex2xOES = null_glVertex2xOES,
+    .p_glVertex2xvOES = null_glVertex2xvOES,
+    .p_glVertex3bOES = null_glVertex3bOES,
+    .p_glVertex3bvOES = null_glVertex3bvOES,
+    .p_glVertex3hNV = null_glVertex3hNV,
+    .p_glVertex3hvNV = null_glVertex3hvNV,
+    .p_glVertex3xOES = null_glVertex3xOES,
+    .p_glVertex3xvOES = null_glVertex3xvOES,
+    .p_glVertex4bOES = null_glVertex4bOES,
+    .p_glVertex4bvOES = null_glVertex4bvOES,
+    .p_glVertex4hNV = null_glVertex4hNV,
+    .p_glVertex4hvNV = null_glVertex4hvNV,
+    .p_glVertex4xOES = null_glVertex4xOES,
+    .p_glVertex4xvOES = null_glVertex4xvOES,
+    .p_glVertexArrayAttribBinding = null_glVertexArrayAttribBinding,
+    .p_glVertexArrayAttribFormat = null_glVertexArrayAttribFormat,
+    .p_glVertexArrayAttribIFormat = null_glVertexArrayAttribIFormat,
+    .p_glVertexArrayAttribLFormat = null_glVertexArrayAttribLFormat,
+    .p_glVertexArrayBindVertexBufferEXT = null_glVertexArrayBindVertexBufferEXT,
+    .p_glVertexArrayBindingDivisor = null_glVertexArrayBindingDivisor,
+    .p_glVertexArrayColorOffsetEXT = null_glVertexArrayColorOffsetEXT,
+    .p_glVertexArrayEdgeFlagOffsetEXT = null_glVertexArrayEdgeFlagOffsetEXT,
+    .p_glVertexArrayElementBuffer = null_glVertexArrayElementBuffer,
+    .p_glVertexArrayFogCoordOffsetEXT = null_glVertexArrayFogCoordOffsetEXT,
+    .p_glVertexArrayIndexOffsetEXT = null_glVertexArrayIndexOffsetEXT,
+    .p_glVertexArrayMultiTexCoordOffsetEXT = null_glVertexArrayMultiTexCoordOffsetEXT,
+    .p_glVertexArrayNormalOffsetEXT = null_glVertexArrayNormalOffsetEXT,
+    .p_glVertexArrayParameteriAPPLE = null_glVertexArrayParameteriAPPLE,
+    .p_glVertexArrayRangeAPPLE = null_glVertexArrayRangeAPPLE,
+    .p_glVertexArrayRangeNV = null_glVertexArrayRangeNV,
+    .p_glVertexArraySecondaryColorOffsetEXT = null_glVertexArraySecondaryColorOffsetEXT,
+    .p_glVertexArrayTexCoordOffsetEXT = null_glVertexArrayTexCoordOffsetEXT,
+    .p_glVertexArrayVertexAttribBindingEXT = null_glVertexArrayVertexAttribBindingEXT,
+    .p_glVertexArrayVertexAttribDivisorEXT = null_glVertexArrayVertexAttribDivisorEXT,
+    .p_glVertexArrayVertexAttribFormatEXT = null_glVertexArrayVertexAttribFormatEXT,
+    .p_glVertexArrayVertexAttribIFormatEXT = null_glVertexArrayVertexAttribIFormatEXT,
+    .p_glVertexArrayVertexAttribIOffsetEXT = null_glVertexArrayVertexAttribIOffsetEXT,
+    .p_glVertexArrayVertexAttribLFormatEXT = null_glVertexArrayVertexAttribLFormatEXT,
+    .p_glVertexArrayVertexAttribLOffsetEXT = null_glVertexArrayVertexAttribLOffsetEXT,
+    .p_glVertexArrayVertexAttribOffsetEXT = null_glVertexArrayVertexAttribOffsetEXT,
+    .p_glVertexArrayVertexBindingDivisorEXT = null_glVertexArrayVertexBindingDivisorEXT,
+    .p_glVertexArrayVertexBuffer = null_glVertexArrayVertexBuffer,
+    .p_glVertexArrayVertexBuffers = null_glVertexArrayVertexBuffers,
+    .p_glVertexArrayVertexOffsetEXT = null_glVertexArrayVertexOffsetEXT,
+    .p_glVertexAttrib1d = null_glVertexAttrib1d,
+    .p_glVertexAttrib1dARB = null_glVertexAttrib1dARB,
+    .p_glVertexAttrib1dNV = null_glVertexAttrib1dNV,
+    .p_glVertexAttrib1dv = null_glVertexAttrib1dv,
+    .p_glVertexAttrib1dvARB = null_glVertexAttrib1dvARB,
+    .p_glVertexAttrib1dvNV = null_glVertexAttrib1dvNV,
+    .p_glVertexAttrib1f = null_glVertexAttrib1f,
+    .p_glVertexAttrib1fARB = null_glVertexAttrib1fARB,
+    .p_glVertexAttrib1fNV = null_glVertexAttrib1fNV,
+    .p_glVertexAttrib1fv = null_glVertexAttrib1fv,
+    .p_glVertexAttrib1fvARB = null_glVertexAttrib1fvARB,
+    .p_glVertexAttrib1fvNV = null_glVertexAttrib1fvNV,
+    .p_glVertexAttrib1hNV = null_glVertexAttrib1hNV,
+    .p_glVertexAttrib1hvNV = null_glVertexAttrib1hvNV,
+    .p_glVertexAttrib1s = null_glVertexAttrib1s,
+    .p_glVertexAttrib1sARB = null_glVertexAttrib1sARB,
+    .p_glVertexAttrib1sNV = null_glVertexAttrib1sNV,
+    .p_glVertexAttrib1sv = null_glVertexAttrib1sv,
+    .p_glVertexAttrib1svARB = null_glVertexAttrib1svARB,
+    .p_glVertexAttrib1svNV = null_glVertexAttrib1svNV,
+    .p_glVertexAttrib2d = null_glVertexAttrib2d,
+    .p_glVertexAttrib2dARB = null_glVertexAttrib2dARB,
+    .p_glVertexAttrib2dNV = null_glVertexAttrib2dNV,
+    .p_glVertexAttrib2dv = null_glVertexAttrib2dv,
+    .p_glVertexAttrib2dvARB = null_glVertexAttrib2dvARB,
+    .p_glVertexAttrib2dvNV = null_glVertexAttrib2dvNV,
+    .p_glVertexAttrib2f = null_glVertexAttrib2f,
+    .p_glVertexAttrib2fARB = null_glVertexAttrib2fARB,
+    .p_glVertexAttrib2fNV = null_glVertexAttrib2fNV,
+    .p_glVertexAttrib2fv = null_glVertexAttrib2fv,
+    .p_glVertexAttrib2fvARB = null_glVertexAttrib2fvARB,
+    .p_glVertexAttrib2fvNV = null_glVertexAttrib2fvNV,
+    .p_glVertexAttrib2hNV = null_glVertexAttrib2hNV,
+    .p_glVertexAttrib2hvNV = null_glVertexAttrib2hvNV,
+    .p_glVertexAttrib2s = null_glVertexAttrib2s,
+    .p_glVertexAttrib2sARB = null_glVertexAttrib2sARB,
+    .p_glVertexAttrib2sNV = null_glVertexAttrib2sNV,
+    .p_glVertexAttrib2sv = null_glVertexAttrib2sv,
+    .p_glVertexAttrib2svARB = null_glVertexAttrib2svARB,
+    .p_glVertexAttrib2svNV = null_glVertexAttrib2svNV,
+    .p_glVertexAttrib3d = null_glVertexAttrib3d,
+    .p_glVertexAttrib3dARB = null_glVertexAttrib3dARB,
+    .p_glVertexAttrib3dNV = null_glVertexAttrib3dNV,
+    .p_glVertexAttrib3dv = null_glVertexAttrib3dv,
+    .p_glVertexAttrib3dvARB = null_glVertexAttrib3dvARB,
+    .p_glVertexAttrib3dvNV = null_glVertexAttrib3dvNV,
+    .p_glVertexAttrib3f = null_glVertexAttrib3f,
+    .p_glVertexAttrib3fARB = null_glVertexAttrib3fARB,
+    .p_glVertexAttrib3fNV = null_glVertexAttrib3fNV,
+    .p_glVertexAttrib3fv = null_glVertexAttrib3fv,
+    .p_glVertexAttrib3fvARB = null_glVertexAttrib3fvARB,
+    .p_glVertexAttrib3fvNV = null_glVertexAttrib3fvNV,
+    .p_glVertexAttrib3hNV = null_glVertexAttrib3hNV,
+    .p_glVertexAttrib3hvNV = null_glVertexAttrib3hvNV,
+    .p_glVertexAttrib3s = null_glVertexAttrib3s,
+    .p_glVertexAttrib3sARB = null_glVertexAttrib3sARB,
+    .p_glVertexAttrib3sNV = null_glVertexAttrib3sNV,
+    .p_glVertexAttrib3sv = null_glVertexAttrib3sv,
+    .p_glVertexAttrib3svARB = null_glVertexAttrib3svARB,
+    .p_glVertexAttrib3svNV = null_glVertexAttrib3svNV,
+    .p_glVertexAttrib4Nbv = null_glVertexAttrib4Nbv,
+    .p_glVertexAttrib4NbvARB = null_glVertexAttrib4NbvARB,
+    .p_glVertexAttrib4Niv = null_glVertexAttrib4Niv,
+    .p_glVertexAttrib4NivARB = null_glVertexAttrib4NivARB,
+    .p_glVertexAttrib4Nsv = null_glVertexAttrib4Nsv,
+    .p_glVertexAttrib4NsvARB = null_glVertexAttrib4NsvARB,
+    .p_glVertexAttrib4Nub = null_glVertexAttrib4Nub,
+    .p_glVertexAttrib4NubARB = null_glVertexAttrib4NubARB,
+    .p_glVertexAttrib4Nubv = null_glVertexAttrib4Nubv,
+    .p_glVertexAttrib4NubvARB = null_glVertexAttrib4NubvARB,
+    .p_glVertexAttrib4Nuiv = null_glVertexAttrib4Nuiv,
+    .p_glVertexAttrib4NuivARB = null_glVertexAttrib4NuivARB,
+    .p_glVertexAttrib4Nusv = null_glVertexAttrib4Nusv,
+    .p_glVertexAttrib4NusvARB = null_glVertexAttrib4NusvARB,
+    .p_glVertexAttrib4bv = null_glVertexAttrib4bv,
+    .p_glVertexAttrib4bvARB = null_glVertexAttrib4bvARB,
+    .p_glVertexAttrib4d = null_glVertexAttrib4d,
+    .p_glVertexAttrib4dARB = null_glVertexAttrib4dARB,
+    .p_glVertexAttrib4dNV = null_glVertexAttrib4dNV,
+    .p_glVertexAttrib4dv = null_glVertexAttrib4dv,
+    .p_glVertexAttrib4dvARB = null_glVertexAttrib4dvARB,
+    .p_glVertexAttrib4dvNV = null_glVertexAttrib4dvNV,
+    .p_glVertexAttrib4f = null_glVertexAttrib4f,
+    .p_glVertexAttrib4fARB = null_glVertexAttrib4fARB,
+    .p_glVertexAttrib4fNV = null_glVertexAttrib4fNV,
+    .p_glVertexAttrib4fv = null_glVertexAttrib4fv,
+    .p_glVertexAttrib4fvARB = null_glVertexAttrib4fvARB,
+    .p_glVertexAttrib4fvNV = null_glVertexAttrib4fvNV,
+    .p_glVertexAttrib4hNV = null_glVertexAttrib4hNV,
+    .p_glVertexAttrib4hvNV = null_glVertexAttrib4hvNV,
+    .p_glVertexAttrib4iv = null_glVertexAttrib4iv,
+    .p_glVertexAttrib4ivARB = null_glVertexAttrib4ivARB,
+    .p_glVertexAttrib4s = null_glVertexAttrib4s,
+    .p_glVertexAttrib4sARB = null_glVertexAttrib4sARB,
+    .p_glVertexAttrib4sNV = null_glVertexAttrib4sNV,
+    .p_glVertexAttrib4sv = null_glVertexAttrib4sv,
+    .p_glVertexAttrib4svARB = null_glVertexAttrib4svARB,
+    .p_glVertexAttrib4svNV = null_glVertexAttrib4svNV,
+    .p_glVertexAttrib4ubNV = null_glVertexAttrib4ubNV,
+    .p_glVertexAttrib4ubv = null_glVertexAttrib4ubv,
+    .p_glVertexAttrib4ubvARB = null_glVertexAttrib4ubvARB,
+    .p_glVertexAttrib4ubvNV = null_glVertexAttrib4ubvNV,
+    .p_glVertexAttrib4uiv = null_glVertexAttrib4uiv,
+    .p_glVertexAttrib4uivARB = null_glVertexAttrib4uivARB,
+    .p_glVertexAttrib4usv = null_glVertexAttrib4usv,
+    .p_glVertexAttrib4usvARB = null_glVertexAttrib4usvARB,
+    .p_glVertexAttribArrayObjectATI = null_glVertexAttribArrayObjectATI,
+    .p_glVertexAttribBinding = null_glVertexAttribBinding,
+    .p_glVertexAttribDivisor = null_glVertexAttribDivisor,
+    .p_glVertexAttribDivisorARB = null_glVertexAttribDivisorARB,
+    .p_glVertexAttribFormat = null_glVertexAttribFormat,
+    .p_glVertexAttribFormatNV = null_glVertexAttribFormatNV,
+    .p_glVertexAttribI1i = null_glVertexAttribI1i,
+    .p_glVertexAttribI1iEXT = null_glVertexAttribI1iEXT,
+    .p_glVertexAttribI1iv = null_glVertexAttribI1iv,
+    .p_glVertexAttribI1ivEXT = null_glVertexAttribI1ivEXT,
+    .p_glVertexAttribI1ui = null_glVertexAttribI1ui,
+    .p_glVertexAttribI1uiEXT = null_glVertexAttribI1uiEXT,
+    .p_glVertexAttribI1uiv = null_glVertexAttribI1uiv,
+    .p_glVertexAttribI1uivEXT = null_glVertexAttribI1uivEXT,
+    .p_glVertexAttribI2i = null_glVertexAttribI2i,
+    .p_glVertexAttribI2iEXT = null_glVertexAttribI2iEXT,
+    .p_glVertexAttribI2iv = null_glVertexAttribI2iv,
+    .p_glVertexAttribI2ivEXT = null_glVertexAttribI2ivEXT,
+    .p_glVertexAttribI2ui = null_glVertexAttribI2ui,
+    .p_glVertexAttribI2uiEXT = null_glVertexAttribI2uiEXT,
+    .p_glVertexAttribI2uiv = null_glVertexAttribI2uiv,
+    .p_glVertexAttribI2uivEXT = null_glVertexAttribI2uivEXT,
+    .p_glVertexAttribI3i = null_glVertexAttribI3i,
+    .p_glVertexAttribI3iEXT = null_glVertexAttribI3iEXT,
+    .p_glVertexAttribI3iv = null_glVertexAttribI3iv,
+    .p_glVertexAttribI3ivEXT = null_glVertexAttribI3ivEXT,
+    .p_glVertexAttribI3ui = null_glVertexAttribI3ui,
+    .p_glVertexAttribI3uiEXT = null_glVertexAttribI3uiEXT,
+    .p_glVertexAttribI3uiv = null_glVertexAttribI3uiv,
+    .p_glVertexAttribI3uivEXT = null_glVertexAttribI3uivEXT,
+    .p_glVertexAttribI4bv = null_glVertexAttribI4bv,
+    .p_glVertexAttribI4bvEXT = null_glVertexAttribI4bvEXT,
+    .p_glVertexAttribI4i = null_glVertexAttribI4i,
+    .p_glVertexAttribI4iEXT = null_glVertexAttribI4iEXT,
+    .p_glVertexAttribI4iv = null_glVertexAttribI4iv,
+    .p_glVertexAttribI4ivEXT = null_glVertexAttribI4ivEXT,
+    .p_glVertexAttribI4sv = null_glVertexAttribI4sv,
+    .p_glVertexAttribI4svEXT = null_glVertexAttribI4svEXT,
+    .p_glVertexAttribI4ubv = null_glVertexAttribI4ubv,
+    .p_glVertexAttribI4ubvEXT = null_glVertexAttribI4ubvEXT,
+    .p_glVertexAttribI4ui = null_glVertexAttribI4ui,
+    .p_glVertexAttribI4uiEXT = null_glVertexAttribI4uiEXT,
+    .p_glVertexAttribI4uiv = null_glVertexAttribI4uiv,
+    .p_glVertexAttribI4uivEXT = null_glVertexAttribI4uivEXT,
+    .p_glVertexAttribI4usv = null_glVertexAttribI4usv,
+    .p_glVertexAttribI4usvEXT = null_glVertexAttribI4usvEXT,
+    .p_glVertexAttribIFormat = null_glVertexAttribIFormat,
+    .p_glVertexAttribIFormatNV = null_glVertexAttribIFormatNV,
+    .p_glVertexAttribIPointer = null_glVertexAttribIPointer,
+    .p_glVertexAttribIPointerEXT = null_glVertexAttribIPointerEXT,
+    .p_glVertexAttribL1d = null_glVertexAttribL1d,
+    .p_glVertexAttribL1dEXT = null_glVertexAttribL1dEXT,
+    .p_glVertexAttribL1dv = null_glVertexAttribL1dv,
+    .p_glVertexAttribL1dvEXT = null_glVertexAttribL1dvEXT,
+    .p_glVertexAttribL1i64NV = null_glVertexAttribL1i64NV,
+    .p_glVertexAttribL1i64vNV = null_glVertexAttribL1i64vNV,
+    .p_glVertexAttribL1ui64ARB = null_glVertexAttribL1ui64ARB,
+    .p_glVertexAttribL1ui64NV = null_glVertexAttribL1ui64NV,
+    .p_glVertexAttribL1ui64vARB = null_glVertexAttribL1ui64vARB,
+    .p_glVertexAttribL1ui64vNV = null_glVertexAttribL1ui64vNV,
+    .p_glVertexAttribL2d = null_glVertexAttribL2d,
+    .p_glVertexAttribL2dEXT = null_glVertexAttribL2dEXT,
+    .p_glVertexAttribL2dv = null_glVertexAttribL2dv,
+    .p_glVertexAttribL2dvEXT = null_glVertexAttribL2dvEXT,
+    .p_glVertexAttribL2i64NV = null_glVertexAttribL2i64NV,
+    .p_glVertexAttribL2i64vNV = null_glVertexAttribL2i64vNV,
+    .p_glVertexAttribL2ui64NV = null_glVertexAttribL2ui64NV,
+    .p_glVertexAttribL2ui64vNV = null_glVertexAttribL2ui64vNV,
+    .p_glVertexAttribL3d = null_glVertexAttribL3d,
+    .p_glVertexAttribL3dEXT = null_glVertexAttribL3dEXT,
+    .p_glVertexAttribL3dv = null_glVertexAttribL3dv,
+    .p_glVertexAttribL3dvEXT = null_glVertexAttribL3dvEXT,
+    .p_glVertexAttribL3i64NV = null_glVertexAttribL3i64NV,
+    .p_glVertexAttribL3i64vNV = null_glVertexAttribL3i64vNV,
+    .p_glVertexAttribL3ui64NV = null_glVertexAttribL3ui64NV,
+    .p_glVertexAttribL3ui64vNV = null_glVertexAttribL3ui64vNV,
+    .p_glVertexAttribL4d = null_glVertexAttribL4d,
+    .p_glVertexAttribL4dEXT = null_glVertexAttribL4dEXT,
+    .p_glVertexAttribL4dv = null_glVertexAttribL4dv,
+    .p_glVertexAttribL4dvEXT = null_glVertexAttribL4dvEXT,
+    .p_glVertexAttribL4i64NV = null_glVertexAttribL4i64NV,
+    .p_glVertexAttribL4i64vNV = null_glVertexAttribL4i64vNV,
+    .p_glVertexAttribL4ui64NV = null_glVertexAttribL4ui64NV,
+    .p_glVertexAttribL4ui64vNV = null_glVertexAttribL4ui64vNV,
+    .p_glVertexAttribLFormat = null_glVertexAttribLFormat,
+    .p_glVertexAttribLFormatNV = null_glVertexAttribLFormatNV,
+    .p_glVertexAttribLPointer = null_glVertexAttribLPointer,
+    .p_glVertexAttribLPointerEXT = null_glVertexAttribLPointerEXT,
+    .p_glVertexAttribP1ui = null_glVertexAttribP1ui,
+    .p_glVertexAttribP1uiv = null_glVertexAttribP1uiv,
+    .p_glVertexAttribP2ui = null_glVertexAttribP2ui,
+    .p_glVertexAttribP2uiv = null_glVertexAttribP2uiv,
+    .p_glVertexAttribP3ui = null_glVertexAttribP3ui,
+    .p_glVertexAttribP3uiv = null_glVertexAttribP3uiv,
+    .p_glVertexAttribP4ui = null_glVertexAttribP4ui,
+    .p_glVertexAttribP4uiv = null_glVertexAttribP4uiv,
+    .p_glVertexAttribParameteriAMD = null_glVertexAttribParameteriAMD,
+    .p_glVertexAttribPointer = null_glVertexAttribPointer,
+    .p_glVertexAttribPointerARB = null_glVertexAttribPointerARB,
+    .p_glVertexAttribPointerNV = null_glVertexAttribPointerNV,
+    .p_glVertexAttribs1dvNV = null_glVertexAttribs1dvNV,
+    .p_glVertexAttribs1fvNV = null_glVertexAttribs1fvNV,
+    .p_glVertexAttribs1hvNV = null_glVertexAttribs1hvNV,
+    .p_glVertexAttribs1svNV = null_glVertexAttribs1svNV,
+    .p_glVertexAttribs2dvNV = null_glVertexAttribs2dvNV,
+    .p_glVertexAttribs2fvNV = null_glVertexAttribs2fvNV,
+    .p_glVertexAttribs2hvNV = null_glVertexAttribs2hvNV,
+    .p_glVertexAttribs2svNV = null_glVertexAttribs2svNV,
+    .p_glVertexAttribs3dvNV = null_glVertexAttribs3dvNV,
+    .p_glVertexAttribs3fvNV = null_glVertexAttribs3fvNV,
+    .p_glVertexAttribs3hvNV = null_glVertexAttribs3hvNV,
+    .p_glVertexAttribs3svNV = null_glVertexAttribs3svNV,
+    .p_glVertexAttribs4dvNV = null_glVertexAttribs4dvNV,
+    .p_glVertexAttribs4fvNV = null_glVertexAttribs4fvNV,
+    .p_glVertexAttribs4hvNV = null_glVertexAttribs4hvNV,
+    .p_glVertexAttribs4svNV = null_glVertexAttribs4svNV,
+    .p_glVertexAttribs4ubvNV = null_glVertexAttribs4ubvNV,
+    .p_glVertexBindingDivisor = null_glVertexBindingDivisor,
+    .p_glVertexBlendARB = null_glVertexBlendARB,
+    .p_glVertexBlendEnvfATI = null_glVertexBlendEnvfATI,
+    .p_glVertexBlendEnviATI = null_glVertexBlendEnviATI,
+    .p_glVertexFormatNV = null_glVertexFormatNV,
+    .p_glVertexP2ui = null_glVertexP2ui,
+    .p_glVertexP2uiv = null_glVertexP2uiv,
+    .p_glVertexP3ui = null_glVertexP3ui,
+    .p_glVertexP3uiv = null_glVertexP3uiv,
+    .p_glVertexP4ui = null_glVertexP4ui,
+    .p_glVertexP4uiv = null_glVertexP4uiv,
+    .p_glVertexPointerEXT = null_glVertexPointerEXT,
+    .p_glVertexPointerListIBM = null_glVertexPointerListIBM,
+    .p_glVertexPointervINTEL = null_glVertexPointervINTEL,
+    .p_glVertexStream1dATI = null_glVertexStream1dATI,
+    .p_glVertexStream1dvATI = null_glVertexStream1dvATI,
+    .p_glVertexStream1fATI = null_glVertexStream1fATI,
+    .p_glVertexStream1fvATI = null_glVertexStream1fvATI,
+    .p_glVertexStream1iATI = null_glVertexStream1iATI,
+    .p_glVertexStream1ivATI = null_glVertexStream1ivATI,
+    .p_glVertexStream1sATI = null_glVertexStream1sATI,
+    .p_glVertexStream1svATI = null_glVertexStream1svATI,
+    .p_glVertexStream2dATI = null_glVertexStream2dATI,
+    .p_glVertexStream2dvATI = null_glVertexStream2dvATI,
+    .p_glVertexStream2fATI = null_glVertexStream2fATI,
+    .p_glVertexStream2fvATI = null_glVertexStream2fvATI,
+    .p_glVertexStream2iATI = null_glVertexStream2iATI,
+    .p_glVertexStream2ivATI = null_glVertexStream2ivATI,
+    .p_glVertexStream2sATI = null_glVertexStream2sATI,
+    .p_glVertexStream2svATI = null_glVertexStream2svATI,
+    .p_glVertexStream3dATI = null_glVertexStream3dATI,
+    .p_glVertexStream3dvATI = null_glVertexStream3dvATI,
+    .p_glVertexStream3fATI = null_glVertexStream3fATI,
+    .p_glVertexStream3fvATI = null_glVertexStream3fvATI,
+    .p_glVertexStream3iATI = null_glVertexStream3iATI,
+    .p_glVertexStream3ivATI = null_glVertexStream3ivATI,
+    .p_glVertexStream3sATI = null_glVertexStream3sATI,
+    .p_glVertexStream3svATI = null_glVertexStream3svATI,
+    .p_glVertexStream4dATI = null_glVertexStream4dATI,
+    .p_glVertexStream4dvATI = null_glVertexStream4dvATI,
+    .p_glVertexStream4fATI = null_glVertexStream4fATI,
+    .p_glVertexStream4fvATI = null_glVertexStream4fvATI,
+    .p_glVertexStream4iATI = null_glVertexStream4iATI,
+    .p_glVertexStream4ivATI = null_glVertexStream4ivATI,
+    .p_glVertexStream4sATI = null_glVertexStream4sATI,
+    .p_glVertexStream4svATI = null_glVertexStream4svATI,
+    .p_glVertexWeightPointerEXT = null_glVertexWeightPointerEXT,
+    .p_glVertexWeightfEXT = null_glVertexWeightfEXT,
+    .p_glVertexWeightfvEXT = null_glVertexWeightfvEXT,
+    .p_glVertexWeighthNV = null_glVertexWeighthNV,
+    .p_glVertexWeighthvNV = null_glVertexWeighthvNV,
+    .p_glVideoCaptureNV = null_glVideoCaptureNV,
+    .p_glVideoCaptureStreamParameterdvNV = null_glVideoCaptureStreamParameterdvNV,
+    .p_glVideoCaptureStreamParameterfvNV = null_glVideoCaptureStreamParameterfvNV,
+    .p_glVideoCaptureStreamParameterivNV = null_glVideoCaptureStreamParameterivNV,
+    .p_glViewportArrayv = null_glViewportArrayv,
+    .p_glViewportIndexedf = null_glViewportIndexedf,
+    .p_glViewportIndexedfv = null_glViewportIndexedfv,
+    .p_glViewportPositionWScaleNV = null_glViewportPositionWScaleNV,
+    .p_glViewportSwizzleNV = null_glViewportSwizzleNV,
+    .p_glWaitSemaphoreEXT = null_glWaitSemaphoreEXT,
+    .p_glWaitSemaphoreui64NVX = null_glWaitSemaphoreui64NVX,
+    .p_glWaitSync = null_glWaitSync,
+    .p_glWaitVkSemaphoreNV = null_glWaitVkSemaphoreNV,
+    .p_glWeightPathsNV = null_glWeightPathsNV,
+    .p_glWeightPointerARB = null_glWeightPointerARB,
+    .p_glWeightbvARB = null_glWeightbvARB,
+    .p_glWeightdvARB = null_glWeightdvARB,
+    .p_glWeightfvARB = null_glWeightfvARB,
+    .p_glWeightivARB = null_glWeightivARB,
+    .p_glWeightsvARB = null_glWeightsvARB,
+    .p_glWeightubvARB = null_glWeightubvARB,
+    .p_glWeightuivARB = null_glWeightuivARB,
+    .p_glWeightusvARB = null_glWeightusvARB,
+    .p_glWindowPos2d = null_glWindowPos2d,
+    .p_glWindowPos2dARB = null_glWindowPos2dARB,
+    .p_glWindowPos2dMESA = null_glWindowPos2dMESA,
+    .p_glWindowPos2dv = null_glWindowPos2dv,
+    .p_glWindowPos2dvARB = null_glWindowPos2dvARB,
+    .p_glWindowPos2dvMESA = null_glWindowPos2dvMESA,
+    .p_glWindowPos2f = null_glWindowPos2f,
+    .p_glWindowPos2fARB = null_glWindowPos2fARB,
+    .p_glWindowPos2fMESA = null_glWindowPos2fMESA,
+    .p_glWindowPos2fv = null_glWindowPos2fv,
+    .p_glWindowPos2fvARB = null_glWindowPos2fvARB,
+    .p_glWindowPos2fvMESA = null_glWindowPos2fvMESA,
+    .p_glWindowPos2i = null_glWindowPos2i,
+    .p_glWindowPos2iARB = null_glWindowPos2iARB,
+    .p_glWindowPos2iMESA = null_glWindowPos2iMESA,
+    .p_glWindowPos2iv = null_glWindowPos2iv,
+    .p_glWindowPos2ivARB = null_glWindowPos2ivARB,
+    .p_glWindowPos2ivMESA = null_glWindowPos2ivMESA,
+    .p_glWindowPos2s = null_glWindowPos2s,
+    .p_glWindowPos2sARB = null_glWindowPos2sARB,
+    .p_glWindowPos2sMESA = null_glWindowPos2sMESA,
+    .p_glWindowPos2sv = null_glWindowPos2sv,
+    .p_glWindowPos2svARB = null_glWindowPos2svARB,
+    .p_glWindowPos2svMESA = null_glWindowPos2svMESA,
+    .p_glWindowPos3d = null_glWindowPos3d,
+    .p_glWindowPos3dARB = null_glWindowPos3dARB,
+    .p_glWindowPos3dMESA = null_glWindowPos3dMESA,
+    .p_glWindowPos3dv = null_glWindowPos3dv,
+    .p_glWindowPos3dvARB = null_glWindowPos3dvARB,
+    .p_glWindowPos3dvMESA = null_glWindowPos3dvMESA,
+    .p_glWindowPos3f = null_glWindowPos3f,
+    .p_glWindowPos3fARB = null_glWindowPos3fARB,
+    .p_glWindowPos3fMESA = null_glWindowPos3fMESA,
+    .p_glWindowPos3fv = null_glWindowPos3fv,
+    .p_glWindowPos3fvARB = null_glWindowPos3fvARB,
+    .p_glWindowPos3fvMESA = null_glWindowPos3fvMESA,
+    .p_glWindowPos3i = null_glWindowPos3i,
+    .p_glWindowPos3iARB = null_glWindowPos3iARB,
+    .p_glWindowPos3iMESA = null_glWindowPos3iMESA,
+    .p_glWindowPos3iv = null_glWindowPos3iv,
+    .p_glWindowPos3ivARB = null_glWindowPos3ivARB,
+    .p_glWindowPos3ivMESA = null_glWindowPos3ivMESA,
+    .p_glWindowPos3s = null_glWindowPos3s,
+    .p_glWindowPos3sARB = null_glWindowPos3sARB,
+    .p_glWindowPos3sMESA = null_glWindowPos3sMESA,
+    .p_glWindowPos3sv = null_glWindowPos3sv,
+    .p_glWindowPos3svARB = null_glWindowPos3svARB,
+    .p_glWindowPos3svMESA = null_glWindowPos3svMESA,
+    .p_glWindowPos4dMESA = null_glWindowPos4dMESA,
+    .p_glWindowPos4dvMESA = null_glWindowPos4dvMESA,
+    .p_glWindowPos4fMESA = null_glWindowPos4fMESA,
+    .p_glWindowPos4fvMESA = null_glWindowPos4fvMESA,
+    .p_glWindowPos4iMESA = null_glWindowPos4iMESA,
+    .p_glWindowPos4ivMESA = null_glWindowPos4ivMESA,
+    .p_glWindowPos4sMESA = null_glWindowPos4sMESA,
+    .p_glWindowPos4svMESA = null_glWindowPos4svMESA,
+    .p_glWindowRectanglesEXT = null_glWindowRectanglesEXT,
+    .p_glWriteMaskEXT = null_glWriteMaskEXT,
+    .p_wglAllocateMemoryNV = null_wglAllocateMemoryNV,
+    .p_wglBindTexImageARB = null_wglBindTexImageARB,
+    .p_wglChoosePixelFormatARB = null_wglChoosePixelFormatARB,
+    .p_wglCreateContextAttribsARB = null_wglCreateContextAttribsARB,
+    .p_wglCreatePbufferARB = null_wglCreatePbufferARB,
+    .p_wglDestroyPbufferARB = null_wglDestroyPbufferARB,
+    .p_wglFreeMemoryNV = null_wglFreeMemoryNV,
+    .p_wglGetCurrentReadDCARB = null_wglGetCurrentReadDCARB,
+    .p_wglGetExtensionsStringARB = null_wglGetExtensionsStringARB,
+    .p_wglGetExtensionsStringEXT = null_wglGetExtensionsStringEXT,
+    .p_wglGetPbufferDCARB = null_wglGetPbufferDCARB,
+    .p_wglGetPixelFormatAttribfvARB = null_wglGetPixelFormatAttribfvARB,
+    .p_wglGetPixelFormatAttribivARB = null_wglGetPixelFormatAttribivARB,
+    .p_wglGetSwapIntervalEXT = null_wglGetSwapIntervalEXT,
+    .p_wglMakeContextCurrentARB = null_wglMakeContextCurrentARB,
+    .p_wglQueryCurrentRendererIntegerWINE = null_wglQueryCurrentRendererIntegerWINE,
+    .p_wglQueryCurrentRendererStringWINE = null_wglQueryCurrentRendererStringWINE,
+    .p_wglQueryPbufferARB = null_wglQueryPbufferARB,
+    .p_wglQueryRendererIntegerWINE = null_wglQueryRendererIntegerWINE,
+    .p_wglQueryRendererStringWINE = null_wglQueryRendererStringWINE,
+    .p_wglReleasePbufferDCARB = null_wglReleasePbufferDCARB,
+    .p_wglReleaseTexImageARB = null_wglReleaseTexImageARB,
+    .p_wglSetPbufferAttribARB = null_wglSetPbufferAttribARB,
+    .p_wglSetPixelFormatWINE = null_wglSetPixelFormatWINE,
+    .p_wglSwapIntervalEXT = null_wglSwapIntervalEXT,
 };
 
 const int extension_registry_size = 2694;
 const struct registry_entry extension_registry[2694] =
 {
-    { "glAccumxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glAccumxOES) },
-    { "glAcquireKeyedMutexWin32EXT", "GL_EXT_win32_keyed_mutex", offsetof(struct opengl_funcs, ext.p_glAcquireKeyedMutexWin32EXT) },
-    { "glActiveProgramEXT", "GL_EXT_separate_shader_objects", offsetof(struct opengl_funcs, ext.p_glActiveProgramEXT) },
-    { "glActiveShaderProgram", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glActiveShaderProgram) },
-    { "glActiveStencilFaceEXT", "GL_EXT_stencil_two_side", offsetof(struct opengl_funcs, ext.p_glActiveStencilFaceEXT) },
-    { "glActiveTexture", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glActiveTexture) },
-    { "glActiveTextureARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glActiveTextureARB) },
-    { "glActiveVaryingNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glActiveVaryingNV) },
-    { "glAlphaFragmentOp1ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glAlphaFragmentOp1ATI) },
-    { "glAlphaFragmentOp2ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glAlphaFragmentOp2ATI) },
-    { "glAlphaFragmentOp3ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glAlphaFragmentOp3ATI) },
-    { "glAlphaFuncxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glAlphaFuncxOES) },
-    { "glAlphaToCoverageDitherControlNV", "GL_NV_alpha_to_coverage_dither_control", offsetof(struct opengl_funcs, ext.p_glAlphaToCoverageDitherControlNV) },
-    { "glApplyFramebufferAttachmentCMAAINTEL", "GL_INTEL_framebuffer_CMAA", offsetof(struct opengl_funcs, ext.p_glApplyFramebufferAttachmentCMAAINTEL) },
-    { "glApplyTextureEXT", "GL_EXT_light_texture", offsetof(struct opengl_funcs, ext.p_glApplyTextureEXT) },
-    { "glAreProgramsResidentNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glAreProgramsResidentNV) },
-    { "glAreTexturesResidentEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, ext.p_glAreTexturesResidentEXT) },
-    { "glArrayElementEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, ext.p_glArrayElementEXT) },
-    { "glArrayObjectATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glArrayObjectATI) },
-    { "glAsyncCopyBufferSubDataNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, ext.p_glAsyncCopyBufferSubDataNVX) },
-    { "glAsyncCopyImageSubDataNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, ext.p_glAsyncCopyImageSubDataNVX) },
-    { "glAsyncMarkerSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, ext.p_glAsyncMarkerSGIX) },
-    { "glAttachObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glAttachObjectARB) },
-    { "glAttachShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glAttachShader) },
-    { "glBeginConditionalRender", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glBeginConditionalRender) },
-    { "glBeginConditionalRenderNV", "GL_NV_conditional_render", offsetof(struct opengl_funcs, ext.p_glBeginConditionalRenderNV) },
-    { "glBeginConditionalRenderNVX", "GL_NVX_conditional_render", offsetof(struct opengl_funcs, ext.p_glBeginConditionalRenderNVX) },
-    { "glBeginFragmentShaderATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glBeginFragmentShaderATI) },
-    { "glBeginOcclusionQueryNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, ext.p_glBeginOcclusionQueryNV) },
-    { "glBeginPerfMonitorAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glBeginPerfMonitorAMD) },
-    { "glBeginPerfQueryINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glBeginPerfQueryINTEL) },
-    { "glBeginQuery", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glBeginQuery) },
-    { "glBeginQueryARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, ext.p_glBeginQueryARB) },
-    { "glBeginQueryIndexed", "GL_ARB_transform_feedback3 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glBeginQueryIndexed) },
-    { "glBeginTransformFeedback", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glBeginTransformFeedback) },
-    { "glBeginTransformFeedbackEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, ext.p_glBeginTransformFeedbackEXT) },
-    { "glBeginTransformFeedbackNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glBeginTransformFeedbackNV) },
-    { "glBeginVertexShaderEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glBeginVertexShaderEXT) },
-    { "glBeginVideoCaptureNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glBeginVideoCaptureNV) },
-    { "glBindAttribLocation", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glBindAttribLocation) },
-    { "glBindAttribLocationARB", "GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glBindAttribLocationARB) },
-    { "glBindBuffer", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glBindBuffer) },
-    { "glBindBufferARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glBindBufferARB) },
-    { "glBindBufferBase", "GL_ARB_uniform_buffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glBindBufferBase) },
-    { "glBindBufferBaseEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, ext.p_glBindBufferBaseEXT) },
-    { "glBindBufferBaseNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glBindBufferBaseNV) },
-    { "glBindBufferOffsetEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, ext.p_glBindBufferOffsetEXT) },
-    { "glBindBufferOffsetNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glBindBufferOffsetNV) },
-    { "glBindBufferRange", "GL_ARB_uniform_buffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glBindBufferRange) },
-    { "glBindBufferRangeEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, ext.p_glBindBufferRangeEXT) },
-    { "glBindBufferRangeNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glBindBufferRangeNV) },
-    { "glBindBuffersBase", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, ext.p_glBindBuffersBase) },
-    { "glBindBuffersRange", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, ext.p_glBindBuffersRange) },
-    { "glBindFragDataLocation", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glBindFragDataLocation) },
-    { "glBindFragDataLocationEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glBindFragDataLocationEXT) },
-    { "glBindFragDataLocationIndexed", "GL_ARB_blend_func_extended GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glBindFragDataLocationIndexed) },
-    { "glBindFragmentShaderATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glBindFragmentShaderATI) },
-    { "glBindFramebuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glBindFramebuffer) },
-    { "glBindFramebufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glBindFramebufferEXT) },
-    { "glBindImageTexture", "GL_ARB_shader_image_load_store GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glBindImageTexture) },
-    { "glBindImageTextureEXT", "GL_EXT_shader_image_load_store", offsetof(struct opengl_funcs, ext.p_glBindImageTextureEXT) },
-    { "glBindImageTextures", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, ext.p_glBindImageTextures) },
-    { "glBindLightParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glBindLightParameterEXT) },
-    { "glBindMaterialParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glBindMaterialParameterEXT) },
-    { "glBindMultiTextureEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glBindMultiTextureEXT) },
-    { "glBindParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glBindParameterEXT) },
-    { "glBindProgramARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glBindProgramARB) },
-    { "glBindProgramNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glBindProgramNV) },
-    { "glBindProgramPipeline", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glBindProgramPipeline) },
-    { "glBindRenderbuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glBindRenderbuffer) },
-    { "glBindRenderbufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glBindRenderbufferEXT) },
-    { "glBindSampler", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glBindSampler) },
-    { "glBindSamplers", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, ext.p_glBindSamplers) },
-    { "glBindShadingRateImageNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, ext.p_glBindShadingRateImageNV) },
-    { "glBindTexGenParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glBindTexGenParameterEXT) },
-    { "glBindTextureEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, ext.p_glBindTextureEXT) },
-    { "glBindTextureUnit", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glBindTextureUnit) },
-    { "glBindTextureUnitParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glBindTextureUnitParameterEXT) },
-    { "glBindTextures", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, ext.p_glBindTextures) },
-    { "glBindTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glBindTransformFeedback) },
-    { "glBindTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, ext.p_glBindTransformFeedbackNV) },
-    { "glBindVertexArray", "GL_ARB_vertex_array_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glBindVertexArray) },
-    { "glBindVertexArrayAPPLE", "GL_APPLE_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glBindVertexArrayAPPLE) },
-    { "glBindVertexBuffer", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glBindVertexBuffer) },
-    { "glBindVertexBuffers", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, ext.p_glBindVertexBuffers) },
-    { "glBindVertexShaderEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glBindVertexShaderEXT) },
-    { "glBindVideoCaptureStreamBufferNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glBindVideoCaptureStreamBufferNV) },
-    { "glBindVideoCaptureStreamTextureNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glBindVideoCaptureStreamTextureNV) },
-    { "glBinormal3bEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3bEXT) },
-    { "glBinormal3bvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3bvEXT) },
-    { "glBinormal3dEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3dEXT) },
-    { "glBinormal3dvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3dvEXT) },
-    { "glBinormal3fEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3fEXT) },
-    { "glBinormal3fvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3fvEXT) },
-    { "glBinormal3iEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3iEXT) },
-    { "glBinormal3ivEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3ivEXT) },
-    { "glBinormal3sEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3sEXT) },
-    { "glBinormal3svEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormal3svEXT) },
-    { "glBinormalPointerEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glBinormalPointerEXT) },
-    { "glBitmapxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glBitmapxOES) },
-    { "glBlendBarrierKHR", "GL_KHR_blend_equation_advanced", offsetof(struct opengl_funcs, ext.p_glBlendBarrierKHR) },
-    { "glBlendBarrierNV", "GL_NV_blend_equation_advanced", offsetof(struct opengl_funcs, ext.p_glBlendBarrierNV) },
-    { "glBlendColor", "GL_ARB_imaging GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glBlendColor) },
-    { "glBlendColorEXT", "GL_EXT_blend_color", offsetof(struct opengl_funcs, ext.p_glBlendColorEXT) },
-    { "glBlendColorxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glBlendColorxOES) },
-    { "glBlendEquation", "GL_ARB_imaging GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glBlendEquation) },
-    { "glBlendEquationEXT", "GL_EXT_blend_minmax", offsetof(struct opengl_funcs, ext.p_glBlendEquationEXT) },
-    { "glBlendEquationIndexedAMD", "GL_AMD_draw_buffers_blend", offsetof(struct opengl_funcs, ext.p_glBlendEquationIndexedAMD) },
-    { "glBlendEquationSeparate", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glBlendEquationSeparate) },
-    { "glBlendEquationSeparateEXT", "GL_EXT_blend_equation_separate", offsetof(struct opengl_funcs, ext.p_glBlendEquationSeparateEXT) },
-    { "glBlendEquationSeparateIndexedAMD", "GL_AMD_draw_buffers_blend", offsetof(struct opengl_funcs, ext.p_glBlendEquationSeparateIndexedAMD) },
-    { "glBlendEquationSeparatei", "GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glBlendEquationSeparatei) },
-    { "glBlendEquationSeparateiARB", "GL_ARB_draw_buffers_blend", offsetof(struct opengl_funcs, ext.p_glBlendEquationSeparateiARB) },
-    { "glBlendEquationi", "GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glBlendEquationi) },
-    { "glBlendEquationiARB", "GL_ARB_draw_buffers_blend", offsetof(struct opengl_funcs, ext.p_glBlendEquationiARB) },
-    { "glBlendFuncIndexedAMD", "GL_AMD_draw_buffers_blend", offsetof(struct opengl_funcs, ext.p_glBlendFuncIndexedAMD) },
-    { "glBlendFuncSeparate", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glBlendFuncSeparate) },
-    { "glBlendFuncSeparateEXT", "GL_EXT_blend_func_separate", offsetof(struct opengl_funcs, ext.p_glBlendFuncSeparateEXT) },
-    { "glBlendFuncSeparateINGR", "GL_INGR_blend_func_separate", offsetof(struct opengl_funcs, ext.p_glBlendFuncSeparateINGR) },
-    { "glBlendFuncSeparateIndexedAMD", "GL_AMD_draw_buffers_blend", offsetof(struct opengl_funcs, ext.p_glBlendFuncSeparateIndexedAMD) },
-    { "glBlendFuncSeparatei", "GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glBlendFuncSeparatei) },
-    { "glBlendFuncSeparateiARB", "GL_ARB_draw_buffers_blend", offsetof(struct opengl_funcs, ext.p_glBlendFuncSeparateiARB) },
-    { "glBlendFunci", "GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glBlendFunci) },
-    { "glBlendFunciARB", "GL_ARB_draw_buffers_blend", offsetof(struct opengl_funcs, ext.p_glBlendFunciARB) },
-    { "glBlendParameteriNV", "GL_NV_blend_equation_advanced", offsetof(struct opengl_funcs, ext.p_glBlendParameteriNV) },
-    { "glBlitFramebuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glBlitFramebuffer) },
-    { "glBlitFramebufferEXT", "GL_EXT_framebuffer_blit", offsetof(struct opengl_funcs, ext.p_glBlitFramebufferEXT) },
-    { "glBlitNamedFramebuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glBlitNamedFramebuffer) },
-    { "glBufferAddressRangeNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glBufferAddressRangeNV) },
-    { "glBufferAttachMemoryNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, ext.p_glBufferAttachMemoryNV) },
-    { "glBufferData", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glBufferData) },
-    { "glBufferDataARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glBufferDataARB) },
-    { "glBufferPageCommitmentARB", "GL_ARB_sparse_buffer", offsetof(struct opengl_funcs, ext.p_glBufferPageCommitmentARB) },
-    { "glBufferParameteriAPPLE", "GL_APPLE_flush_buffer_range", offsetof(struct opengl_funcs, ext.p_glBufferParameteriAPPLE) },
-    { "glBufferRegionEnabled", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, ext.p_glBufferRegionEnabled) },
-    { "glBufferStorage", "GL_ARB_buffer_storage GL_VERSION_4_4", offsetof(struct opengl_funcs, ext.p_glBufferStorage) },
-    { "glBufferStorageExternalEXT", "GL_EXT_external_buffer", offsetof(struct opengl_funcs, ext.p_glBufferStorageExternalEXT) },
-    { "glBufferStorageMemEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glBufferStorageMemEXT) },
-    { "glBufferSubData", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glBufferSubData) },
-    { "glBufferSubDataARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glBufferSubDataARB) },
-    { "glCallCommandListNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glCallCommandListNV) },
-    { "glCheckFramebufferStatus", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glCheckFramebufferStatus) },
-    { "glCheckFramebufferStatusEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glCheckFramebufferStatusEXT) },
-    { "glCheckNamedFramebufferStatus", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCheckNamedFramebufferStatus) },
-    { "glCheckNamedFramebufferStatusEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCheckNamedFramebufferStatusEXT) },
-    { "glClampColor", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glClampColor) },
-    { "glClampColorARB", "GL_ARB_color_buffer_float", offsetof(struct opengl_funcs, ext.p_glClampColorARB) },
-    { "glClearAccumxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glClearAccumxOES) },
-    { "glClearBufferData", "GL_ARB_clear_buffer_object GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glClearBufferData) },
-    { "glClearBufferSubData", "GL_ARB_clear_buffer_object GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glClearBufferSubData) },
-    { "glClearBufferfi", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glClearBufferfi) },
-    { "glClearBufferfv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glClearBufferfv) },
-    { "glClearBufferiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glClearBufferiv) },
-    { "glClearBufferuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glClearBufferuiv) },
-    { "glClearColorIiEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, ext.p_glClearColorIiEXT) },
-    { "glClearColorIuiEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, ext.p_glClearColorIuiEXT) },
-    { "glClearColorxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glClearColorxOES) },
-    { "glClearDepthdNV", "GL_NV_depth_buffer_float", offsetof(struct opengl_funcs, ext.p_glClearDepthdNV) },
-    { "glClearDepthf", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glClearDepthf) },
-    { "glClearDepthfOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, ext.p_glClearDepthfOES) },
-    { "glClearDepthxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glClearDepthxOES) },
-    { "glClearNamedBufferData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glClearNamedBufferData) },
-    { "glClearNamedBufferDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glClearNamedBufferDataEXT) },
-    { "glClearNamedBufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glClearNamedBufferSubData) },
-    { "glClearNamedBufferSubDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glClearNamedBufferSubDataEXT) },
-    { "glClearNamedFramebufferfi", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glClearNamedFramebufferfi) },
-    { "glClearNamedFramebufferfv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glClearNamedFramebufferfv) },
-    { "glClearNamedFramebufferiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glClearNamedFramebufferiv) },
-    { "glClearNamedFramebufferuiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glClearNamedFramebufferuiv) },
-    { "glClearTexImage", "GL_ARB_clear_texture GL_VERSION_4_4", offsetof(struct opengl_funcs, ext.p_glClearTexImage) },
-    { "glClearTexSubImage", "GL_ARB_clear_texture GL_VERSION_4_4", offsetof(struct opengl_funcs, ext.p_glClearTexSubImage) },
-    { "glClientActiveTexture", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glClientActiveTexture) },
-    { "glClientActiveTextureARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glClientActiveTextureARB) },
-    { "glClientActiveVertexStreamATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glClientActiveVertexStreamATI) },
-    { "glClientAttribDefaultEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glClientAttribDefaultEXT) },
-    { "glClientWaitSemaphoreui64NVX", "GL_NVX_progress_fence", offsetof(struct opengl_funcs, ext.p_glClientWaitSemaphoreui64NVX) },
-    { "glClientWaitSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glClientWaitSync) },
-    { "glClipControl", "GL_ARB_clip_control GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glClipControl) },
-    { "glClipPlanefOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, ext.p_glClipPlanefOES) },
-    { "glClipPlanexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glClipPlanexOES) },
-    { "glColor3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glColor3fVertex3fSUN) },
-    { "glColor3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glColor3fVertex3fvSUN) },
-    { "glColor3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glColor3hNV) },
-    { "glColor3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glColor3hvNV) },
-    { "glColor3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glColor3xOES) },
-    { "glColor3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glColor3xvOES) },
-    { "glColor4fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glColor4fNormal3fVertex3fSUN) },
-    { "glColor4fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glColor4fNormal3fVertex3fvSUN) },
-    { "glColor4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glColor4hNV) },
-    { "glColor4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glColor4hvNV) },
-    { "glColor4ubVertex2fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glColor4ubVertex2fSUN) },
-    { "glColor4ubVertex2fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glColor4ubVertex2fvSUN) },
-    { "glColor4ubVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glColor4ubVertex3fSUN) },
-    { "glColor4ubVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glColor4ubVertex3fvSUN) },
-    { "glColor4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glColor4xOES) },
-    { "glColor4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glColor4xvOES) },
-    { "glColorFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glColorFormatNV) },
-    { "glColorFragmentOp1ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glColorFragmentOp1ATI) },
-    { "glColorFragmentOp2ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glColorFragmentOp2ATI) },
-    { "glColorFragmentOp3ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glColorFragmentOp3ATI) },
-    { "glColorMaskIndexedEXT", "GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, ext.p_glColorMaskIndexedEXT) },
-    { "glColorMaski", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glColorMaski) },
-    { "glColorP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glColorP3ui) },
-    { "glColorP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glColorP3uiv) },
-    { "glColorP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glColorP4ui) },
-    { "glColorP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glColorP4uiv) },
-    { "glColorPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, ext.p_glColorPointerEXT) },
-    { "glColorPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, ext.p_glColorPointerListIBM) },
-    { "glColorPointervINTEL", "GL_INTEL_parallel_arrays", offsetof(struct opengl_funcs, ext.p_glColorPointervINTEL) },
-    { "glColorSubTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glColorSubTable) },
-    { "glColorSubTableEXT", "GL_EXT_color_subtable", offsetof(struct opengl_funcs, ext.p_glColorSubTableEXT) },
-    { "glColorTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glColorTable) },
-    { "glColorTableEXT", "GL_EXT_paletted_texture", offsetof(struct opengl_funcs, ext.p_glColorTableEXT) },
-    { "glColorTableParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glColorTableParameterfv) },
-    { "glColorTableParameterfvSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, ext.p_glColorTableParameterfvSGI) },
-    { "glColorTableParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glColorTableParameteriv) },
-    { "glColorTableParameterivSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, ext.p_glColorTableParameterivSGI) },
-    { "glColorTableSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, ext.p_glColorTableSGI) },
-    { "glCombinerInputNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glCombinerInputNV) },
-    { "glCombinerOutputNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glCombinerOutputNV) },
-    { "glCombinerParameterfNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glCombinerParameterfNV) },
-    { "glCombinerParameterfvNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glCombinerParameterfvNV) },
-    { "glCombinerParameteriNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glCombinerParameteriNV) },
-    { "glCombinerParameterivNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glCombinerParameterivNV) },
-    { "glCombinerStageParameterfvNV", "GL_NV_register_combiners2", offsetof(struct opengl_funcs, ext.p_glCombinerStageParameterfvNV) },
-    { "glCommandListSegmentsNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glCommandListSegmentsNV) },
-    { "glCompileCommandListNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glCompileCommandListNV) },
-    { "glCompileShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glCompileShader) },
-    { "glCompileShaderARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glCompileShaderARB) },
-    { "glCompileShaderIncludeARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, ext.p_glCompileShaderIncludeARB) },
-    { "glCompressedMultiTexImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedMultiTexImage1DEXT) },
-    { "glCompressedMultiTexImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedMultiTexImage2DEXT) },
-    { "glCompressedMultiTexImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedMultiTexImage3DEXT) },
-    { "glCompressedMultiTexSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedMultiTexSubImage1DEXT) },
-    { "glCompressedMultiTexSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedMultiTexSubImage2DEXT) },
-    { "glCompressedMultiTexSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedMultiTexSubImage3DEXT) },
-    { "glCompressedTexImage1D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glCompressedTexImage1D) },
-    { "glCompressedTexImage1DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, ext.p_glCompressedTexImage1DARB) },
-    { "glCompressedTexImage2D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glCompressedTexImage2D) },
-    { "glCompressedTexImage2DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, ext.p_glCompressedTexImage2DARB) },
-    { "glCompressedTexImage3D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glCompressedTexImage3D) },
-    { "glCompressedTexImage3DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, ext.p_glCompressedTexImage3DARB) },
-    { "glCompressedTexSubImage1D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glCompressedTexSubImage1D) },
-    { "glCompressedTexSubImage1DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, ext.p_glCompressedTexSubImage1DARB) },
-    { "glCompressedTexSubImage2D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glCompressedTexSubImage2D) },
-    { "glCompressedTexSubImage2DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, ext.p_glCompressedTexSubImage2DARB) },
-    { "glCompressedTexSubImage3D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glCompressedTexSubImage3D) },
-    { "glCompressedTexSubImage3DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, ext.p_glCompressedTexSubImage3DARB) },
-    { "glCompressedTextureImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedTextureImage1DEXT) },
-    { "glCompressedTextureImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedTextureImage2DEXT) },
-    { "glCompressedTextureImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedTextureImage3DEXT) },
-    { "glCompressedTextureSubImage1D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCompressedTextureSubImage1D) },
-    { "glCompressedTextureSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedTextureSubImage1DEXT) },
-    { "glCompressedTextureSubImage2D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCompressedTextureSubImage2D) },
-    { "glCompressedTextureSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedTextureSubImage2DEXT) },
-    { "glCompressedTextureSubImage3D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCompressedTextureSubImage3D) },
-    { "glCompressedTextureSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCompressedTextureSubImage3DEXT) },
-    { "glConservativeRasterParameterfNV", "GL_NV_conservative_raster_dilate", offsetof(struct opengl_funcs, ext.p_glConservativeRasterParameterfNV) },
-    { "glConservativeRasterParameteriNV", "GL_NV_conservative_raster_pre_snap_triangles", offsetof(struct opengl_funcs, ext.p_glConservativeRasterParameteriNV) },
-    { "glConvolutionFilter1D", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glConvolutionFilter1D) },
-    { "glConvolutionFilter1DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glConvolutionFilter1DEXT) },
-    { "glConvolutionFilter2D", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glConvolutionFilter2D) },
-    { "glConvolutionFilter2DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glConvolutionFilter2DEXT) },
-    { "glConvolutionParameterf", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glConvolutionParameterf) },
-    { "glConvolutionParameterfEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glConvolutionParameterfEXT) },
-    { "glConvolutionParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glConvolutionParameterfv) },
-    { "glConvolutionParameterfvEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glConvolutionParameterfvEXT) },
-    { "glConvolutionParameteri", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glConvolutionParameteri) },
-    { "glConvolutionParameteriEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glConvolutionParameteriEXT) },
-    { "glConvolutionParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glConvolutionParameteriv) },
-    { "glConvolutionParameterivEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glConvolutionParameterivEXT) },
-    { "glConvolutionParameterxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glConvolutionParameterxOES) },
-    { "glConvolutionParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glConvolutionParameterxvOES) },
-    { "glCopyBufferSubData", "GL_ARB_copy_buffer GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glCopyBufferSubData) },
-    { "glCopyColorSubTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glCopyColorSubTable) },
-    { "glCopyColorSubTableEXT", "GL_EXT_color_subtable", offsetof(struct opengl_funcs, ext.p_glCopyColorSubTableEXT) },
-    { "glCopyColorTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glCopyColorTable) },
-    { "glCopyColorTableSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, ext.p_glCopyColorTableSGI) },
-    { "glCopyConvolutionFilter1D", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glCopyConvolutionFilter1D) },
-    { "glCopyConvolutionFilter1DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glCopyConvolutionFilter1DEXT) },
-    { "glCopyConvolutionFilter2D", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glCopyConvolutionFilter2D) },
-    { "glCopyConvolutionFilter2DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glCopyConvolutionFilter2DEXT) },
-    { "glCopyImageSubData", "GL_ARB_copy_image GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glCopyImageSubData) },
-    { "glCopyImageSubDataNV", "GL_NV_copy_image", offsetof(struct opengl_funcs, ext.p_glCopyImageSubDataNV) },
-    { "glCopyMultiTexImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyMultiTexImage1DEXT) },
-    { "glCopyMultiTexImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyMultiTexImage2DEXT) },
-    { "glCopyMultiTexSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyMultiTexSubImage1DEXT) },
-    { "glCopyMultiTexSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyMultiTexSubImage2DEXT) },
-    { "glCopyMultiTexSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyMultiTexSubImage3DEXT) },
-    { "glCopyNamedBufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCopyNamedBufferSubData) },
-    { "glCopyPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glCopyPathNV) },
-    { "glCopyTexImage1DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, ext.p_glCopyTexImage1DEXT) },
-    { "glCopyTexImage2DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, ext.p_glCopyTexImage2DEXT) },
-    { "glCopyTexSubImage1DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, ext.p_glCopyTexSubImage1DEXT) },
-    { "glCopyTexSubImage2DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, ext.p_glCopyTexSubImage2DEXT) },
-    { "glCopyTexSubImage3D", "GL_VERSION_1_2", offsetof(struct opengl_funcs, ext.p_glCopyTexSubImage3D) },
-    { "glCopyTexSubImage3DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, ext.p_glCopyTexSubImage3DEXT) },
-    { "glCopyTextureImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyTextureImage1DEXT) },
-    { "glCopyTextureImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyTextureImage2DEXT) },
-    { "glCopyTextureSubImage1D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCopyTextureSubImage1D) },
-    { "glCopyTextureSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyTextureSubImage1DEXT) },
-    { "glCopyTextureSubImage2D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCopyTextureSubImage2D) },
-    { "glCopyTextureSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyTextureSubImage2DEXT) },
-    { "glCopyTextureSubImage3D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCopyTextureSubImage3D) },
-    { "glCopyTextureSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glCopyTextureSubImage3DEXT) },
-    { "glCoverFillPathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glCoverFillPathInstancedNV) },
-    { "glCoverFillPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glCoverFillPathNV) },
-    { "glCoverStrokePathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glCoverStrokePathInstancedNV) },
-    { "glCoverStrokePathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glCoverStrokePathNV) },
-    { "glCoverageModulationNV", "GL_NV_framebuffer_mixed_samples", offsetof(struct opengl_funcs, ext.p_glCoverageModulationNV) },
-    { "glCoverageModulationTableNV", "GL_NV_framebuffer_mixed_samples", offsetof(struct opengl_funcs, ext.p_glCoverageModulationTableNV) },
-    { "glCreateBuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCreateBuffers) },
-    { "glCreateCommandListsNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glCreateCommandListsNV) },
-    { "glCreateFramebuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCreateFramebuffers) },
-    { "glCreateMemoryObjectsEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glCreateMemoryObjectsEXT) },
-    { "glCreatePerfQueryINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glCreatePerfQueryINTEL) },
-    { "glCreateProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glCreateProgram) },
-    { "glCreateProgramObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glCreateProgramObjectARB) },
-    { "glCreateProgramPipelines", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCreateProgramPipelines) },
-    { "glCreateProgressFenceNVX", "GL_NVX_progress_fence", offsetof(struct opengl_funcs, ext.p_glCreateProgressFenceNVX) },
-    { "glCreateQueries", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCreateQueries) },
-    { "glCreateRenderbuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCreateRenderbuffers) },
-    { "glCreateSamplers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCreateSamplers) },
-    { "glCreateShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glCreateShader) },
-    { "glCreateShaderObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glCreateShaderObjectARB) },
-    { "glCreateShaderProgramEXT", "GL_EXT_separate_shader_objects", offsetof(struct opengl_funcs, ext.p_glCreateShaderProgramEXT) },
-    { "glCreateShaderProgramv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glCreateShaderProgramv) },
-    { "glCreateStatesNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glCreateStatesNV) },
-    { "glCreateSyncFromCLeventARB", "GL_ARB_cl_event", offsetof(struct opengl_funcs, ext.p_glCreateSyncFromCLeventARB) },
-    { "glCreateTextures", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCreateTextures) },
-    { "glCreateTransformFeedbacks", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCreateTransformFeedbacks) },
-    { "glCreateVertexArrays", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glCreateVertexArrays) },
-    { "glCullParameterdvEXT", "GL_EXT_cull_vertex", offsetof(struct opengl_funcs, ext.p_glCullParameterdvEXT) },
-    { "glCullParameterfvEXT", "GL_EXT_cull_vertex", offsetof(struct opengl_funcs, ext.p_glCullParameterfvEXT) },
-    { "glCurrentPaletteMatrixARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, ext.p_glCurrentPaletteMatrixARB) },
-    { "glDebugMessageCallback", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glDebugMessageCallback) },
-    { "glDebugMessageCallbackAMD", "GL_AMD_debug_output", offsetof(struct opengl_funcs, ext.p_glDebugMessageCallbackAMD) },
-    { "glDebugMessageCallbackARB", "GL_ARB_debug_output", offsetof(struct opengl_funcs, ext.p_glDebugMessageCallbackARB) },
-    { "glDebugMessageControl", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glDebugMessageControl) },
-    { "glDebugMessageControlARB", "GL_ARB_debug_output", offsetof(struct opengl_funcs, ext.p_glDebugMessageControlARB) },
-    { "glDebugMessageEnableAMD", "GL_AMD_debug_output", offsetof(struct opengl_funcs, ext.p_glDebugMessageEnableAMD) },
-    { "glDebugMessageInsert", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glDebugMessageInsert) },
-    { "glDebugMessageInsertAMD", "GL_AMD_debug_output", offsetof(struct opengl_funcs, ext.p_glDebugMessageInsertAMD) },
-    { "glDebugMessageInsertARB", "GL_ARB_debug_output", offsetof(struct opengl_funcs, ext.p_glDebugMessageInsertARB) },
-    { "glDeformSGIX", "GL_SGIX_polynomial_ffd", offsetof(struct opengl_funcs, ext.p_glDeformSGIX) },
-    { "glDeformationMap3dSGIX", "GL_SGIX_polynomial_ffd", offsetof(struct opengl_funcs, ext.p_glDeformationMap3dSGIX) },
-    { "glDeformationMap3fSGIX", "GL_SGIX_polynomial_ffd", offsetof(struct opengl_funcs, ext.p_glDeformationMap3fSGIX) },
-    { "glDeleteAsyncMarkersSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, ext.p_glDeleteAsyncMarkersSGIX) },
-    { "glDeleteBufferRegion", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, ext.p_glDeleteBufferRegion) },
-    { "glDeleteBuffers", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glDeleteBuffers) },
-    { "glDeleteBuffersARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glDeleteBuffersARB) },
-    { "glDeleteCommandListsNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glDeleteCommandListsNV) },
-    { "glDeleteFencesAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, ext.p_glDeleteFencesAPPLE) },
-    { "glDeleteFencesNV", "GL_NV_fence", offsetof(struct opengl_funcs, ext.p_glDeleteFencesNV) },
-    { "glDeleteFragmentShaderATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glDeleteFragmentShaderATI) },
-    { "glDeleteFramebuffers", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glDeleteFramebuffers) },
-    { "glDeleteFramebuffersEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glDeleteFramebuffersEXT) },
-    { "glDeleteMemoryObjectsEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glDeleteMemoryObjectsEXT) },
-    { "glDeleteNamedStringARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, ext.p_glDeleteNamedStringARB) },
-    { "glDeleteNamesAMD", "GL_AMD_name_gen_delete", offsetof(struct opengl_funcs, ext.p_glDeleteNamesAMD) },
-    { "glDeleteObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glDeleteObjectARB) },
-    { "glDeleteObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glDeleteObjectBufferATI) },
-    { "glDeleteOcclusionQueriesNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, ext.p_glDeleteOcclusionQueriesNV) },
-    { "glDeletePathsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glDeletePathsNV) },
-    { "glDeletePerfMonitorsAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glDeletePerfMonitorsAMD) },
-    { "glDeletePerfQueryINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glDeletePerfQueryINTEL) },
-    { "glDeleteProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glDeleteProgram) },
-    { "glDeleteProgramPipelines", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glDeleteProgramPipelines) },
-    { "glDeleteProgramsARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glDeleteProgramsARB) },
-    { "glDeleteProgramsNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glDeleteProgramsNV) },
-    { "glDeleteQueries", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glDeleteQueries) },
-    { "glDeleteQueriesARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, ext.p_glDeleteQueriesARB) },
-    { "glDeleteQueryResourceTagNV", "GL_NV_query_resource_tag", offsetof(struct opengl_funcs, ext.p_glDeleteQueryResourceTagNV) },
-    { "glDeleteRenderbuffers", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glDeleteRenderbuffers) },
-    { "glDeleteRenderbuffersEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glDeleteRenderbuffersEXT) },
-    { "glDeleteSamplers", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glDeleteSamplers) },
-    { "glDeleteSemaphoresEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, ext.p_glDeleteSemaphoresEXT) },
-    { "glDeleteShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glDeleteShader) },
-    { "glDeleteStatesNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glDeleteStatesNV) },
-    { "glDeleteSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glDeleteSync) },
-    { "glDeleteTexturesEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, ext.p_glDeleteTexturesEXT) },
-    { "glDeleteTransformFeedbacks", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glDeleteTransformFeedbacks) },
-    { "glDeleteTransformFeedbacksNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, ext.p_glDeleteTransformFeedbacksNV) },
-    { "glDeleteVertexArrays", "GL_ARB_vertex_array_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glDeleteVertexArrays) },
-    { "glDeleteVertexArraysAPPLE", "GL_APPLE_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glDeleteVertexArraysAPPLE) },
-    { "glDeleteVertexShaderEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glDeleteVertexShaderEXT) },
-    { "glDepthBoundsEXT", "GL_EXT_depth_bounds_test", offsetof(struct opengl_funcs, ext.p_glDepthBoundsEXT) },
-    { "glDepthBoundsdNV", "GL_NV_depth_buffer_float", offsetof(struct opengl_funcs, ext.p_glDepthBoundsdNV) },
-    { "glDepthRangeArraydvNV", "GL_ARB_viewport_array", offsetof(struct opengl_funcs, ext.p_glDepthRangeArraydvNV) },
-    { "glDepthRangeArrayv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glDepthRangeArrayv) },
-    { "glDepthRangeIndexed", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glDepthRangeIndexed) },
-    { "glDepthRangeIndexeddNV", "GL_ARB_viewport_array", offsetof(struct opengl_funcs, ext.p_glDepthRangeIndexeddNV) },
-    { "glDepthRangedNV", "GL_NV_depth_buffer_float", offsetof(struct opengl_funcs, ext.p_glDepthRangedNV) },
-    { "glDepthRangef", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glDepthRangef) },
-    { "glDepthRangefOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, ext.p_glDepthRangefOES) },
-    { "glDepthRangexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glDepthRangexOES) },
-    { "glDetachObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glDetachObjectARB) },
-    { "glDetachShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glDetachShader) },
-    { "glDetailTexFuncSGIS", "GL_SGIS_detail_texture", offsetof(struct opengl_funcs, ext.p_glDetailTexFuncSGIS) },
-    { "glDisableClientStateIndexedEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glDisableClientStateIndexedEXT) },
-    { "glDisableClientStateiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glDisableClientStateiEXT) },
-    { "glDisableIndexedEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, ext.p_glDisableIndexedEXT) },
-    { "glDisableVariantClientStateEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glDisableVariantClientStateEXT) },
-    { "glDisableVertexArrayAttrib", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glDisableVertexArrayAttrib) },
-    { "glDisableVertexArrayAttribEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glDisableVertexArrayAttribEXT) },
-    { "glDisableVertexArrayEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glDisableVertexArrayEXT) },
-    { "glDisableVertexAttribAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, ext.p_glDisableVertexAttribAPPLE) },
-    { "glDisableVertexAttribArray", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glDisableVertexAttribArray) },
-    { "glDisableVertexAttribArrayARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glDisableVertexAttribArrayARB) },
-    { "glDisablei", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glDisablei) },
-    { "glDispatchCompute", "GL_ARB_compute_shader GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glDispatchCompute) },
-    { "glDispatchComputeGroupSizeARB", "GL_ARB_compute_variable_group_size", offsetof(struct opengl_funcs, ext.p_glDispatchComputeGroupSizeARB) },
-    { "glDispatchComputeIndirect", "GL_ARB_compute_shader GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glDispatchComputeIndirect) },
-    { "glDrawArraysEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, ext.p_glDrawArraysEXT) },
-    { "glDrawArraysIndirect", "GL_ARB_draw_indirect GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glDrawArraysIndirect) },
-    { "glDrawArraysInstanced", "GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glDrawArraysInstanced) },
-    { "glDrawArraysInstancedARB", "GL_ARB_draw_instanced", offsetof(struct opengl_funcs, ext.p_glDrawArraysInstancedARB) },
-    { "glDrawArraysInstancedBaseInstance", "GL_ARB_base_instance GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glDrawArraysInstancedBaseInstance) },
-    { "glDrawArraysInstancedEXT", "GL_EXT_draw_instanced", offsetof(struct opengl_funcs, ext.p_glDrawArraysInstancedEXT) },
-    { "glDrawBufferRegion", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, ext.p_glDrawBufferRegion) },
-    { "glDrawBuffers", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glDrawBuffers) },
-    { "glDrawBuffersARB", "GL_ARB_draw_buffers", offsetof(struct opengl_funcs, ext.p_glDrawBuffersARB) },
-    { "glDrawBuffersATI", "GL_ATI_draw_buffers", offsetof(struct opengl_funcs, ext.p_glDrawBuffersATI) },
-    { "glDrawCommandsAddressNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glDrawCommandsAddressNV) },
-    { "glDrawCommandsNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glDrawCommandsNV) },
-    { "glDrawCommandsStatesAddressNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glDrawCommandsStatesAddressNV) },
-    { "glDrawCommandsStatesNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glDrawCommandsStatesNV) },
-    { "glDrawElementArrayAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, ext.p_glDrawElementArrayAPPLE) },
-    { "glDrawElementArrayATI", "GL_ATI_element_array", offsetof(struct opengl_funcs, ext.p_glDrawElementArrayATI) },
-    { "glDrawElementsBaseVertex", "GL_ARB_draw_elements_base_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glDrawElementsBaseVertex) },
-    { "glDrawElementsIndirect", "GL_ARB_draw_indirect GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glDrawElementsIndirect) },
-    { "glDrawElementsInstanced", "GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glDrawElementsInstanced) },
-    { "glDrawElementsInstancedARB", "GL_ARB_draw_instanced", offsetof(struct opengl_funcs, ext.p_glDrawElementsInstancedARB) },
-    { "glDrawElementsInstancedBaseInstance", "GL_ARB_base_instance GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glDrawElementsInstancedBaseInstance) },
-    { "glDrawElementsInstancedBaseVertex", "GL_ARB_draw_elements_base_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glDrawElementsInstancedBaseVertex) },
-    { "glDrawElementsInstancedBaseVertexBaseInstance", "GL_ARB_base_instance GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glDrawElementsInstancedBaseVertexBaseInstance) },
-    { "glDrawElementsInstancedEXT", "GL_EXT_draw_instanced", offsetof(struct opengl_funcs, ext.p_glDrawElementsInstancedEXT) },
-    { "glDrawMeshArraysSUN", "GL_SUN_mesh_array", offsetof(struct opengl_funcs, ext.p_glDrawMeshArraysSUN) },
-    { "glDrawMeshTasksIndirectNV", "GL_NV_mesh_shader", offsetof(struct opengl_funcs, ext.p_glDrawMeshTasksIndirectNV) },
-    { "glDrawMeshTasksNV", "GL_NV_mesh_shader", offsetof(struct opengl_funcs, ext.p_glDrawMeshTasksNV) },
-    { "glDrawRangeElementArrayAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, ext.p_glDrawRangeElementArrayAPPLE) },
-    { "glDrawRangeElementArrayATI", "GL_ATI_element_array", offsetof(struct opengl_funcs, ext.p_glDrawRangeElementArrayATI) },
-    { "glDrawRangeElements", "GL_VERSION_1_2", offsetof(struct opengl_funcs, ext.p_glDrawRangeElements) },
-    { "glDrawRangeElementsBaseVertex", "GL_ARB_draw_elements_base_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glDrawRangeElementsBaseVertex) },
-    { "glDrawRangeElementsEXT", "GL_EXT_draw_range_elements", offsetof(struct opengl_funcs, ext.p_glDrawRangeElementsEXT) },
-    { "glDrawTextureNV", "GL_NV_draw_texture", offsetof(struct opengl_funcs, ext.p_glDrawTextureNV) },
-    { "glDrawTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glDrawTransformFeedback) },
-    { "glDrawTransformFeedbackInstanced", "GL_ARB_transform_feedback_instanced GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glDrawTransformFeedbackInstanced) },
-    { "glDrawTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, ext.p_glDrawTransformFeedbackNV) },
-    { "glDrawTransformFeedbackStream", "GL_ARB_transform_feedback3 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glDrawTransformFeedbackStream) },
-    { "glDrawTransformFeedbackStreamInstanced", "GL_ARB_transform_feedback_instanced GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glDrawTransformFeedbackStreamInstanced) },
-    { "glDrawVkImageNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, ext.p_glDrawVkImageNV) },
-    { "glEGLImageTargetTexStorageEXT", "GL_EXT_EGL_image_storage", offsetof(struct opengl_funcs, ext.p_glEGLImageTargetTexStorageEXT) },
-    { "glEGLImageTargetTextureStorageEXT", "GL_EXT_EGL_image_storage", offsetof(struct opengl_funcs, ext.p_glEGLImageTargetTextureStorageEXT) },
-    { "glEdgeFlagFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glEdgeFlagFormatNV) },
-    { "glEdgeFlagPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, ext.p_glEdgeFlagPointerEXT) },
-    { "glEdgeFlagPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, ext.p_glEdgeFlagPointerListIBM) },
-    { "glElementPointerAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, ext.p_glElementPointerAPPLE) },
-    { "glElementPointerATI", "GL_ATI_element_array", offsetof(struct opengl_funcs, ext.p_glElementPointerATI) },
-    { "glEnableClientStateIndexedEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glEnableClientStateIndexedEXT) },
-    { "glEnableClientStateiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glEnableClientStateiEXT) },
-    { "glEnableIndexedEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, ext.p_glEnableIndexedEXT) },
-    { "glEnableVariantClientStateEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glEnableVariantClientStateEXT) },
-    { "glEnableVertexArrayAttrib", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glEnableVertexArrayAttrib) },
-    { "glEnableVertexArrayAttribEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glEnableVertexArrayAttribEXT) },
-    { "glEnableVertexArrayEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glEnableVertexArrayEXT) },
-    { "glEnableVertexAttribAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, ext.p_glEnableVertexAttribAPPLE) },
-    { "glEnableVertexAttribArray", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glEnableVertexAttribArray) },
-    { "glEnableVertexAttribArrayARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glEnableVertexAttribArrayARB) },
-    { "glEnablei", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glEnablei) },
-    { "glEndConditionalRender", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glEndConditionalRender) },
-    { "glEndConditionalRenderNV", "GL_NV_conditional_render", offsetof(struct opengl_funcs, ext.p_glEndConditionalRenderNV) },
-    { "glEndConditionalRenderNVX", "GL_NVX_conditional_render", offsetof(struct opengl_funcs, ext.p_glEndConditionalRenderNVX) },
-    { "glEndFragmentShaderATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glEndFragmentShaderATI) },
-    { "glEndOcclusionQueryNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, ext.p_glEndOcclusionQueryNV) },
-    { "glEndPerfMonitorAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glEndPerfMonitorAMD) },
-    { "glEndPerfQueryINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glEndPerfQueryINTEL) },
-    { "glEndQuery", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glEndQuery) },
-    { "glEndQueryARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, ext.p_glEndQueryARB) },
-    { "glEndQueryIndexed", "GL_ARB_transform_feedback3 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glEndQueryIndexed) },
-    { "glEndTransformFeedback", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glEndTransformFeedback) },
-    { "glEndTransformFeedbackEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, ext.p_glEndTransformFeedbackEXT) },
-    { "glEndTransformFeedbackNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glEndTransformFeedbackNV) },
-    { "glEndVertexShaderEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glEndVertexShaderEXT) },
-    { "glEndVideoCaptureNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glEndVideoCaptureNV) },
-    { "glEvalCoord1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glEvalCoord1xOES) },
-    { "glEvalCoord1xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glEvalCoord1xvOES) },
-    { "glEvalCoord2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glEvalCoord2xOES) },
-    { "glEvalCoord2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glEvalCoord2xvOES) },
-    { "glEvalMapsNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, ext.p_glEvalMapsNV) },
-    { "glEvaluateDepthValuesARB", "GL_ARB_sample_locations", offsetof(struct opengl_funcs, ext.p_glEvaluateDepthValuesARB) },
-    { "glExecuteProgramNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glExecuteProgramNV) },
-    { "glExtractComponentEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glExtractComponentEXT) },
-    { "glFeedbackBufferxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glFeedbackBufferxOES) },
-    { "glFenceSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glFenceSync) },
-    { "glFinalCombinerInputNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glFinalCombinerInputNV) },
-    { "glFinishAsyncSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, ext.p_glFinishAsyncSGIX) },
-    { "glFinishFenceAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, ext.p_glFinishFenceAPPLE) },
-    { "glFinishFenceNV", "GL_NV_fence", offsetof(struct opengl_funcs, ext.p_glFinishFenceNV) },
-    { "glFinishObjectAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, ext.p_glFinishObjectAPPLE) },
-    { "glFinishTextureSUNX", "GL_SUNX_constant_data", offsetof(struct opengl_funcs, ext.p_glFinishTextureSUNX) },
-    { "glFlushMappedBufferRange", "GL_ARB_map_buffer_range GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glFlushMappedBufferRange) },
-    { "glFlushMappedBufferRangeAPPLE", "GL_APPLE_flush_buffer_range", offsetof(struct opengl_funcs, ext.p_glFlushMappedBufferRangeAPPLE) },
-    { "glFlushMappedNamedBufferRange", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glFlushMappedNamedBufferRange) },
-    { "glFlushMappedNamedBufferRangeEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glFlushMappedNamedBufferRangeEXT) },
-    { "glFlushPixelDataRangeNV", "GL_NV_pixel_data_range", offsetof(struct opengl_funcs, ext.p_glFlushPixelDataRangeNV) },
-    { "glFlushRasterSGIX", "GL_SGIX_flush_raster", offsetof(struct opengl_funcs, ext.p_glFlushRasterSGIX) },
-    { "glFlushStaticDataIBM", "GL_IBM_static_data", offsetof(struct opengl_funcs, ext.p_glFlushStaticDataIBM) },
-    { "glFlushVertexArrayRangeAPPLE", "GL_APPLE_vertex_array_range", offsetof(struct opengl_funcs, ext.p_glFlushVertexArrayRangeAPPLE) },
-    { "glFlushVertexArrayRangeNV", "GL_NV_vertex_array_range", offsetof(struct opengl_funcs, ext.p_glFlushVertexArrayRangeNV) },
-    { "glFogCoordFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glFogCoordFormatNV) },
-    { "glFogCoordPointer", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glFogCoordPointer) },
-    { "glFogCoordPointerEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, ext.p_glFogCoordPointerEXT) },
-    { "glFogCoordPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, ext.p_glFogCoordPointerListIBM) },
-    { "glFogCoordd", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glFogCoordd) },
-    { "glFogCoorddEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, ext.p_glFogCoorddEXT) },
-    { "glFogCoorddv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glFogCoorddv) },
-    { "glFogCoorddvEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, ext.p_glFogCoorddvEXT) },
-    { "glFogCoordf", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glFogCoordf) },
-    { "glFogCoordfEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, ext.p_glFogCoordfEXT) },
-    { "glFogCoordfv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glFogCoordfv) },
-    { "glFogCoordfvEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, ext.p_glFogCoordfvEXT) },
-    { "glFogCoordhNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glFogCoordhNV) },
-    { "glFogCoordhvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glFogCoordhvNV) },
-    { "glFogFuncSGIS", "GL_SGIS_fog_function", offsetof(struct opengl_funcs, ext.p_glFogFuncSGIS) },
-    { "glFogxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glFogxOES) },
-    { "glFogxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glFogxvOES) },
-    { "glFragmentColorMaterialSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentColorMaterialSGIX) },
-    { "glFragmentCoverageColorNV", "GL_NV_fragment_coverage_to_color", offsetof(struct opengl_funcs, ext.p_glFragmentCoverageColorNV) },
-    { "glFragmentLightModelfSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentLightModelfSGIX) },
-    { "glFragmentLightModelfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentLightModelfvSGIX) },
-    { "glFragmentLightModeliSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentLightModeliSGIX) },
-    { "glFragmentLightModelivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentLightModelivSGIX) },
-    { "glFragmentLightfSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentLightfSGIX) },
-    { "glFragmentLightfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentLightfvSGIX) },
-    { "glFragmentLightiSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentLightiSGIX) },
-    { "glFragmentLightivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentLightivSGIX) },
-    { "glFragmentMaterialfSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentMaterialfSGIX) },
-    { "glFragmentMaterialfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentMaterialfvSGIX) },
-    { "glFragmentMaterialiSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentMaterialiSGIX) },
-    { "glFragmentMaterialivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glFragmentMaterialivSGIX) },
-    { "glFrameTerminatorGREMEDY", "GL_GREMEDY_frame_terminator", offsetof(struct opengl_funcs, ext.p_glFrameTerminatorGREMEDY) },
-    { "glFrameZoomSGIX", "GL_SGIX_framezoom", offsetof(struct opengl_funcs, ext.p_glFrameZoomSGIX) },
-    { "glFramebufferDrawBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glFramebufferDrawBufferEXT) },
-    { "glFramebufferDrawBuffersEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glFramebufferDrawBuffersEXT) },
-    { "glFramebufferFetchBarrierEXT", "GL_EXT_shader_framebuffer_fetch_non_coherent", offsetof(struct opengl_funcs, ext.p_glFramebufferFetchBarrierEXT) },
-    { "glFramebufferParameteri", "GL_ARB_framebuffer_no_attachments GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glFramebufferParameteri) },
-    { "glFramebufferParameteriMESA", "GL_MESA_framebuffer_flip_y", offsetof(struct opengl_funcs, ext.p_glFramebufferParameteriMESA) },
-    { "glFramebufferReadBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glFramebufferReadBufferEXT) },
-    { "glFramebufferRenderbuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glFramebufferRenderbuffer) },
-    { "glFramebufferRenderbufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glFramebufferRenderbufferEXT) },
-    { "glFramebufferSampleLocationsfvARB", "GL_ARB_sample_locations", offsetof(struct opengl_funcs, ext.p_glFramebufferSampleLocationsfvARB) },
-    { "glFramebufferSampleLocationsfvNV", "GL_NV_sample_locations", offsetof(struct opengl_funcs, ext.p_glFramebufferSampleLocationsfvNV) },
-    { "glFramebufferSamplePositionsfvAMD", "GL_AMD_framebuffer_sample_positions", offsetof(struct opengl_funcs, ext.p_glFramebufferSamplePositionsfvAMD) },
-    { "glFramebufferTexture", "GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glFramebufferTexture) },
-    { "glFramebufferTexture1D", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glFramebufferTexture1D) },
-    { "glFramebufferTexture1DEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glFramebufferTexture1DEXT) },
-    { "glFramebufferTexture2D", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glFramebufferTexture2D) },
-    { "glFramebufferTexture2DEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glFramebufferTexture2DEXT) },
-    { "glFramebufferTexture3D", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glFramebufferTexture3D) },
-    { "glFramebufferTexture3DEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glFramebufferTexture3DEXT) },
-    { "glFramebufferTextureARB", "GL_ARB_geometry_shader4", offsetof(struct opengl_funcs, ext.p_glFramebufferTextureARB) },
-    { "glFramebufferTextureEXT", "GL_NV_geometry_program4", offsetof(struct opengl_funcs, ext.p_glFramebufferTextureEXT) },
-    { "glFramebufferTextureFaceARB", "GL_ARB_geometry_shader4", offsetof(struct opengl_funcs, ext.p_glFramebufferTextureFaceARB) },
-    { "glFramebufferTextureFaceEXT", "GL_NV_geometry_program4", offsetof(struct opengl_funcs, ext.p_glFramebufferTextureFaceEXT) },
-    { "glFramebufferTextureLayer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glFramebufferTextureLayer) },
-    { "glFramebufferTextureLayerARB", "GL_ARB_geometry_shader4", offsetof(struct opengl_funcs, ext.p_glFramebufferTextureLayerARB) },
-    { "glFramebufferTextureLayerEXT", "GL_EXT_texture_array GL_NV_geometry_program4", offsetof(struct opengl_funcs, ext.p_glFramebufferTextureLayerEXT) },
-    { "glFramebufferTextureMultiviewOVR", "GL_OVR_multiview", offsetof(struct opengl_funcs, ext.p_glFramebufferTextureMultiviewOVR) },
-    { "glFreeObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glFreeObjectBufferATI) },
-    { "glFrustumfOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, ext.p_glFrustumfOES) },
-    { "glFrustumxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glFrustumxOES) },
-    { "glGenAsyncMarkersSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, ext.p_glGenAsyncMarkersSGIX) },
-    { "glGenBuffers", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glGenBuffers) },
-    { "glGenBuffersARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glGenBuffersARB) },
-    { "glGenFencesAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, ext.p_glGenFencesAPPLE) },
-    { "glGenFencesNV", "GL_NV_fence", offsetof(struct opengl_funcs, ext.p_glGenFencesNV) },
-    { "glGenFragmentShadersATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glGenFragmentShadersATI) },
-    { "glGenFramebuffers", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGenFramebuffers) },
-    { "glGenFramebuffersEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glGenFramebuffersEXT) },
-    { "glGenNamesAMD", "GL_AMD_name_gen_delete", offsetof(struct opengl_funcs, ext.p_glGenNamesAMD) },
-    { "glGenOcclusionQueriesNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, ext.p_glGenOcclusionQueriesNV) },
-    { "glGenPathsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGenPathsNV) },
-    { "glGenPerfMonitorsAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glGenPerfMonitorsAMD) },
-    { "glGenProgramPipelines", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glGenProgramPipelines) },
-    { "glGenProgramsARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glGenProgramsARB) },
-    { "glGenProgramsNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGenProgramsNV) },
-    { "glGenQueries", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glGenQueries) },
-    { "glGenQueriesARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, ext.p_glGenQueriesARB) },
-    { "glGenQueryResourceTagNV", "GL_NV_query_resource_tag", offsetof(struct opengl_funcs, ext.p_glGenQueryResourceTagNV) },
-    { "glGenRenderbuffers", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGenRenderbuffers) },
-    { "glGenRenderbuffersEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glGenRenderbuffersEXT) },
-    { "glGenSamplers", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glGenSamplers) },
-    { "glGenSemaphoresEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, ext.p_glGenSemaphoresEXT) },
-    { "glGenSymbolsEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGenSymbolsEXT) },
-    { "glGenTexturesEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, ext.p_glGenTexturesEXT) },
-    { "glGenTransformFeedbacks", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGenTransformFeedbacks) },
-    { "glGenTransformFeedbacksNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, ext.p_glGenTransformFeedbacksNV) },
-    { "glGenVertexArrays", "GL_ARB_vertex_array_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGenVertexArrays) },
-    { "glGenVertexArraysAPPLE", "GL_APPLE_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glGenVertexArraysAPPLE) },
-    { "glGenVertexShadersEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGenVertexShadersEXT) },
-    { "glGenerateMipmap", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGenerateMipmap) },
-    { "glGenerateMipmapEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glGenerateMipmapEXT) },
-    { "glGenerateMultiTexMipmapEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGenerateMultiTexMipmapEXT) },
-    { "glGenerateTextureMipmap", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGenerateTextureMipmap) },
-    { "glGenerateTextureMipmapEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGenerateTextureMipmapEXT) },
-    { "glGetActiveAtomicCounterBufferiv", "GL_ARB_shader_atomic_counters GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glGetActiveAtomicCounterBufferiv) },
-    { "glGetActiveAttrib", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetActiveAttrib) },
-    { "glGetActiveAttribARB", "GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetActiveAttribARB) },
-    { "glGetActiveSubroutineName", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGetActiveSubroutineName) },
-    { "glGetActiveSubroutineUniformName", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGetActiveSubroutineUniformName) },
-    { "glGetActiveSubroutineUniformiv", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGetActiveSubroutineUniformiv) },
-    { "glGetActiveUniform", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetActiveUniform) },
-    { "glGetActiveUniformARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetActiveUniformARB) },
-    { "glGetActiveUniformBlockName", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glGetActiveUniformBlockName) },
-    { "glGetActiveUniformBlockiv", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glGetActiveUniformBlockiv) },
-    { "glGetActiveUniformName", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glGetActiveUniformName) },
-    { "glGetActiveUniformsiv", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glGetActiveUniformsiv) },
-    { "glGetActiveVaryingNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glGetActiveVaryingNV) },
-    { "glGetArrayObjectfvATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glGetArrayObjectfvATI) },
-    { "glGetArrayObjectivATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glGetArrayObjectivATI) },
-    { "glGetAttachedObjectsARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetAttachedObjectsARB) },
-    { "glGetAttachedShaders", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetAttachedShaders) },
-    { "glGetAttribLocation", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetAttribLocation) },
-    { "glGetAttribLocationARB", "GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetAttribLocationARB) },
-    { "glGetBooleanIndexedvEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, ext.p_glGetBooleanIndexedvEXT) },
-    { "glGetBooleani_v", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetBooleani_v) },
-    { "glGetBufferParameteri64v", "GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glGetBufferParameteri64v) },
-    { "glGetBufferParameteriv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glGetBufferParameteriv) },
-    { "glGetBufferParameterivARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glGetBufferParameterivARB) },
-    { "glGetBufferParameterui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glGetBufferParameterui64vNV) },
-    { "glGetBufferPointerv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glGetBufferPointerv) },
-    { "glGetBufferPointervARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glGetBufferPointervARB) },
-    { "glGetBufferSubData", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glGetBufferSubData) },
-    { "glGetBufferSubDataARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glGetBufferSubDataARB) },
-    { "glGetClipPlanefOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, ext.p_glGetClipPlanefOES) },
-    { "glGetClipPlanexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetClipPlanexOES) },
-    { "glGetColorTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetColorTable) },
-    { "glGetColorTableEXT", "GL_EXT_paletted_texture", offsetof(struct opengl_funcs, ext.p_glGetColorTableEXT) },
-    { "glGetColorTableParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetColorTableParameterfv) },
-    { "glGetColorTableParameterfvEXT", "GL_EXT_paletted_texture", offsetof(struct opengl_funcs, ext.p_glGetColorTableParameterfvEXT) },
-    { "glGetColorTableParameterfvSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, ext.p_glGetColorTableParameterfvSGI) },
-    { "glGetColorTableParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetColorTableParameteriv) },
-    { "glGetColorTableParameterivEXT", "GL_EXT_paletted_texture", offsetof(struct opengl_funcs, ext.p_glGetColorTableParameterivEXT) },
-    { "glGetColorTableParameterivSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, ext.p_glGetColorTableParameterivSGI) },
-    { "glGetColorTableSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, ext.p_glGetColorTableSGI) },
-    { "glGetCombinerInputParameterfvNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glGetCombinerInputParameterfvNV) },
-    { "glGetCombinerInputParameterivNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glGetCombinerInputParameterivNV) },
-    { "glGetCombinerOutputParameterfvNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glGetCombinerOutputParameterfvNV) },
-    { "glGetCombinerOutputParameterivNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glGetCombinerOutputParameterivNV) },
-    { "glGetCombinerStageParameterfvNV", "GL_NV_register_combiners2", offsetof(struct opengl_funcs, ext.p_glGetCombinerStageParameterfvNV) },
-    { "glGetCommandHeaderNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glGetCommandHeaderNV) },
-    { "glGetCompressedMultiTexImageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetCompressedMultiTexImageEXT) },
-    { "glGetCompressedTexImage", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glGetCompressedTexImage) },
-    { "glGetCompressedTexImageARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, ext.p_glGetCompressedTexImageARB) },
-    { "glGetCompressedTextureImage", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetCompressedTextureImage) },
-    { "glGetCompressedTextureImageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetCompressedTextureImageEXT) },
-    { "glGetCompressedTextureSubImage", "GL_ARB_get_texture_sub_image GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetCompressedTextureSubImage) },
-    { "glGetConvolutionFilter", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetConvolutionFilter) },
-    { "glGetConvolutionFilterEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glGetConvolutionFilterEXT) },
-    { "glGetConvolutionParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetConvolutionParameterfv) },
-    { "glGetConvolutionParameterfvEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glGetConvolutionParameterfvEXT) },
-    { "glGetConvolutionParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetConvolutionParameteriv) },
-    { "glGetConvolutionParameterivEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glGetConvolutionParameterivEXT) },
-    { "glGetConvolutionParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetConvolutionParameterxvOES) },
-    { "glGetCoverageModulationTableNV", "GL_NV_framebuffer_mixed_samples", offsetof(struct opengl_funcs, ext.p_glGetCoverageModulationTableNV) },
-    { "glGetDebugMessageLog", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetDebugMessageLog) },
-    { "glGetDebugMessageLogAMD", "GL_AMD_debug_output", offsetof(struct opengl_funcs, ext.p_glGetDebugMessageLogAMD) },
-    { "glGetDebugMessageLogARB", "GL_ARB_debug_output", offsetof(struct opengl_funcs, ext.p_glGetDebugMessageLogARB) },
-    { "glGetDetailTexFuncSGIS", "GL_SGIS_detail_texture", offsetof(struct opengl_funcs, ext.p_glGetDetailTexFuncSGIS) },
-    { "glGetDoubleIndexedvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetDoubleIndexedvEXT) },
-    { "glGetDoublei_v", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glGetDoublei_v) },
-    { "glGetDoublei_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetDoublei_vEXT) },
-    { "glGetFenceivNV", "GL_NV_fence", offsetof(struct opengl_funcs, ext.p_glGetFenceivNV) },
-    { "glGetFinalCombinerInputParameterfvNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glGetFinalCombinerInputParameterfvNV) },
-    { "glGetFinalCombinerInputParameterivNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, ext.p_glGetFinalCombinerInputParameterivNV) },
-    { "glGetFirstPerfQueryIdINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glGetFirstPerfQueryIdINTEL) },
-    { "glGetFixedvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetFixedvOES) },
-    { "glGetFloatIndexedvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetFloatIndexedvEXT) },
-    { "glGetFloati_v", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glGetFloati_v) },
-    { "glGetFloati_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetFloati_vEXT) },
-    { "glGetFogFuncSGIS", "GL_SGIS_fog_function", offsetof(struct opengl_funcs, ext.p_glGetFogFuncSGIS) },
-    { "glGetFragDataIndex", "GL_ARB_blend_func_extended GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glGetFragDataIndex) },
-    { "glGetFragDataLocation", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetFragDataLocation) },
-    { "glGetFragDataLocationEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glGetFragDataLocationEXT) },
-    { "glGetFragmentLightfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glGetFragmentLightfvSGIX) },
-    { "glGetFragmentLightivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glGetFragmentLightivSGIX) },
-    { "glGetFragmentMaterialfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glGetFragmentMaterialfvSGIX) },
-    { "glGetFragmentMaterialivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glGetFragmentMaterialivSGIX) },
-    { "glGetFramebufferAttachmentParameteriv", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetFramebufferAttachmentParameteriv) },
-    { "glGetFramebufferAttachmentParameterivEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glGetFramebufferAttachmentParameterivEXT) },
-    { "glGetFramebufferParameterfvAMD", "GL_AMD_framebuffer_sample_positions", offsetof(struct opengl_funcs, ext.p_glGetFramebufferParameterfvAMD) },
-    { "glGetFramebufferParameteriv", "GL_ARB_framebuffer_no_attachments GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetFramebufferParameteriv) },
-    { "glGetFramebufferParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetFramebufferParameterivEXT) },
-    { "glGetFramebufferParameterivMESA", "GL_MESA_framebuffer_flip_y", offsetof(struct opengl_funcs, ext.p_glGetFramebufferParameterivMESA) },
-    { "glGetGraphicsResetStatus", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetGraphicsResetStatus) },
-    { "glGetGraphicsResetStatusARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetGraphicsResetStatusARB) },
-    { "glGetHandleARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetHandleARB) },
-    { "glGetHistogram", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetHistogram) },
-    { "glGetHistogramEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glGetHistogramEXT) },
-    { "glGetHistogramParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetHistogramParameterfv) },
-    { "glGetHistogramParameterfvEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glGetHistogramParameterfvEXT) },
-    { "glGetHistogramParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetHistogramParameteriv) },
-    { "glGetHistogramParameterivEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glGetHistogramParameterivEXT) },
-    { "glGetHistogramParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetHistogramParameterxvOES) },
-    { "glGetImageHandleARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glGetImageHandleARB) },
-    { "glGetImageHandleNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glGetImageHandleNV) },
-    { "glGetImageTransformParameterfvHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, ext.p_glGetImageTransformParameterfvHP) },
-    { "glGetImageTransformParameterivHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, ext.p_glGetImageTransformParameterivHP) },
-    { "glGetInfoLogARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetInfoLogARB) },
-    { "glGetInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, ext.p_glGetInstrumentsSGIX) },
-    { "glGetInteger64i_v", "GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glGetInteger64i_v) },
-    { "glGetInteger64v", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glGetInteger64v) },
-    { "glGetIntegerIndexedvEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, ext.p_glGetIntegerIndexedvEXT) },
-    { "glGetIntegeri_v", "GL_ARB_uniform_buffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetIntegeri_v) },
-    { "glGetIntegerui64i_vNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glGetIntegerui64i_vNV) },
-    { "glGetIntegerui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glGetIntegerui64vNV) },
-    { "glGetInternalformatSampleivNV", "GL_NV_internalformat_sample_query", offsetof(struct opengl_funcs, ext.p_glGetInternalformatSampleivNV) },
-    { "glGetInternalformati64v", "GL_ARB_internalformat_query2 GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetInternalformati64v) },
-    { "glGetInternalformativ", "GL_ARB_internalformat_query GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glGetInternalformativ) },
-    { "glGetInvariantBooleanvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetInvariantBooleanvEXT) },
-    { "glGetInvariantFloatvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetInvariantFloatvEXT) },
-    { "glGetInvariantIntegervEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetInvariantIntegervEXT) },
-    { "glGetLightxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetLightxOES) },
-    { "glGetListParameterfvSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, ext.p_glGetListParameterfvSGIX) },
-    { "glGetListParameterivSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, ext.p_glGetListParameterivSGIX) },
-    { "glGetLocalConstantBooleanvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetLocalConstantBooleanvEXT) },
-    { "glGetLocalConstantFloatvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetLocalConstantFloatvEXT) },
-    { "glGetLocalConstantIntegervEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetLocalConstantIntegervEXT) },
-    { "glGetMapAttribParameterfvNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, ext.p_glGetMapAttribParameterfvNV) },
-    { "glGetMapAttribParameterivNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, ext.p_glGetMapAttribParameterivNV) },
-    { "glGetMapControlPointsNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, ext.p_glGetMapControlPointsNV) },
-    { "glGetMapParameterfvNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, ext.p_glGetMapParameterfvNV) },
-    { "glGetMapParameterivNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, ext.p_glGetMapParameterivNV) },
-    { "glGetMapxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetMapxvOES) },
-    { "glGetMaterialxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetMaterialxOES) },
-    { "glGetMemoryObjectDetachedResourcesuivNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, ext.p_glGetMemoryObjectDetachedResourcesuivNV) },
-    { "glGetMemoryObjectParameterivEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glGetMemoryObjectParameterivEXT) },
-    { "glGetMinmax", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetMinmax) },
-    { "glGetMinmaxEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glGetMinmaxEXT) },
-    { "glGetMinmaxParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetMinmaxParameterfv) },
-    { "glGetMinmaxParameterfvEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glGetMinmaxParameterfvEXT) },
-    { "glGetMinmaxParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetMinmaxParameteriv) },
-    { "glGetMinmaxParameterivEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glGetMinmaxParameterivEXT) },
-    { "glGetMultiTexEnvfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexEnvfvEXT) },
-    { "glGetMultiTexEnvivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexEnvivEXT) },
-    { "glGetMultiTexGendvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexGendvEXT) },
-    { "glGetMultiTexGenfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexGenfvEXT) },
-    { "glGetMultiTexGenivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexGenivEXT) },
-    { "glGetMultiTexImageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexImageEXT) },
-    { "glGetMultiTexLevelParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexLevelParameterfvEXT) },
-    { "glGetMultiTexLevelParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexLevelParameterivEXT) },
-    { "glGetMultiTexParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexParameterIivEXT) },
-    { "glGetMultiTexParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexParameterIuivEXT) },
-    { "glGetMultiTexParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexParameterfvEXT) },
-    { "glGetMultiTexParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetMultiTexParameterivEXT) },
-    { "glGetMultisamplefv", "GL_ARB_texture_multisample GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glGetMultisamplefv) },
-    { "glGetMultisamplefvNV", "GL_NV_explicit_multisample", offsetof(struct opengl_funcs, ext.p_glGetMultisamplefvNV) },
-    { "glGetNamedBufferParameteri64v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetNamedBufferParameteri64v) },
-    { "glGetNamedBufferParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetNamedBufferParameteriv) },
-    { "glGetNamedBufferParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedBufferParameterivEXT) },
-    { "glGetNamedBufferParameterui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glGetNamedBufferParameterui64vNV) },
-    { "glGetNamedBufferPointerv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetNamedBufferPointerv) },
-    { "glGetNamedBufferPointervEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedBufferPointervEXT) },
-    { "glGetNamedBufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetNamedBufferSubData) },
-    { "glGetNamedBufferSubDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedBufferSubDataEXT) },
-    { "glGetNamedFramebufferAttachmentParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetNamedFramebufferAttachmentParameteriv) },
-    { "glGetNamedFramebufferAttachmentParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedFramebufferAttachmentParameterivEXT) },
-    { "glGetNamedFramebufferParameterfvAMD", "GL_AMD_framebuffer_sample_positions", offsetof(struct opengl_funcs, ext.p_glGetNamedFramebufferParameterfvAMD) },
-    { "glGetNamedFramebufferParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetNamedFramebufferParameteriv) },
-    { "glGetNamedFramebufferParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedFramebufferParameterivEXT) },
-    { "glGetNamedProgramLocalParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedProgramLocalParameterIivEXT) },
-    { "glGetNamedProgramLocalParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedProgramLocalParameterIuivEXT) },
-    { "glGetNamedProgramLocalParameterdvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedProgramLocalParameterdvEXT) },
-    { "glGetNamedProgramLocalParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedProgramLocalParameterfvEXT) },
-    { "glGetNamedProgramStringEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedProgramStringEXT) },
-    { "glGetNamedProgramivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedProgramivEXT) },
-    { "glGetNamedRenderbufferParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetNamedRenderbufferParameteriv) },
-    { "glGetNamedRenderbufferParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetNamedRenderbufferParameterivEXT) },
-    { "glGetNamedStringARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, ext.p_glGetNamedStringARB) },
-    { "glGetNamedStringivARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, ext.p_glGetNamedStringivARB) },
-    { "glGetNextPerfQueryIdINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glGetNextPerfQueryIdINTEL) },
-    { "glGetObjectBufferfvATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glGetObjectBufferfvATI) },
-    { "glGetObjectBufferivATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glGetObjectBufferivATI) },
-    { "glGetObjectLabel", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetObjectLabel) },
-    { "glGetObjectLabelEXT", "GL_EXT_debug_label", offsetof(struct opengl_funcs, ext.p_glGetObjectLabelEXT) },
-    { "glGetObjectParameterfvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetObjectParameterfvARB) },
-    { "glGetObjectParameterivAPPLE", "GL_APPLE_object_purgeable", offsetof(struct opengl_funcs, ext.p_glGetObjectParameterivAPPLE) },
-    { "glGetObjectParameterivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetObjectParameterivARB) },
-    { "glGetObjectPtrLabel", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetObjectPtrLabel) },
-    { "glGetOcclusionQueryivNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, ext.p_glGetOcclusionQueryivNV) },
-    { "glGetOcclusionQueryuivNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, ext.p_glGetOcclusionQueryuivNV) },
-    { "glGetPathColorGenfvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathColorGenfvNV) },
-    { "glGetPathColorGenivNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathColorGenivNV) },
-    { "glGetPathCommandsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathCommandsNV) },
-    { "glGetPathCoordsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathCoordsNV) },
-    { "glGetPathDashArrayNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathDashArrayNV) },
-    { "glGetPathLengthNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathLengthNV) },
-    { "glGetPathMetricRangeNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathMetricRangeNV) },
-    { "glGetPathMetricsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathMetricsNV) },
-    { "glGetPathParameterfvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathParameterfvNV) },
-    { "glGetPathParameterivNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathParameterivNV) },
-    { "glGetPathSpacingNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathSpacingNV) },
-    { "glGetPathTexGenfvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathTexGenfvNV) },
-    { "glGetPathTexGenivNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetPathTexGenivNV) },
-    { "glGetPerfCounterInfoINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glGetPerfCounterInfoINTEL) },
-    { "glGetPerfMonitorCounterDataAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glGetPerfMonitorCounterDataAMD) },
-    { "glGetPerfMonitorCounterInfoAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glGetPerfMonitorCounterInfoAMD) },
-    { "glGetPerfMonitorCounterStringAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glGetPerfMonitorCounterStringAMD) },
-    { "glGetPerfMonitorCountersAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glGetPerfMonitorCountersAMD) },
-    { "glGetPerfMonitorGroupStringAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glGetPerfMonitorGroupStringAMD) },
-    { "glGetPerfMonitorGroupsAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glGetPerfMonitorGroupsAMD) },
-    { "glGetPerfQueryDataINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glGetPerfQueryDataINTEL) },
-    { "glGetPerfQueryIdByNameINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glGetPerfQueryIdByNameINTEL) },
-    { "glGetPerfQueryInfoINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, ext.p_glGetPerfQueryInfoINTEL) },
-    { "glGetPixelMapxv", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetPixelMapxv) },
-    { "glGetPixelTexGenParameterfvSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, ext.p_glGetPixelTexGenParameterfvSGIS) },
-    { "glGetPixelTexGenParameterivSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, ext.p_glGetPixelTexGenParameterivSGIS) },
-    { "glGetPixelTransformParameterfvEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, ext.p_glGetPixelTransformParameterfvEXT) },
-    { "glGetPixelTransformParameterivEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, ext.p_glGetPixelTransformParameterivEXT) },
-    { "glGetPointerIndexedvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetPointerIndexedvEXT) },
-    { "glGetPointeri_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetPointeri_vEXT) },
-    { "glGetPointervEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, ext.p_glGetPointervEXT) },
-    { "glGetProgramBinary", "GL_ARB_get_program_binary GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glGetProgramBinary) },
-    { "glGetProgramEnvParameterIivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glGetProgramEnvParameterIivNV) },
-    { "glGetProgramEnvParameterIuivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glGetProgramEnvParameterIuivNV) },
-    { "glGetProgramEnvParameterdvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramEnvParameterdvARB) },
-    { "glGetProgramEnvParameterfvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramEnvParameterfvARB) },
-    { "glGetProgramInfoLog", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetProgramInfoLog) },
-    { "glGetProgramInterfaceiv", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetProgramInterfaceiv) },
-    { "glGetProgramLocalParameterIivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glGetProgramLocalParameterIivNV) },
-    { "glGetProgramLocalParameterIuivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glGetProgramLocalParameterIuivNV) },
-    { "glGetProgramLocalParameterdvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramLocalParameterdvARB) },
-    { "glGetProgramLocalParameterfvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramLocalParameterfvARB) },
-    { "glGetProgramNamedParameterdvNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, ext.p_glGetProgramNamedParameterdvNV) },
-    { "glGetProgramNamedParameterfvNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, ext.p_glGetProgramNamedParameterfvNV) },
-    { "glGetProgramParameterdvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramParameterdvNV) },
-    { "glGetProgramParameterfvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramParameterfvNV) },
-    { "glGetProgramPipelineInfoLog", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glGetProgramPipelineInfoLog) },
-    { "glGetProgramPipelineiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glGetProgramPipelineiv) },
-    { "glGetProgramResourceIndex", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetProgramResourceIndex) },
-    { "glGetProgramResourceLocation", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetProgramResourceLocation) },
-    { "glGetProgramResourceLocationIndex", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetProgramResourceLocationIndex) },
-    { "glGetProgramResourceName", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetProgramResourceName) },
-    { "glGetProgramResourcefvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glGetProgramResourcefvNV) },
-    { "glGetProgramResourceiv", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glGetProgramResourceiv) },
-    { "glGetProgramStageiv", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGetProgramStageiv) },
-    { "glGetProgramStringARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramStringARB) },
-    { "glGetProgramStringNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramStringNV) },
-    { "glGetProgramSubroutineParameteruivNV", "GL_NV_gpu_program5", offsetof(struct opengl_funcs, ext.p_glGetProgramSubroutineParameteruivNV) },
-    { "glGetProgramiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetProgramiv) },
-    { "glGetProgramivARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramivARB) },
-    { "glGetProgramivNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetProgramivNV) },
-    { "glGetQueryBufferObjecti64v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetQueryBufferObjecti64v) },
-    { "glGetQueryBufferObjectiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetQueryBufferObjectiv) },
-    { "glGetQueryBufferObjectui64v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetQueryBufferObjectui64v) },
-    { "glGetQueryBufferObjectuiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetQueryBufferObjectuiv) },
-    { "glGetQueryIndexediv", "GL_ARB_transform_feedback3 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGetQueryIndexediv) },
-    { "glGetQueryObjecti64v", "GL_ARB_timer_query GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glGetQueryObjecti64v) },
-    { "glGetQueryObjecti64vEXT", "GL_EXT_timer_query", offsetof(struct opengl_funcs, ext.p_glGetQueryObjecti64vEXT) },
-    { "glGetQueryObjectiv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glGetQueryObjectiv) },
-    { "glGetQueryObjectivARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, ext.p_glGetQueryObjectivARB) },
-    { "glGetQueryObjectui64v", "GL_ARB_timer_query GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glGetQueryObjectui64v) },
-    { "glGetQueryObjectui64vEXT", "GL_EXT_timer_query", offsetof(struct opengl_funcs, ext.p_glGetQueryObjectui64vEXT) },
-    { "glGetQueryObjectuiv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glGetQueryObjectuiv) },
-    { "glGetQueryObjectuivARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, ext.p_glGetQueryObjectuivARB) },
-    { "glGetQueryiv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glGetQueryiv) },
-    { "glGetQueryivARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, ext.p_glGetQueryivARB) },
-    { "glGetRenderbufferParameteriv", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetRenderbufferParameteriv) },
-    { "glGetRenderbufferParameterivEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glGetRenderbufferParameterivEXT) },
-    { "glGetSamplerParameterIiv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glGetSamplerParameterIiv) },
-    { "glGetSamplerParameterIuiv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glGetSamplerParameterIuiv) },
-    { "glGetSamplerParameterfv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glGetSamplerParameterfv) },
-    { "glGetSamplerParameteriv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glGetSamplerParameteriv) },
-    { "glGetSemaphoreParameterui64vEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, ext.p_glGetSemaphoreParameterui64vEXT) },
-    { "glGetSeparableFilter", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glGetSeparableFilter) },
-    { "glGetSeparableFilterEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glGetSeparableFilterEXT) },
-    { "glGetShaderInfoLog", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetShaderInfoLog) },
-    { "glGetShaderPrecisionFormat", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glGetShaderPrecisionFormat) },
-    { "glGetShaderSource", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetShaderSource) },
-    { "glGetShaderSourceARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetShaderSourceARB) },
-    { "glGetShaderiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetShaderiv) },
-    { "glGetShadingRateImagePaletteNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, ext.p_glGetShadingRateImagePaletteNV) },
-    { "glGetShadingRateSampleLocationivNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, ext.p_glGetShadingRateSampleLocationivNV) },
-    { "glGetSharpenTexFuncSGIS", "GL_SGIS_sharpen_texture", offsetof(struct opengl_funcs, ext.p_glGetSharpenTexFuncSGIS) },
-    { "glGetStageIndexNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glGetStageIndexNV) },
-    { "glGetStringi", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetStringi) },
-    { "glGetSubroutineIndex", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGetSubroutineIndex) },
-    { "glGetSubroutineUniformLocation", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGetSubroutineUniformLocation) },
-    { "glGetSynciv", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glGetSynciv) },
-    { "glGetTexBumpParameterfvATI", "GL_ATI_envmap_bumpmap", offsetof(struct opengl_funcs, ext.p_glGetTexBumpParameterfvATI) },
-    { "glGetTexBumpParameterivATI", "GL_ATI_envmap_bumpmap", offsetof(struct opengl_funcs, ext.p_glGetTexBumpParameterivATI) },
-    { "glGetTexEnvxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetTexEnvxvOES) },
-    { "glGetTexFilterFuncSGIS", "GL_SGIS_texture_filter4", offsetof(struct opengl_funcs, ext.p_glGetTexFilterFuncSGIS) },
-    { "glGetTexGenxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetTexGenxvOES) },
-    { "glGetTexLevelParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetTexLevelParameterxvOES) },
-    { "glGetTexParameterIiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetTexParameterIiv) },
-    { "glGetTexParameterIivEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, ext.p_glGetTexParameterIivEXT) },
-    { "glGetTexParameterIuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetTexParameterIuiv) },
-    { "glGetTexParameterIuivEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, ext.p_glGetTexParameterIuivEXT) },
-    { "glGetTexParameterPointervAPPLE", "GL_APPLE_texture_range", offsetof(struct opengl_funcs, ext.p_glGetTexParameterPointervAPPLE) },
-    { "glGetTexParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glGetTexParameterxvOES) },
-    { "glGetTextureHandleARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glGetTextureHandleARB) },
-    { "glGetTextureHandleNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glGetTextureHandleNV) },
-    { "glGetTextureImage", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTextureImage) },
-    { "glGetTextureImageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetTextureImageEXT) },
-    { "glGetTextureLevelParameterfv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTextureLevelParameterfv) },
-    { "glGetTextureLevelParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetTextureLevelParameterfvEXT) },
-    { "glGetTextureLevelParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTextureLevelParameteriv) },
-    { "glGetTextureLevelParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetTextureLevelParameterivEXT) },
-    { "glGetTextureParameterIiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTextureParameterIiv) },
-    { "glGetTextureParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetTextureParameterIivEXT) },
-    { "glGetTextureParameterIuiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTextureParameterIuiv) },
-    { "glGetTextureParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetTextureParameterIuivEXT) },
-    { "glGetTextureParameterfv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTextureParameterfv) },
-    { "glGetTextureParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetTextureParameterfvEXT) },
-    { "glGetTextureParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTextureParameteriv) },
-    { "glGetTextureParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetTextureParameterivEXT) },
-    { "glGetTextureSamplerHandleARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glGetTextureSamplerHandleARB) },
-    { "glGetTextureSamplerHandleNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glGetTextureSamplerHandleNV) },
-    { "glGetTextureSubImage", "GL_ARB_get_texture_sub_image GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTextureSubImage) },
-    { "glGetTrackMatrixivNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetTrackMatrixivNV) },
-    { "glGetTransformFeedbackVarying", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetTransformFeedbackVarying) },
-    { "glGetTransformFeedbackVaryingEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, ext.p_glGetTransformFeedbackVaryingEXT) },
-    { "glGetTransformFeedbackVaryingNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glGetTransformFeedbackVaryingNV) },
-    { "glGetTransformFeedbacki64_v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTransformFeedbacki64_v) },
-    { "glGetTransformFeedbacki_v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTransformFeedbacki_v) },
-    { "glGetTransformFeedbackiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetTransformFeedbackiv) },
-    { "glGetUniformBlockIndex", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glGetUniformBlockIndex) },
-    { "glGetUniformBufferSizeEXT", "GL_EXT_bindable_uniform", offsetof(struct opengl_funcs, ext.p_glGetUniformBufferSizeEXT) },
-    { "glGetUniformIndices", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glGetUniformIndices) },
-    { "glGetUniformLocation", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetUniformLocation) },
-    { "glGetUniformLocationARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetUniformLocationARB) },
-    { "glGetUniformOffsetEXT", "GL_EXT_bindable_uniform", offsetof(struct opengl_funcs, ext.p_glGetUniformOffsetEXT) },
-    { "glGetUniformSubroutineuiv", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGetUniformSubroutineuiv) },
-    { "glGetUniformdv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glGetUniformdv) },
-    { "glGetUniformfv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetUniformfv) },
-    { "glGetUniformfvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetUniformfvARB) },
-    { "glGetUniformi64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glGetUniformi64vARB) },
-    { "glGetUniformi64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glGetUniformi64vNV) },
-    { "glGetUniformiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetUniformiv) },
-    { "glGetUniformivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glGetUniformivARB) },
-    { "glGetUniformui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glGetUniformui64vARB) },
-    { "glGetUniformui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glGetUniformui64vNV) },
-    { "glGetUniformuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetUniformuiv) },
-    { "glGetUniformuivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glGetUniformuivEXT) },
-    { "glGetUnsignedBytei_vEXT", "GL_EXT_memory_object GL_EXT_semaphore", offsetof(struct opengl_funcs, ext.p_glGetUnsignedBytei_vEXT) },
-    { "glGetUnsignedBytevEXT", "GL_EXT_memory_object GL_EXT_semaphore", offsetof(struct opengl_funcs, ext.p_glGetUnsignedBytevEXT) },
-    { "glGetVariantArrayObjectfvATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glGetVariantArrayObjectfvATI) },
-    { "glGetVariantArrayObjectivATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glGetVariantArrayObjectivATI) },
-    { "glGetVariantBooleanvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetVariantBooleanvEXT) },
-    { "glGetVariantFloatvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetVariantFloatvEXT) },
-    { "glGetVariantIntegervEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetVariantIntegervEXT) },
-    { "glGetVariantPointervEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetVariantPointervEXT) },
-    { "glGetVaryingLocationNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glGetVaryingLocationNV) },
-    { "glGetVertexArrayIndexed64iv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetVertexArrayIndexed64iv) },
-    { "glGetVertexArrayIndexediv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetVertexArrayIndexediv) },
-    { "glGetVertexArrayIntegeri_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetVertexArrayIntegeri_vEXT) },
-    { "glGetVertexArrayIntegervEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetVertexArrayIntegervEXT) },
-    { "glGetVertexArrayPointeri_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetVertexArrayPointeri_vEXT) },
-    { "glGetVertexArrayPointervEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glGetVertexArrayPointervEXT) },
-    { "glGetVertexArrayiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetVertexArrayiv) },
-    { "glGetVertexAttribArrayObjectfvATI", "GL_ATI_vertex_attrib_array_object", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribArrayObjectfvATI) },
-    { "glGetVertexAttribArrayObjectivATI", "GL_ATI_vertex_attrib_array_object", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribArrayObjectivATI) },
-    { "glGetVertexAttribIiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribIiv) },
-    { "glGetVertexAttribIivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribIivEXT) },
-    { "glGetVertexAttribIuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribIuiv) },
-    { "glGetVertexAttribIuivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribIuivEXT) },
-    { "glGetVertexAttribLdv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribLdv) },
-    { "glGetVertexAttribLdvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribLdvEXT) },
-    { "glGetVertexAttribLi64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribLi64vNV) },
-    { "glGetVertexAttribLui64vARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribLui64vARB) },
-    { "glGetVertexAttribLui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribLui64vNV) },
-    { "glGetVertexAttribPointerv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribPointerv) },
-    { "glGetVertexAttribPointervARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribPointervARB) },
-    { "glGetVertexAttribPointervNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribPointervNV) },
-    { "glGetVertexAttribdv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribdv) },
-    { "glGetVertexAttribdvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribdvARB) },
-    { "glGetVertexAttribdvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribdvNV) },
-    { "glGetVertexAttribfv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribfv) },
-    { "glGetVertexAttribfvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribfvARB) },
-    { "glGetVertexAttribfvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribfvNV) },
-    { "glGetVertexAttribiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribiv) },
-    { "glGetVertexAttribivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribivARB) },
-    { "glGetVertexAttribivNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glGetVertexAttribivNV) },
-    { "glGetVideoCaptureStreamdvNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glGetVideoCaptureStreamdvNV) },
-    { "glGetVideoCaptureStreamfvNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glGetVideoCaptureStreamfvNV) },
-    { "glGetVideoCaptureStreamivNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glGetVideoCaptureStreamivNV) },
-    { "glGetVideoCaptureivNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glGetVideoCaptureivNV) },
-    { "glGetVideoi64vNV", "GL_NV_present_video", offsetof(struct opengl_funcs, ext.p_glGetVideoi64vNV) },
-    { "glGetVideoivNV", "GL_NV_present_video", offsetof(struct opengl_funcs, ext.p_glGetVideoivNV) },
-    { "glGetVideoui64vNV", "GL_NV_present_video", offsetof(struct opengl_funcs, ext.p_glGetVideoui64vNV) },
-    { "glGetVideouivNV", "GL_NV_present_video", offsetof(struct opengl_funcs, ext.p_glGetVideouivNV) },
-    { "glGetVkProcAddrNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, ext.p_glGetVkProcAddrNV) },
-    { "glGetnColorTable", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnColorTable) },
-    { "glGetnColorTableARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnColorTableARB) },
-    { "glGetnCompressedTexImage", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnCompressedTexImage) },
-    { "glGetnCompressedTexImageARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnCompressedTexImageARB) },
-    { "glGetnConvolutionFilter", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnConvolutionFilter) },
-    { "glGetnConvolutionFilterARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnConvolutionFilterARB) },
-    { "glGetnHistogram", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnHistogram) },
-    { "glGetnHistogramARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnHistogramARB) },
-    { "glGetnMapdv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnMapdv) },
-    { "glGetnMapdvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnMapdvARB) },
-    { "glGetnMapfv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnMapfv) },
-    { "glGetnMapfvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnMapfvARB) },
-    { "glGetnMapiv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnMapiv) },
-    { "glGetnMapivARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnMapivARB) },
-    { "glGetnMinmax", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnMinmax) },
-    { "glGetnMinmaxARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnMinmaxARB) },
-    { "glGetnPixelMapfv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnPixelMapfv) },
-    { "glGetnPixelMapfvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnPixelMapfvARB) },
-    { "glGetnPixelMapuiv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnPixelMapuiv) },
-    { "glGetnPixelMapuivARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnPixelMapuivARB) },
-    { "glGetnPixelMapusv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnPixelMapusv) },
-    { "glGetnPixelMapusvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnPixelMapusvARB) },
-    { "glGetnPolygonStipple", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnPolygonStipple) },
-    { "glGetnPolygonStippleARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnPolygonStippleARB) },
-    { "glGetnSeparableFilter", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnSeparableFilter) },
-    { "glGetnSeparableFilterARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnSeparableFilterARB) },
-    { "glGetnTexImage", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnTexImage) },
-    { "glGetnTexImageARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnTexImageARB) },
-    { "glGetnUniformdv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnUniformdv) },
-    { "glGetnUniformdvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnUniformdvARB) },
-    { "glGetnUniformfv", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnUniformfv) },
-    { "glGetnUniformfvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnUniformfvARB) },
-    { "glGetnUniformi64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glGetnUniformi64vARB) },
-    { "glGetnUniformiv", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnUniformiv) },
-    { "glGetnUniformivARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnUniformivARB) },
-    { "glGetnUniformui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glGetnUniformui64vARB) },
-    { "glGetnUniformuiv", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glGetnUniformuiv) },
-    { "glGetnUniformuivARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glGetnUniformuivARB) },
-    { "glGlobalAlphaFactorbSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, ext.p_glGlobalAlphaFactorbSUN) },
-    { "glGlobalAlphaFactordSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, ext.p_glGlobalAlphaFactordSUN) },
-    { "glGlobalAlphaFactorfSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, ext.p_glGlobalAlphaFactorfSUN) },
-    { "glGlobalAlphaFactoriSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, ext.p_glGlobalAlphaFactoriSUN) },
-    { "glGlobalAlphaFactorsSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, ext.p_glGlobalAlphaFactorsSUN) },
-    { "glGlobalAlphaFactorubSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, ext.p_glGlobalAlphaFactorubSUN) },
-    { "glGlobalAlphaFactoruiSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, ext.p_glGlobalAlphaFactoruiSUN) },
-    { "glGlobalAlphaFactorusSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, ext.p_glGlobalAlphaFactorusSUN) },
-    { "glHintPGI", "GL_PGI_misc_hints", offsetof(struct opengl_funcs, ext.p_glHintPGI) },
-    { "glHistogram", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glHistogram) },
-    { "glHistogramEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glHistogramEXT) },
-    { "glIglooInterfaceSGIX", "GL_SGIX_igloo_interface", offsetof(struct opengl_funcs, ext.p_glIglooInterfaceSGIX) },
-    { "glImageTransformParameterfHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, ext.p_glImageTransformParameterfHP) },
-    { "glImageTransformParameterfvHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, ext.p_glImageTransformParameterfvHP) },
-    { "glImageTransformParameteriHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, ext.p_glImageTransformParameteriHP) },
-    { "glImageTransformParameterivHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, ext.p_glImageTransformParameterivHP) },
-    { "glImportMemoryFdEXT", "GL_EXT_memory_object_fd", offsetof(struct opengl_funcs, ext.p_glImportMemoryFdEXT) },
-    { "glImportMemoryWin32HandleEXT", "GL_EXT_memory_object_win32", offsetof(struct opengl_funcs, ext.p_glImportMemoryWin32HandleEXT) },
-    { "glImportMemoryWin32NameEXT", "GL_EXT_memory_object_win32", offsetof(struct opengl_funcs, ext.p_glImportMemoryWin32NameEXT) },
-    { "glImportSemaphoreFdEXT", "GL_EXT_semaphore_fd", offsetof(struct opengl_funcs, ext.p_glImportSemaphoreFdEXT) },
-    { "glImportSemaphoreWin32HandleEXT", "GL_EXT_semaphore_win32", offsetof(struct opengl_funcs, ext.p_glImportSemaphoreWin32HandleEXT) },
-    { "glImportSemaphoreWin32NameEXT", "GL_EXT_semaphore_win32", offsetof(struct opengl_funcs, ext.p_glImportSemaphoreWin32NameEXT) },
-    { "glImportSyncEXT", "GL_EXT_x11_sync_object", offsetof(struct opengl_funcs, ext.p_glImportSyncEXT) },
-    { "glIndexFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glIndexFormatNV) },
-    { "glIndexFuncEXT", "GL_EXT_index_func", offsetof(struct opengl_funcs, ext.p_glIndexFuncEXT) },
-    { "glIndexMaterialEXT", "GL_EXT_index_material", offsetof(struct opengl_funcs, ext.p_glIndexMaterialEXT) },
-    { "glIndexPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, ext.p_glIndexPointerEXT) },
-    { "glIndexPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, ext.p_glIndexPointerListIBM) },
-    { "glIndexxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glIndexxOES) },
-    { "glIndexxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glIndexxvOES) },
-    { "glInsertComponentEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glInsertComponentEXT) },
-    { "glInsertEventMarkerEXT", "GL_EXT_debug_marker", offsetof(struct opengl_funcs, ext.p_glInsertEventMarkerEXT) },
-    { "glInstrumentsBufferSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, ext.p_glInstrumentsBufferSGIX) },
-    { "glInterpolatePathsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glInterpolatePathsNV) },
-    { "glInvalidateBufferData", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glInvalidateBufferData) },
-    { "glInvalidateBufferSubData", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glInvalidateBufferSubData) },
-    { "glInvalidateFramebuffer", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glInvalidateFramebuffer) },
-    { "glInvalidateNamedFramebufferData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glInvalidateNamedFramebufferData) },
-    { "glInvalidateNamedFramebufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glInvalidateNamedFramebufferSubData) },
-    { "glInvalidateSubFramebuffer", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glInvalidateSubFramebuffer) },
-    { "glInvalidateTexImage", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glInvalidateTexImage) },
-    { "glInvalidateTexSubImage", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glInvalidateTexSubImage) },
-    { "glIsAsyncMarkerSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, ext.p_glIsAsyncMarkerSGIX) },
-    { "glIsBuffer", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glIsBuffer) },
-    { "glIsBufferARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glIsBufferARB) },
-    { "glIsBufferResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glIsBufferResidentNV) },
-    { "glIsCommandListNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glIsCommandListNV) },
-    { "glIsEnabledIndexedEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, ext.p_glIsEnabledIndexedEXT) },
-    { "glIsEnabledi", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glIsEnabledi) },
-    { "glIsFenceAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, ext.p_glIsFenceAPPLE) },
-    { "glIsFenceNV", "GL_NV_fence", offsetof(struct opengl_funcs, ext.p_glIsFenceNV) },
-    { "glIsFramebuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glIsFramebuffer) },
-    { "glIsFramebufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glIsFramebufferEXT) },
-    { "glIsImageHandleResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glIsImageHandleResidentARB) },
-    { "glIsImageHandleResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glIsImageHandleResidentNV) },
-    { "glIsMemoryObjectEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glIsMemoryObjectEXT) },
-    { "glIsNameAMD", "GL_AMD_name_gen_delete", offsetof(struct opengl_funcs, ext.p_glIsNameAMD) },
-    { "glIsNamedBufferResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glIsNamedBufferResidentNV) },
-    { "glIsNamedStringARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, ext.p_glIsNamedStringARB) },
-    { "glIsObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glIsObjectBufferATI) },
-    { "glIsOcclusionQueryNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, ext.p_glIsOcclusionQueryNV) },
-    { "glIsPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glIsPathNV) },
-    { "glIsPointInFillPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glIsPointInFillPathNV) },
-    { "glIsPointInStrokePathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glIsPointInStrokePathNV) },
-    { "glIsProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glIsProgram) },
-    { "glIsProgramARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glIsProgramARB) },
-    { "glIsProgramNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glIsProgramNV) },
-    { "glIsProgramPipeline", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glIsProgramPipeline) },
-    { "glIsQuery", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glIsQuery) },
-    { "glIsQueryARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, ext.p_glIsQueryARB) },
-    { "glIsRenderbuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glIsRenderbuffer) },
-    { "glIsRenderbufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glIsRenderbufferEXT) },
-    { "glIsSampler", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glIsSampler) },
-    { "glIsSemaphoreEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, ext.p_glIsSemaphoreEXT) },
-    { "glIsShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glIsShader) },
-    { "glIsStateNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glIsStateNV) },
-    { "glIsSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glIsSync) },
-    { "glIsTextureEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, ext.p_glIsTextureEXT) },
-    { "glIsTextureHandleResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glIsTextureHandleResidentARB) },
-    { "glIsTextureHandleResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glIsTextureHandleResidentNV) },
-    { "glIsTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glIsTransformFeedback) },
-    { "glIsTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, ext.p_glIsTransformFeedbackNV) },
-    { "glIsVariantEnabledEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glIsVariantEnabledEXT) },
-    { "glIsVertexArray", "GL_ARB_vertex_array_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glIsVertexArray) },
-    { "glIsVertexArrayAPPLE", "GL_APPLE_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glIsVertexArrayAPPLE) },
-    { "glIsVertexAttribEnabledAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, ext.p_glIsVertexAttribEnabledAPPLE) },
-    { "glLGPUCopyImageSubDataNVX", "GL_NVX_linked_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glLGPUCopyImageSubDataNVX) },
-    { "glLGPUInterlockNVX", "GL_NVX_linked_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glLGPUInterlockNVX) },
-    { "glLGPUNamedBufferSubDataNVX", "GL_NVX_linked_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glLGPUNamedBufferSubDataNVX) },
-    { "glLabelObjectEXT", "GL_EXT_debug_label", offsetof(struct opengl_funcs, ext.p_glLabelObjectEXT) },
-    { "glLightEnviSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, ext.p_glLightEnviSGIX) },
-    { "glLightModelxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glLightModelxOES) },
-    { "glLightModelxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glLightModelxvOES) },
-    { "glLightxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glLightxOES) },
-    { "glLightxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glLightxvOES) },
-    { "glLineWidthxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glLineWidthxOES) },
-    { "glLinkProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glLinkProgram) },
-    { "glLinkProgramARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glLinkProgramARB) },
-    { "glListDrawCommandsStatesClientNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glListDrawCommandsStatesClientNV) },
-    { "glListParameterfSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, ext.p_glListParameterfSGIX) },
-    { "glListParameterfvSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, ext.p_glListParameterfvSGIX) },
-    { "glListParameteriSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, ext.p_glListParameteriSGIX) },
-    { "glListParameterivSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, ext.p_glListParameterivSGIX) },
-    { "glLoadIdentityDeformationMapSGIX", "GL_SGIX_polynomial_ffd", offsetof(struct opengl_funcs, ext.p_glLoadIdentityDeformationMapSGIX) },
-    { "glLoadMatrixxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glLoadMatrixxOES) },
-    { "glLoadProgramNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glLoadProgramNV) },
-    { "glLoadTransposeMatrixd", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glLoadTransposeMatrixd) },
-    { "glLoadTransposeMatrixdARB", "GL_ARB_transpose_matrix", offsetof(struct opengl_funcs, ext.p_glLoadTransposeMatrixdARB) },
-    { "glLoadTransposeMatrixf", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glLoadTransposeMatrixf) },
-    { "glLoadTransposeMatrixfARB", "GL_ARB_transpose_matrix", offsetof(struct opengl_funcs, ext.p_glLoadTransposeMatrixfARB) },
-    { "glLoadTransposeMatrixxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glLoadTransposeMatrixxOES) },
-    { "glLockArraysEXT", "GL_EXT_compiled_vertex_array", offsetof(struct opengl_funcs, ext.p_glLockArraysEXT) },
-    { "glMTexCoord2fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMTexCoord2fSGIS) },
-    { "glMTexCoord2fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMTexCoord2fvSGIS) },
-    { "glMakeBufferNonResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glMakeBufferNonResidentNV) },
-    { "glMakeBufferResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glMakeBufferResidentNV) },
-    { "glMakeImageHandleNonResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glMakeImageHandleNonResidentARB) },
-    { "glMakeImageHandleNonResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glMakeImageHandleNonResidentNV) },
-    { "glMakeImageHandleResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glMakeImageHandleResidentARB) },
-    { "glMakeImageHandleResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glMakeImageHandleResidentNV) },
-    { "glMakeNamedBufferNonResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glMakeNamedBufferNonResidentNV) },
-    { "glMakeNamedBufferResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glMakeNamedBufferResidentNV) },
-    { "glMakeTextureHandleNonResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glMakeTextureHandleNonResidentARB) },
-    { "glMakeTextureHandleNonResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glMakeTextureHandleNonResidentNV) },
-    { "glMakeTextureHandleResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glMakeTextureHandleResidentARB) },
-    { "glMakeTextureHandleResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glMakeTextureHandleResidentNV) },
-    { "glMap1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMap1xOES) },
-    { "glMap2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMap2xOES) },
-    { "glMapBuffer", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glMapBuffer) },
-    { "glMapBufferARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glMapBufferARB) },
-    { "glMapBufferRange", "GL_ARB_map_buffer_range GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glMapBufferRange) },
-    { "glMapControlPointsNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, ext.p_glMapControlPointsNV) },
-    { "glMapGrid1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMapGrid1xOES) },
-    { "glMapGrid2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMapGrid2xOES) },
-    { "glMapNamedBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glMapNamedBuffer) },
-    { "glMapNamedBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMapNamedBufferEXT) },
-    { "glMapNamedBufferRange", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glMapNamedBufferRange) },
-    { "glMapNamedBufferRangeEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMapNamedBufferRangeEXT) },
-    { "glMapObjectBufferATI", "GL_ATI_map_object_buffer", offsetof(struct opengl_funcs, ext.p_glMapObjectBufferATI) },
-    { "glMapParameterfvNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, ext.p_glMapParameterfvNV) },
-    { "glMapParameterivNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, ext.p_glMapParameterivNV) },
-    { "glMapTexture2DINTEL", "GL_INTEL_map_texture", offsetof(struct opengl_funcs, ext.p_glMapTexture2DINTEL) },
-    { "glMapVertexAttrib1dAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, ext.p_glMapVertexAttrib1dAPPLE) },
-    { "glMapVertexAttrib1fAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, ext.p_glMapVertexAttrib1fAPPLE) },
-    { "glMapVertexAttrib2dAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, ext.p_glMapVertexAttrib2dAPPLE) },
-    { "glMapVertexAttrib2fAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, ext.p_glMapVertexAttrib2fAPPLE) },
-    { "glMaterialxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMaterialxOES) },
-    { "glMaterialxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMaterialxvOES) },
-    { "glMatrixFrustumEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixFrustumEXT) },
-    { "glMatrixIndexPointerARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, ext.p_glMatrixIndexPointerARB) },
-    { "glMatrixIndexubvARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, ext.p_glMatrixIndexubvARB) },
-    { "glMatrixIndexuivARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, ext.p_glMatrixIndexuivARB) },
-    { "glMatrixIndexusvARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, ext.p_glMatrixIndexusvARB) },
-    { "glMatrixLoad3x2fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixLoad3x2fNV) },
-    { "glMatrixLoad3x3fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixLoad3x3fNV) },
-    { "glMatrixLoadIdentityEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixLoadIdentityEXT) },
-    { "glMatrixLoadTranspose3x3fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixLoadTranspose3x3fNV) },
-    { "glMatrixLoadTransposedEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixLoadTransposedEXT) },
-    { "glMatrixLoadTransposefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixLoadTransposefEXT) },
-    { "glMatrixLoaddEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixLoaddEXT) },
-    { "glMatrixLoadfEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixLoadfEXT) },
-    { "glMatrixMult3x2fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixMult3x2fNV) },
-    { "glMatrixMult3x3fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixMult3x3fNV) },
-    { "glMatrixMultTranspose3x3fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixMultTranspose3x3fNV) },
-    { "glMatrixMultTransposedEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixMultTransposedEXT) },
-    { "glMatrixMultTransposefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixMultTransposefEXT) },
-    { "glMatrixMultdEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixMultdEXT) },
-    { "glMatrixMultfEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixMultfEXT) },
-    { "glMatrixOrthoEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixOrthoEXT) },
-    { "glMatrixPopEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixPopEXT) },
-    { "glMatrixPushEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixPushEXT) },
-    { "glMatrixRotatedEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixRotatedEXT) },
-    { "glMatrixRotatefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixRotatefEXT) },
-    { "glMatrixScaledEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixScaledEXT) },
-    { "glMatrixScalefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixScalefEXT) },
-    { "glMatrixTranslatedEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixTranslatedEXT) },
-    { "glMatrixTranslatefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glMatrixTranslatefEXT) },
-    { "glMaxShaderCompilerThreadsARB", "GL_ARB_parallel_shader_compile", offsetof(struct opengl_funcs, ext.p_glMaxShaderCompilerThreadsARB) },
-    { "glMaxShaderCompilerThreadsKHR", "GL_KHR_parallel_shader_compile", offsetof(struct opengl_funcs, ext.p_glMaxShaderCompilerThreadsKHR) },
-    { "glMemoryBarrier", "GL_ARB_shader_image_load_store GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glMemoryBarrier) },
-    { "glMemoryBarrierByRegion", "GL_ARB_ES3_1_compatibility GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glMemoryBarrierByRegion) },
-    { "glMemoryBarrierEXT", "GL_EXT_shader_image_load_store", offsetof(struct opengl_funcs, ext.p_glMemoryBarrierEXT) },
-    { "glMemoryObjectParameterivEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glMemoryObjectParameterivEXT) },
-    { "glMinSampleShading", "GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glMinSampleShading) },
-    { "glMinSampleShadingARB", "GL_ARB_sample_shading", offsetof(struct opengl_funcs, ext.p_glMinSampleShadingARB) },
-    { "glMinmax", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glMinmax) },
-    { "glMinmaxEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glMinmaxEXT) },
-    { "glMultMatrixxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultMatrixxOES) },
-    { "glMultTransposeMatrixd", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultTransposeMatrixd) },
-    { "glMultTransposeMatrixdARB", "GL_ARB_transpose_matrix", offsetof(struct opengl_funcs, ext.p_glMultTransposeMatrixdARB) },
-    { "glMultTransposeMatrixf", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultTransposeMatrixf) },
-    { "glMultTransposeMatrixfARB", "GL_ARB_transpose_matrix", offsetof(struct opengl_funcs, ext.p_glMultTransposeMatrixfARB) },
-    { "glMultTransposeMatrixxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultTransposeMatrixxOES) },
-    { "glMultiDrawArrays", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glMultiDrawArrays) },
-    { "glMultiDrawArraysEXT", "GL_EXT_multi_draw_arrays", offsetof(struct opengl_funcs, ext.p_glMultiDrawArraysEXT) },
-    { "glMultiDrawArraysIndirect", "GL_ARB_multi_draw_indirect GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glMultiDrawArraysIndirect) },
-    { "glMultiDrawArraysIndirectAMD", "GL_AMD_multi_draw_indirect", offsetof(struct opengl_funcs, ext.p_glMultiDrawArraysIndirectAMD) },
-    { "glMultiDrawArraysIndirectBindlessCountNV", "GL_NV_bindless_multi_draw_indirect_count", offsetof(struct opengl_funcs, ext.p_glMultiDrawArraysIndirectBindlessCountNV) },
-    { "glMultiDrawArraysIndirectBindlessNV", "GL_NV_bindless_multi_draw_indirect", offsetof(struct opengl_funcs, ext.p_glMultiDrawArraysIndirectBindlessNV) },
-    { "glMultiDrawArraysIndirectCount", "GL_VERSION_4_6", offsetof(struct opengl_funcs, ext.p_glMultiDrawArraysIndirectCount) },
-    { "glMultiDrawArraysIndirectCountARB", "GL_ARB_indirect_parameters", offsetof(struct opengl_funcs, ext.p_glMultiDrawArraysIndirectCountARB) },
-    { "glMultiDrawElementArrayAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, ext.p_glMultiDrawElementArrayAPPLE) },
-    { "glMultiDrawElements", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glMultiDrawElements) },
-    { "glMultiDrawElementsBaseVertex", "GL_ARB_draw_elements_base_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glMultiDrawElementsBaseVertex) },
-    { "glMultiDrawElementsEXT", "GL_EXT_multi_draw_arrays", offsetof(struct opengl_funcs, ext.p_glMultiDrawElementsEXT) },
-    { "glMultiDrawElementsIndirect", "GL_ARB_multi_draw_indirect GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glMultiDrawElementsIndirect) },
-    { "glMultiDrawElementsIndirectAMD", "GL_AMD_multi_draw_indirect", offsetof(struct opengl_funcs, ext.p_glMultiDrawElementsIndirectAMD) },
-    { "glMultiDrawElementsIndirectBindlessCountNV", "GL_NV_bindless_multi_draw_indirect_count", offsetof(struct opengl_funcs, ext.p_glMultiDrawElementsIndirectBindlessCountNV) },
-    { "glMultiDrawElementsIndirectBindlessNV", "GL_NV_bindless_multi_draw_indirect", offsetof(struct opengl_funcs, ext.p_glMultiDrawElementsIndirectBindlessNV) },
-    { "glMultiDrawElementsIndirectCount", "GL_VERSION_4_6", offsetof(struct opengl_funcs, ext.p_glMultiDrawElementsIndirectCount) },
-    { "glMultiDrawElementsIndirectCountARB", "GL_ARB_indirect_parameters", offsetof(struct opengl_funcs, ext.p_glMultiDrawElementsIndirectCountARB) },
-    { "glMultiDrawMeshTasksIndirectCountNV", "GL_NV_mesh_shader", offsetof(struct opengl_funcs, ext.p_glMultiDrawMeshTasksIndirectCountNV) },
-    { "glMultiDrawMeshTasksIndirectNV", "GL_NV_mesh_shader", offsetof(struct opengl_funcs, ext.p_glMultiDrawMeshTasksIndirectNV) },
-    { "glMultiDrawRangeElementArrayAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, ext.p_glMultiDrawRangeElementArrayAPPLE) },
-    { "glMultiModeDrawArraysIBM", "GL_IBM_multimode_draw_arrays", offsetof(struct opengl_funcs, ext.p_glMultiModeDrawArraysIBM) },
-    { "glMultiModeDrawElementsIBM", "GL_IBM_multimode_draw_arrays", offsetof(struct opengl_funcs, ext.p_glMultiModeDrawElementsIBM) },
-    { "glMultiTexBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexBufferEXT) },
-    { "glMultiTexCoord1bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1bOES) },
-    { "glMultiTexCoord1bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1bvOES) },
-    { "glMultiTexCoord1d", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1d) },
-    { "glMultiTexCoord1dARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1dARB) },
-    { "glMultiTexCoord1dSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1dSGIS) },
-    { "glMultiTexCoord1dv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1dv) },
-    { "glMultiTexCoord1dvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1dvARB) },
-    { "glMultiTexCoord1dvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1dvSGIS) },
-    { "glMultiTexCoord1f", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1f) },
-    { "glMultiTexCoord1fARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1fARB) },
-    { "glMultiTexCoord1fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1fSGIS) },
-    { "glMultiTexCoord1fv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1fv) },
-    { "glMultiTexCoord1fvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1fvARB) },
-    { "glMultiTexCoord1fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1fvSGIS) },
-    { "glMultiTexCoord1hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1hNV) },
-    { "glMultiTexCoord1hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1hvNV) },
-    { "glMultiTexCoord1i", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1i) },
-    { "glMultiTexCoord1iARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1iARB) },
-    { "glMultiTexCoord1iSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1iSGIS) },
-    { "glMultiTexCoord1iv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1iv) },
-    { "glMultiTexCoord1ivARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1ivARB) },
-    { "glMultiTexCoord1ivSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1ivSGIS) },
-    { "glMultiTexCoord1s", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1s) },
-    { "glMultiTexCoord1sARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1sARB) },
-    { "glMultiTexCoord1sSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1sSGIS) },
-    { "glMultiTexCoord1sv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1sv) },
-    { "glMultiTexCoord1svARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1svARB) },
-    { "glMultiTexCoord1svSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1svSGIS) },
-    { "glMultiTexCoord1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1xOES) },
-    { "glMultiTexCoord1xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord1xvOES) },
-    { "glMultiTexCoord2bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2bOES) },
-    { "glMultiTexCoord2bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2bvOES) },
-    { "glMultiTexCoord2d", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2d) },
-    { "glMultiTexCoord2dARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2dARB) },
-    { "glMultiTexCoord2dSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2dSGIS) },
-    { "glMultiTexCoord2dv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2dv) },
-    { "glMultiTexCoord2dvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2dvARB) },
-    { "glMultiTexCoord2dvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2dvSGIS) },
-    { "glMultiTexCoord2f", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2f) },
-    { "glMultiTexCoord2fARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2fARB) },
-    { "glMultiTexCoord2fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2fSGIS) },
-    { "glMultiTexCoord2fv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2fv) },
-    { "glMultiTexCoord2fvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2fvARB) },
-    { "glMultiTexCoord2fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2fvSGIS) },
-    { "glMultiTexCoord2hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2hNV) },
-    { "glMultiTexCoord2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2hvNV) },
-    { "glMultiTexCoord2i", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2i) },
-    { "glMultiTexCoord2iARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2iARB) },
-    { "glMultiTexCoord2iSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2iSGIS) },
-    { "glMultiTexCoord2iv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2iv) },
-    { "glMultiTexCoord2ivARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2ivARB) },
-    { "glMultiTexCoord2ivSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2ivSGIS) },
-    { "glMultiTexCoord2s", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2s) },
-    { "glMultiTexCoord2sARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2sARB) },
-    { "glMultiTexCoord2sSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2sSGIS) },
-    { "glMultiTexCoord2sv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2sv) },
-    { "glMultiTexCoord2svARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2svARB) },
-    { "glMultiTexCoord2svSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2svSGIS) },
-    { "glMultiTexCoord2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2xOES) },
-    { "glMultiTexCoord2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord2xvOES) },
-    { "glMultiTexCoord3bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3bOES) },
-    { "glMultiTexCoord3bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3bvOES) },
-    { "glMultiTexCoord3d", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3d) },
-    { "glMultiTexCoord3dARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3dARB) },
-    { "glMultiTexCoord3dSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3dSGIS) },
-    { "glMultiTexCoord3dv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3dv) },
-    { "glMultiTexCoord3dvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3dvARB) },
-    { "glMultiTexCoord3dvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3dvSGIS) },
-    { "glMultiTexCoord3f", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3f) },
-    { "glMultiTexCoord3fARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3fARB) },
-    { "glMultiTexCoord3fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3fSGIS) },
-    { "glMultiTexCoord3fv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3fv) },
-    { "glMultiTexCoord3fvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3fvARB) },
-    { "glMultiTexCoord3fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3fvSGIS) },
-    { "glMultiTexCoord3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3hNV) },
-    { "glMultiTexCoord3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3hvNV) },
-    { "glMultiTexCoord3i", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3i) },
-    { "glMultiTexCoord3iARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3iARB) },
-    { "glMultiTexCoord3iSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3iSGIS) },
-    { "glMultiTexCoord3iv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3iv) },
-    { "glMultiTexCoord3ivARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3ivARB) },
-    { "glMultiTexCoord3ivSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3ivSGIS) },
-    { "glMultiTexCoord3s", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3s) },
-    { "glMultiTexCoord3sARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3sARB) },
-    { "glMultiTexCoord3sSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3sSGIS) },
-    { "glMultiTexCoord3sv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3sv) },
-    { "glMultiTexCoord3svARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3svARB) },
-    { "glMultiTexCoord3svSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3svSGIS) },
-    { "glMultiTexCoord3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3xOES) },
-    { "glMultiTexCoord3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord3xvOES) },
-    { "glMultiTexCoord4bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4bOES) },
-    { "glMultiTexCoord4bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4bvOES) },
-    { "glMultiTexCoord4d", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4d) },
-    { "glMultiTexCoord4dARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4dARB) },
-    { "glMultiTexCoord4dSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4dSGIS) },
-    { "glMultiTexCoord4dv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4dv) },
-    { "glMultiTexCoord4dvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4dvARB) },
-    { "glMultiTexCoord4dvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4dvSGIS) },
-    { "glMultiTexCoord4f", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4f) },
-    { "glMultiTexCoord4fARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4fARB) },
-    { "glMultiTexCoord4fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4fSGIS) },
-    { "glMultiTexCoord4fv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4fv) },
-    { "glMultiTexCoord4fvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4fvARB) },
-    { "glMultiTexCoord4fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4fvSGIS) },
-    { "glMultiTexCoord4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4hNV) },
-    { "glMultiTexCoord4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4hvNV) },
-    { "glMultiTexCoord4i", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4i) },
-    { "glMultiTexCoord4iARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4iARB) },
-    { "glMultiTexCoord4iSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4iSGIS) },
-    { "glMultiTexCoord4iv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4iv) },
-    { "glMultiTexCoord4ivARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4ivARB) },
-    { "glMultiTexCoord4ivSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4ivSGIS) },
-    { "glMultiTexCoord4s", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4s) },
-    { "glMultiTexCoord4sARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4sARB) },
-    { "glMultiTexCoord4sSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4sSGIS) },
-    { "glMultiTexCoord4sv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4sv) },
-    { "glMultiTexCoord4svARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4svARB) },
-    { "glMultiTexCoord4svSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4svSGIS) },
-    { "glMultiTexCoord4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4xOES) },
-    { "glMultiTexCoord4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glMultiTexCoord4xvOES) },
-    { "glMultiTexCoordP1ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordP1ui) },
-    { "glMultiTexCoordP1uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordP1uiv) },
-    { "glMultiTexCoordP2ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordP2ui) },
-    { "glMultiTexCoordP2uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordP2uiv) },
-    { "glMultiTexCoordP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordP3ui) },
-    { "glMultiTexCoordP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordP3uiv) },
-    { "glMultiTexCoordP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordP4ui) },
-    { "glMultiTexCoordP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordP4uiv) },
-    { "glMultiTexCoordPointerEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordPointerEXT) },
-    { "glMultiTexCoordPointerSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glMultiTexCoordPointerSGIS) },
-    { "glMultiTexEnvfEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexEnvfEXT) },
-    { "glMultiTexEnvfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexEnvfvEXT) },
-    { "glMultiTexEnviEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexEnviEXT) },
-    { "glMultiTexEnvivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexEnvivEXT) },
-    { "glMultiTexGendEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexGendEXT) },
-    { "glMultiTexGendvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexGendvEXT) },
-    { "glMultiTexGenfEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexGenfEXT) },
-    { "glMultiTexGenfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexGenfvEXT) },
-    { "glMultiTexGeniEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexGeniEXT) },
-    { "glMultiTexGenivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexGenivEXT) },
-    { "glMultiTexImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexImage1DEXT) },
-    { "glMultiTexImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexImage2DEXT) },
-    { "glMultiTexImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexImage3DEXT) },
-    { "glMultiTexParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexParameterIivEXT) },
-    { "glMultiTexParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexParameterIuivEXT) },
-    { "glMultiTexParameterfEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexParameterfEXT) },
-    { "glMultiTexParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexParameterfvEXT) },
-    { "glMultiTexParameteriEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexParameteriEXT) },
-    { "glMultiTexParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexParameterivEXT) },
-    { "glMultiTexRenderbufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexRenderbufferEXT) },
-    { "glMultiTexSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexSubImage1DEXT) },
-    { "glMultiTexSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexSubImage2DEXT) },
-    { "glMultiTexSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glMultiTexSubImage3DEXT) },
-    { "glMulticastBarrierNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastBarrierNV) },
-    { "glMulticastBlitFramebufferNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastBlitFramebufferNV) },
-    { "glMulticastBufferSubDataNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastBufferSubDataNV) },
-    { "glMulticastCopyBufferSubDataNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastCopyBufferSubDataNV) },
-    { "glMulticastCopyImageSubDataNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastCopyImageSubDataNV) },
-    { "glMulticastFramebufferSampleLocationsfvNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastFramebufferSampleLocationsfvNV) },
-    { "glMulticastGetQueryObjecti64vNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastGetQueryObjecti64vNV) },
-    { "glMulticastGetQueryObjectivNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastGetQueryObjectivNV) },
-    { "glMulticastGetQueryObjectui64vNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastGetQueryObjectui64vNV) },
-    { "glMulticastGetQueryObjectuivNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastGetQueryObjectuivNV) },
-    { "glMulticastScissorArrayvNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, ext.p_glMulticastScissorArrayvNVX) },
-    { "glMulticastViewportArrayvNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, ext.p_glMulticastViewportArrayvNVX) },
-    { "glMulticastViewportPositionWScaleNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, ext.p_glMulticastViewportPositionWScaleNVX) },
-    { "glMulticastWaitSyncNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glMulticastWaitSyncNV) },
-    { "glNamedBufferAttachMemoryNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, ext.p_glNamedBufferAttachMemoryNV) },
-    { "glNamedBufferData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedBufferData) },
-    { "glNamedBufferDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedBufferDataEXT) },
-    { "glNamedBufferPageCommitmentARB", "GL_ARB_sparse_buffer", offsetof(struct opengl_funcs, ext.p_glNamedBufferPageCommitmentARB) },
-    { "glNamedBufferPageCommitmentEXT", "GL_ARB_sparse_buffer", offsetof(struct opengl_funcs, ext.p_glNamedBufferPageCommitmentEXT) },
-    { "glNamedBufferStorage", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedBufferStorage) },
-    { "glNamedBufferStorageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedBufferStorageEXT) },
-    { "glNamedBufferStorageExternalEXT", "GL_EXT_external_buffer", offsetof(struct opengl_funcs, ext.p_glNamedBufferStorageExternalEXT) },
-    { "glNamedBufferStorageMemEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glNamedBufferStorageMemEXT) },
-    { "glNamedBufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedBufferSubData) },
-    { "glNamedBufferSubDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedBufferSubDataEXT) },
-    { "glNamedCopyBufferSubDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedCopyBufferSubDataEXT) },
-    { "glNamedFramebufferDrawBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferDrawBuffer) },
-    { "glNamedFramebufferDrawBuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferDrawBuffers) },
-    { "glNamedFramebufferParameteri", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferParameteri) },
-    { "glNamedFramebufferParameteriEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferParameteriEXT) },
-    { "glNamedFramebufferReadBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferReadBuffer) },
-    { "glNamedFramebufferRenderbuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferRenderbuffer) },
-    { "glNamedFramebufferRenderbufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferRenderbufferEXT) },
-    { "glNamedFramebufferSampleLocationsfvARB", "GL_ARB_sample_locations", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferSampleLocationsfvARB) },
-    { "glNamedFramebufferSampleLocationsfvNV", "GL_NV_sample_locations", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferSampleLocationsfvNV) },
-    { "glNamedFramebufferSamplePositionsfvAMD", "GL_AMD_framebuffer_sample_positions", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferSamplePositionsfvAMD) },
-    { "glNamedFramebufferTexture", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferTexture) },
-    { "glNamedFramebufferTexture1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferTexture1DEXT) },
-    { "glNamedFramebufferTexture2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferTexture2DEXT) },
-    { "glNamedFramebufferTexture3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferTexture3DEXT) },
-    { "glNamedFramebufferTextureEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferTextureEXT) },
-    { "glNamedFramebufferTextureFaceEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferTextureFaceEXT) },
-    { "glNamedFramebufferTextureLayer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferTextureLayer) },
-    { "glNamedFramebufferTextureLayerEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedFramebufferTextureLayerEXT) },
-    { "glNamedProgramLocalParameter4dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParameter4dEXT) },
-    { "glNamedProgramLocalParameter4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParameter4dvEXT) },
-    { "glNamedProgramLocalParameter4fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParameter4fEXT) },
-    { "glNamedProgramLocalParameter4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParameter4fvEXT) },
-    { "glNamedProgramLocalParameterI4iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParameterI4iEXT) },
-    { "glNamedProgramLocalParameterI4ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParameterI4ivEXT) },
-    { "glNamedProgramLocalParameterI4uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParameterI4uiEXT) },
-    { "glNamedProgramLocalParameterI4uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParameterI4uivEXT) },
-    { "glNamedProgramLocalParameters4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParameters4fvEXT) },
-    { "glNamedProgramLocalParametersI4ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParametersI4ivEXT) },
-    { "glNamedProgramLocalParametersI4uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramLocalParametersI4uivEXT) },
-    { "glNamedProgramStringEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedProgramStringEXT) },
-    { "glNamedRenderbufferStorage", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedRenderbufferStorage) },
-    { "glNamedRenderbufferStorageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedRenderbufferStorageEXT) },
-    { "glNamedRenderbufferStorageMultisample", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glNamedRenderbufferStorageMultisample) },
-    { "glNamedRenderbufferStorageMultisampleAdvancedAMD", "GL_AMD_framebuffer_multisample_advanced", offsetof(struct opengl_funcs, ext.p_glNamedRenderbufferStorageMultisampleAdvancedAMD) },
-    { "glNamedRenderbufferStorageMultisampleCoverageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedRenderbufferStorageMultisampleCoverageEXT) },
-    { "glNamedRenderbufferStorageMultisampleEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glNamedRenderbufferStorageMultisampleEXT) },
-    { "glNamedStringARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, ext.p_glNamedStringARB) },
-    { "glNewBufferRegion", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, ext.p_glNewBufferRegion) },
-    { "glNewObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glNewObjectBufferATI) },
-    { "glNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glNormal3fVertex3fSUN) },
-    { "glNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glNormal3fVertex3fvSUN) },
-    { "glNormal3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glNormal3hNV) },
-    { "glNormal3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glNormal3hvNV) },
-    { "glNormal3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glNormal3xOES) },
-    { "glNormal3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glNormal3xvOES) },
-    { "glNormalFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glNormalFormatNV) },
-    { "glNormalP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glNormalP3ui) },
-    { "glNormalP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glNormalP3uiv) },
-    { "glNormalPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, ext.p_glNormalPointerEXT) },
-    { "glNormalPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, ext.p_glNormalPointerListIBM) },
-    { "glNormalPointervINTEL", "GL_INTEL_parallel_arrays", offsetof(struct opengl_funcs, ext.p_glNormalPointervINTEL) },
-    { "glNormalStream3bATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3bATI) },
-    { "glNormalStream3bvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3bvATI) },
-    { "glNormalStream3dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3dATI) },
-    { "glNormalStream3dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3dvATI) },
-    { "glNormalStream3fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3fATI) },
-    { "glNormalStream3fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3fvATI) },
-    { "glNormalStream3iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3iATI) },
-    { "glNormalStream3ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3ivATI) },
-    { "glNormalStream3sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3sATI) },
-    { "glNormalStream3svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glNormalStream3svATI) },
-    { "glObjectLabel", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glObjectLabel) },
-    { "glObjectPtrLabel", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glObjectPtrLabel) },
-    { "glObjectPurgeableAPPLE", "GL_APPLE_object_purgeable", offsetof(struct opengl_funcs, ext.p_glObjectPurgeableAPPLE) },
-    { "glObjectUnpurgeableAPPLE", "GL_APPLE_object_purgeable", offsetof(struct opengl_funcs, ext.p_glObjectUnpurgeableAPPLE) },
-    { "glOrthofOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, ext.p_glOrthofOES) },
-    { "glOrthoxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glOrthoxOES) },
-    { "glPNTrianglesfATI", "GL_ATI_pn_triangles", offsetof(struct opengl_funcs, ext.p_glPNTrianglesfATI) },
-    { "glPNTrianglesiATI", "GL_ATI_pn_triangles", offsetof(struct opengl_funcs, ext.p_glPNTrianglesiATI) },
-    { "glPassTexCoordATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glPassTexCoordATI) },
-    { "glPassThroughxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glPassThroughxOES) },
-    { "glPatchParameterfv", "GL_ARB_tessellation_shader GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glPatchParameterfv) },
-    { "glPatchParameteri", "GL_ARB_tessellation_shader GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glPatchParameteri) },
-    { "glPathColorGenNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathColorGenNV) },
-    { "glPathCommandsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathCommandsNV) },
-    { "glPathCoordsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathCoordsNV) },
-    { "glPathCoverDepthFuncNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathCoverDepthFuncNV) },
-    { "glPathDashArrayNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathDashArrayNV) },
-    { "glPathFogGenNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathFogGenNV) },
-    { "glPathGlyphIndexArrayNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathGlyphIndexArrayNV) },
-    { "glPathGlyphIndexRangeNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathGlyphIndexRangeNV) },
-    { "glPathGlyphRangeNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathGlyphRangeNV) },
-    { "glPathGlyphsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathGlyphsNV) },
-    { "glPathMemoryGlyphIndexArrayNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathMemoryGlyphIndexArrayNV) },
-    { "glPathParameterfNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathParameterfNV) },
-    { "glPathParameterfvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathParameterfvNV) },
-    { "glPathParameteriNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathParameteriNV) },
-    { "glPathParameterivNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathParameterivNV) },
-    { "glPathStencilDepthOffsetNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathStencilDepthOffsetNV) },
-    { "glPathStencilFuncNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathStencilFuncNV) },
-    { "glPathStringNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathStringNV) },
-    { "glPathSubCommandsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathSubCommandsNV) },
-    { "glPathSubCoordsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathSubCoordsNV) },
-    { "glPathTexGenNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPathTexGenNV) },
-    { "glPauseTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glPauseTransformFeedback) },
-    { "glPauseTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, ext.p_glPauseTransformFeedbackNV) },
-    { "glPixelDataRangeNV", "GL_NV_pixel_data_range", offsetof(struct opengl_funcs, ext.p_glPixelDataRangeNV) },
-    { "glPixelMapx", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glPixelMapx) },
-    { "glPixelStorex", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glPixelStorex) },
-    { "glPixelTexGenParameterfSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, ext.p_glPixelTexGenParameterfSGIS) },
-    { "glPixelTexGenParameterfvSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, ext.p_glPixelTexGenParameterfvSGIS) },
-    { "glPixelTexGenParameteriSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, ext.p_glPixelTexGenParameteriSGIS) },
-    { "glPixelTexGenParameterivSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, ext.p_glPixelTexGenParameterivSGIS) },
-    { "glPixelTexGenSGIX", "GL_SGIX_pixel_texture", offsetof(struct opengl_funcs, ext.p_glPixelTexGenSGIX) },
-    { "glPixelTransferxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glPixelTransferxOES) },
-    { "glPixelTransformParameterfEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, ext.p_glPixelTransformParameterfEXT) },
-    { "glPixelTransformParameterfvEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, ext.p_glPixelTransformParameterfvEXT) },
-    { "glPixelTransformParameteriEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, ext.p_glPixelTransformParameteriEXT) },
-    { "glPixelTransformParameterivEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, ext.p_glPixelTransformParameterivEXT) },
-    { "glPixelZoomxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glPixelZoomxOES) },
-    { "glPointAlongPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glPointAlongPathNV) },
-    { "glPointParameterf", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glPointParameterf) },
-    { "glPointParameterfARB", "GL_ARB_point_parameters", offsetof(struct opengl_funcs, ext.p_glPointParameterfARB) },
-    { "glPointParameterfEXT", "GL_EXT_point_parameters", offsetof(struct opengl_funcs, ext.p_glPointParameterfEXT) },
-    { "glPointParameterfSGIS", "GL_SGIS_point_parameters", offsetof(struct opengl_funcs, ext.p_glPointParameterfSGIS) },
-    { "glPointParameterfv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glPointParameterfv) },
-    { "glPointParameterfvARB", "GL_ARB_point_parameters", offsetof(struct opengl_funcs, ext.p_glPointParameterfvARB) },
-    { "glPointParameterfvEXT", "GL_EXT_point_parameters", offsetof(struct opengl_funcs, ext.p_glPointParameterfvEXT) },
-    { "glPointParameterfvSGIS", "GL_SGIS_point_parameters", offsetof(struct opengl_funcs, ext.p_glPointParameterfvSGIS) },
-    { "glPointParameteri", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glPointParameteri) },
-    { "glPointParameteriNV", "GL_NV_point_sprite", offsetof(struct opengl_funcs, ext.p_glPointParameteriNV) },
-    { "glPointParameteriv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glPointParameteriv) },
-    { "glPointParameterivNV", "GL_NV_point_sprite", offsetof(struct opengl_funcs, ext.p_glPointParameterivNV) },
-    { "glPointParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glPointParameterxvOES) },
-    { "glPointSizexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glPointSizexOES) },
-    { "glPollAsyncSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, ext.p_glPollAsyncSGIX) },
-    { "glPollInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, ext.p_glPollInstrumentsSGIX) },
-    { "glPolygonOffsetClamp", "GL_ARB_polygon_offset_clamp GL_VERSION_4_6", offsetof(struct opengl_funcs, ext.p_glPolygonOffsetClamp) },
-    { "glPolygonOffsetClampEXT", "GL_EXT_polygon_offset_clamp", offsetof(struct opengl_funcs, ext.p_glPolygonOffsetClampEXT) },
-    { "glPolygonOffsetEXT", "GL_EXT_polygon_offset", offsetof(struct opengl_funcs, ext.p_glPolygonOffsetEXT) },
-    { "glPolygonOffsetxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glPolygonOffsetxOES) },
-    { "glPopDebugGroup", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glPopDebugGroup) },
-    { "glPopGroupMarkerEXT", "GL_EXT_debug_marker", offsetof(struct opengl_funcs, ext.p_glPopGroupMarkerEXT) },
-    { "glPresentFrameDualFillNV", "GL_NV_present_video", offsetof(struct opengl_funcs, ext.p_glPresentFrameDualFillNV) },
-    { "glPresentFrameKeyedNV", "GL_NV_present_video", offsetof(struct opengl_funcs, ext.p_glPresentFrameKeyedNV) },
-    { "glPrimitiveBoundingBoxARB", "GL_ARB_ES3_2_compatibility", offsetof(struct opengl_funcs, ext.p_glPrimitiveBoundingBoxARB) },
-    { "glPrimitiveRestartIndex", "GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glPrimitiveRestartIndex) },
-    { "glPrimitiveRestartIndexNV", "GL_NV_primitive_restart", offsetof(struct opengl_funcs, ext.p_glPrimitiveRestartIndexNV) },
-    { "glPrimitiveRestartNV", "GL_NV_primitive_restart", offsetof(struct opengl_funcs, ext.p_glPrimitiveRestartNV) },
-    { "glPrioritizeTexturesEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, ext.p_glPrioritizeTexturesEXT) },
-    { "glPrioritizeTexturesxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glPrioritizeTexturesxOES) },
-    { "glProgramBinary", "GL_ARB_get_program_binary GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramBinary) },
-    { "glProgramBufferParametersIivNV", "GL_NV_parameter_buffer_object", offsetof(struct opengl_funcs, ext.p_glProgramBufferParametersIivNV) },
-    { "glProgramBufferParametersIuivNV", "GL_NV_parameter_buffer_object", offsetof(struct opengl_funcs, ext.p_glProgramBufferParametersIuivNV) },
-    { "glProgramBufferParametersfvNV", "GL_NV_parameter_buffer_object", offsetof(struct opengl_funcs, ext.p_glProgramBufferParametersfvNV) },
-    { "glProgramEnvParameter4dARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramEnvParameter4dARB) },
-    { "glProgramEnvParameter4dvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramEnvParameter4dvARB) },
-    { "glProgramEnvParameter4fARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramEnvParameter4fARB) },
-    { "glProgramEnvParameter4fvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramEnvParameter4fvARB) },
-    { "glProgramEnvParameterI4iNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramEnvParameterI4iNV) },
-    { "glProgramEnvParameterI4ivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramEnvParameterI4ivNV) },
-    { "glProgramEnvParameterI4uiNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramEnvParameterI4uiNV) },
-    { "glProgramEnvParameterI4uivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramEnvParameterI4uivNV) },
-    { "glProgramEnvParameters4fvEXT", "GL_EXT_gpu_program_parameters", offsetof(struct opengl_funcs, ext.p_glProgramEnvParameters4fvEXT) },
-    { "glProgramEnvParametersI4ivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramEnvParametersI4ivNV) },
-    { "glProgramEnvParametersI4uivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramEnvParametersI4uivNV) },
-    { "glProgramLocalParameter4dARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramLocalParameter4dARB) },
-    { "glProgramLocalParameter4dvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramLocalParameter4dvARB) },
-    { "glProgramLocalParameter4fARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramLocalParameter4fARB) },
-    { "glProgramLocalParameter4fvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramLocalParameter4fvARB) },
-    { "glProgramLocalParameterI4iNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramLocalParameterI4iNV) },
-    { "glProgramLocalParameterI4ivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramLocalParameterI4ivNV) },
-    { "glProgramLocalParameterI4uiNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramLocalParameterI4uiNV) },
-    { "glProgramLocalParameterI4uivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramLocalParameterI4uivNV) },
-    { "glProgramLocalParameters4fvEXT", "GL_EXT_gpu_program_parameters", offsetof(struct opengl_funcs, ext.p_glProgramLocalParameters4fvEXT) },
-    { "glProgramLocalParametersI4ivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramLocalParametersI4ivNV) },
-    { "glProgramLocalParametersI4uivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, ext.p_glProgramLocalParametersI4uivNV) },
-    { "glProgramNamedParameter4dNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, ext.p_glProgramNamedParameter4dNV) },
-    { "glProgramNamedParameter4dvNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, ext.p_glProgramNamedParameter4dvNV) },
-    { "glProgramNamedParameter4fNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, ext.p_glProgramNamedParameter4fNV) },
-    { "glProgramNamedParameter4fvNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, ext.p_glProgramNamedParameter4fvNV) },
-    { "glProgramParameter4dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramParameter4dNV) },
-    { "glProgramParameter4dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramParameter4dvNV) },
-    { "glProgramParameter4fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramParameter4fNV) },
-    { "glProgramParameter4fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramParameter4fvNV) },
-    { "glProgramParameteri", "GL_ARB_get_program_binary GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramParameteri) },
-    { "glProgramParameteriARB", "GL_ARB_geometry_shader4", offsetof(struct opengl_funcs, ext.p_glProgramParameteriARB) },
-    { "glProgramParameteriEXT", "GL_EXT_geometry_shader4", offsetof(struct opengl_funcs, ext.p_glProgramParameteriEXT) },
-    { "glProgramParameters4dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramParameters4dvNV) },
-    { "glProgramParameters4fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramParameters4fvNV) },
-    { "glProgramPathFragmentInputGenNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glProgramPathFragmentInputGenNV) },
-    { "glProgramStringARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, ext.p_glProgramStringARB) },
-    { "glProgramSubroutineParametersuivNV", "GL_NV_gpu_program5", offsetof(struct opengl_funcs, ext.p_glProgramSubroutineParametersuivNV) },
-    { "glProgramUniform1d", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform1d) },
-    { "glProgramUniform1dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform1dEXT) },
-    { "glProgramUniform1dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform1dv) },
-    { "glProgramUniform1dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform1dvEXT) },
-    { "glProgramUniform1f", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform1f) },
-    { "glProgramUniform1fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform1fEXT) },
-    { "glProgramUniform1fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform1fv) },
-    { "glProgramUniform1fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform1fvEXT) },
-    { "glProgramUniform1i", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform1i) },
-    { "glProgramUniform1i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform1i64ARB) },
-    { "glProgramUniform1i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform1i64NV) },
-    { "glProgramUniform1i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform1i64vARB) },
-    { "glProgramUniform1i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform1i64vNV) },
-    { "glProgramUniform1iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform1iEXT) },
-    { "glProgramUniform1iv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform1iv) },
-    { "glProgramUniform1ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform1ivEXT) },
-    { "glProgramUniform1ui", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform1ui) },
-    { "glProgramUniform1ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform1ui64ARB) },
-    { "glProgramUniform1ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform1ui64NV) },
-    { "glProgramUniform1ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform1ui64vARB) },
-    { "glProgramUniform1ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform1ui64vNV) },
-    { "glProgramUniform1uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform1uiEXT) },
-    { "glProgramUniform1uiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform1uiv) },
-    { "glProgramUniform1uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform1uivEXT) },
-    { "glProgramUniform2d", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform2d) },
-    { "glProgramUniform2dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform2dEXT) },
-    { "glProgramUniform2dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform2dv) },
-    { "glProgramUniform2dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform2dvEXT) },
-    { "glProgramUniform2f", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform2f) },
-    { "glProgramUniform2fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform2fEXT) },
-    { "glProgramUniform2fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform2fv) },
-    { "glProgramUniform2fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform2fvEXT) },
-    { "glProgramUniform2i", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform2i) },
-    { "glProgramUniform2i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform2i64ARB) },
-    { "glProgramUniform2i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform2i64NV) },
-    { "glProgramUniform2i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform2i64vARB) },
-    { "glProgramUniform2i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform2i64vNV) },
-    { "glProgramUniform2iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform2iEXT) },
-    { "glProgramUniform2iv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform2iv) },
-    { "glProgramUniform2ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform2ivEXT) },
-    { "glProgramUniform2ui", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform2ui) },
-    { "glProgramUniform2ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform2ui64ARB) },
-    { "glProgramUniform2ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform2ui64NV) },
-    { "glProgramUniform2ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform2ui64vARB) },
-    { "glProgramUniform2ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform2ui64vNV) },
-    { "glProgramUniform2uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform2uiEXT) },
-    { "glProgramUniform2uiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform2uiv) },
-    { "glProgramUniform2uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform2uivEXT) },
-    { "glProgramUniform3d", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform3d) },
-    { "glProgramUniform3dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform3dEXT) },
-    { "glProgramUniform3dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform3dv) },
-    { "glProgramUniform3dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform3dvEXT) },
-    { "glProgramUniform3f", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform3f) },
-    { "glProgramUniform3fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform3fEXT) },
-    { "glProgramUniform3fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform3fv) },
-    { "glProgramUniform3fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform3fvEXT) },
-    { "glProgramUniform3i", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform3i) },
-    { "glProgramUniform3i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform3i64ARB) },
-    { "glProgramUniform3i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform3i64NV) },
-    { "glProgramUniform3i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform3i64vARB) },
-    { "glProgramUniform3i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform3i64vNV) },
-    { "glProgramUniform3iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform3iEXT) },
-    { "glProgramUniform3iv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform3iv) },
-    { "glProgramUniform3ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform3ivEXT) },
-    { "glProgramUniform3ui", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform3ui) },
-    { "glProgramUniform3ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform3ui64ARB) },
-    { "glProgramUniform3ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform3ui64NV) },
-    { "glProgramUniform3ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform3ui64vARB) },
-    { "glProgramUniform3ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform3ui64vNV) },
-    { "glProgramUniform3uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform3uiEXT) },
-    { "glProgramUniform3uiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform3uiv) },
-    { "glProgramUniform3uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform3uivEXT) },
-    { "glProgramUniform4d", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform4d) },
-    { "glProgramUniform4dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform4dEXT) },
-    { "glProgramUniform4dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform4dv) },
-    { "glProgramUniform4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform4dvEXT) },
-    { "glProgramUniform4f", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform4f) },
-    { "glProgramUniform4fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform4fEXT) },
-    { "glProgramUniform4fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform4fv) },
-    { "glProgramUniform4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform4fvEXT) },
-    { "glProgramUniform4i", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform4i) },
-    { "glProgramUniform4i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform4i64ARB) },
-    { "glProgramUniform4i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform4i64NV) },
-    { "glProgramUniform4i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform4i64vARB) },
-    { "glProgramUniform4i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform4i64vNV) },
-    { "glProgramUniform4iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform4iEXT) },
-    { "glProgramUniform4iv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform4iv) },
-    { "glProgramUniform4ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform4ivEXT) },
-    { "glProgramUniform4ui", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform4ui) },
-    { "glProgramUniform4ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform4ui64ARB) },
-    { "glProgramUniform4ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform4ui64NV) },
-    { "glProgramUniform4ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glProgramUniform4ui64vARB) },
-    { "glProgramUniform4ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glProgramUniform4ui64vNV) },
-    { "glProgramUniform4uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform4uiEXT) },
-    { "glProgramUniform4uiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniform4uiv) },
-    { "glProgramUniform4uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniform4uivEXT) },
-    { "glProgramUniformHandleui64ARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glProgramUniformHandleui64ARB) },
-    { "glProgramUniformHandleui64NV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glProgramUniformHandleui64NV) },
-    { "glProgramUniformHandleui64vARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glProgramUniformHandleui64vARB) },
-    { "glProgramUniformHandleui64vNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glProgramUniformHandleui64vNV) },
-    { "glProgramUniformMatrix2dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2dv) },
-    { "glProgramUniformMatrix2dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2dvEXT) },
-    { "glProgramUniformMatrix2fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2fv) },
-    { "glProgramUniformMatrix2fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2fvEXT) },
-    { "glProgramUniformMatrix2x3dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2x3dv) },
-    { "glProgramUniformMatrix2x3dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2x3dvEXT) },
-    { "glProgramUniformMatrix2x3fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2x3fv) },
-    { "glProgramUniformMatrix2x3fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2x3fvEXT) },
-    { "glProgramUniformMatrix2x4dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2x4dv) },
-    { "glProgramUniformMatrix2x4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2x4dvEXT) },
-    { "glProgramUniformMatrix2x4fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2x4fv) },
-    { "glProgramUniformMatrix2x4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix2x4fvEXT) },
-    { "glProgramUniformMatrix3dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3dv) },
-    { "glProgramUniformMatrix3dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3dvEXT) },
-    { "glProgramUniformMatrix3fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3fv) },
-    { "glProgramUniformMatrix3fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3fvEXT) },
-    { "glProgramUniformMatrix3x2dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3x2dv) },
-    { "glProgramUniformMatrix3x2dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3x2dvEXT) },
-    { "glProgramUniformMatrix3x2fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3x2fv) },
-    { "glProgramUniformMatrix3x2fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3x2fvEXT) },
-    { "glProgramUniformMatrix3x4dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3x4dv) },
-    { "glProgramUniformMatrix3x4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3x4dvEXT) },
-    { "glProgramUniformMatrix3x4fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3x4fv) },
-    { "glProgramUniformMatrix3x4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix3x4fvEXT) },
-    { "glProgramUniformMatrix4dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4dv) },
-    { "glProgramUniformMatrix4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4dvEXT) },
-    { "glProgramUniformMatrix4fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4fv) },
-    { "glProgramUniformMatrix4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4fvEXT) },
-    { "glProgramUniformMatrix4x2dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4x2dv) },
-    { "glProgramUniformMatrix4x2dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4x2dvEXT) },
-    { "glProgramUniformMatrix4x2fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4x2fv) },
-    { "glProgramUniformMatrix4x2fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4x2fvEXT) },
-    { "glProgramUniformMatrix4x3dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4x3dv) },
-    { "glProgramUniformMatrix4x3dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4x3dvEXT) },
-    { "glProgramUniformMatrix4x3fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4x3fv) },
-    { "glProgramUniformMatrix4x3fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glProgramUniformMatrix4x3fvEXT) },
-    { "glProgramUniformui64NV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glProgramUniformui64NV) },
-    { "glProgramUniformui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glProgramUniformui64vNV) },
-    { "glProgramVertexLimitNV", "GL_NV_geometry_program4", offsetof(struct opengl_funcs, ext.p_glProgramVertexLimitNV) },
-    { "glProvokingVertex", "GL_ARB_provoking_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glProvokingVertex) },
-    { "glProvokingVertexEXT", "GL_EXT_provoking_vertex", offsetof(struct opengl_funcs, ext.p_glProvokingVertexEXT) },
-    { "glPushClientAttribDefaultEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glPushClientAttribDefaultEXT) },
-    { "glPushDebugGroup", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glPushDebugGroup) },
-    { "glPushGroupMarkerEXT", "GL_EXT_debug_marker", offsetof(struct opengl_funcs, ext.p_glPushGroupMarkerEXT) },
-    { "glQueryCounter", "GL_ARB_timer_query GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glQueryCounter) },
-    { "glQueryMatrixxOES", "GL_OES_query_matrix", offsetof(struct opengl_funcs, ext.p_glQueryMatrixxOES) },
-    { "glQueryObjectParameteruiAMD", "GL_AMD_occlusion_query_event", offsetof(struct opengl_funcs, ext.p_glQueryObjectParameteruiAMD) },
-    { "glQueryResourceNV", "GL_NV_query_resource", offsetof(struct opengl_funcs, ext.p_glQueryResourceNV) },
-    { "glQueryResourceTagNV", "GL_NV_query_resource_tag", offsetof(struct opengl_funcs, ext.p_glQueryResourceTagNV) },
-    { "glRasterPos2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glRasterPos2xOES) },
-    { "glRasterPos2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glRasterPos2xvOES) },
-    { "glRasterPos3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glRasterPos3xOES) },
-    { "glRasterPos3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glRasterPos3xvOES) },
-    { "glRasterPos4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glRasterPos4xOES) },
-    { "glRasterPos4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glRasterPos4xvOES) },
-    { "glRasterSamplesEXT", "GL_EXT_raster_multisample GL_NV_framebuffer_mixed_samples", offsetof(struct opengl_funcs, ext.p_glRasterSamplesEXT) },
-    { "glReadBufferRegion", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, ext.p_glReadBufferRegion) },
-    { "glReadInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, ext.p_glReadInstrumentsSGIX) },
-    { "glReadnPixels", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glReadnPixels) },
-    { "glReadnPixelsARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, ext.p_glReadnPixelsARB) },
-    { "glRectxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glRectxOES) },
-    { "glRectxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glRectxvOES) },
-    { "glReferencePlaneSGIX", "GL_SGIX_reference_plane", offsetof(struct opengl_funcs, ext.p_glReferencePlaneSGIX) },
-    { "glReleaseKeyedMutexWin32EXT", "GL_EXT_win32_keyed_mutex", offsetof(struct opengl_funcs, ext.p_glReleaseKeyedMutexWin32EXT) },
-    { "glReleaseShaderCompiler", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glReleaseShaderCompiler) },
-    { "glRenderGpuMaskNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, ext.p_glRenderGpuMaskNV) },
-    { "glRenderbufferStorage", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glRenderbufferStorage) },
-    { "glRenderbufferStorageEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, ext.p_glRenderbufferStorageEXT) },
-    { "glRenderbufferStorageMultisample", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glRenderbufferStorageMultisample) },
-    { "glRenderbufferStorageMultisampleAdvancedAMD", "GL_AMD_framebuffer_multisample_advanced", offsetof(struct opengl_funcs, ext.p_glRenderbufferStorageMultisampleAdvancedAMD) },
-    { "glRenderbufferStorageMultisampleCoverageNV", "GL_NV_framebuffer_multisample_coverage", offsetof(struct opengl_funcs, ext.p_glRenderbufferStorageMultisampleCoverageNV) },
-    { "glRenderbufferStorageMultisampleEXT", "GL_EXT_framebuffer_multisample", offsetof(struct opengl_funcs, ext.p_glRenderbufferStorageMultisampleEXT) },
-    { "glReplacementCodePointerSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, ext.p_glReplacementCodePointerSUN) },
-    { "glReplacementCodeubSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, ext.p_glReplacementCodeubSUN) },
-    { "glReplacementCodeubvSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, ext.p_glReplacementCodeubvSUN) },
-    { "glReplacementCodeuiColor3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiColor3fVertex3fSUN) },
-    { "glReplacementCodeuiColor3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiColor3fVertex3fvSUN) },
-    { "glReplacementCodeuiColor4fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiColor4fNormal3fVertex3fSUN) },
-    { "glReplacementCodeuiColor4fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiColor4fNormal3fVertex3fvSUN) },
-    { "glReplacementCodeuiColor4ubVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiColor4ubVertex3fSUN) },
-    { "glReplacementCodeuiColor4ubVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiColor4ubVertex3fvSUN) },
-    { "glReplacementCodeuiNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiNormal3fVertex3fSUN) },
-    { "glReplacementCodeuiNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiNormal3fVertex3fvSUN) },
-    { "glReplacementCodeuiSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiSUN) },
-    { "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN) },
-    { "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN) },
-    { "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN) },
-    { "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN) },
-    { "glReplacementCodeuiTexCoord2fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiTexCoord2fVertex3fSUN) },
-    { "glReplacementCodeuiTexCoord2fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiTexCoord2fVertex3fvSUN) },
-    { "glReplacementCodeuiVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiVertex3fSUN) },
-    { "glReplacementCodeuiVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuiVertex3fvSUN) },
-    { "glReplacementCodeuivSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, ext.p_glReplacementCodeuivSUN) },
-    { "glReplacementCodeusSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, ext.p_glReplacementCodeusSUN) },
-    { "glReplacementCodeusvSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, ext.p_glReplacementCodeusvSUN) },
-    { "glRequestResidentProgramsNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glRequestResidentProgramsNV) },
-    { "glResetHistogram", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glResetHistogram) },
-    { "glResetHistogramEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glResetHistogramEXT) },
-    { "glResetMemoryObjectParameterNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, ext.p_glResetMemoryObjectParameterNV) },
-    { "glResetMinmax", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glResetMinmax) },
-    { "glResetMinmaxEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, ext.p_glResetMinmaxEXT) },
-    { "glResizeBuffersMESA", "GL_MESA_resize_buffers", offsetof(struct opengl_funcs, ext.p_glResizeBuffersMESA) },
-    { "glResolveDepthValuesNV", "GL_NV_sample_locations", offsetof(struct opengl_funcs, ext.p_glResolveDepthValuesNV) },
-    { "glResumeTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glResumeTransformFeedback) },
-    { "glResumeTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, ext.p_glResumeTransformFeedbackNV) },
-    { "glRotatexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glRotatexOES) },
-    { "glSampleCoverage", "GL_VERSION_1_3", offsetof(struct opengl_funcs, ext.p_glSampleCoverage) },
-    { "glSampleCoverageARB", "GL_ARB_multisample", offsetof(struct opengl_funcs, ext.p_glSampleCoverageARB) },
-    { "glSampleMapATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glSampleMapATI) },
-    { "glSampleMaskEXT", "GL_EXT_multisample", offsetof(struct opengl_funcs, ext.p_glSampleMaskEXT) },
-    { "glSampleMaskIndexedNV", "GL_NV_explicit_multisample", offsetof(struct opengl_funcs, ext.p_glSampleMaskIndexedNV) },
-    { "glSampleMaskSGIS", "GL_SGIS_multisample", offsetof(struct opengl_funcs, ext.p_glSampleMaskSGIS) },
-    { "glSampleMaski", "GL_ARB_texture_multisample GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glSampleMaski) },
-    { "glSamplePatternEXT", "GL_EXT_multisample", offsetof(struct opengl_funcs, ext.p_glSamplePatternEXT) },
-    { "glSamplePatternSGIS", "GL_SGIS_multisample", offsetof(struct opengl_funcs, ext.p_glSamplePatternSGIS) },
-    { "glSamplerParameterIiv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glSamplerParameterIiv) },
-    { "glSamplerParameterIuiv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glSamplerParameterIuiv) },
-    { "glSamplerParameterf", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glSamplerParameterf) },
-    { "glSamplerParameterfv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glSamplerParameterfv) },
-    { "glSamplerParameteri", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glSamplerParameteri) },
-    { "glSamplerParameteriv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glSamplerParameteriv) },
-    { "glScalexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glScalexOES) },
-    { "glScissorArrayv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glScissorArrayv) },
-    { "glScissorExclusiveArrayvNV", "GL_NV_scissor_exclusive", offsetof(struct opengl_funcs, ext.p_glScissorExclusiveArrayvNV) },
-    { "glScissorExclusiveNV", "GL_NV_scissor_exclusive", offsetof(struct opengl_funcs, ext.p_glScissorExclusiveNV) },
-    { "glScissorIndexed", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glScissorIndexed) },
-    { "glScissorIndexedv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glScissorIndexedv) },
-    { "glSecondaryColor3b", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3b) },
-    { "glSecondaryColor3bEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3bEXT) },
-    { "glSecondaryColor3bv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3bv) },
-    { "glSecondaryColor3bvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3bvEXT) },
-    { "glSecondaryColor3d", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3d) },
-    { "glSecondaryColor3dEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3dEXT) },
-    { "glSecondaryColor3dv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3dv) },
-    { "glSecondaryColor3dvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3dvEXT) },
-    { "glSecondaryColor3f", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3f) },
-    { "glSecondaryColor3fEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3fEXT) },
-    { "glSecondaryColor3fv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3fv) },
-    { "glSecondaryColor3fvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3fvEXT) },
-    { "glSecondaryColor3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3hNV) },
-    { "glSecondaryColor3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3hvNV) },
-    { "glSecondaryColor3i", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3i) },
-    { "glSecondaryColor3iEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3iEXT) },
-    { "glSecondaryColor3iv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3iv) },
-    { "glSecondaryColor3ivEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3ivEXT) },
-    { "glSecondaryColor3s", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3s) },
-    { "glSecondaryColor3sEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3sEXT) },
-    { "glSecondaryColor3sv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3sv) },
-    { "glSecondaryColor3svEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3svEXT) },
-    { "glSecondaryColor3ub", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3ub) },
-    { "glSecondaryColor3ubEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3ubEXT) },
-    { "glSecondaryColor3ubv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3ubv) },
-    { "glSecondaryColor3ubvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3ubvEXT) },
-    { "glSecondaryColor3ui", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3ui) },
-    { "glSecondaryColor3uiEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3uiEXT) },
-    { "glSecondaryColor3uiv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3uiv) },
-    { "glSecondaryColor3uivEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3uivEXT) },
-    { "glSecondaryColor3us", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3us) },
-    { "glSecondaryColor3usEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3usEXT) },
-    { "glSecondaryColor3usv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3usv) },
-    { "glSecondaryColor3usvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColor3usvEXT) },
-    { "glSecondaryColorFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glSecondaryColorFormatNV) },
-    { "glSecondaryColorP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glSecondaryColorP3ui) },
-    { "glSecondaryColorP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glSecondaryColorP3uiv) },
-    { "glSecondaryColorPointer", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glSecondaryColorPointer) },
-    { "glSecondaryColorPointerEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, ext.p_glSecondaryColorPointerEXT) },
-    { "glSecondaryColorPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, ext.p_glSecondaryColorPointerListIBM) },
-    { "glSelectPerfMonitorCountersAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, ext.p_glSelectPerfMonitorCountersAMD) },
-    { "glSelectTextureCoordSetSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glSelectTextureCoordSetSGIS) },
-    { "glSelectTextureSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, ext.p_glSelectTextureSGIS) },
-    { "glSemaphoreParameterui64vEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, ext.p_glSemaphoreParameterui64vEXT) },
-    { "glSeparableFilter2D", "GL_ARB_imaging", offsetof(struct opengl_funcs, ext.p_glSeparableFilter2D) },
-    { "glSeparableFilter2DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, ext.p_glSeparableFilter2DEXT) },
-    { "glSetFenceAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, ext.p_glSetFenceAPPLE) },
-    { "glSetFenceNV", "GL_NV_fence", offsetof(struct opengl_funcs, ext.p_glSetFenceNV) },
-    { "glSetFragmentShaderConstantATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, ext.p_glSetFragmentShaderConstantATI) },
-    { "glSetInvariantEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glSetInvariantEXT) },
-    { "glSetLocalConstantEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glSetLocalConstantEXT) },
-    { "glSetMultisamplefvAMD", "GL_AMD_sample_positions", offsetof(struct opengl_funcs, ext.p_glSetMultisamplefvAMD) },
-    { "glShaderBinary", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glShaderBinary) },
-    { "glShaderOp1EXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glShaderOp1EXT) },
-    { "glShaderOp2EXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glShaderOp2EXT) },
-    { "glShaderOp3EXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glShaderOp3EXT) },
-    { "glShaderSource", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glShaderSource) },
-    { "glShaderSourceARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glShaderSourceARB) },
-    { "glShaderStorageBlockBinding", "GL_ARB_shader_storage_buffer_object GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glShaderStorageBlockBinding) },
-    { "glShadingRateImageBarrierNV", "GL_NV_shading_rate_image GL_NV_shading_rate_image", offsetof(struct opengl_funcs, ext.p_glShadingRateImageBarrierNV) },
-    { "glShadingRateImagePaletteNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, ext.p_glShadingRateImagePaletteNV) },
-    { "glShadingRateSampleOrderCustomNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, ext.p_glShadingRateSampleOrderCustomNV) },
-    { "glShadingRateSampleOrderNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, ext.p_glShadingRateSampleOrderNV) },
-    { "glSharpenTexFuncSGIS", "GL_SGIS_sharpen_texture", offsetof(struct opengl_funcs, ext.p_glSharpenTexFuncSGIS) },
-    { "glSignalSemaphoreEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, ext.p_glSignalSemaphoreEXT) },
-    { "glSignalSemaphoreui64NVX", "GL_NVX_progress_fence", offsetof(struct opengl_funcs, ext.p_glSignalSemaphoreui64NVX) },
-    { "glSignalVkFenceNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, ext.p_glSignalVkFenceNV) },
-    { "glSignalVkSemaphoreNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, ext.p_glSignalVkSemaphoreNV) },
-    { "glSpecializeShader", "GL_VERSION_4_6", offsetof(struct opengl_funcs, ext.p_glSpecializeShader) },
-    { "glSpecializeShaderARB", "GL_ARB_gl_spirv", offsetof(struct opengl_funcs, ext.p_glSpecializeShaderARB) },
-    { "glSpriteParameterfSGIX", "GL_SGIX_sprite", offsetof(struct opengl_funcs, ext.p_glSpriteParameterfSGIX) },
-    { "glSpriteParameterfvSGIX", "GL_SGIX_sprite", offsetof(struct opengl_funcs, ext.p_glSpriteParameterfvSGIX) },
-    { "glSpriteParameteriSGIX", "GL_SGIX_sprite", offsetof(struct opengl_funcs, ext.p_glSpriteParameteriSGIX) },
-    { "glSpriteParameterivSGIX", "GL_SGIX_sprite", offsetof(struct opengl_funcs, ext.p_glSpriteParameterivSGIX) },
-    { "glStartInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, ext.p_glStartInstrumentsSGIX) },
-    { "glStateCaptureNV", "GL_NV_command_list", offsetof(struct opengl_funcs, ext.p_glStateCaptureNV) },
-    { "glStencilClearTagEXT", "GL_EXT_stencil_clear_tag", offsetof(struct opengl_funcs, ext.p_glStencilClearTagEXT) },
-    { "glStencilFillPathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glStencilFillPathInstancedNV) },
-    { "glStencilFillPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glStencilFillPathNV) },
-    { "glStencilFuncSeparate", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glStencilFuncSeparate) },
-    { "glStencilFuncSeparateATI", "GL_ATI_separate_stencil", offsetof(struct opengl_funcs, ext.p_glStencilFuncSeparateATI) },
-    { "glStencilMaskSeparate", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glStencilMaskSeparate) },
-    { "glStencilOpSeparate", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glStencilOpSeparate) },
-    { "glStencilOpSeparateATI", "GL_ATI_separate_stencil", offsetof(struct opengl_funcs, ext.p_glStencilOpSeparateATI) },
-    { "glStencilOpValueAMD", "GL_AMD_stencil_operation_extended", offsetof(struct opengl_funcs, ext.p_glStencilOpValueAMD) },
-    { "glStencilStrokePathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glStencilStrokePathInstancedNV) },
-    { "glStencilStrokePathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glStencilStrokePathNV) },
-    { "glStencilThenCoverFillPathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glStencilThenCoverFillPathInstancedNV) },
-    { "glStencilThenCoverFillPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glStencilThenCoverFillPathNV) },
-    { "glStencilThenCoverStrokePathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glStencilThenCoverStrokePathInstancedNV) },
-    { "glStencilThenCoverStrokePathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glStencilThenCoverStrokePathNV) },
-    { "glStopInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, ext.p_glStopInstrumentsSGIX) },
-    { "glStringMarkerGREMEDY", "GL_GREMEDY_string_marker", offsetof(struct opengl_funcs, ext.p_glStringMarkerGREMEDY) },
-    { "glSubpixelPrecisionBiasNV", "GL_NV_conservative_raster", offsetof(struct opengl_funcs, ext.p_glSubpixelPrecisionBiasNV) },
-    { "glSwizzleEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glSwizzleEXT) },
-    { "glSyncTextureINTEL", "GL_INTEL_map_texture", offsetof(struct opengl_funcs, ext.p_glSyncTextureINTEL) },
-    { "glTagSampleBufferSGIX", "GL_SGIX_tag_sample_buffer", offsetof(struct opengl_funcs, ext.p_glTagSampleBufferSGIX) },
-    { "glTangent3bEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3bEXT) },
-    { "glTangent3bvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3bvEXT) },
-    { "glTangent3dEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3dEXT) },
-    { "glTangent3dvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3dvEXT) },
-    { "glTangent3fEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3fEXT) },
-    { "glTangent3fvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3fvEXT) },
-    { "glTangent3iEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3iEXT) },
-    { "glTangent3ivEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3ivEXT) },
-    { "glTangent3sEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3sEXT) },
-    { "glTangent3svEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangent3svEXT) },
-    { "glTangentPointerEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, ext.p_glTangentPointerEXT) },
-    { "glTbufferMask3DFX", "GL_3DFX_tbuffer", offsetof(struct opengl_funcs, ext.p_glTbufferMask3DFX) },
-    { "glTessellationFactorAMD", "GL_AMD_vertex_shader_tessellator", offsetof(struct opengl_funcs, ext.p_glTessellationFactorAMD) },
-    { "glTessellationModeAMD", "GL_AMD_vertex_shader_tessellator", offsetof(struct opengl_funcs, ext.p_glTessellationModeAMD) },
-    { "glTestFenceAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, ext.p_glTestFenceAPPLE) },
-    { "glTestFenceNV", "GL_NV_fence", offsetof(struct opengl_funcs, ext.p_glTestFenceNV) },
-    { "glTestObjectAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, ext.p_glTestObjectAPPLE) },
-    { "glTexAttachMemoryNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, ext.p_glTexAttachMemoryNV) },
-    { "glTexBuffer", "GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glTexBuffer) },
-    { "glTexBufferARB", "GL_ARB_texture_buffer_object", offsetof(struct opengl_funcs, ext.p_glTexBufferARB) },
-    { "glTexBufferEXT", "GL_EXT_texture_buffer_object", offsetof(struct opengl_funcs, ext.p_glTexBufferEXT) },
-    { "glTexBufferRange", "GL_ARB_texture_buffer_range GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glTexBufferRange) },
-    { "glTexBumpParameterfvATI", "GL_ATI_envmap_bumpmap", offsetof(struct opengl_funcs, ext.p_glTexBumpParameterfvATI) },
-    { "glTexBumpParameterivATI", "GL_ATI_envmap_bumpmap", offsetof(struct opengl_funcs, ext.p_glTexBumpParameterivATI) },
-    { "glTexCoord1bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glTexCoord1bOES) },
-    { "glTexCoord1bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glTexCoord1bvOES) },
-    { "glTexCoord1hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glTexCoord1hNV) },
-    { "glTexCoord1hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glTexCoord1hvNV) },
-    { "glTexCoord1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexCoord1xOES) },
-    { "glTexCoord1xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexCoord1xvOES) },
-    { "glTexCoord2bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glTexCoord2bOES) },
-    { "glTexCoord2bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glTexCoord2bvOES) },
-    { "glTexCoord2fColor3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fColor3fVertex3fSUN) },
-    { "glTexCoord2fColor3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fColor3fVertex3fvSUN) },
-    { "glTexCoord2fColor4fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fColor4fNormal3fVertex3fSUN) },
-    { "glTexCoord2fColor4fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fColor4fNormal3fVertex3fvSUN) },
-    { "glTexCoord2fColor4ubVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fColor4ubVertex3fSUN) },
-    { "glTexCoord2fColor4ubVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fColor4ubVertex3fvSUN) },
-    { "glTexCoord2fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fNormal3fVertex3fSUN) },
-    { "glTexCoord2fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fNormal3fVertex3fvSUN) },
-    { "glTexCoord2fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fVertex3fSUN) },
-    { "glTexCoord2fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord2fVertex3fvSUN) },
-    { "glTexCoord2hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glTexCoord2hNV) },
-    { "glTexCoord2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glTexCoord2hvNV) },
-    { "glTexCoord2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexCoord2xOES) },
-    { "glTexCoord2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexCoord2xvOES) },
-    { "glTexCoord3bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glTexCoord3bOES) },
-    { "glTexCoord3bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glTexCoord3bvOES) },
-    { "glTexCoord3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glTexCoord3hNV) },
-    { "glTexCoord3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glTexCoord3hvNV) },
-    { "glTexCoord3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexCoord3xOES) },
-    { "glTexCoord3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexCoord3xvOES) },
-    { "glTexCoord4bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glTexCoord4bOES) },
-    { "glTexCoord4bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glTexCoord4bvOES) },
-    { "glTexCoord4fColor4fNormal3fVertex4fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord4fColor4fNormal3fVertex4fSUN) },
-    { "glTexCoord4fColor4fNormal3fVertex4fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord4fColor4fNormal3fVertex4fvSUN) },
-    { "glTexCoord4fVertex4fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord4fVertex4fSUN) },
-    { "glTexCoord4fVertex4fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, ext.p_glTexCoord4fVertex4fvSUN) },
-    { "glTexCoord4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glTexCoord4hNV) },
-    { "glTexCoord4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glTexCoord4hvNV) },
-    { "glTexCoord4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexCoord4xOES) },
-    { "glTexCoord4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexCoord4xvOES) },
-    { "glTexCoordFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glTexCoordFormatNV) },
-    { "glTexCoordP1ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glTexCoordP1ui) },
-    { "glTexCoordP1uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glTexCoordP1uiv) },
-    { "glTexCoordP2ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glTexCoordP2ui) },
-    { "glTexCoordP2uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glTexCoordP2uiv) },
-    { "glTexCoordP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glTexCoordP3ui) },
-    { "glTexCoordP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glTexCoordP3uiv) },
-    { "glTexCoordP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glTexCoordP4ui) },
-    { "glTexCoordP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glTexCoordP4uiv) },
-    { "glTexCoordPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, ext.p_glTexCoordPointerEXT) },
-    { "glTexCoordPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, ext.p_glTexCoordPointerListIBM) },
-    { "glTexCoordPointervINTEL", "GL_INTEL_parallel_arrays", offsetof(struct opengl_funcs, ext.p_glTexCoordPointervINTEL) },
-    { "glTexEnvxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexEnvxOES) },
-    { "glTexEnvxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexEnvxvOES) },
-    { "glTexFilterFuncSGIS", "GL_SGIS_texture_filter4", offsetof(struct opengl_funcs, ext.p_glTexFilterFuncSGIS) },
-    { "glTexGenxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexGenxOES) },
-    { "glTexGenxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexGenxvOES) },
-    { "glTexImage2DMultisample", "GL_ARB_texture_multisample GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glTexImage2DMultisample) },
-    { "glTexImage2DMultisampleCoverageNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, ext.p_glTexImage2DMultisampleCoverageNV) },
-    { "glTexImage3D", "GL_VERSION_1_2", offsetof(struct opengl_funcs, ext.p_glTexImage3D) },
-    { "glTexImage3DEXT", "GL_EXT_texture3D", offsetof(struct opengl_funcs, ext.p_glTexImage3DEXT) },
-    { "glTexImage3DMultisample", "GL_ARB_texture_multisample GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glTexImage3DMultisample) },
-    { "glTexImage3DMultisampleCoverageNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, ext.p_glTexImage3DMultisampleCoverageNV) },
-    { "glTexImage4DSGIS", "GL_SGIS_texture4D", offsetof(struct opengl_funcs, ext.p_glTexImage4DSGIS) },
-    { "glTexPageCommitmentARB", "GL_ARB_sparse_texture", offsetof(struct opengl_funcs, ext.p_glTexPageCommitmentARB) },
-    { "glTexParameterIiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glTexParameterIiv) },
-    { "glTexParameterIivEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, ext.p_glTexParameterIivEXT) },
-    { "glTexParameterIuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glTexParameterIuiv) },
-    { "glTexParameterIuivEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, ext.p_glTexParameterIuivEXT) },
-    { "glTexParameterxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexParameterxOES) },
-    { "glTexParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTexParameterxvOES) },
-    { "glTexRenderbufferNV", "GL_NV_explicit_multisample", offsetof(struct opengl_funcs, ext.p_glTexRenderbufferNV) },
-    { "glTexStorage1D", "GL_ARB_texture_storage GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glTexStorage1D) },
-    { "glTexStorage2D", "GL_ARB_texture_storage GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glTexStorage2D) },
-    { "glTexStorage2DMultisample", "GL_ARB_texture_storage_multisample GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glTexStorage2DMultisample) },
-    { "glTexStorage3D", "GL_ARB_texture_storage GL_VERSION_4_2", offsetof(struct opengl_funcs, ext.p_glTexStorage3D) },
-    { "glTexStorage3DMultisample", "GL_ARB_texture_storage_multisample GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glTexStorage3DMultisample) },
-    { "glTexStorageMem1DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTexStorageMem1DEXT) },
-    { "glTexStorageMem2DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTexStorageMem2DEXT) },
-    { "glTexStorageMem2DMultisampleEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTexStorageMem2DMultisampleEXT) },
-    { "glTexStorageMem3DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTexStorageMem3DEXT) },
-    { "glTexStorageMem3DMultisampleEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTexStorageMem3DMultisampleEXT) },
-    { "glTexStorageSparseAMD", "GL_AMD_sparse_texture", offsetof(struct opengl_funcs, ext.p_glTexStorageSparseAMD) },
-    { "glTexSubImage1DEXT", "GL_EXT_subtexture", offsetof(struct opengl_funcs, ext.p_glTexSubImage1DEXT) },
-    { "glTexSubImage2DEXT", "GL_EXT_subtexture", offsetof(struct opengl_funcs, ext.p_glTexSubImage2DEXT) },
-    { "glTexSubImage3D", "GL_VERSION_1_2", offsetof(struct opengl_funcs, ext.p_glTexSubImage3D) },
-    { "glTexSubImage3DEXT", "GL_EXT_texture3D", offsetof(struct opengl_funcs, ext.p_glTexSubImage3DEXT) },
-    { "glTexSubImage4DSGIS", "GL_SGIS_texture4D", offsetof(struct opengl_funcs, ext.p_glTexSubImage4DSGIS) },
-    { "glTextureAttachMemoryNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, ext.p_glTextureAttachMemoryNV) },
-    { "glTextureBarrier", "GL_ARB_texture_barrier GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureBarrier) },
-    { "glTextureBarrierNV", "GL_NV_texture_barrier", offsetof(struct opengl_funcs, ext.p_glTextureBarrierNV) },
-    { "glTextureBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureBuffer) },
-    { "glTextureBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureBufferEXT) },
-    { "glTextureBufferRange", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureBufferRange) },
-    { "glTextureBufferRangeEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureBufferRangeEXT) },
-    { "glTextureColorMaskSGIS", "GL_SGIS_texture_color_mask", offsetof(struct opengl_funcs, ext.p_glTextureColorMaskSGIS) },
-    { "glTextureImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureImage1DEXT) },
-    { "glTextureImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureImage2DEXT) },
-    { "glTextureImage2DMultisampleCoverageNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, ext.p_glTextureImage2DMultisampleCoverageNV) },
-    { "glTextureImage2DMultisampleNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, ext.p_glTextureImage2DMultisampleNV) },
-    { "glTextureImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureImage3DEXT) },
-    { "glTextureImage3DMultisampleCoverageNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, ext.p_glTextureImage3DMultisampleCoverageNV) },
-    { "glTextureImage3DMultisampleNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, ext.p_glTextureImage3DMultisampleNV) },
-    { "glTextureLightEXT", "GL_EXT_light_texture", offsetof(struct opengl_funcs, ext.p_glTextureLightEXT) },
-    { "glTextureMaterialEXT", "GL_EXT_light_texture", offsetof(struct opengl_funcs, ext.p_glTextureMaterialEXT) },
-    { "glTextureNormalEXT", "GL_EXT_texture_perturb_normal", offsetof(struct opengl_funcs, ext.p_glTextureNormalEXT) },
-    { "glTexturePageCommitmentEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTexturePageCommitmentEXT) },
-    { "glTextureParameterIiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureParameterIiv) },
-    { "glTextureParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureParameterIivEXT) },
-    { "glTextureParameterIuiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureParameterIuiv) },
-    { "glTextureParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureParameterIuivEXT) },
-    { "glTextureParameterf", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureParameterf) },
-    { "glTextureParameterfEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureParameterfEXT) },
-    { "glTextureParameterfv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureParameterfv) },
-    { "glTextureParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureParameterfvEXT) },
-    { "glTextureParameteri", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureParameteri) },
-    { "glTextureParameteriEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureParameteriEXT) },
-    { "glTextureParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureParameteriv) },
-    { "glTextureParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureParameterivEXT) },
-    { "glTextureRangeAPPLE", "GL_APPLE_texture_range", offsetof(struct opengl_funcs, ext.p_glTextureRangeAPPLE) },
-    { "glTextureRenderbufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureRenderbufferEXT) },
-    { "glTextureStorage1D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureStorage1D) },
-    { "glTextureStorage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureStorage1DEXT) },
-    { "glTextureStorage2D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureStorage2D) },
-    { "glTextureStorage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureStorage2DEXT) },
-    { "glTextureStorage2DMultisample", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureStorage2DMultisample) },
-    { "glTextureStorage2DMultisampleEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureStorage2DMultisampleEXT) },
-    { "glTextureStorage3D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureStorage3D) },
-    { "glTextureStorage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureStorage3DEXT) },
-    { "glTextureStorage3DMultisample", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureStorage3DMultisample) },
-    { "glTextureStorage3DMultisampleEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureStorage3DMultisampleEXT) },
-    { "glTextureStorageMem1DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTextureStorageMem1DEXT) },
-    { "glTextureStorageMem2DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTextureStorageMem2DEXT) },
-    { "glTextureStorageMem2DMultisampleEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTextureStorageMem2DMultisampleEXT) },
-    { "glTextureStorageMem3DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTextureStorageMem3DEXT) },
-    { "glTextureStorageMem3DMultisampleEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, ext.p_glTextureStorageMem3DMultisampleEXT) },
-    { "glTextureStorageSparseAMD", "GL_AMD_sparse_texture", offsetof(struct opengl_funcs, ext.p_glTextureStorageSparseAMD) },
-    { "glTextureSubImage1D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureSubImage1D) },
-    { "glTextureSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureSubImage1DEXT) },
-    { "glTextureSubImage2D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureSubImage2D) },
-    { "glTextureSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureSubImage2DEXT) },
-    { "glTextureSubImage3D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTextureSubImage3D) },
-    { "glTextureSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glTextureSubImage3DEXT) },
-    { "glTextureView", "GL_ARB_texture_view GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glTextureView) },
-    { "glTrackMatrixNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glTrackMatrixNV) },
-    { "glTransformFeedbackAttribsNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glTransformFeedbackAttribsNV) },
-    { "glTransformFeedbackBufferBase", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTransformFeedbackBufferBase) },
-    { "glTransformFeedbackBufferRange", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glTransformFeedbackBufferRange) },
-    { "glTransformFeedbackStreamAttribsNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glTransformFeedbackStreamAttribsNV) },
-    { "glTransformFeedbackVaryings", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glTransformFeedbackVaryings) },
-    { "glTransformFeedbackVaryingsEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, ext.p_glTransformFeedbackVaryingsEXT) },
-    { "glTransformFeedbackVaryingsNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, ext.p_glTransformFeedbackVaryingsNV) },
-    { "glTransformPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glTransformPathNV) },
-    { "glTranslatexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glTranslatexOES) },
-    { "glUniform1d", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniform1d) },
-    { "glUniform1dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniform1dv) },
-    { "glUniform1f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform1f) },
-    { "glUniform1fARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform1fARB) },
-    { "glUniform1fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform1fv) },
-    { "glUniform1fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform1fvARB) },
-    { "glUniform1i", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform1i) },
-    { "glUniform1i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform1i64ARB) },
-    { "glUniform1i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform1i64NV) },
-    { "glUniform1i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform1i64vARB) },
-    { "glUniform1i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform1i64vNV) },
-    { "glUniform1iARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform1iARB) },
-    { "glUniform1iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform1iv) },
-    { "glUniform1ivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform1ivARB) },
-    { "glUniform1ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glUniform1ui) },
-    { "glUniform1ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform1ui64ARB) },
-    { "glUniform1ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform1ui64NV) },
-    { "glUniform1ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform1ui64vARB) },
-    { "glUniform1ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform1ui64vNV) },
-    { "glUniform1uiEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glUniform1uiEXT) },
-    { "glUniform1uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glUniform1uiv) },
-    { "glUniform1uivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glUniform1uivEXT) },
-    { "glUniform2d", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniform2d) },
-    { "glUniform2dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniform2dv) },
-    { "glUniform2f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform2f) },
-    { "glUniform2fARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform2fARB) },
-    { "glUniform2fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform2fv) },
-    { "glUniform2fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform2fvARB) },
-    { "glUniform2i", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform2i) },
-    { "glUniform2i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform2i64ARB) },
-    { "glUniform2i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform2i64NV) },
-    { "glUniform2i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform2i64vARB) },
-    { "glUniform2i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform2i64vNV) },
-    { "glUniform2iARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform2iARB) },
-    { "glUniform2iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform2iv) },
-    { "glUniform2ivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform2ivARB) },
-    { "glUniform2ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glUniform2ui) },
-    { "glUniform2ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform2ui64ARB) },
-    { "glUniform2ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform2ui64NV) },
-    { "glUniform2ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform2ui64vARB) },
-    { "glUniform2ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform2ui64vNV) },
-    { "glUniform2uiEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glUniform2uiEXT) },
-    { "glUniform2uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glUniform2uiv) },
-    { "glUniform2uivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glUniform2uivEXT) },
-    { "glUniform3d", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniform3d) },
-    { "glUniform3dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniform3dv) },
-    { "glUniform3f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform3f) },
-    { "glUniform3fARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform3fARB) },
-    { "glUniform3fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform3fv) },
-    { "glUniform3fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform3fvARB) },
-    { "glUniform3i", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform3i) },
-    { "glUniform3i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform3i64ARB) },
-    { "glUniform3i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform3i64NV) },
-    { "glUniform3i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform3i64vARB) },
-    { "glUniform3i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform3i64vNV) },
-    { "glUniform3iARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform3iARB) },
-    { "glUniform3iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform3iv) },
-    { "glUniform3ivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform3ivARB) },
-    { "glUniform3ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glUniform3ui) },
-    { "glUniform3ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform3ui64ARB) },
-    { "glUniform3ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform3ui64NV) },
-    { "glUniform3ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform3ui64vARB) },
-    { "glUniform3ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform3ui64vNV) },
-    { "glUniform3uiEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glUniform3uiEXT) },
-    { "glUniform3uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glUniform3uiv) },
-    { "glUniform3uivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glUniform3uivEXT) },
-    { "glUniform4d", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniform4d) },
-    { "glUniform4dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniform4dv) },
-    { "glUniform4f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform4f) },
-    { "glUniform4fARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform4fARB) },
-    { "glUniform4fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform4fv) },
-    { "glUniform4fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform4fvARB) },
-    { "glUniform4i", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform4i) },
-    { "glUniform4i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform4i64ARB) },
-    { "glUniform4i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform4i64NV) },
-    { "glUniform4i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform4i64vARB) },
-    { "glUniform4i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform4i64vNV) },
-    { "glUniform4iARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform4iARB) },
-    { "glUniform4iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniform4iv) },
-    { "glUniform4ivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniform4ivARB) },
-    { "glUniform4ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glUniform4ui) },
-    { "glUniform4ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform4ui64ARB) },
-    { "glUniform4ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform4ui64NV) },
-    { "glUniform4ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, ext.p_glUniform4ui64vARB) },
-    { "glUniform4ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, ext.p_glUniform4ui64vNV) },
-    { "glUniform4uiEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glUniform4uiEXT) },
-    { "glUniform4uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glUniform4uiv) },
-    { "glUniform4uivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, ext.p_glUniform4uivEXT) },
-    { "glUniformBlockBinding", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, ext.p_glUniformBlockBinding) },
-    { "glUniformBufferEXT", "GL_EXT_bindable_uniform", offsetof(struct opengl_funcs, ext.p_glUniformBufferEXT) },
-    { "glUniformHandleui64ARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glUniformHandleui64ARB) },
-    { "glUniformHandleui64NV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glUniformHandleui64NV) },
-    { "glUniformHandleui64vARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glUniformHandleui64vARB) },
-    { "glUniformHandleui64vNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, ext.p_glUniformHandleui64vNV) },
-    { "glUniformMatrix2dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix2dv) },
-    { "glUniformMatrix2fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix2fv) },
-    { "glUniformMatrix2fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniformMatrix2fvARB) },
-    { "glUniformMatrix2x3dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix2x3dv) },
-    { "glUniformMatrix2x3fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, ext.p_glUniformMatrix2x3fv) },
-    { "glUniformMatrix2x4dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix2x4dv) },
-    { "glUniformMatrix2x4fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, ext.p_glUniformMatrix2x4fv) },
-    { "glUniformMatrix3dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix3dv) },
-    { "glUniformMatrix3fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix3fv) },
-    { "glUniformMatrix3fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniformMatrix3fvARB) },
-    { "glUniformMatrix3x2dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix3x2dv) },
-    { "glUniformMatrix3x2fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, ext.p_glUniformMatrix3x2fv) },
-    { "glUniformMatrix3x4dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix3x4dv) },
-    { "glUniformMatrix3x4fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, ext.p_glUniformMatrix3x4fv) },
-    { "glUniformMatrix4dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix4dv) },
-    { "glUniformMatrix4fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix4fv) },
-    { "glUniformMatrix4fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUniformMatrix4fvARB) },
-    { "glUniformMatrix4x2dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix4x2dv) },
-    { "glUniformMatrix4x2fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, ext.p_glUniformMatrix4x2fv) },
-    { "glUniformMatrix4x3dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformMatrix4x3dv) },
-    { "glUniformMatrix4x3fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, ext.p_glUniformMatrix4x3fv) },
-    { "glUniformSubroutinesuiv", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, ext.p_glUniformSubroutinesuiv) },
-    { "glUniformui64NV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glUniformui64NV) },
-    { "glUniformui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, ext.p_glUniformui64vNV) },
-    { "glUnlockArraysEXT", "GL_EXT_compiled_vertex_array", offsetof(struct opengl_funcs, ext.p_glUnlockArraysEXT) },
-    { "glUnmapBuffer", "GL_VERSION_1_5", offsetof(struct opengl_funcs, ext.p_glUnmapBuffer) },
-    { "glUnmapBufferARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, ext.p_glUnmapBufferARB) },
-    { "glUnmapNamedBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glUnmapNamedBuffer) },
-    { "glUnmapNamedBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glUnmapNamedBufferEXT) },
-    { "glUnmapObjectBufferATI", "GL_ATI_map_object_buffer", offsetof(struct opengl_funcs, ext.p_glUnmapObjectBufferATI) },
-    { "glUnmapTexture2DINTEL", "GL_INTEL_map_texture", offsetof(struct opengl_funcs, ext.p_glUnmapTexture2DINTEL) },
-    { "glUpdateObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glUpdateObjectBufferATI) },
-    { "glUploadGpuMaskNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, ext.p_glUploadGpuMaskNVX) },
-    { "glUseProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glUseProgram) },
-    { "glUseProgramObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glUseProgramObjectARB) },
-    { "glUseProgramStages", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glUseProgramStages) },
-    { "glUseShaderProgramEXT", "GL_EXT_separate_shader_objects", offsetof(struct opengl_funcs, ext.p_glUseShaderProgramEXT) },
-    { "glVDPAUFiniNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAUFiniNV) },
-    { "glVDPAUGetSurfaceivNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAUGetSurfaceivNV) },
-    { "glVDPAUInitNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAUInitNV) },
-    { "glVDPAUIsSurfaceNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAUIsSurfaceNV) },
-    { "glVDPAUMapSurfacesNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAUMapSurfacesNV) },
-    { "glVDPAURegisterOutputSurfaceNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAURegisterOutputSurfaceNV) },
-    { "glVDPAURegisterVideoSurfaceNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAURegisterVideoSurfaceNV) },
-    { "glVDPAURegisterVideoSurfaceWithPictureStructureNV", "GL_NV_vdpau_interop2", offsetof(struct opengl_funcs, ext.p_glVDPAURegisterVideoSurfaceWithPictureStructureNV) },
-    { "glVDPAUSurfaceAccessNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAUSurfaceAccessNV) },
-    { "glVDPAUUnmapSurfacesNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAUUnmapSurfacesNV) },
-    { "glVDPAUUnregisterSurfaceNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, ext.p_glVDPAUUnregisterSurfaceNV) },
-    { "glValidateProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glValidateProgram) },
-    { "glValidateProgramARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, ext.p_glValidateProgramARB) },
-    { "glValidateProgramPipeline", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glValidateProgramPipeline) },
-    { "glVariantArrayObjectATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, ext.p_glVariantArrayObjectATI) },
-    { "glVariantPointerEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVariantPointerEXT) },
-    { "glVariantbvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVariantbvEXT) },
-    { "glVariantdvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVariantdvEXT) },
-    { "glVariantfvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVariantfvEXT) },
-    { "glVariantivEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVariantivEXT) },
-    { "glVariantsvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVariantsvEXT) },
-    { "glVariantubvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVariantubvEXT) },
-    { "glVariantuivEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVariantuivEXT) },
-    { "glVariantusvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVariantusvEXT) },
-    { "glVertex2bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glVertex2bOES) },
-    { "glVertex2bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glVertex2bvOES) },
-    { "glVertex2hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertex2hNV) },
-    { "glVertex2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertex2hvNV) },
-    { "glVertex2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glVertex2xOES) },
-    { "glVertex2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glVertex2xvOES) },
-    { "glVertex3bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glVertex3bOES) },
-    { "glVertex3bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glVertex3bvOES) },
-    { "glVertex3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertex3hNV) },
-    { "glVertex3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertex3hvNV) },
-    { "glVertex3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glVertex3xOES) },
-    { "glVertex3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glVertex3xvOES) },
-    { "glVertex4bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glVertex4bOES) },
-    { "glVertex4bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, ext.p_glVertex4bvOES) },
-    { "glVertex4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertex4hNV) },
-    { "glVertex4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertex4hvNV) },
-    { "glVertex4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glVertex4xOES) },
-    { "glVertex4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, ext.p_glVertex4xvOES) },
-    { "glVertexArrayAttribBinding", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glVertexArrayAttribBinding) },
-    { "glVertexArrayAttribFormat", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glVertexArrayAttribFormat) },
-    { "glVertexArrayAttribIFormat", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glVertexArrayAttribIFormat) },
-    { "glVertexArrayAttribLFormat", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glVertexArrayAttribLFormat) },
-    { "glVertexArrayBindVertexBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayBindVertexBufferEXT) },
-    { "glVertexArrayBindingDivisor", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glVertexArrayBindingDivisor) },
-    { "glVertexArrayColorOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayColorOffsetEXT) },
-    { "glVertexArrayEdgeFlagOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayEdgeFlagOffsetEXT) },
-    { "glVertexArrayElementBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glVertexArrayElementBuffer) },
-    { "glVertexArrayFogCoordOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayFogCoordOffsetEXT) },
-    { "glVertexArrayIndexOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayIndexOffsetEXT) },
-    { "glVertexArrayMultiTexCoordOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayMultiTexCoordOffsetEXT) },
-    { "glVertexArrayNormalOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayNormalOffsetEXT) },
-    { "glVertexArrayParameteriAPPLE", "GL_APPLE_vertex_array_range", offsetof(struct opengl_funcs, ext.p_glVertexArrayParameteriAPPLE) },
-    { "glVertexArrayRangeAPPLE", "GL_APPLE_vertex_array_range", offsetof(struct opengl_funcs, ext.p_glVertexArrayRangeAPPLE) },
-    { "glVertexArrayRangeNV", "GL_NV_vertex_array_range", offsetof(struct opengl_funcs, ext.p_glVertexArrayRangeNV) },
-    { "glVertexArraySecondaryColorOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArraySecondaryColorOffsetEXT) },
-    { "glVertexArrayTexCoordOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayTexCoordOffsetEXT) },
-    { "glVertexArrayVertexAttribBindingEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexAttribBindingEXT) },
-    { "glVertexArrayVertexAttribDivisorEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexAttribDivisorEXT) },
-    { "glVertexArrayVertexAttribFormatEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexAttribFormatEXT) },
-    { "glVertexArrayVertexAttribIFormatEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexAttribIFormatEXT) },
-    { "glVertexArrayVertexAttribIOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexAttribIOffsetEXT) },
-    { "glVertexArrayVertexAttribLFormatEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexAttribLFormatEXT) },
-    { "glVertexArrayVertexAttribLOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexAttribLOffsetEXT) },
-    { "glVertexArrayVertexAttribOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexAttribOffsetEXT) },
-    { "glVertexArrayVertexBindingDivisorEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexBindingDivisorEXT) },
-    { "glVertexArrayVertexBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexBuffer) },
-    { "glVertexArrayVertexBuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexBuffers) },
-    { "glVertexArrayVertexOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, ext.p_glVertexArrayVertexOffsetEXT) },
-    { "glVertexAttrib1d", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1d) },
-    { "glVertexAttrib1dARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1dARB) },
-    { "glVertexAttrib1dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1dNV) },
-    { "glVertexAttrib1dv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1dv) },
-    { "glVertexAttrib1dvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1dvARB) },
-    { "glVertexAttrib1dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1dvNV) },
-    { "glVertexAttrib1f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1f) },
-    { "glVertexAttrib1fARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1fARB) },
-    { "glVertexAttrib1fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1fNV) },
-    { "glVertexAttrib1fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1fv) },
-    { "glVertexAttrib1fvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1fvARB) },
-    { "glVertexAttrib1fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1fvNV) },
-    { "glVertexAttrib1hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1hNV) },
-    { "glVertexAttrib1hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1hvNV) },
-    { "glVertexAttrib1s", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1s) },
-    { "glVertexAttrib1sARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1sARB) },
-    { "glVertexAttrib1sNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1sNV) },
-    { "glVertexAttrib1sv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1sv) },
-    { "glVertexAttrib1svARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1svARB) },
-    { "glVertexAttrib1svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib1svNV) },
-    { "glVertexAttrib2d", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2d) },
-    { "glVertexAttrib2dARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2dARB) },
-    { "glVertexAttrib2dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2dNV) },
-    { "glVertexAttrib2dv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2dv) },
-    { "glVertexAttrib2dvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2dvARB) },
-    { "glVertexAttrib2dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2dvNV) },
-    { "glVertexAttrib2f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2f) },
-    { "glVertexAttrib2fARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2fARB) },
-    { "glVertexAttrib2fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2fNV) },
-    { "glVertexAttrib2fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2fv) },
-    { "glVertexAttrib2fvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2fvARB) },
-    { "glVertexAttrib2fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2fvNV) },
-    { "glVertexAttrib2hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2hNV) },
-    { "glVertexAttrib2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2hvNV) },
-    { "glVertexAttrib2s", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2s) },
-    { "glVertexAttrib2sARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2sARB) },
-    { "glVertexAttrib2sNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2sNV) },
-    { "glVertexAttrib2sv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2sv) },
-    { "glVertexAttrib2svARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2svARB) },
-    { "glVertexAttrib2svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib2svNV) },
-    { "glVertexAttrib3d", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3d) },
-    { "glVertexAttrib3dARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3dARB) },
-    { "glVertexAttrib3dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3dNV) },
-    { "glVertexAttrib3dv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3dv) },
-    { "glVertexAttrib3dvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3dvARB) },
-    { "glVertexAttrib3dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3dvNV) },
-    { "glVertexAttrib3f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3f) },
-    { "glVertexAttrib3fARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3fARB) },
-    { "glVertexAttrib3fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3fNV) },
-    { "glVertexAttrib3fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3fv) },
-    { "glVertexAttrib3fvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3fvARB) },
-    { "glVertexAttrib3fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3fvNV) },
-    { "glVertexAttrib3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3hNV) },
-    { "glVertexAttrib3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3hvNV) },
-    { "glVertexAttrib3s", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3s) },
-    { "glVertexAttrib3sARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3sARB) },
-    { "glVertexAttrib3sNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3sNV) },
-    { "glVertexAttrib3sv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3sv) },
-    { "glVertexAttrib3svARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3svARB) },
-    { "glVertexAttrib3svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib3svNV) },
-    { "glVertexAttrib4Nbv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4Nbv) },
-    { "glVertexAttrib4NbvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4NbvARB) },
-    { "glVertexAttrib4Niv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4Niv) },
-    { "glVertexAttrib4NivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4NivARB) },
-    { "glVertexAttrib4Nsv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4Nsv) },
-    { "glVertexAttrib4NsvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4NsvARB) },
-    { "glVertexAttrib4Nub", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4Nub) },
-    { "glVertexAttrib4NubARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4NubARB) },
-    { "glVertexAttrib4Nubv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4Nubv) },
-    { "glVertexAttrib4NubvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4NubvARB) },
-    { "glVertexAttrib4Nuiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4Nuiv) },
-    { "glVertexAttrib4NuivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4NuivARB) },
-    { "glVertexAttrib4Nusv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4Nusv) },
-    { "glVertexAttrib4NusvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4NusvARB) },
-    { "glVertexAttrib4bv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4bv) },
-    { "glVertexAttrib4bvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4bvARB) },
-    { "glVertexAttrib4d", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4d) },
-    { "glVertexAttrib4dARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4dARB) },
-    { "glVertexAttrib4dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4dNV) },
-    { "glVertexAttrib4dv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4dv) },
-    { "glVertexAttrib4dvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4dvARB) },
-    { "glVertexAttrib4dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4dvNV) },
-    { "glVertexAttrib4f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4f) },
-    { "glVertexAttrib4fARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4fARB) },
-    { "glVertexAttrib4fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4fNV) },
-    { "glVertexAttrib4fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4fv) },
-    { "glVertexAttrib4fvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4fvARB) },
-    { "glVertexAttrib4fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4fvNV) },
-    { "glVertexAttrib4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4hNV) },
-    { "glVertexAttrib4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4hvNV) },
-    { "glVertexAttrib4iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4iv) },
-    { "glVertexAttrib4ivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4ivARB) },
-    { "glVertexAttrib4s", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4s) },
-    { "glVertexAttrib4sARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4sARB) },
-    { "glVertexAttrib4sNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4sNV) },
-    { "glVertexAttrib4sv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4sv) },
-    { "glVertexAttrib4svARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4svARB) },
-    { "glVertexAttrib4svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4svNV) },
-    { "glVertexAttrib4ubNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4ubNV) },
-    { "glVertexAttrib4ubv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4ubv) },
-    { "glVertexAttrib4ubvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4ubvARB) },
-    { "glVertexAttrib4ubvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4ubvNV) },
-    { "glVertexAttrib4uiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4uiv) },
-    { "glVertexAttrib4uivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4uivARB) },
-    { "glVertexAttrib4usv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4usv) },
-    { "glVertexAttrib4usvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttrib4usvARB) },
-    { "glVertexAttribArrayObjectATI", "GL_ATI_vertex_attrib_array_object", offsetof(struct opengl_funcs, ext.p_glVertexAttribArrayObjectATI) },
-    { "glVertexAttribBinding", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribBinding) },
-    { "glVertexAttribDivisor", "GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribDivisor) },
-    { "glVertexAttribDivisorARB", "GL_ARB_instanced_arrays", offsetof(struct opengl_funcs, ext.p_glVertexAttribDivisorARB) },
-    { "glVertexAttribFormat", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribFormat) },
-    { "glVertexAttribFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glVertexAttribFormatNV) },
-    { "glVertexAttribI1i", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI1i) },
-    { "glVertexAttribI1iEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI1iEXT) },
-    { "glVertexAttribI1iv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI1iv) },
-    { "glVertexAttribI1ivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI1ivEXT) },
-    { "glVertexAttribI1ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI1ui) },
-    { "glVertexAttribI1uiEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI1uiEXT) },
-    { "glVertexAttribI1uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI1uiv) },
-    { "glVertexAttribI1uivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI1uivEXT) },
-    { "glVertexAttribI2i", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI2i) },
-    { "glVertexAttribI2iEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI2iEXT) },
-    { "glVertexAttribI2iv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI2iv) },
-    { "glVertexAttribI2ivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI2ivEXT) },
-    { "glVertexAttribI2ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI2ui) },
-    { "glVertexAttribI2uiEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI2uiEXT) },
-    { "glVertexAttribI2uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI2uiv) },
-    { "glVertexAttribI2uivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI2uivEXT) },
-    { "glVertexAttribI3i", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI3i) },
-    { "glVertexAttribI3iEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI3iEXT) },
-    { "glVertexAttribI3iv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI3iv) },
-    { "glVertexAttribI3ivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI3ivEXT) },
-    { "glVertexAttribI3ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI3ui) },
-    { "glVertexAttribI3uiEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI3uiEXT) },
-    { "glVertexAttribI3uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI3uiv) },
-    { "glVertexAttribI3uivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI3uivEXT) },
-    { "glVertexAttribI4bv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4bv) },
-    { "glVertexAttribI4bvEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4bvEXT) },
-    { "glVertexAttribI4i", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4i) },
-    { "glVertexAttribI4iEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4iEXT) },
-    { "glVertexAttribI4iv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4iv) },
-    { "glVertexAttribI4ivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4ivEXT) },
-    { "glVertexAttribI4sv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4sv) },
-    { "glVertexAttribI4svEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4svEXT) },
-    { "glVertexAttribI4ubv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4ubv) },
-    { "glVertexAttribI4ubvEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4ubvEXT) },
-    { "glVertexAttribI4ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4ui) },
-    { "glVertexAttribI4uiEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4uiEXT) },
-    { "glVertexAttribI4uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4uiv) },
-    { "glVertexAttribI4uivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4uivEXT) },
-    { "glVertexAttribI4usv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4usv) },
-    { "glVertexAttribI4usvEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribI4usvEXT) },
-    { "glVertexAttribIFormat", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribIFormat) },
-    { "glVertexAttribIFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glVertexAttribIFormatNV) },
-    { "glVertexAttribIPointer", "GL_VERSION_3_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribIPointer) },
-    { "glVertexAttribIPointerEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, ext.p_glVertexAttribIPointerEXT) },
-    { "glVertexAttribL1d", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1d) },
-    { "glVertexAttribL1dEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1dEXT) },
-    { "glVertexAttribL1dv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1dv) },
-    { "glVertexAttribL1dvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1dvEXT) },
-    { "glVertexAttribL1i64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1i64NV) },
-    { "glVertexAttribL1i64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1i64vNV) },
-    { "glVertexAttribL1ui64ARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1ui64ARB) },
-    { "glVertexAttribL1ui64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1ui64NV) },
-    { "glVertexAttribL1ui64vARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1ui64vARB) },
-    { "glVertexAttribL1ui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL1ui64vNV) },
-    { "glVertexAttribL2d", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glVertexAttribL2d) },
-    { "glVertexAttribL2dEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL2dEXT) },
-    { "glVertexAttribL2dv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glVertexAttribL2dv) },
-    { "glVertexAttribL2dvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL2dvEXT) },
-    { "glVertexAttribL2i64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL2i64NV) },
-    { "glVertexAttribL2i64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL2i64vNV) },
-    { "glVertexAttribL2ui64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL2ui64NV) },
-    { "glVertexAttribL2ui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL2ui64vNV) },
-    { "glVertexAttribL3d", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glVertexAttribL3d) },
-    { "glVertexAttribL3dEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL3dEXT) },
-    { "glVertexAttribL3dv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glVertexAttribL3dv) },
-    { "glVertexAttribL3dvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL3dvEXT) },
-    { "glVertexAttribL3i64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL3i64NV) },
-    { "glVertexAttribL3i64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL3i64vNV) },
-    { "glVertexAttribL3ui64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL3ui64NV) },
-    { "glVertexAttribL3ui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL3ui64vNV) },
-    { "glVertexAttribL4d", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glVertexAttribL4d) },
-    { "glVertexAttribL4dEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL4dEXT) },
-    { "glVertexAttribL4dv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glVertexAttribL4dv) },
-    { "glVertexAttribL4dvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL4dvEXT) },
-    { "glVertexAttribL4i64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL4i64NV) },
-    { "glVertexAttribL4i64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL4i64vNV) },
-    { "glVertexAttribL4ui64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL4ui64NV) },
-    { "glVertexAttribL4ui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribL4ui64vNV) },
-    { "glVertexAttribLFormat", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribLFormat) },
-    { "glVertexAttribLFormatNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribLFormatNV) },
-    { "glVertexAttribLPointer", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glVertexAttribLPointer) },
-    { "glVertexAttribLPointerEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, ext.p_glVertexAttribLPointerEXT) },
-    { "glVertexAttribP1ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribP1ui) },
-    { "glVertexAttribP1uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribP1uiv) },
-    { "glVertexAttribP2ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribP2ui) },
-    { "glVertexAttribP2uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribP2uiv) },
-    { "glVertexAttribP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribP3ui) },
-    { "glVertexAttribP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribP3uiv) },
-    { "glVertexAttribP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribP4ui) },
-    { "glVertexAttribP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexAttribP4uiv) },
-    { "glVertexAttribParameteriAMD", "GL_AMD_interleaved_elements", offsetof(struct opengl_funcs, ext.p_glVertexAttribParameteriAMD) },
-    { "glVertexAttribPointer", "GL_VERSION_2_0", offsetof(struct opengl_funcs, ext.p_glVertexAttribPointer) },
-    { "glVertexAttribPointerARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, ext.p_glVertexAttribPointerARB) },
-    { "glVertexAttribPointerNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribPointerNV) },
-    { "glVertexAttribs1dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs1dvNV) },
-    { "glVertexAttribs1fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs1fvNV) },
-    { "glVertexAttribs1hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttribs1hvNV) },
-    { "glVertexAttribs1svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs1svNV) },
-    { "glVertexAttribs2dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs2dvNV) },
-    { "glVertexAttribs2fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs2fvNV) },
-    { "glVertexAttribs2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttribs2hvNV) },
-    { "glVertexAttribs2svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs2svNV) },
-    { "glVertexAttribs3dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs3dvNV) },
-    { "glVertexAttribs3fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs3fvNV) },
-    { "glVertexAttribs3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttribs3hvNV) },
-    { "glVertexAttribs3svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs3svNV) },
-    { "glVertexAttribs4dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs4dvNV) },
-    { "glVertexAttribs4fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs4fvNV) },
-    { "glVertexAttribs4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexAttribs4hvNV) },
-    { "glVertexAttribs4svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs4svNV) },
-    { "glVertexAttribs4ubvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, ext.p_glVertexAttribs4ubvNV) },
-    { "glVertexBindingDivisor", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, ext.p_glVertexBindingDivisor) },
-    { "glVertexBlendARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glVertexBlendARB) },
-    { "glVertexBlendEnvfATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexBlendEnvfATI) },
-    { "glVertexBlendEnviATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexBlendEnviATI) },
-    { "glVertexFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, ext.p_glVertexFormatNV) },
-    { "glVertexP2ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexP2ui) },
-    { "glVertexP2uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexP2uiv) },
-    { "glVertexP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexP3ui) },
-    { "glVertexP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexP3uiv) },
-    { "glVertexP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexP4ui) },
-    { "glVertexP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, ext.p_glVertexP4uiv) },
-    { "glVertexPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, ext.p_glVertexPointerEXT) },
-    { "glVertexPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, ext.p_glVertexPointerListIBM) },
-    { "glVertexPointervINTEL", "GL_INTEL_parallel_arrays", offsetof(struct opengl_funcs, ext.p_glVertexPointervINTEL) },
-    { "glVertexStream1dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream1dATI) },
-    { "glVertexStream1dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream1dvATI) },
-    { "glVertexStream1fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream1fATI) },
-    { "glVertexStream1fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream1fvATI) },
-    { "glVertexStream1iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream1iATI) },
-    { "glVertexStream1ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream1ivATI) },
-    { "glVertexStream1sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream1sATI) },
-    { "glVertexStream1svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream1svATI) },
-    { "glVertexStream2dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream2dATI) },
-    { "glVertexStream2dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream2dvATI) },
-    { "glVertexStream2fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream2fATI) },
-    { "glVertexStream2fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream2fvATI) },
-    { "glVertexStream2iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream2iATI) },
-    { "glVertexStream2ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream2ivATI) },
-    { "glVertexStream2sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream2sATI) },
-    { "glVertexStream2svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream2svATI) },
-    { "glVertexStream3dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream3dATI) },
-    { "glVertexStream3dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream3dvATI) },
-    { "glVertexStream3fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream3fATI) },
-    { "glVertexStream3fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream3fvATI) },
-    { "glVertexStream3iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream3iATI) },
-    { "glVertexStream3ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream3ivATI) },
-    { "glVertexStream3sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream3sATI) },
-    { "glVertexStream3svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream3svATI) },
-    { "glVertexStream4dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream4dATI) },
-    { "glVertexStream4dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream4dvATI) },
-    { "glVertexStream4fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream4fATI) },
-    { "glVertexStream4fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream4fvATI) },
-    { "glVertexStream4iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream4iATI) },
-    { "glVertexStream4ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream4ivATI) },
-    { "glVertexStream4sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream4sATI) },
-    { "glVertexStream4svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, ext.p_glVertexStream4svATI) },
-    { "glVertexWeightPointerEXT", "GL_EXT_vertex_weighting", offsetof(struct opengl_funcs, ext.p_glVertexWeightPointerEXT) },
-    { "glVertexWeightfEXT", "GL_EXT_vertex_weighting", offsetof(struct opengl_funcs, ext.p_glVertexWeightfEXT) },
-    { "glVertexWeightfvEXT", "GL_EXT_vertex_weighting", offsetof(struct opengl_funcs, ext.p_glVertexWeightfvEXT) },
-    { "glVertexWeighthNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexWeighthNV) },
-    { "glVertexWeighthvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, ext.p_glVertexWeighthvNV) },
-    { "glVideoCaptureNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glVideoCaptureNV) },
-    { "glVideoCaptureStreamParameterdvNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glVideoCaptureStreamParameterdvNV) },
-    { "glVideoCaptureStreamParameterfvNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glVideoCaptureStreamParameterfvNV) },
-    { "glVideoCaptureStreamParameterivNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, ext.p_glVideoCaptureStreamParameterivNV) },
-    { "glViewportArrayv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glViewportArrayv) },
-    { "glViewportIndexedf", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glViewportIndexedf) },
-    { "glViewportIndexedfv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, ext.p_glViewportIndexedfv) },
-    { "glViewportPositionWScaleNV", "GL_NV_clip_space_w_scaling", offsetof(struct opengl_funcs, ext.p_glViewportPositionWScaleNV) },
-    { "glViewportSwizzleNV", "GL_NV_viewport_swizzle", offsetof(struct opengl_funcs, ext.p_glViewportSwizzleNV) },
-    { "glWaitSemaphoreEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, ext.p_glWaitSemaphoreEXT) },
-    { "glWaitSemaphoreui64NVX", "GL_NVX_progress_fence", offsetof(struct opengl_funcs, ext.p_glWaitSemaphoreui64NVX) },
-    { "glWaitSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, ext.p_glWaitSync) },
-    { "glWaitVkSemaphoreNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, ext.p_glWaitVkSemaphoreNV) },
-    { "glWeightPathsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, ext.p_glWeightPathsNV) },
-    { "glWeightPointerARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glWeightPointerARB) },
-    { "glWeightbvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glWeightbvARB) },
-    { "glWeightdvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glWeightdvARB) },
-    { "glWeightfvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glWeightfvARB) },
-    { "glWeightivARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glWeightivARB) },
-    { "glWeightsvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glWeightsvARB) },
-    { "glWeightubvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glWeightubvARB) },
-    { "glWeightuivARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glWeightuivARB) },
-    { "glWeightusvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, ext.p_glWeightusvARB) },
-    { "glWindowPos2d", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos2d) },
-    { "glWindowPos2dARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2dARB) },
-    { "glWindowPos2dMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2dMESA) },
-    { "glWindowPos2dv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos2dv) },
-    { "glWindowPos2dvARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2dvARB) },
-    { "glWindowPos2dvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2dvMESA) },
-    { "glWindowPos2f", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos2f) },
-    { "glWindowPos2fARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2fARB) },
-    { "glWindowPos2fMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2fMESA) },
-    { "glWindowPos2fv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos2fv) },
-    { "glWindowPos2fvARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2fvARB) },
-    { "glWindowPos2fvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2fvMESA) },
-    { "glWindowPos2i", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos2i) },
-    { "glWindowPos2iARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2iARB) },
-    { "glWindowPos2iMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2iMESA) },
-    { "glWindowPos2iv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos2iv) },
-    { "glWindowPos2ivARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2ivARB) },
-    { "glWindowPos2ivMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2ivMESA) },
-    { "glWindowPos2s", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos2s) },
-    { "glWindowPos2sARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2sARB) },
-    { "glWindowPos2sMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2sMESA) },
-    { "glWindowPos2sv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos2sv) },
-    { "glWindowPos2svARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2svARB) },
-    { "glWindowPos2svMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos2svMESA) },
-    { "glWindowPos3d", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos3d) },
-    { "glWindowPos3dARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3dARB) },
-    { "glWindowPos3dMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3dMESA) },
-    { "glWindowPos3dv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos3dv) },
-    { "glWindowPos3dvARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3dvARB) },
-    { "glWindowPos3dvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3dvMESA) },
-    { "glWindowPos3f", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos3f) },
-    { "glWindowPos3fARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3fARB) },
-    { "glWindowPos3fMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3fMESA) },
-    { "glWindowPos3fv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos3fv) },
-    { "glWindowPos3fvARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3fvARB) },
-    { "glWindowPos3fvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3fvMESA) },
-    { "glWindowPos3i", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos3i) },
-    { "glWindowPos3iARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3iARB) },
-    { "glWindowPos3iMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3iMESA) },
-    { "glWindowPos3iv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos3iv) },
-    { "glWindowPos3ivARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3ivARB) },
-    { "glWindowPos3ivMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3ivMESA) },
-    { "glWindowPos3s", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos3s) },
-    { "glWindowPos3sARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3sARB) },
-    { "glWindowPos3sMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3sMESA) },
-    { "glWindowPos3sv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, ext.p_glWindowPos3sv) },
-    { "glWindowPos3svARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3svARB) },
-    { "glWindowPos3svMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos3svMESA) },
-    { "glWindowPos4dMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos4dMESA) },
-    { "glWindowPos4dvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos4dvMESA) },
-    { "glWindowPos4fMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos4fMESA) },
-    { "glWindowPos4fvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos4fvMESA) },
-    { "glWindowPos4iMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos4iMESA) },
-    { "glWindowPos4ivMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos4ivMESA) },
-    { "glWindowPos4sMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos4sMESA) },
-    { "glWindowPos4svMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, ext.p_glWindowPos4svMESA) },
-    { "glWindowRectanglesEXT", "GL_EXT_window_rectangles", offsetof(struct opengl_funcs, ext.p_glWindowRectanglesEXT) },
-    { "glWriteMaskEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, ext.p_glWriteMaskEXT) },
-    { "wglAllocateMemoryNV", "WGL_NV_vertex_array_range", offsetof(struct opengl_funcs, ext.p_wglAllocateMemoryNV) },
-    { "wglBindTexImageARB", "WGL_ARB_render_texture", offsetof(struct opengl_funcs, ext.p_wglBindTexImageARB) },
-    { "wglChoosePixelFormatARB", "WGL_ARB_pixel_format", offsetof(struct opengl_funcs, ext.p_wglChoosePixelFormatARB) },
-    { "wglCreateContextAttribsARB", "WGL_ARB_create_context", offsetof(struct opengl_funcs, ext.p_wglCreateContextAttribsARB) },
-    { "wglCreatePbufferARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, ext.p_wglCreatePbufferARB) },
-    { "wglDestroyPbufferARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, ext.p_wglDestroyPbufferARB) },
-    { "wglFreeMemoryNV", "WGL_NV_vertex_array_range", offsetof(struct opengl_funcs, ext.p_wglFreeMemoryNV) },
-    { "wglGetCurrentReadDCARB", "WGL_ARB_make_current_read", offsetof(struct opengl_funcs, ext.p_wglGetCurrentReadDCARB) },
-    { "wglGetExtensionsStringARB", "WGL_ARB_extensions_string", offsetof(struct opengl_funcs, ext.p_wglGetExtensionsStringARB) },
-    { "wglGetExtensionsStringEXT", "WGL_EXT_extensions_string", offsetof(struct opengl_funcs, ext.p_wglGetExtensionsStringEXT) },
-    { "wglGetPbufferDCARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, ext.p_wglGetPbufferDCARB) },
-    { "wglGetPixelFormatAttribfvARB", "WGL_ARB_pixel_format", offsetof(struct opengl_funcs, ext.p_wglGetPixelFormatAttribfvARB) },
-    { "wglGetPixelFormatAttribivARB", "WGL_ARB_pixel_format", offsetof(struct opengl_funcs, ext.p_wglGetPixelFormatAttribivARB) },
-    { "wglGetSwapIntervalEXT", "WGL_EXT_swap_control", offsetof(struct opengl_funcs, ext.p_wglGetSwapIntervalEXT) },
-    { "wglMakeContextCurrentARB", "WGL_ARB_make_current_read", offsetof(struct opengl_funcs, ext.p_wglMakeContextCurrentARB) },
-    { "wglQueryCurrentRendererIntegerWINE", "WGL_WINE_query_renderer", offsetof(struct opengl_funcs, ext.p_wglQueryCurrentRendererIntegerWINE) },
-    { "wglQueryCurrentRendererStringWINE", "WGL_WINE_query_renderer", offsetof(struct opengl_funcs, ext.p_wglQueryCurrentRendererStringWINE) },
-    { "wglQueryPbufferARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, ext.p_wglQueryPbufferARB) },
-    { "wglQueryRendererIntegerWINE", "WGL_WINE_query_renderer", offsetof(struct opengl_funcs, ext.p_wglQueryRendererIntegerWINE) },
-    { "wglQueryRendererStringWINE", "WGL_WINE_query_renderer", offsetof(struct opengl_funcs, ext.p_wglQueryRendererStringWINE) },
-    { "wglReleasePbufferDCARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, ext.p_wglReleasePbufferDCARB) },
-    { "wglReleaseTexImageARB", "WGL_ARB_render_texture", offsetof(struct opengl_funcs, ext.p_wglReleaseTexImageARB) },
-    { "wglSetPbufferAttribARB", "WGL_ARB_render_texture", offsetof(struct opengl_funcs, ext.p_wglSetPbufferAttribARB) },
-    { "wglSetPixelFormatWINE", "WGL_WINE_pixel_format_passthrough", offsetof(struct opengl_funcs, ext.p_wglSetPixelFormatWINE) },
-    { "wglSwapIntervalEXT", "WGL_EXT_swap_control", offsetof(struct opengl_funcs, ext.p_wglSwapIntervalEXT) },
+    { "glAccumxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glAccumxOES) },
+    { "glAcquireKeyedMutexWin32EXT", "GL_EXT_win32_keyed_mutex", offsetof(struct opengl_funcs, p_glAcquireKeyedMutexWin32EXT) },
+    { "glActiveProgramEXT", "GL_EXT_separate_shader_objects", offsetof(struct opengl_funcs, p_glActiveProgramEXT) },
+    { "glActiveShaderProgram", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glActiveShaderProgram) },
+    { "glActiveStencilFaceEXT", "GL_EXT_stencil_two_side", offsetof(struct opengl_funcs, p_glActiveStencilFaceEXT) },
+    { "glActiveTexture", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glActiveTexture) },
+    { "glActiveTextureARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glActiveTextureARB) },
+    { "glActiveVaryingNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glActiveVaryingNV) },
+    { "glAlphaFragmentOp1ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glAlphaFragmentOp1ATI) },
+    { "glAlphaFragmentOp2ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glAlphaFragmentOp2ATI) },
+    { "glAlphaFragmentOp3ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glAlphaFragmentOp3ATI) },
+    { "glAlphaFuncxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glAlphaFuncxOES) },
+    { "glAlphaToCoverageDitherControlNV", "GL_NV_alpha_to_coverage_dither_control", offsetof(struct opengl_funcs, p_glAlphaToCoverageDitherControlNV) },
+    { "glApplyFramebufferAttachmentCMAAINTEL", "GL_INTEL_framebuffer_CMAA", offsetof(struct opengl_funcs, p_glApplyFramebufferAttachmentCMAAINTEL) },
+    { "glApplyTextureEXT", "GL_EXT_light_texture", offsetof(struct opengl_funcs, p_glApplyTextureEXT) },
+    { "glAreProgramsResidentNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glAreProgramsResidentNV) },
+    { "glAreTexturesResidentEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, p_glAreTexturesResidentEXT) },
+    { "glArrayElementEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, p_glArrayElementEXT) },
+    { "glArrayObjectATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glArrayObjectATI) },
+    { "glAsyncCopyBufferSubDataNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, p_glAsyncCopyBufferSubDataNVX) },
+    { "glAsyncCopyImageSubDataNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, p_glAsyncCopyImageSubDataNVX) },
+    { "glAsyncMarkerSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, p_glAsyncMarkerSGIX) },
+    { "glAttachObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glAttachObjectARB) },
+    { "glAttachShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glAttachShader) },
+    { "glBeginConditionalRender", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glBeginConditionalRender) },
+    { "glBeginConditionalRenderNV", "GL_NV_conditional_render", offsetof(struct opengl_funcs, p_glBeginConditionalRenderNV) },
+    { "glBeginConditionalRenderNVX", "GL_NVX_conditional_render", offsetof(struct opengl_funcs, p_glBeginConditionalRenderNVX) },
+    { "glBeginFragmentShaderATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glBeginFragmentShaderATI) },
+    { "glBeginOcclusionQueryNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, p_glBeginOcclusionQueryNV) },
+    { "glBeginPerfMonitorAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glBeginPerfMonitorAMD) },
+    { "glBeginPerfQueryINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glBeginPerfQueryINTEL) },
+    { "glBeginQuery", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glBeginQuery) },
+    { "glBeginQueryARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, p_glBeginQueryARB) },
+    { "glBeginQueryIndexed", "GL_ARB_transform_feedback3 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glBeginQueryIndexed) },
+    { "glBeginTransformFeedback", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glBeginTransformFeedback) },
+    { "glBeginTransformFeedbackEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, p_glBeginTransformFeedbackEXT) },
+    { "glBeginTransformFeedbackNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glBeginTransformFeedbackNV) },
+    { "glBeginVertexShaderEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glBeginVertexShaderEXT) },
+    { "glBeginVideoCaptureNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glBeginVideoCaptureNV) },
+    { "glBindAttribLocation", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glBindAttribLocation) },
+    { "glBindAttribLocationARB", "GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glBindAttribLocationARB) },
+    { "glBindBuffer", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glBindBuffer) },
+    { "glBindBufferARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glBindBufferARB) },
+    { "glBindBufferBase", "GL_ARB_uniform_buffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glBindBufferBase) },
+    { "glBindBufferBaseEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, p_glBindBufferBaseEXT) },
+    { "glBindBufferBaseNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glBindBufferBaseNV) },
+    { "glBindBufferOffsetEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, p_glBindBufferOffsetEXT) },
+    { "glBindBufferOffsetNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glBindBufferOffsetNV) },
+    { "glBindBufferRange", "GL_ARB_uniform_buffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glBindBufferRange) },
+    { "glBindBufferRangeEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, p_glBindBufferRangeEXT) },
+    { "glBindBufferRangeNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glBindBufferRangeNV) },
+    { "glBindBuffersBase", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, p_glBindBuffersBase) },
+    { "glBindBuffersRange", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, p_glBindBuffersRange) },
+    { "glBindFragDataLocation", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glBindFragDataLocation) },
+    { "glBindFragDataLocationEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glBindFragDataLocationEXT) },
+    { "glBindFragDataLocationIndexed", "GL_ARB_blend_func_extended GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glBindFragDataLocationIndexed) },
+    { "glBindFragmentShaderATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glBindFragmentShaderATI) },
+    { "glBindFramebuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glBindFramebuffer) },
+    { "glBindFramebufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glBindFramebufferEXT) },
+    { "glBindImageTexture", "GL_ARB_shader_image_load_store GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glBindImageTexture) },
+    { "glBindImageTextureEXT", "GL_EXT_shader_image_load_store", offsetof(struct opengl_funcs, p_glBindImageTextureEXT) },
+    { "glBindImageTextures", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, p_glBindImageTextures) },
+    { "glBindLightParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glBindLightParameterEXT) },
+    { "glBindMaterialParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glBindMaterialParameterEXT) },
+    { "glBindMultiTextureEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glBindMultiTextureEXT) },
+    { "glBindParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glBindParameterEXT) },
+    { "glBindProgramARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glBindProgramARB) },
+    { "glBindProgramNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glBindProgramNV) },
+    { "glBindProgramPipeline", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glBindProgramPipeline) },
+    { "glBindRenderbuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glBindRenderbuffer) },
+    { "glBindRenderbufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glBindRenderbufferEXT) },
+    { "glBindSampler", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glBindSampler) },
+    { "glBindSamplers", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, p_glBindSamplers) },
+    { "glBindShadingRateImageNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, p_glBindShadingRateImageNV) },
+    { "glBindTexGenParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glBindTexGenParameterEXT) },
+    { "glBindTextureEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, p_glBindTextureEXT) },
+    { "glBindTextureUnit", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glBindTextureUnit) },
+    { "glBindTextureUnitParameterEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glBindTextureUnitParameterEXT) },
+    { "glBindTextures", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, p_glBindTextures) },
+    { "glBindTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glBindTransformFeedback) },
+    { "glBindTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, p_glBindTransformFeedbackNV) },
+    { "glBindVertexArray", "GL_ARB_vertex_array_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glBindVertexArray) },
+    { "glBindVertexArrayAPPLE", "GL_APPLE_vertex_array_object", offsetof(struct opengl_funcs, p_glBindVertexArrayAPPLE) },
+    { "glBindVertexBuffer", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glBindVertexBuffer) },
+    { "glBindVertexBuffers", "GL_ARB_multi_bind GL_VERSION_4_4", offsetof(struct opengl_funcs, p_glBindVertexBuffers) },
+    { "glBindVertexShaderEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glBindVertexShaderEXT) },
+    { "glBindVideoCaptureStreamBufferNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glBindVideoCaptureStreamBufferNV) },
+    { "glBindVideoCaptureStreamTextureNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glBindVideoCaptureStreamTextureNV) },
+    { "glBinormal3bEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3bEXT) },
+    { "glBinormal3bvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3bvEXT) },
+    { "glBinormal3dEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3dEXT) },
+    { "glBinormal3dvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3dvEXT) },
+    { "glBinormal3fEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3fEXT) },
+    { "glBinormal3fvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3fvEXT) },
+    { "glBinormal3iEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3iEXT) },
+    { "glBinormal3ivEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3ivEXT) },
+    { "glBinormal3sEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3sEXT) },
+    { "glBinormal3svEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormal3svEXT) },
+    { "glBinormalPointerEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glBinormalPointerEXT) },
+    { "glBitmapxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glBitmapxOES) },
+    { "glBlendBarrierKHR", "GL_KHR_blend_equation_advanced", offsetof(struct opengl_funcs, p_glBlendBarrierKHR) },
+    { "glBlendBarrierNV", "GL_NV_blend_equation_advanced", offsetof(struct opengl_funcs, p_glBlendBarrierNV) },
+    { "glBlendColor", "GL_ARB_imaging GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glBlendColor) },
+    { "glBlendColorEXT", "GL_EXT_blend_color", offsetof(struct opengl_funcs, p_glBlendColorEXT) },
+    { "glBlendColorxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glBlendColorxOES) },
+    { "glBlendEquation", "GL_ARB_imaging GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glBlendEquation) },
+    { "glBlendEquationEXT", "GL_EXT_blend_minmax", offsetof(struct opengl_funcs, p_glBlendEquationEXT) },
+    { "glBlendEquationIndexedAMD", "GL_AMD_draw_buffers_blend", offsetof(struct opengl_funcs, p_glBlendEquationIndexedAMD) },
+    { "glBlendEquationSeparate", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glBlendEquationSeparate) },
+    { "glBlendEquationSeparateEXT", "GL_EXT_blend_equation_separate", offsetof(struct opengl_funcs, p_glBlendEquationSeparateEXT) },
+    { "glBlendEquationSeparateIndexedAMD", "GL_AMD_draw_buffers_blend", offsetof(struct opengl_funcs, p_glBlendEquationSeparateIndexedAMD) },
+    { "glBlendEquationSeparatei", "GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glBlendEquationSeparatei) },
+    { "glBlendEquationSeparateiARB", "GL_ARB_draw_buffers_blend", offsetof(struct opengl_funcs, p_glBlendEquationSeparateiARB) },
+    { "glBlendEquationi", "GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glBlendEquationi) },
+    { "glBlendEquationiARB", "GL_ARB_draw_buffers_blend", offsetof(struct opengl_funcs, p_glBlendEquationiARB) },
+    { "glBlendFuncIndexedAMD", "GL_AMD_draw_buffers_blend", offsetof(struct opengl_funcs, p_glBlendFuncIndexedAMD) },
+    { "glBlendFuncSeparate", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glBlendFuncSeparate) },
+    { "glBlendFuncSeparateEXT", "GL_EXT_blend_func_separate", offsetof(struct opengl_funcs, p_glBlendFuncSeparateEXT) },
+    { "glBlendFuncSeparateINGR", "GL_INGR_blend_func_separate", offsetof(struct opengl_funcs, p_glBlendFuncSeparateINGR) },
+    { "glBlendFuncSeparateIndexedAMD", "GL_AMD_draw_buffers_blend", offsetof(struct opengl_funcs, p_glBlendFuncSeparateIndexedAMD) },
+    { "glBlendFuncSeparatei", "GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glBlendFuncSeparatei) },
+    { "glBlendFuncSeparateiARB", "GL_ARB_draw_buffers_blend", offsetof(struct opengl_funcs, p_glBlendFuncSeparateiARB) },
+    { "glBlendFunci", "GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glBlendFunci) },
+    { "glBlendFunciARB", "GL_ARB_draw_buffers_blend", offsetof(struct opengl_funcs, p_glBlendFunciARB) },
+    { "glBlendParameteriNV", "GL_NV_blend_equation_advanced", offsetof(struct opengl_funcs, p_glBlendParameteriNV) },
+    { "glBlitFramebuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glBlitFramebuffer) },
+    { "glBlitFramebufferEXT", "GL_EXT_framebuffer_blit", offsetof(struct opengl_funcs, p_glBlitFramebufferEXT) },
+    { "glBlitNamedFramebuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glBlitNamedFramebuffer) },
+    { "glBufferAddressRangeNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glBufferAddressRangeNV) },
+    { "glBufferAttachMemoryNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, p_glBufferAttachMemoryNV) },
+    { "glBufferData", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glBufferData) },
+    { "glBufferDataARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glBufferDataARB) },
+    { "glBufferPageCommitmentARB", "GL_ARB_sparse_buffer", offsetof(struct opengl_funcs, p_glBufferPageCommitmentARB) },
+    { "glBufferParameteriAPPLE", "GL_APPLE_flush_buffer_range", offsetof(struct opengl_funcs, p_glBufferParameteriAPPLE) },
+    { "glBufferRegionEnabled", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, p_glBufferRegionEnabled) },
+    { "glBufferStorage", "GL_ARB_buffer_storage GL_VERSION_4_4", offsetof(struct opengl_funcs, p_glBufferStorage) },
+    { "glBufferStorageExternalEXT", "GL_EXT_external_buffer", offsetof(struct opengl_funcs, p_glBufferStorageExternalEXT) },
+    { "glBufferStorageMemEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glBufferStorageMemEXT) },
+    { "glBufferSubData", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glBufferSubData) },
+    { "glBufferSubDataARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glBufferSubDataARB) },
+    { "glCallCommandListNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glCallCommandListNV) },
+    { "glCheckFramebufferStatus", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glCheckFramebufferStatus) },
+    { "glCheckFramebufferStatusEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glCheckFramebufferStatusEXT) },
+    { "glCheckNamedFramebufferStatus", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCheckNamedFramebufferStatus) },
+    { "glCheckNamedFramebufferStatusEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCheckNamedFramebufferStatusEXT) },
+    { "glClampColor", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glClampColor) },
+    { "glClampColorARB", "GL_ARB_color_buffer_float", offsetof(struct opengl_funcs, p_glClampColorARB) },
+    { "glClearAccumxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glClearAccumxOES) },
+    { "glClearBufferData", "GL_ARB_clear_buffer_object GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glClearBufferData) },
+    { "glClearBufferSubData", "GL_ARB_clear_buffer_object GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glClearBufferSubData) },
+    { "glClearBufferfi", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glClearBufferfi) },
+    { "glClearBufferfv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glClearBufferfv) },
+    { "glClearBufferiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glClearBufferiv) },
+    { "glClearBufferuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glClearBufferuiv) },
+    { "glClearColorIiEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, p_glClearColorIiEXT) },
+    { "glClearColorIuiEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, p_glClearColorIuiEXT) },
+    { "glClearColorxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glClearColorxOES) },
+    { "glClearDepthdNV", "GL_NV_depth_buffer_float", offsetof(struct opengl_funcs, p_glClearDepthdNV) },
+    { "glClearDepthf", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glClearDepthf) },
+    { "glClearDepthfOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, p_glClearDepthfOES) },
+    { "glClearDepthxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glClearDepthxOES) },
+    { "glClearNamedBufferData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glClearNamedBufferData) },
+    { "glClearNamedBufferDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glClearNamedBufferDataEXT) },
+    { "glClearNamedBufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glClearNamedBufferSubData) },
+    { "glClearNamedBufferSubDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glClearNamedBufferSubDataEXT) },
+    { "glClearNamedFramebufferfi", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glClearNamedFramebufferfi) },
+    { "glClearNamedFramebufferfv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glClearNamedFramebufferfv) },
+    { "glClearNamedFramebufferiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glClearNamedFramebufferiv) },
+    { "glClearNamedFramebufferuiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glClearNamedFramebufferuiv) },
+    { "glClearTexImage", "GL_ARB_clear_texture GL_VERSION_4_4", offsetof(struct opengl_funcs, p_glClearTexImage) },
+    { "glClearTexSubImage", "GL_ARB_clear_texture GL_VERSION_4_4", offsetof(struct opengl_funcs, p_glClearTexSubImage) },
+    { "glClientActiveTexture", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glClientActiveTexture) },
+    { "glClientActiveTextureARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glClientActiveTextureARB) },
+    { "glClientActiveVertexStreamATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glClientActiveVertexStreamATI) },
+    { "glClientAttribDefaultEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glClientAttribDefaultEXT) },
+    { "glClientWaitSemaphoreui64NVX", "GL_NVX_progress_fence", offsetof(struct opengl_funcs, p_glClientWaitSemaphoreui64NVX) },
+    { "glClientWaitSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glClientWaitSync) },
+    { "glClipControl", "GL_ARB_clip_control GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glClipControl) },
+    { "glClipPlanefOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, p_glClipPlanefOES) },
+    { "glClipPlanexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glClipPlanexOES) },
+    { "glColor3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glColor3fVertex3fSUN) },
+    { "glColor3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glColor3fVertex3fvSUN) },
+    { "glColor3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glColor3hNV) },
+    { "glColor3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glColor3hvNV) },
+    { "glColor3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glColor3xOES) },
+    { "glColor3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glColor3xvOES) },
+    { "glColor4fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glColor4fNormal3fVertex3fSUN) },
+    { "glColor4fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glColor4fNormal3fVertex3fvSUN) },
+    { "glColor4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glColor4hNV) },
+    { "glColor4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glColor4hvNV) },
+    { "glColor4ubVertex2fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glColor4ubVertex2fSUN) },
+    { "glColor4ubVertex2fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glColor4ubVertex2fvSUN) },
+    { "glColor4ubVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glColor4ubVertex3fSUN) },
+    { "glColor4ubVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glColor4ubVertex3fvSUN) },
+    { "glColor4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glColor4xOES) },
+    { "glColor4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glColor4xvOES) },
+    { "glColorFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glColorFormatNV) },
+    { "glColorFragmentOp1ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glColorFragmentOp1ATI) },
+    { "glColorFragmentOp2ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glColorFragmentOp2ATI) },
+    { "glColorFragmentOp3ATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glColorFragmentOp3ATI) },
+    { "glColorMaskIndexedEXT", "GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, p_glColorMaskIndexedEXT) },
+    { "glColorMaski", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glColorMaski) },
+    { "glColorP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glColorP3ui) },
+    { "glColorP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glColorP3uiv) },
+    { "glColorP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glColorP4ui) },
+    { "glColorP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glColorP4uiv) },
+    { "glColorPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, p_glColorPointerEXT) },
+    { "glColorPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, p_glColorPointerListIBM) },
+    { "glColorPointervINTEL", "GL_INTEL_parallel_arrays", offsetof(struct opengl_funcs, p_glColorPointervINTEL) },
+    { "glColorSubTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glColorSubTable) },
+    { "glColorSubTableEXT", "GL_EXT_color_subtable", offsetof(struct opengl_funcs, p_glColorSubTableEXT) },
+    { "glColorTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glColorTable) },
+    { "glColorTableEXT", "GL_EXT_paletted_texture", offsetof(struct opengl_funcs, p_glColorTableEXT) },
+    { "glColorTableParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glColorTableParameterfv) },
+    { "glColorTableParameterfvSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, p_glColorTableParameterfvSGI) },
+    { "glColorTableParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glColorTableParameteriv) },
+    { "glColorTableParameterivSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, p_glColorTableParameterivSGI) },
+    { "glColorTableSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, p_glColorTableSGI) },
+    { "glCombinerInputNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glCombinerInputNV) },
+    { "glCombinerOutputNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glCombinerOutputNV) },
+    { "glCombinerParameterfNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glCombinerParameterfNV) },
+    { "glCombinerParameterfvNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glCombinerParameterfvNV) },
+    { "glCombinerParameteriNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glCombinerParameteriNV) },
+    { "glCombinerParameterivNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glCombinerParameterivNV) },
+    { "glCombinerStageParameterfvNV", "GL_NV_register_combiners2", offsetof(struct opengl_funcs, p_glCombinerStageParameterfvNV) },
+    { "glCommandListSegmentsNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glCommandListSegmentsNV) },
+    { "glCompileCommandListNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glCompileCommandListNV) },
+    { "glCompileShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glCompileShader) },
+    { "glCompileShaderARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glCompileShaderARB) },
+    { "glCompileShaderIncludeARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, p_glCompileShaderIncludeARB) },
+    { "glCompressedMultiTexImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedMultiTexImage1DEXT) },
+    { "glCompressedMultiTexImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedMultiTexImage2DEXT) },
+    { "glCompressedMultiTexImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedMultiTexImage3DEXT) },
+    { "glCompressedMultiTexSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedMultiTexSubImage1DEXT) },
+    { "glCompressedMultiTexSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedMultiTexSubImage2DEXT) },
+    { "glCompressedMultiTexSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedMultiTexSubImage3DEXT) },
+    { "glCompressedTexImage1D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glCompressedTexImage1D) },
+    { "glCompressedTexImage1DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, p_glCompressedTexImage1DARB) },
+    { "glCompressedTexImage2D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glCompressedTexImage2D) },
+    { "glCompressedTexImage2DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, p_glCompressedTexImage2DARB) },
+    { "glCompressedTexImage3D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glCompressedTexImage3D) },
+    { "glCompressedTexImage3DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, p_glCompressedTexImage3DARB) },
+    { "glCompressedTexSubImage1D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glCompressedTexSubImage1D) },
+    { "glCompressedTexSubImage1DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, p_glCompressedTexSubImage1DARB) },
+    { "glCompressedTexSubImage2D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glCompressedTexSubImage2D) },
+    { "glCompressedTexSubImage2DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, p_glCompressedTexSubImage2DARB) },
+    { "glCompressedTexSubImage3D", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glCompressedTexSubImage3D) },
+    { "glCompressedTexSubImage3DARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, p_glCompressedTexSubImage3DARB) },
+    { "glCompressedTextureImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedTextureImage1DEXT) },
+    { "glCompressedTextureImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedTextureImage2DEXT) },
+    { "glCompressedTextureImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedTextureImage3DEXT) },
+    { "glCompressedTextureSubImage1D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCompressedTextureSubImage1D) },
+    { "glCompressedTextureSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedTextureSubImage1DEXT) },
+    { "glCompressedTextureSubImage2D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCompressedTextureSubImage2D) },
+    { "glCompressedTextureSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedTextureSubImage2DEXT) },
+    { "glCompressedTextureSubImage3D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCompressedTextureSubImage3D) },
+    { "glCompressedTextureSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCompressedTextureSubImage3DEXT) },
+    { "glConservativeRasterParameterfNV", "GL_NV_conservative_raster_dilate", offsetof(struct opengl_funcs, p_glConservativeRasterParameterfNV) },
+    { "glConservativeRasterParameteriNV", "GL_NV_conservative_raster_pre_snap_triangles", offsetof(struct opengl_funcs, p_glConservativeRasterParameteriNV) },
+    { "glConvolutionFilter1D", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glConvolutionFilter1D) },
+    { "glConvolutionFilter1DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glConvolutionFilter1DEXT) },
+    { "glConvolutionFilter2D", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glConvolutionFilter2D) },
+    { "glConvolutionFilter2DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glConvolutionFilter2DEXT) },
+    { "glConvolutionParameterf", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glConvolutionParameterf) },
+    { "glConvolutionParameterfEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glConvolutionParameterfEXT) },
+    { "glConvolutionParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glConvolutionParameterfv) },
+    { "glConvolutionParameterfvEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glConvolutionParameterfvEXT) },
+    { "glConvolutionParameteri", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glConvolutionParameteri) },
+    { "glConvolutionParameteriEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glConvolutionParameteriEXT) },
+    { "glConvolutionParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glConvolutionParameteriv) },
+    { "glConvolutionParameterivEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glConvolutionParameterivEXT) },
+    { "glConvolutionParameterxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glConvolutionParameterxOES) },
+    { "glConvolutionParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glConvolutionParameterxvOES) },
+    { "glCopyBufferSubData", "GL_ARB_copy_buffer GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glCopyBufferSubData) },
+    { "glCopyColorSubTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glCopyColorSubTable) },
+    { "glCopyColorSubTableEXT", "GL_EXT_color_subtable", offsetof(struct opengl_funcs, p_glCopyColorSubTableEXT) },
+    { "glCopyColorTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glCopyColorTable) },
+    { "glCopyColorTableSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, p_glCopyColorTableSGI) },
+    { "glCopyConvolutionFilter1D", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glCopyConvolutionFilter1D) },
+    { "glCopyConvolutionFilter1DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glCopyConvolutionFilter1DEXT) },
+    { "glCopyConvolutionFilter2D", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glCopyConvolutionFilter2D) },
+    { "glCopyConvolutionFilter2DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glCopyConvolutionFilter2DEXT) },
+    { "glCopyImageSubData", "GL_ARB_copy_image GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glCopyImageSubData) },
+    { "glCopyImageSubDataNV", "GL_NV_copy_image", offsetof(struct opengl_funcs, p_glCopyImageSubDataNV) },
+    { "glCopyMultiTexImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyMultiTexImage1DEXT) },
+    { "glCopyMultiTexImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyMultiTexImage2DEXT) },
+    { "glCopyMultiTexSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyMultiTexSubImage1DEXT) },
+    { "glCopyMultiTexSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyMultiTexSubImage2DEXT) },
+    { "glCopyMultiTexSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyMultiTexSubImage3DEXT) },
+    { "glCopyNamedBufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCopyNamedBufferSubData) },
+    { "glCopyPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glCopyPathNV) },
+    { "glCopyTexImage1DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, p_glCopyTexImage1DEXT) },
+    { "glCopyTexImage2DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, p_glCopyTexImage2DEXT) },
+    { "glCopyTexSubImage1DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, p_glCopyTexSubImage1DEXT) },
+    { "glCopyTexSubImage2DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, p_glCopyTexSubImage2DEXT) },
+    { "glCopyTexSubImage3D", "GL_VERSION_1_2", offsetof(struct opengl_funcs, p_glCopyTexSubImage3D) },
+    { "glCopyTexSubImage3DEXT", "GL_EXT_copy_texture", offsetof(struct opengl_funcs, p_glCopyTexSubImage3DEXT) },
+    { "glCopyTextureImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyTextureImage1DEXT) },
+    { "glCopyTextureImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyTextureImage2DEXT) },
+    { "glCopyTextureSubImage1D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCopyTextureSubImage1D) },
+    { "glCopyTextureSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyTextureSubImage1DEXT) },
+    { "glCopyTextureSubImage2D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCopyTextureSubImage2D) },
+    { "glCopyTextureSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyTextureSubImage2DEXT) },
+    { "glCopyTextureSubImage3D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCopyTextureSubImage3D) },
+    { "glCopyTextureSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glCopyTextureSubImage3DEXT) },
+    { "glCoverFillPathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glCoverFillPathInstancedNV) },
+    { "glCoverFillPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glCoverFillPathNV) },
+    { "glCoverStrokePathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glCoverStrokePathInstancedNV) },
+    { "glCoverStrokePathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glCoverStrokePathNV) },
+    { "glCoverageModulationNV", "GL_NV_framebuffer_mixed_samples", offsetof(struct opengl_funcs, p_glCoverageModulationNV) },
+    { "glCoverageModulationTableNV", "GL_NV_framebuffer_mixed_samples", offsetof(struct opengl_funcs, p_glCoverageModulationTableNV) },
+    { "glCreateBuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCreateBuffers) },
+    { "glCreateCommandListsNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glCreateCommandListsNV) },
+    { "glCreateFramebuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCreateFramebuffers) },
+    { "glCreateMemoryObjectsEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glCreateMemoryObjectsEXT) },
+    { "glCreatePerfQueryINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glCreatePerfQueryINTEL) },
+    { "glCreateProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glCreateProgram) },
+    { "glCreateProgramObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glCreateProgramObjectARB) },
+    { "glCreateProgramPipelines", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCreateProgramPipelines) },
+    { "glCreateProgressFenceNVX", "GL_NVX_progress_fence", offsetof(struct opengl_funcs, p_glCreateProgressFenceNVX) },
+    { "glCreateQueries", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCreateQueries) },
+    { "glCreateRenderbuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCreateRenderbuffers) },
+    { "glCreateSamplers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCreateSamplers) },
+    { "glCreateShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glCreateShader) },
+    { "glCreateShaderObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glCreateShaderObjectARB) },
+    { "glCreateShaderProgramEXT", "GL_EXT_separate_shader_objects", offsetof(struct opengl_funcs, p_glCreateShaderProgramEXT) },
+    { "glCreateShaderProgramv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glCreateShaderProgramv) },
+    { "glCreateStatesNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glCreateStatesNV) },
+    { "glCreateSyncFromCLeventARB", "GL_ARB_cl_event", offsetof(struct opengl_funcs, p_glCreateSyncFromCLeventARB) },
+    { "glCreateTextures", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCreateTextures) },
+    { "glCreateTransformFeedbacks", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCreateTransformFeedbacks) },
+    { "glCreateVertexArrays", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glCreateVertexArrays) },
+    { "glCullParameterdvEXT", "GL_EXT_cull_vertex", offsetof(struct opengl_funcs, p_glCullParameterdvEXT) },
+    { "glCullParameterfvEXT", "GL_EXT_cull_vertex", offsetof(struct opengl_funcs, p_glCullParameterfvEXT) },
+    { "glCurrentPaletteMatrixARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, p_glCurrentPaletteMatrixARB) },
+    { "glDebugMessageCallback", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glDebugMessageCallback) },
+    { "glDebugMessageCallbackAMD", "GL_AMD_debug_output", offsetof(struct opengl_funcs, p_glDebugMessageCallbackAMD) },
+    { "glDebugMessageCallbackARB", "GL_ARB_debug_output", offsetof(struct opengl_funcs, p_glDebugMessageCallbackARB) },
+    { "glDebugMessageControl", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glDebugMessageControl) },
+    { "glDebugMessageControlARB", "GL_ARB_debug_output", offsetof(struct opengl_funcs, p_glDebugMessageControlARB) },
+    { "glDebugMessageEnableAMD", "GL_AMD_debug_output", offsetof(struct opengl_funcs, p_glDebugMessageEnableAMD) },
+    { "glDebugMessageInsert", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glDebugMessageInsert) },
+    { "glDebugMessageInsertAMD", "GL_AMD_debug_output", offsetof(struct opengl_funcs, p_glDebugMessageInsertAMD) },
+    { "glDebugMessageInsertARB", "GL_ARB_debug_output", offsetof(struct opengl_funcs, p_glDebugMessageInsertARB) },
+    { "glDeformSGIX", "GL_SGIX_polynomial_ffd", offsetof(struct opengl_funcs, p_glDeformSGIX) },
+    { "glDeformationMap3dSGIX", "GL_SGIX_polynomial_ffd", offsetof(struct opengl_funcs, p_glDeformationMap3dSGIX) },
+    { "glDeformationMap3fSGIX", "GL_SGIX_polynomial_ffd", offsetof(struct opengl_funcs, p_glDeformationMap3fSGIX) },
+    { "glDeleteAsyncMarkersSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, p_glDeleteAsyncMarkersSGIX) },
+    { "glDeleteBufferRegion", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, p_glDeleteBufferRegion) },
+    { "glDeleteBuffers", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glDeleteBuffers) },
+    { "glDeleteBuffersARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glDeleteBuffersARB) },
+    { "glDeleteCommandListsNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glDeleteCommandListsNV) },
+    { "glDeleteFencesAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, p_glDeleteFencesAPPLE) },
+    { "glDeleteFencesNV", "GL_NV_fence", offsetof(struct opengl_funcs, p_glDeleteFencesNV) },
+    { "glDeleteFragmentShaderATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glDeleteFragmentShaderATI) },
+    { "glDeleteFramebuffers", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glDeleteFramebuffers) },
+    { "glDeleteFramebuffersEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glDeleteFramebuffersEXT) },
+    { "glDeleteMemoryObjectsEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glDeleteMemoryObjectsEXT) },
+    { "glDeleteNamedStringARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, p_glDeleteNamedStringARB) },
+    { "glDeleteNamesAMD", "GL_AMD_name_gen_delete", offsetof(struct opengl_funcs, p_glDeleteNamesAMD) },
+    { "glDeleteObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glDeleteObjectARB) },
+    { "glDeleteObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glDeleteObjectBufferATI) },
+    { "glDeleteOcclusionQueriesNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, p_glDeleteOcclusionQueriesNV) },
+    { "glDeletePathsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glDeletePathsNV) },
+    { "glDeletePerfMonitorsAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glDeletePerfMonitorsAMD) },
+    { "glDeletePerfQueryINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glDeletePerfQueryINTEL) },
+    { "glDeleteProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glDeleteProgram) },
+    { "glDeleteProgramPipelines", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glDeleteProgramPipelines) },
+    { "glDeleteProgramsARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glDeleteProgramsARB) },
+    { "glDeleteProgramsNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glDeleteProgramsNV) },
+    { "glDeleteQueries", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glDeleteQueries) },
+    { "glDeleteQueriesARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, p_glDeleteQueriesARB) },
+    { "glDeleteQueryResourceTagNV", "GL_NV_query_resource_tag", offsetof(struct opengl_funcs, p_glDeleteQueryResourceTagNV) },
+    { "glDeleteRenderbuffers", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glDeleteRenderbuffers) },
+    { "glDeleteRenderbuffersEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glDeleteRenderbuffersEXT) },
+    { "glDeleteSamplers", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glDeleteSamplers) },
+    { "glDeleteSemaphoresEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, p_glDeleteSemaphoresEXT) },
+    { "glDeleteShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glDeleteShader) },
+    { "glDeleteStatesNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glDeleteStatesNV) },
+    { "glDeleteSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glDeleteSync) },
+    { "glDeleteTexturesEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, p_glDeleteTexturesEXT) },
+    { "glDeleteTransformFeedbacks", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glDeleteTransformFeedbacks) },
+    { "glDeleteTransformFeedbacksNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, p_glDeleteTransformFeedbacksNV) },
+    { "glDeleteVertexArrays", "GL_ARB_vertex_array_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glDeleteVertexArrays) },
+    { "glDeleteVertexArraysAPPLE", "GL_APPLE_vertex_array_object", offsetof(struct opengl_funcs, p_glDeleteVertexArraysAPPLE) },
+    { "glDeleteVertexShaderEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glDeleteVertexShaderEXT) },
+    { "glDepthBoundsEXT", "GL_EXT_depth_bounds_test", offsetof(struct opengl_funcs, p_glDepthBoundsEXT) },
+    { "glDepthBoundsdNV", "GL_NV_depth_buffer_float", offsetof(struct opengl_funcs, p_glDepthBoundsdNV) },
+    { "glDepthRangeArraydvNV", "GL_ARB_viewport_array", offsetof(struct opengl_funcs, p_glDepthRangeArraydvNV) },
+    { "glDepthRangeArrayv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glDepthRangeArrayv) },
+    { "glDepthRangeIndexed", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glDepthRangeIndexed) },
+    { "glDepthRangeIndexeddNV", "GL_ARB_viewport_array", offsetof(struct opengl_funcs, p_glDepthRangeIndexeddNV) },
+    { "glDepthRangedNV", "GL_NV_depth_buffer_float", offsetof(struct opengl_funcs, p_glDepthRangedNV) },
+    { "glDepthRangef", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glDepthRangef) },
+    { "glDepthRangefOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, p_glDepthRangefOES) },
+    { "glDepthRangexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glDepthRangexOES) },
+    { "glDetachObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glDetachObjectARB) },
+    { "glDetachShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glDetachShader) },
+    { "glDetailTexFuncSGIS", "GL_SGIS_detail_texture", offsetof(struct opengl_funcs, p_glDetailTexFuncSGIS) },
+    { "glDisableClientStateIndexedEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glDisableClientStateIndexedEXT) },
+    { "glDisableClientStateiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glDisableClientStateiEXT) },
+    { "glDisableIndexedEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, p_glDisableIndexedEXT) },
+    { "glDisableVariantClientStateEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glDisableVariantClientStateEXT) },
+    { "glDisableVertexArrayAttrib", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glDisableVertexArrayAttrib) },
+    { "glDisableVertexArrayAttribEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glDisableVertexArrayAttribEXT) },
+    { "glDisableVertexArrayEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glDisableVertexArrayEXT) },
+    { "glDisableVertexAttribAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, p_glDisableVertexAttribAPPLE) },
+    { "glDisableVertexAttribArray", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glDisableVertexAttribArray) },
+    { "glDisableVertexAttribArrayARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glDisableVertexAttribArrayARB) },
+    { "glDisablei", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glDisablei) },
+    { "glDispatchCompute", "GL_ARB_compute_shader GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glDispatchCompute) },
+    { "glDispatchComputeGroupSizeARB", "GL_ARB_compute_variable_group_size", offsetof(struct opengl_funcs, p_glDispatchComputeGroupSizeARB) },
+    { "glDispatchComputeIndirect", "GL_ARB_compute_shader GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glDispatchComputeIndirect) },
+    { "glDrawArraysEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, p_glDrawArraysEXT) },
+    { "glDrawArraysIndirect", "GL_ARB_draw_indirect GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glDrawArraysIndirect) },
+    { "glDrawArraysInstanced", "GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glDrawArraysInstanced) },
+    { "glDrawArraysInstancedARB", "GL_ARB_draw_instanced", offsetof(struct opengl_funcs, p_glDrawArraysInstancedARB) },
+    { "glDrawArraysInstancedBaseInstance", "GL_ARB_base_instance GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glDrawArraysInstancedBaseInstance) },
+    { "glDrawArraysInstancedEXT", "GL_EXT_draw_instanced", offsetof(struct opengl_funcs, p_glDrawArraysInstancedEXT) },
+    { "glDrawBufferRegion", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, p_glDrawBufferRegion) },
+    { "glDrawBuffers", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glDrawBuffers) },
+    { "glDrawBuffersARB", "GL_ARB_draw_buffers", offsetof(struct opengl_funcs, p_glDrawBuffersARB) },
+    { "glDrawBuffersATI", "GL_ATI_draw_buffers", offsetof(struct opengl_funcs, p_glDrawBuffersATI) },
+    { "glDrawCommandsAddressNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glDrawCommandsAddressNV) },
+    { "glDrawCommandsNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glDrawCommandsNV) },
+    { "glDrawCommandsStatesAddressNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glDrawCommandsStatesAddressNV) },
+    { "glDrawCommandsStatesNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glDrawCommandsStatesNV) },
+    { "glDrawElementArrayAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, p_glDrawElementArrayAPPLE) },
+    { "glDrawElementArrayATI", "GL_ATI_element_array", offsetof(struct opengl_funcs, p_glDrawElementArrayATI) },
+    { "glDrawElementsBaseVertex", "GL_ARB_draw_elements_base_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glDrawElementsBaseVertex) },
+    { "glDrawElementsIndirect", "GL_ARB_draw_indirect GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glDrawElementsIndirect) },
+    { "glDrawElementsInstanced", "GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glDrawElementsInstanced) },
+    { "glDrawElementsInstancedARB", "GL_ARB_draw_instanced", offsetof(struct opengl_funcs, p_glDrawElementsInstancedARB) },
+    { "glDrawElementsInstancedBaseInstance", "GL_ARB_base_instance GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glDrawElementsInstancedBaseInstance) },
+    { "glDrawElementsInstancedBaseVertex", "GL_ARB_draw_elements_base_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glDrawElementsInstancedBaseVertex) },
+    { "glDrawElementsInstancedBaseVertexBaseInstance", "GL_ARB_base_instance GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glDrawElementsInstancedBaseVertexBaseInstance) },
+    { "glDrawElementsInstancedEXT", "GL_EXT_draw_instanced", offsetof(struct opengl_funcs, p_glDrawElementsInstancedEXT) },
+    { "glDrawMeshArraysSUN", "GL_SUN_mesh_array", offsetof(struct opengl_funcs, p_glDrawMeshArraysSUN) },
+    { "glDrawMeshTasksIndirectNV", "GL_NV_mesh_shader", offsetof(struct opengl_funcs, p_glDrawMeshTasksIndirectNV) },
+    { "glDrawMeshTasksNV", "GL_NV_mesh_shader", offsetof(struct opengl_funcs, p_glDrawMeshTasksNV) },
+    { "glDrawRangeElementArrayAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, p_glDrawRangeElementArrayAPPLE) },
+    { "glDrawRangeElementArrayATI", "GL_ATI_element_array", offsetof(struct opengl_funcs, p_glDrawRangeElementArrayATI) },
+    { "glDrawRangeElements", "GL_VERSION_1_2", offsetof(struct opengl_funcs, p_glDrawRangeElements) },
+    { "glDrawRangeElementsBaseVertex", "GL_ARB_draw_elements_base_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glDrawRangeElementsBaseVertex) },
+    { "glDrawRangeElementsEXT", "GL_EXT_draw_range_elements", offsetof(struct opengl_funcs, p_glDrawRangeElementsEXT) },
+    { "glDrawTextureNV", "GL_NV_draw_texture", offsetof(struct opengl_funcs, p_glDrawTextureNV) },
+    { "glDrawTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glDrawTransformFeedback) },
+    { "glDrawTransformFeedbackInstanced", "GL_ARB_transform_feedback_instanced GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glDrawTransformFeedbackInstanced) },
+    { "glDrawTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, p_glDrawTransformFeedbackNV) },
+    { "glDrawTransformFeedbackStream", "GL_ARB_transform_feedback3 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glDrawTransformFeedbackStream) },
+    { "glDrawTransformFeedbackStreamInstanced", "GL_ARB_transform_feedback_instanced GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glDrawTransformFeedbackStreamInstanced) },
+    { "glDrawVkImageNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, p_glDrawVkImageNV) },
+    { "glEGLImageTargetTexStorageEXT", "GL_EXT_EGL_image_storage", offsetof(struct opengl_funcs, p_glEGLImageTargetTexStorageEXT) },
+    { "glEGLImageTargetTextureStorageEXT", "GL_EXT_EGL_image_storage", offsetof(struct opengl_funcs, p_glEGLImageTargetTextureStorageEXT) },
+    { "glEdgeFlagFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glEdgeFlagFormatNV) },
+    { "glEdgeFlagPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, p_glEdgeFlagPointerEXT) },
+    { "glEdgeFlagPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, p_glEdgeFlagPointerListIBM) },
+    { "glElementPointerAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, p_glElementPointerAPPLE) },
+    { "glElementPointerATI", "GL_ATI_element_array", offsetof(struct opengl_funcs, p_glElementPointerATI) },
+    { "glEnableClientStateIndexedEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glEnableClientStateIndexedEXT) },
+    { "glEnableClientStateiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glEnableClientStateiEXT) },
+    { "glEnableIndexedEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, p_glEnableIndexedEXT) },
+    { "glEnableVariantClientStateEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glEnableVariantClientStateEXT) },
+    { "glEnableVertexArrayAttrib", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glEnableVertexArrayAttrib) },
+    { "glEnableVertexArrayAttribEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glEnableVertexArrayAttribEXT) },
+    { "glEnableVertexArrayEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glEnableVertexArrayEXT) },
+    { "glEnableVertexAttribAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, p_glEnableVertexAttribAPPLE) },
+    { "glEnableVertexAttribArray", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glEnableVertexAttribArray) },
+    { "glEnableVertexAttribArrayARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glEnableVertexAttribArrayARB) },
+    { "glEnablei", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glEnablei) },
+    { "glEndConditionalRender", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glEndConditionalRender) },
+    { "glEndConditionalRenderNV", "GL_NV_conditional_render", offsetof(struct opengl_funcs, p_glEndConditionalRenderNV) },
+    { "glEndConditionalRenderNVX", "GL_NVX_conditional_render", offsetof(struct opengl_funcs, p_glEndConditionalRenderNVX) },
+    { "glEndFragmentShaderATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glEndFragmentShaderATI) },
+    { "glEndOcclusionQueryNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, p_glEndOcclusionQueryNV) },
+    { "glEndPerfMonitorAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glEndPerfMonitorAMD) },
+    { "glEndPerfQueryINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glEndPerfQueryINTEL) },
+    { "glEndQuery", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glEndQuery) },
+    { "glEndQueryARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, p_glEndQueryARB) },
+    { "glEndQueryIndexed", "GL_ARB_transform_feedback3 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glEndQueryIndexed) },
+    { "glEndTransformFeedback", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glEndTransformFeedback) },
+    { "glEndTransformFeedbackEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, p_glEndTransformFeedbackEXT) },
+    { "glEndTransformFeedbackNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glEndTransformFeedbackNV) },
+    { "glEndVertexShaderEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glEndVertexShaderEXT) },
+    { "glEndVideoCaptureNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glEndVideoCaptureNV) },
+    { "glEvalCoord1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glEvalCoord1xOES) },
+    { "glEvalCoord1xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glEvalCoord1xvOES) },
+    { "glEvalCoord2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glEvalCoord2xOES) },
+    { "glEvalCoord2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glEvalCoord2xvOES) },
+    { "glEvalMapsNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, p_glEvalMapsNV) },
+    { "glEvaluateDepthValuesARB", "GL_ARB_sample_locations", offsetof(struct opengl_funcs, p_glEvaluateDepthValuesARB) },
+    { "glExecuteProgramNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glExecuteProgramNV) },
+    { "glExtractComponentEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glExtractComponentEXT) },
+    { "glFeedbackBufferxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glFeedbackBufferxOES) },
+    { "glFenceSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glFenceSync) },
+    { "glFinalCombinerInputNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glFinalCombinerInputNV) },
+    { "glFinishAsyncSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, p_glFinishAsyncSGIX) },
+    { "glFinishFenceAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, p_glFinishFenceAPPLE) },
+    { "glFinishFenceNV", "GL_NV_fence", offsetof(struct opengl_funcs, p_glFinishFenceNV) },
+    { "glFinishObjectAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, p_glFinishObjectAPPLE) },
+    { "glFinishTextureSUNX", "GL_SUNX_constant_data", offsetof(struct opengl_funcs, p_glFinishTextureSUNX) },
+    { "glFlushMappedBufferRange", "GL_ARB_map_buffer_range GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glFlushMappedBufferRange) },
+    { "glFlushMappedBufferRangeAPPLE", "GL_APPLE_flush_buffer_range", offsetof(struct opengl_funcs, p_glFlushMappedBufferRangeAPPLE) },
+    { "glFlushMappedNamedBufferRange", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glFlushMappedNamedBufferRange) },
+    { "glFlushMappedNamedBufferRangeEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glFlushMappedNamedBufferRangeEXT) },
+    { "glFlushPixelDataRangeNV", "GL_NV_pixel_data_range", offsetof(struct opengl_funcs, p_glFlushPixelDataRangeNV) },
+    { "glFlushRasterSGIX", "GL_SGIX_flush_raster", offsetof(struct opengl_funcs, p_glFlushRasterSGIX) },
+    { "glFlushStaticDataIBM", "GL_IBM_static_data", offsetof(struct opengl_funcs, p_glFlushStaticDataIBM) },
+    { "glFlushVertexArrayRangeAPPLE", "GL_APPLE_vertex_array_range", offsetof(struct opengl_funcs, p_glFlushVertexArrayRangeAPPLE) },
+    { "glFlushVertexArrayRangeNV", "GL_NV_vertex_array_range", offsetof(struct opengl_funcs, p_glFlushVertexArrayRangeNV) },
+    { "glFogCoordFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glFogCoordFormatNV) },
+    { "glFogCoordPointer", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glFogCoordPointer) },
+    { "glFogCoordPointerEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, p_glFogCoordPointerEXT) },
+    { "glFogCoordPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, p_glFogCoordPointerListIBM) },
+    { "glFogCoordd", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glFogCoordd) },
+    { "glFogCoorddEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, p_glFogCoorddEXT) },
+    { "glFogCoorddv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glFogCoorddv) },
+    { "glFogCoorddvEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, p_glFogCoorddvEXT) },
+    { "glFogCoordf", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glFogCoordf) },
+    { "glFogCoordfEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, p_glFogCoordfEXT) },
+    { "glFogCoordfv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glFogCoordfv) },
+    { "glFogCoordfvEXT", "GL_EXT_fog_coord", offsetof(struct opengl_funcs, p_glFogCoordfvEXT) },
+    { "glFogCoordhNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glFogCoordhNV) },
+    { "glFogCoordhvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glFogCoordhvNV) },
+    { "glFogFuncSGIS", "GL_SGIS_fog_function", offsetof(struct opengl_funcs, p_glFogFuncSGIS) },
+    { "glFogxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glFogxOES) },
+    { "glFogxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glFogxvOES) },
+    { "glFragmentColorMaterialSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentColorMaterialSGIX) },
+    { "glFragmentCoverageColorNV", "GL_NV_fragment_coverage_to_color", offsetof(struct opengl_funcs, p_glFragmentCoverageColorNV) },
+    { "glFragmentLightModelfSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentLightModelfSGIX) },
+    { "glFragmentLightModelfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentLightModelfvSGIX) },
+    { "glFragmentLightModeliSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentLightModeliSGIX) },
+    { "glFragmentLightModelivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentLightModelivSGIX) },
+    { "glFragmentLightfSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentLightfSGIX) },
+    { "glFragmentLightfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentLightfvSGIX) },
+    { "glFragmentLightiSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentLightiSGIX) },
+    { "glFragmentLightivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentLightivSGIX) },
+    { "glFragmentMaterialfSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentMaterialfSGIX) },
+    { "glFragmentMaterialfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentMaterialfvSGIX) },
+    { "glFragmentMaterialiSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentMaterialiSGIX) },
+    { "glFragmentMaterialivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glFragmentMaterialivSGIX) },
+    { "glFrameTerminatorGREMEDY", "GL_GREMEDY_frame_terminator", offsetof(struct opengl_funcs, p_glFrameTerminatorGREMEDY) },
+    { "glFrameZoomSGIX", "GL_SGIX_framezoom", offsetof(struct opengl_funcs, p_glFrameZoomSGIX) },
+    { "glFramebufferDrawBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glFramebufferDrawBufferEXT) },
+    { "glFramebufferDrawBuffersEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glFramebufferDrawBuffersEXT) },
+    { "glFramebufferFetchBarrierEXT", "GL_EXT_shader_framebuffer_fetch_non_coherent", offsetof(struct opengl_funcs, p_glFramebufferFetchBarrierEXT) },
+    { "glFramebufferParameteri", "GL_ARB_framebuffer_no_attachments GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glFramebufferParameteri) },
+    { "glFramebufferParameteriMESA", "GL_MESA_framebuffer_flip_y", offsetof(struct opengl_funcs, p_glFramebufferParameteriMESA) },
+    { "glFramebufferReadBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glFramebufferReadBufferEXT) },
+    { "glFramebufferRenderbuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glFramebufferRenderbuffer) },
+    { "glFramebufferRenderbufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glFramebufferRenderbufferEXT) },
+    { "glFramebufferSampleLocationsfvARB", "GL_ARB_sample_locations", offsetof(struct opengl_funcs, p_glFramebufferSampleLocationsfvARB) },
+    { "glFramebufferSampleLocationsfvNV", "GL_NV_sample_locations", offsetof(struct opengl_funcs, p_glFramebufferSampleLocationsfvNV) },
+    { "glFramebufferSamplePositionsfvAMD", "GL_AMD_framebuffer_sample_positions", offsetof(struct opengl_funcs, p_glFramebufferSamplePositionsfvAMD) },
+    { "glFramebufferTexture", "GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glFramebufferTexture) },
+    { "glFramebufferTexture1D", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glFramebufferTexture1D) },
+    { "glFramebufferTexture1DEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glFramebufferTexture1DEXT) },
+    { "glFramebufferTexture2D", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glFramebufferTexture2D) },
+    { "glFramebufferTexture2DEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glFramebufferTexture2DEXT) },
+    { "glFramebufferTexture3D", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glFramebufferTexture3D) },
+    { "glFramebufferTexture3DEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glFramebufferTexture3DEXT) },
+    { "glFramebufferTextureARB", "GL_ARB_geometry_shader4", offsetof(struct opengl_funcs, p_glFramebufferTextureARB) },
+    { "glFramebufferTextureEXT", "GL_NV_geometry_program4", offsetof(struct opengl_funcs, p_glFramebufferTextureEXT) },
+    { "glFramebufferTextureFaceARB", "GL_ARB_geometry_shader4", offsetof(struct opengl_funcs, p_glFramebufferTextureFaceARB) },
+    { "glFramebufferTextureFaceEXT", "GL_NV_geometry_program4", offsetof(struct opengl_funcs, p_glFramebufferTextureFaceEXT) },
+    { "glFramebufferTextureLayer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glFramebufferTextureLayer) },
+    { "glFramebufferTextureLayerARB", "GL_ARB_geometry_shader4", offsetof(struct opengl_funcs, p_glFramebufferTextureLayerARB) },
+    { "glFramebufferTextureLayerEXT", "GL_EXT_texture_array GL_NV_geometry_program4", offsetof(struct opengl_funcs, p_glFramebufferTextureLayerEXT) },
+    { "glFramebufferTextureMultiviewOVR", "GL_OVR_multiview", offsetof(struct opengl_funcs, p_glFramebufferTextureMultiviewOVR) },
+    { "glFreeObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glFreeObjectBufferATI) },
+    { "glFrustumfOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, p_glFrustumfOES) },
+    { "glFrustumxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glFrustumxOES) },
+    { "glGenAsyncMarkersSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, p_glGenAsyncMarkersSGIX) },
+    { "glGenBuffers", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glGenBuffers) },
+    { "glGenBuffersARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glGenBuffersARB) },
+    { "glGenFencesAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, p_glGenFencesAPPLE) },
+    { "glGenFencesNV", "GL_NV_fence", offsetof(struct opengl_funcs, p_glGenFencesNV) },
+    { "glGenFragmentShadersATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glGenFragmentShadersATI) },
+    { "glGenFramebuffers", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGenFramebuffers) },
+    { "glGenFramebuffersEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glGenFramebuffersEXT) },
+    { "glGenNamesAMD", "GL_AMD_name_gen_delete", offsetof(struct opengl_funcs, p_glGenNamesAMD) },
+    { "glGenOcclusionQueriesNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, p_glGenOcclusionQueriesNV) },
+    { "glGenPathsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGenPathsNV) },
+    { "glGenPerfMonitorsAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glGenPerfMonitorsAMD) },
+    { "glGenProgramPipelines", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glGenProgramPipelines) },
+    { "glGenProgramsARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glGenProgramsARB) },
+    { "glGenProgramsNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGenProgramsNV) },
+    { "glGenQueries", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glGenQueries) },
+    { "glGenQueriesARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, p_glGenQueriesARB) },
+    { "glGenQueryResourceTagNV", "GL_NV_query_resource_tag", offsetof(struct opengl_funcs, p_glGenQueryResourceTagNV) },
+    { "glGenRenderbuffers", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGenRenderbuffers) },
+    { "glGenRenderbuffersEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glGenRenderbuffersEXT) },
+    { "glGenSamplers", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glGenSamplers) },
+    { "glGenSemaphoresEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, p_glGenSemaphoresEXT) },
+    { "glGenSymbolsEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGenSymbolsEXT) },
+    { "glGenTexturesEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, p_glGenTexturesEXT) },
+    { "glGenTransformFeedbacks", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGenTransformFeedbacks) },
+    { "glGenTransformFeedbacksNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, p_glGenTransformFeedbacksNV) },
+    { "glGenVertexArrays", "GL_ARB_vertex_array_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGenVertexArrays) },
+    { "glGenVertexArraysAPPLE", "GL_APPLE_vertex_array_object", offsetof(struct opengl_funcs, p_glGenVertexArraysAPPLE) },
+    { "glGenVertexShadersEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGenVertexShadersEXT) },
+    { "glGenerateMipmap", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGenerateMipmap) },
+    { "glGenerateMipmapEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glGenerateMipmapEXT) },
+    { "glGenerateMultiTexMipmapEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGenerateMultiTexMipmapEXT) },
+    { "glGenerateTextureMipmap", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGenerateTextureMipmap) },
+    { "glGenerateTextureMipmapEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGenerateTextureMipmapEXT) },
+    { "glGetActiveAtomicCounterBufferiv", "GL_ARB_shader_atomic_counters GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glGetActiveAtomicCounterBufferiv) },
+    { "glGetActiveAttrib", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetActiveAttrib) },
+    { "glGetActiveAttribARB", "GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glGetActiveAttribARB) },
+    { "glGetActiveSubroutineName", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGetActiveSubroutineName) },
+    { "glGetActiveSubroutineUniformName", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGetActiveSubroutineUniformName) },
+    { "glGetActiveSubroutineUniformiv", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGetActiveSubroutineUniformiv) },
+    { "glGetActiveUniform", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetActiveUniform) },
+    { "glGetActiveUniformARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetActiveUniformARB) },
+    { "glGetActiveUniformBlockName", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glGetActiveUniformBlockName) },
+    { "glGetActiveUniformBlockiv", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glGetActiveUniformBlockiv) },
+    { "glGetActiveUniformName", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glGetActiveUniformName) },
+    { "glGetActiveUniformsiv", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glGetActiveUniformsiv) },
+    { "glGetActiveVaryingNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glGetActiveVaryingNV) },
+    { "glGetArrayObjectfvATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glGetArrayObjectfvATI) },
+    { "glGetArrayObjectivATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glGetArrayObjectivATI) },
+    { "glGetAttachedObjectsARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetAttachedObjectsARB) },
+    { "glGetAttachedShaders", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetAttachedShaders) },
+    { "glGetAttribLocation", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetAttribLocation) },
+    { "glGetAttribLocationARB", "GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glGetAttribLocationARB) },
+    { "glGetBooleanIndexedvEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, p_glGetBooleanIndexedvEXT) },
+    { "glGetBooleani_v", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetBooleani_v) },
+    { "glGetBufferParameteri64v", "GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glGetBufferParameteri64v) },
+    { "glGetBufferParameteriv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glGetBufferParameteriv) },
+    { "glGetBufferParameterivARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glGetBufferParameterivARB) },
+    { "glGetBufferParameterui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glGetBufferParameterui64vNV) },
+    { "glGetBufferPointerv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glGetBufferPointerv) },
+    { "glGetBufferPointervARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glGetBufferPointervARB) },
+    { "glGetBufferSubData", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glGetBufferSubData) },
+    { "glGetBufferSubDataARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glGetBufferSubDataARB) },
+    { "glGetClipPlanefOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, p_glGetClipPlanefOES) },
+    { "glGetClipPlanexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetClipPlanexOES) },
+    { "glGetColorTable", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetColorTable) },
+    { "glGetColorTableEXT", "GL_EXT_paletted_texture", offsetof(struct opengl_funcs, p_glGetColorTableEXT) },
+    { "glGetColorTableParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetColorTableParameterfv) },
+    { "glGetColorTableParameterfvEXT", "GL_EXT_paletted_texture", offsetof(struct opengl_funcs, p_glGetColorTableParameterfvEXT) },
+    { "glGetColorTableParameterfvSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, p_glGetColorTableParameterfvSGI) },
+    { "glGetColorTableParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetColorTableParameteriv) },
+    { "glGetColorTableParameterivEXT", "GL_EXT_paletted_texture", offsetof(struct opengl_funcs, p_glGetColorTableParameterivEXT) },
+    { "glGetColorTableParameterivSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, p_glGetColorTableParameterivSGI) },
+    { "glGetColorTableSGI", "GL_SGI_color_table", offsetof(struct opengl_funcs, p_glGetColorTableSGI) },
+    { "glGetCombinerInputParameterfvNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glGetCombinerInputParameterfvNV) },
+    { "glGetCombinerInputParameterivNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glGetCombinerInputParameterivNV) },
+    { "glGetCombinerOutputParameterfvNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glGetCombinerOutputParameterfvNV) },
+    { "glGetCombinerOutputParameterivNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glGetCombinerOutputParameterivNV) },
+    { "glGetCombinerStageParameterfvNV", "GL_NV_register_combiners2", offsetof(struct opengl_funcs, p_glGetCombinerStageParameterfvNV) },
+    { "glGetCommandHeaderNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glGetCommandHeaderNV) },
+    { "glGetCompressedMultiTexImageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetCompressedMultiTexImageEXT) },
+    { "glGetCompressedTexImage", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glGetCompressedTexImage) },
+    { "glGetCompressedTexImageARB", "GL_ARB_texture_compression", offsetof(struct opengl_funcs, p_glGetCompressedTexImageARB) },
+    { "glGetCompressedTextureImage", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetCompressedTextureImage) },
+    { "glGetCompressedTextureImageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetCompressedTextureImageEXT) },
+    { "glGetCompressedTextureSubImage", "GL_ARB_get_texture_sub_image GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetCompressedTextureSubImage) },
+    { "glGetConvolutionFilter", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetConvolutionFilter) },
+    { "glGetConvolutionFilterEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glGetConvolutionFilterEXT) },
+    { "glGetConvolutionParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetConvolutionParameterfv) },
+    { "glGetConvolutionParameterfvEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glGetConvolutionParameterfvEXT) },
+    { "glGetConvolutionParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetConvolutionParameteriv) },
+    { "glGetConvolutionParameterivEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glGetConvolutionParameterivEXT) },
+    { "glGetConvolutionParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetConvolutionParameterxvOES) },
+    { "glGetCoverageModulationTableNV", "GL_NV_framebuffer_mixed_samples", offsetof(struct opengl_funcs, p_glGetCoverageModulationTableNV) },
+    { "glGetDebugMessageLog", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetDebugMessageLog) },
+    { "glGetDebugMessageLogAMD", "GL_AMD_debug_output", offsetof(struct opengl_funcs, p_glGetDebugMessageLogAMD) },
+    { "glGetDebugMessageLogARB", "GL_ARB_debug_output", offsetof(struct opengl_funcs, p_glGetDebugMessageLogARB) },
+    { "glGetDetailTexFuncSGIS", "GL_SGIS_detail_texture", offsetof(struct opengl_funcs, p_glGetDetailTexFuncSGIS) },
+    { "glGetDoubleIndexedvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetDoubleIndexedvEXT) },
+    { "glGetDoublei_v", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glGetDoublei_v) },
+    { "glGetDoublei_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetDoublei_vEXT) },
+    { "glGetFenceivNV", "GL_NV_fence", offsetof(struct opengl_funcs, p_glGetFenceivNV) },
+    { "glGetFinalCombinerInputParameterfvNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glGetFinalCombinerInputParameterfvNV) },
+    { "glGetFinalCombinerInputParameterivNV", "GL_NV_register_combiners", offsetof(struct opengl_funcs, p_glGetFinalCombinerInputParameterivNV) },
+    { "glGetFirstPerfQueryIdINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glGetFirstPerfQueryIdINTEL) },
+    { "glGetFixedvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetFixedvOES) },
+    { "glGetFloatIndexedvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetFloatIndexedvEXT) },
+    { "glGetFloati_v", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glGetFloati_v) },
+    { "glGetFloati_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetFloati_vEXT) },
+    { "glGetFogFuncSGIS", "GL_SGIS_fog_function", offsetof(struct opengl_funcs, p_glGetFogFuncSGIS) },
+    { "glGetFragDataIndex", "GL_ARB_blend_func_extended GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glGetFragDataIndex) },
+    { "glGetFragDataLocation", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetFragDataLocation) },
+    { "glGetFragDataLocationEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glGetFragDataLocationEXT) },
+    { "glGetFragmentLightfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glGetFragmentLightfvSGIX) },
+    { "glGetFragmentLightivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glGetFragmentLightivSGIX) },
+    { "glGetFragmentMaterialfvSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glGetFragmentMaterialfvSGIX) },
+    { "glGetFragmentMaterialivSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glGetFragmentMaterialivSGIX) },
+    { "glGetFramebufferAttachmentParameteriv", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetFramebufferAttachmentParameteriv) },
+    { "glGetFramebufferAttachmentParameterivEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glGetFramebufferAttachmentParameterivEXT) },
+    { "glGetFramebufferParameterfvAMD", "GL_AMD_framebuffer_sample_positions", offsetof(struct opengl_funcs, p_glGetFramebufferParameterfvAMD) },
+    { "glGetFramebufferParameteriv", "GL_ARB_framebuffer_no_attachments GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetFramebufferParameteriv) },
+    { "glGetFramebufferParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetFramebufferParameterivEXT) },
+    { "glGetFramebufferParameterivMESA", "GL_MESA_framebuffer_flip_y", offsetof(struct opengl_funcs, p_glGetFramebufferParameterivMESA) },
+    { "glGetGraphicsResetStatus", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetGraphicsResetStatus) },
+    { "glGetGraphicsResetStatusARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetGraphicsResetStatusARB) },
+    { "glGetHandleARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetHandleARB) },
+    { "glGetHistogram", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetHistogram) },
+    { "glGetHistogramEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glGetHistogramEXT) },
+    { "glGetHistogramParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetHistogramParameterfv) },
+    { "glGetHistogramParameterfvEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glGetHistogramParameterfvEXT) },
+    { "glGetHistogramParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetHistogramParameteriv) },
+    { "glGetHistogramParameterivEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glGetHistogramParameterivEXT) },
+    { "glGetHistogramParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetHistogramParameterxvOES) },
+    { "glGetImageHandleARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glGetImageHandleARB) },
+    { "glGetImageHandleNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glGetImageHandleNV) },
+    { "glGetImageTransformParameterfvHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, p_glGetImageTransformParameterfvHP) },
+    { "glGetImageTransformParameterivHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, p_glGetImageTransformParameterivHP) },
+    { "glGetInfoLogARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetInfoLogARB) },
+    { "glGetInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, p_glGetInstrumentsSGIX) },
+    { "glGetInteger64i_v", "GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glGetInteger64i_v) },
+    { "glGetInteger64v", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glGetInteger64v) },
+    { "glGetIntegerIndexedvEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, p_glGetIntegerIndexedvEXT) },
+    { "glGetIntegeri_v", "GL_ARB_uniform_buffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetIntegeri_v) },
+    { "glGetIntegerui64i_vNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glGetIntegerui64i_vNV) },
+    { "glGetIntegerui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glGetIntegerui64vNV) },
+    { "glGetInternalformatSampleivNV", "GL_NV_internalformat_sample_query", offsetof(struct opengl_funcs, p_glGetInternalformatSampleivNV) },
+    { "glGetInternalformati64v", "GL_ARB_internalformat_query2 GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetInternalformati64v) },
+    { "glGetInternalformativ", "GL_ARB_internalformat_query GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glGetInternalformativ) },
+    { "glGetInvariantBooleanvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetInvariantBooleanvEXT) },
+    { "glGetInvariantFloatvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetInvariantFloatvEXT) },
+    { "glGetInvariantIntegervEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetInvariantIntegervEXT) },
+    { "glGetLightxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetLightxOES) },
+    { "glGetListParameterfvSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, p_glGetListParameterfvSGIX) },
+    { "glGetListParameterivSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, p_glGetListParameterivSGIX) },
+    { "glGetLocalConstantBooleanvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetLocalConstantBooleanvEXT) },
+    { "glGetLocalConstantFloatvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetLocalConstantFloatvEXT) },
+    { "glGetLocalConstantIntegervEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetLocalConstantIntegervEXT) },
+    { "glGetMapAttribParameterfvNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, p_glGetMapAttribParameterfvNV) },
+    { "glGetMapAttribParameterivNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, p_glGetMapAttribParameterivNV) },
+    { "glGetMapControlPointsNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, p_glGetMapControlPointsNV) },
+    { "glGetMapParameterfvNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, p_glGetMapParameterfvNV) },
+    { "glGetMapParameterivNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, p_glGetMapParameterivNV) },
+    { "glGetMapxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetMapxvOES) },
+    { "glGetMaterialxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetMaterialxOES) },
+    { "glGetMemoryObjectDetachedResourcesuivNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, p_glGetMemoryObjectDetachedResourcesuivNV) },
+    { "glGetMemoryObjectParameterivEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glGetMemoryObjectParameterivEXT) },
+    { "glGetMinmax", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetMinmax) },
+    { "glGetMinmaxEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glGetMinmaxEXT) },
+    { "glGetMinmaxParameterfv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetMinmaxParameterfv) },
+    { "glGetMinmaxParameterfvEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glGetMinmaxParameterfvEXT) },
+    { "glGetMinmaxParameteriv", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetMinmaxParameteriv) },
+    { "glGetMinmaxParameterivEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glGetMinmaxParameterivEXT) },
+    { "glGetMultiTexEnvfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexEnvfvEXT) },
+    { "glGetMultiTexEnvivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexEnvivEXT) },
+    { "glGetMultiTexGendvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexGendvEXT) },
+    { "glGetMultiTexGenfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexGenfvEXT) },
+    { "glGetMultiTexGenivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexGenivEXT) },
+    { "glGetMultiTexImageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexImageEXT) },
+    { "glGetMultiTexLevelParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexLevelParameterfvEXT) },
+    { "glGetMultiTexLevelParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexLevelParameterivEXT) },
+    { "glGetMultiTexParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexParameterIivEXT) },
+    { "glGetMultiTexParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexParameterIuivEXT) },
+    { "glGetMultiTexParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexParameterfvEXT) },
+    { "glGetMultiTexParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetMultiTexParameterivEXT) },
+    { "glGetMultisamplefv", "GL_ARB_texture_multisample GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glGetMultisamplefv) },
+    { "glGetMultisamplefvNV", "GL_NV_explicit_multisample", offsetof(struct opengl_funcs, p_glGetMultisamplefvNV) },
+    { "glGetNamedBufferParameteri64v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetNamedBufferParameteri64v) },
+    { "glGetNamedBufferParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetNamedBufferParameteriv) },
+    { "glGetNamedBufferParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedBufferParameterivEXT) },
+    { "glGetNamedBufferParameterui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glGetNamedBufferParameterui64vNV) },
+    { "glGetNamedBufferPointerv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetNamedBufferPointerv) },
+    { "glGetNamedBufferPointervEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedBufferPointervEXT) },
+    { "glGetNamedBufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetNamedBufferSubData) },
+    { "glGetNamedBufferSubDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedBufferSubDataEXT) },
+    { "glGetNamedFramebufferAttachmentParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetNamedFramebufferAttachmentParameteriv) },
+    { "glGetNamedFramebufferAttachmentParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedFramebufferAttachmentParameterivEXT) },
+    { "glGetNamedFramebufferParameterfvAMD", "GL_AMD_framebuffer_sample_positions", offsetof(struct opengl_funcs, p_glGetNamedFramebufferParameterfvAMD) },
+    { "glGetNamedFramebufferParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetNamedFramebufferParameteriv) },
+    { "glGetNamedFramebufferParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedFramebufferParameterivEXT) },
+    { "glGetNamedProgramLocalParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedProgramLocalParameterIivEXT) },
+    { "glGetNamedProgramLocalParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedProgramLocalParameterIuivEXT) },
+    { "glGetNamedProgramLocalParameterdvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedProgramLocalParameterdvEXT) },
+    { "glGetNamedProgramLocalParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedProgramLocalParameterfvEXT) },
+    { "glGetNamedProgramStringEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedProgramStringEXT) },
+    { "glGetNamedProgramivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedProgramivEXT) },
+    { "glGetNamedRenderbufferParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetNamedRenderbufferParameteriv) },
+    { "glGetNamedRenderbufferParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetNamedRenderbufferParameterivEXT) },
+    { "glGetNamedStringARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, p_glGetNamedStringARB) },
+    { "glGetNamedStringivARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, p_glGetNamedStringivARB) },
+    { "glGetNextPerfQueryIdINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glGetNextPerfQueryIdINTEL) },
+    { "glGetObjectBufferfvATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glGetObjectBufferfvATI) },
+    { "glGetObjectBufferivATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glGetObjectBufferivATI) },
+    { "glGetObjectLabel", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetObjectLabel) },
+    { "glGetObjectLabelEXT", "GL_EXT_debug_label", offsetof(struct opengl_funcs, p_glGetObjectLabelEXT) },
+    { "glGetObjectParameterfvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetObjectParameterfvARB) },
+    { "glGetObjectParameterivAPPLE", "GL_APPLE_object_purgeable", offsetof(struct opengl_funcs, p_glGetObjectParameterivAPPLE) },
+    { "glGetObjectParameterivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetObjectParameterivARB) },
+    { "glGetObjectPtrLabel", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetObjectPtrLabel) },
+    { "glGetOcclusionQueryivNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, p_glGetOcclusionQueryivNV) },
+    { "glGetOcclusionQueryuivNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, p_glGetOcclusionQueryuivNV) },
+    { "glGetPathColorGenfvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathColorGenfvNV) },
+    { "glGetPathColorGenivNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathColorGenivNV) },
+    { "glGetPathCommandsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathCommandsNV) },
+    { "glGetPathCoordsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathCoordsNV) },
+    { "glGetPathDashArrayNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathDashArrayNV) },
+    { "glGetPathLengthNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathLengthNV) },
+    { "glGetPathMetricRangeNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathMetricRangeNV) },
+    { "glGetPathMetricsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathMetricsNV) },
+    { "glGetPathParameterfvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathParameterfvNV) },
+    { "glGetPathParameterivNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathParameterivNV) },
+    { "glGetPathSpacingNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathSpacingNV) },
+    { "glGetPathTexGenfvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathTexGenfvNV) },
+    { "glGetPathTexGenivNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetPathTexGenivNV) },
+    { "glGetPerfCounterInfoINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glGetPerfCounterInfoINTEL) },
+    { "glGetPerfMonitorCounterDataAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glGetPerfMonitorCounterDataAMD) },
+    { "glGetPerfMonitorCounterInfoAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glGetPerfMonitorCounterInfoAMD) },
+    { "glGetPerfMonitorCounterStringAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glGetPerfMonitorCounterStringAMD) },
+    { "glGetPerfMonitorCountersAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glGetPerfMonitorCountersAMD) },
+    { "glGetPerfMonitorGroupStringAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glGetPerfMonitorGroupStringAMD) },
+    { "glGetPerfMonitorGroupsAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glGetPerfMonitorGroupsAMD) },
+    { "glGetPerfQueryDataINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glGetPerfQueryDataINTEL) },
+    { "glGetPerfQueryIdByNameINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glGetPerfQueryIdByNameINTEL) },
+    { "glGetPerfQueryInfoINTEL", "GL_INTEL_performance_query", offsetof(struct opengl_funcs, p_glGetPerfQueryInfoINTEL) },
+    { "glGetPixelMapxv", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetPixelMapxv) },
+    { "glGetPixelTexGenParameterfvSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, p_glGetPixelTexGenParameterfvSGIS) },
+    { "glGetPixelTexGenParameterivSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, p_glGetPixelTexGenParameterivSGIS) },
+    { "glGetPixelTransformParameterfvEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, p_glGetPixelTransformParameterfvEXT) },
+    { "glGetPixelTransformParameterivEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, p_glGetPixelTransformParameterivEXT) },
+    { "glGetPointerIndexedvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetPointerIndexedvEXT) },
+    { "glGetPointeri_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetPointeri_vEXT) },
+    { "glGetPointervEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, p_glGetPointervEXT) },
+    { "glGetProgramBinary", "GL_ARB_get_program_binary GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glGetProgramBinary) },
+    { "glGetProgramEnvParameterIivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glGetProgramEnvParameterIivNV) },
+    { "glGetProgramEnvParameterIuivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glGetProgramEnvParameterIuivNV) },
+    { "glGetProgramEnvParameterdvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramEnvParameterdvARB) },
+    { "glGetProgramEnvParameterfvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramEnvParameterfvARB) },
+    { "glGetProgramInfoLog", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetProgramInfoLog) },
+    { "glGetProgramInterfaceiv", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetProgramInterfaceiv) },
+    { "glGetProgramLocalParameterIivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glGetProgramLocalParameterIivNV) },
+    { "glGetProgramLocalParameterIuivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glGetProgramLocalParameterIuivNV) },
+    { "glGetProgramLocalParameterdvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramLocalParameterdvARB) },
+    { "glGetProgramLocalParameterfvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramLocalParameterfvARB) },
+    { "glGetProgramNamedParameterdvNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, p_glGetProgramNamedParameterdvNV) },
+    { "glGetProgramNamedParameterfvNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, p_glGetProgramNamedParameterfvNV) },
+    { "glGetProgramParameterdvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramParameterdvNV) },
+    { "glGetProgramParameterfvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramParameterfvNV) },
+    { "glGetProgramPipelineInfoLog", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glGetProgramPipelineInfoLog) },
+    { "glGetProgramPipelineiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glGetProgramPipelineiv) },
+    { "glGetProgramResourceIndex", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetProgramResourceIndex) },
+    { "glGetProgramResourceLocation", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetProgramResourceLocation) },
+    { "glGetProgramResourceLocationIndex", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetProgramResourceLocationIndex) },
+    { "glGetProgramResourceName", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetProgramResourceName) },
+    { "glGetProgramResourcefvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glGetProgramResourcefvNV) },
+    { "glGetProgramResourceiv", "GL_ARB_program_interface_query GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glGetProgramResourceiv) },
+    { "glGetProgramStageiv", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGetProgramStageiv) },
+    { "glGetProgramStringARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramStringARB) },
+    { "glGetProgramStringNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramStringNV) },
+    { "glGetProgramSubroutineParameteruivNV", "GL_NV_gpu_program5", offsetof(struct opengl_funcs, p_glGetProgramSubroutineParameteruivNV) },
+    { "glGetProgramiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetProgramiv) },
+    { "glGetProgramivARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramivARB) },
+    { "glGetProgramivNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGetProgramivNV) },
+    { "glGetQueryBufferObjecti64v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetQueryBufferObjecti64v) },
+    { "glGetQueryBufferObjectiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetQueryBufferObjectiv) },
+    { "glGetQueryBufferObjectui64v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetQueryBufferObjectui64v) },
+    { "glGetQueryBufferObjectuiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetQueryBufferObjectuiv) },
+    { "glGetQueryIndexediv", "GL_ARB_transform_feedback3 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGetQueryIndexediv) },
+    { "glGetQueryObjecti64v", "GL_ARB_timer_query GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glGetQueryObjecti64v) },
+    { "glGetQueryObjecti64vEXT", "GL_EXT_timer_query", offsetof(struct opengl_funcs, p_glGetQueryObjecti64vEXT) },
+    { "glGetQueryObjectiv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glGetQueryObjectiv) },
+    { "glGetQueryObjectivARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, p_glGetQueryObjectivARB) },
+    { "glGetQueryObjectui64v", "GL_ARB_timer_query GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glGetQueryObjectui64v) },
+    { "glGetQueryObjectui64vEXT", "GL_EXT_timer_query", offsetof(struct opengl_funcs, p_glGetQueryObjectui64vEXT) },
+    { "glGetQueryObjectuiv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glGetQueryObjectuiv) },
+    { "glGetQueryObjectuivARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, p_glGetQueryObjectuivARB) },
+    { "glGetQueryiv", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glGetQueryiv) },
+    { "glGetQueryivARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, p_glGetQueryivARB) },
+    { "glGetRenderbufferParameteriv", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetRenderbufferParameteriv) },
+    { "glGetRenderbufferParameterivEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glGetRenderbufferParameterivEXT) },
+    { "glGetSamplerParameterIiv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glGetSamplerParameterIiv) },
+    { "glGetSamplerParameterIuiv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glGetSamplerParameterIuiv) },
+    { "glGetSamplerParameterfv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glGetSamplerParameterfv) },
+    { "glGetSamplerParameteriv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glGetSamplerParameteriv) },
+    { "glGetSemaphoreParameterui64vEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, p_glGetSemaphoreParameterui64vEXT) },
+    { "glGetSeparableFilter", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glGetSeparableFilter) },
+    { "glGetSeparableFilterEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glGetSeparableFilterEXT) },
+    { "glGetShaderInfoLog", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetShaderInfoLog) },
+    { "glGetShaderPrecisionFormat", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glGetShaderPrecisionFormat) },
+    { "glGetShaderSource", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetShaderSource) },
+    { "glGetShaderSourceARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetShaderSourceARB) },
+    { "glGetShaderiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetShaderiv) },
+    { "glGetShadingRateImagePaletteNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, p_glGetShadingRateImagePaletteNV) },
+    { "glGetShadingRateSampleLocationivNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, p_glGetShadingRateSampleLocationivNV) },
+    { "glGetSharpenTexFuncSGIS", "GL_SGIS_sharpen_texture", offsetof(struct opengl_funcs, p_glGetSharpenTexFuncSGIS) },
+    { "glGetStageIndexNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glGetStageIndexNV) },
+    { "glGetStringi", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetStringi) },
+    { "glGetSubroutineIndex", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGetSubroutineIndex) },
+    { "glGetSubroutineUniformLocation", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGetSubroutineUniformLocation) },
+    { "glGetSynciv", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glGetSynciv) },
+    { "glGetTexBumpParameterfvATI", "GL_ATI_envmap_bumpmap", offsetof(struct opengl_funcs, p_glGetTexBumpParameterfvATI) },
+    { "glGetTexBumpParameterivATI", "GL_ATI_envmap_bumpmap", offsetof(struct opengl_funcs, p_glGetTexBumpParameterivATI) },
+    { "glGetTexEnvxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetTexEnvxvOES) },
+    { "glGetTexFilterFuncSGIS", "GL_SGIS_texture_filter4", offsetof(struct opengl_funcs, p_glGetTexFilterFuncSGIS) },
+    { "glGetTexGenxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetTexGenxvOES) },
+    { "glGetTexLevelParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetTexLevelParameterxvOES) },
+    { "glGetTexParameterIiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetTexParameterIiv) },
+    { "glGetTexParameterIivEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, p_glGetTexParameterIivEXT) },
+    { "glGetTexParameterIuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetTexParameterIuiv) },
+    { "glGetTexParameterIuivEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, p_glGetTexParameterIuivEXT) },
+    { "glGetTexParameterPointervAPPLE", "GL_APPLE_texture_range", offsetof(struct opengl_funcs, p_glGetTexParameterPointervAPPLE) },
+    { "glGetTexParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glGetTexParameterxvOES) },
+    { "glGetTextureHandleARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glGetTextureHandleARB) },
+    { "glGetTextureHandleNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glGetTextureHandleNV) },
+    { "glGetTextureImage", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTextureImage) },
+    { "glGetTextureImageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetTextureImageEXT) },
+    { "glGetTextureLevelParameterfv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTextureLevelParameterfv) },
+    { "glGetTextureLevelParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetTextureLevelParameterfvEXT) },
+    { "glGetTextureLevelParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTextureLevelParameteriv) },
+    { "glGetTextureLevelParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetTextureLevelParameterivEXT) },
+    { "glGetTextureParameterIiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTextureParameterIiv) },
+    { "glGetTextureParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetTextureParameterIivEXT) },
+    { "glGetTextureParameterIuiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTextureParameterIuiv) },
+    { "glGetTextureParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetTextureParameterIuivEXT) },
+    { "glGetTextureParameterfv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTextureParameterfv) },
+    { "glGetTextureParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetTextureParameterfvEXT) },
+    { "glGetTextureParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTextureParameteriv) },
+    { "glGetTextureParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetTextureParameterivEXT) },
+    { "glGetTextureSamplerHandleARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glGetTextureSamplerHandleARB) },
+    { "glGetTextureSamplerHandleNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glGetTextureSamplerHandleNV) },
+    { "glGetTextureSubImage", "GL_ARB_get_texture_sub_image GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTextureSubImage) },
+    { "glGetTrackMatrixivNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGetTrackMatrixivNV) },
+    { "glGetTransformFeedbackVarying", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetTransformFeedbackVarying) },
+    { "glGetTransformFeedbackVaryingEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, p_glGetTransformFeedbackVaryingEXT) },
+    { "glGetTransformFeedbackVaryingNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glGetTransformFeedbackVaryingNV) },
+    { "glGetTransformFeedbacki64_v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTransformFeedbacki64_v) },
+    { "glGetTransformFeedbacki_v", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTransformFeedbacki_v) },
+    { "glGetTransformFeedbackiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetTransformFeedbackiv) },
+    { "glGetUniformBlockIndex", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glGetUniformBlockIndex) },
+    { "glGetUniformBufferSizeEXT", "GL_EXT_bindable_uniform", offsetof(struct opengl_funcs, p_glGetUniformBufferSizeEXT) },
+    { "glGetUniformIndices", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glGetUniformIndices) },
+    { "glGetUniformLocation", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetUniformLocation) },
+    { "glGetUniformLocationARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetUniformLocationARB) },
+    { "glGetUniformOffsetEXT", "GL_EXT_bindable_uniform", offsetof(struct opengl_funcs, p_glGetUniformOffsetEXT) },
+    { "glGetUniformSubroutineuiv", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGetUniformSubroutineuiv) },
+    { "glGetUniformdv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glGetUniformdv) },
+    { "glGetUniformfv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetUniformfv) },
+    { "glGetUniformfvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetUniformfvARB) },
+    { "glGetUniformi64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glGetUniformi64vARB) },
+    { "glGetUniformi64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glGetUniformi64vNV) },
+    { "glGetUniformiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetUniformiv) },
+    { "glGetUniformivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glGetUniformivARB) },
+    { "glGetUniformui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glGetUniformui64vARB) },
+    { "glGetUniformui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glGetUniformui64vNV) },
+    { "glGetUniformuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetUniformuiv) },
+    { "glGetUniformuivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glGetUniformuivEXT) },
+    { "glGetUnsignedBytei_vEXT", "GL_EXT_memory_object GL_EXT_semaphore", offsetof(struct opengl_funcs, p_glGetUnsignedBytei_vEXT) },
+    { "glGetUnsignedBytevEXT", "GL_EXT_memory_object GL_EXT_semaphore", offsetof(struct opengl_funcs, p_glGetUnsignedBytevEXT) },
+    { "glGetVariantArrayObjectfvATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glGetVariantArrayObjectfvATI) },
+    { "glGetVariantArrayObjectivATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glGetVariantArrayObjectivATI) },
+    { "glGetVariantBooleanvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetVariantBooleanvEXT) },
+    { "glGetVariantFloatvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetVariantFloatvEXT) },
+    { "glGetVariantIntegervEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetVariantIntegervEXT) },
+    { "glGetVariantPointervEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glGetVariantPointervEXT) },
+    { "glGetVaryingLocationNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glGetVaryingLocationNV) },
+    { "glGetVertexArrayIndexed64iv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetVertexArrayIndexed64iv) },
+    { "glGetVertexArrayIndexediv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetVertexArrayIndexediv) },
+    { "glGetVertexArrayIntegeri_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetVertexArrayIntegeri_vEXT) },
+    { "glGetVertexArrayIntegervEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetVertexArrayIntegervEXT) },
+    { "glGetVertexArrayPointeri_vEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetVertexArrayPointeri_vEXT) },
+    { "glGetVertexArrayPointervEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glGetVertexArrayPointervEXT) },
+    { "glGetVertexArrayiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetVertexArrayiv) },
+    { "glGetVertexAttribArrayObjectfvATI", "GL_ATI_vertex_attrib_array_object", offsetof(struct opengl_funcs, p_glGetVertexAttribArrayObjectfvATI) },
+    { "glGetVertexAttribArrayObjectivATI", "GL_ATI_vertex_attrib_array_object", offsetof(struct opengl_funcs, p_glGetVertexAttribArrayObjectivATI) },
+    { "glGetVertexAttribIiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetVertexAttribIiv) },
+    { "glGetVertexAttribIivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glGetVertexAttribIivEXT) },
+    { "glGetVertexAttribIuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glGetVertexAttribIuiv) },
+    { "glGetVertexAttribIuivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glGetVertexAttribIuivEXT) },
+    { "glGetVertexAttribLdv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glGetVertexAttribLdv) },
+    { "glGetVertexAttribLdvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glGetVertexAttribLdvEXT) },
+    { "glGetVertexAttribLi64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glGetVertexAttribLi64vNV) },
+    { "glGetVertexAttribLui64vARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glGetVertexAttribLui64vARB) },
+    { "glGetVertexAttribLui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glGetVertexAttribLui64vNV) },
+    { "glGetVertexAttribPointerv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetVertexAttribPointerv) },
+    { "glGetVertexAttribPointervARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glGetVertexAttribPointervARB) },
+    { "glGetVertexAttribPointervNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGetVertexAttribPointervNV) },
+    { "glGetVertexAttribdv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetVertexAttribdv) },
+    { "glGetVertexAttribdvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glGetVertexAttribdvARB) },
+    { "glGetVertexAttribdvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGetVertexAttribdvNV) },
+    { "glGetVertexAttribfv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetVertexAttribfv) },
+    { "glGetVertexAttribfvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glGetVertexAttribfvARB) },
+    { "glGetVertexAttribfvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGetVertexAttribfvNV) },
+    { "glGetVertexAttribiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glGetVertexAttribiv) },
+    { "glGetVertexAttribivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glGetVertexAttribivARB) },
+    { "glGetVertexAttribivNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glGetVertexAttribivNV) },
+    { "glGetVideoCaptureStreamdvNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glGetVideoCaptureStreamdvNV) },
+    { "glGetVideoCaptureStreamfvNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glGetVideoCaptureStreamfvNV) },
+    { "glGetVideoCaptureStreamivNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glGetVideoCaptureStreamivNV) },
+    { "glGetVideoCaptureivNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glGetVideoCaptureivNV) },
+    { "glGetVideoi64vNV", "GL_NV_present_video", offsetof(struct opengl_funcs, p_glGetVideoi64vNV) },
+    { "glGetVideoivNV", "GL_NV_present_video", offsetof(struct opengl_funcs, p_glGetVideoivNV) },
+    { "glGetVideoui64vNV", "GL_NV_present_video", offsetof(struct opengl_funcs, p_glGetVideoui64vNV) },
+    { "glGetVideouivNV", "GL_NV_present_video", offsetof(struct opengl_funcs, p_glGetVideouivNV) },
+    { "glGetVkProcAddrNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, p_glGetVkProcAddrNV) },
+    { "glGetnColorTable", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnColorTable) },
+    { "glGetnColorTableARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnColorTableARB) },
+    { "glGetnCompressedTexImage", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnCompressedTexImage) },
+    { "glGetnCompressedTexImageARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnCompressedTexImageARB) },
+    { "glGetnConvolutionFilter", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnConvolutionFilter) },
+    { "glGetnConvolutionFilterARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnConvolutionFilterARB) },
+    { "glGetnHistogram", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnHistogram) },
+    { "glGetnHistogramARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnHistogramARB) },
+    { "glGetnMapdv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnMapdv) },
+    { "glGetnMapdvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnMapdvARB) },
+    { "glGetnMapfv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnMapfv) },
+    { "glGetnMapfvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnMapfvARB) },
+    { "glGetnMapiv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnMapiv) },
+    { "glGetnMapivARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnMapivARB) },
+    { "glGetnMinmax", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnMinmax) },
+    { "glGetnMinmaxARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnMinmaxARB) },
+    { "glGetnPixelMapfv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnPixelMapfv) },
+    { "glGetnPixelMapfvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnPixelMapfvARB) },
+    { "glGetnPixelMapuiv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnPixelMapuiv) },
+    { "glGetnPixelMapuivARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnPixelMapuivARB) },
+    { "glGetnPixelMapusv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnPixelMapusv) },
+    { "glGetnPixelMapusvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnPixelMapusvARB) },
+    { "glGetnPolygonStipple", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnPolygonStipple) },
+    { "glGetnPolygonStippleARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnPolygonStippleARB) },
+    { "glGetnSeparableFilter", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnSeparableFilter) },
+    { "glGetnSeparableFilterARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnSeparableFilterARB) },
+    { "glGetnTexImage", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnTexImage) },
+    { "glGetnTexImageARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnTexImageARB) },
+    { "glGetnUniformdv", "GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnUniformdv) },
+    { "glGetnUniformdvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnUniformdvARB) },
+    { "glGetnUniformfv", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnUniformfv) },
+    { "glGetnUniformfvARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnUniformfvARB) },
+    { "glGetnUniformi64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glGetnUniformi64vARB) },
+    { "glGetnUniformiv", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnUniformiv) },
+    { "glGetnUniformivARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnUniformivARB) },
+    { "glGetnUniformui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glGetnUniformui64vARB) },
+    { "glGetnUniformuiv", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glGetnUniformuiv) },
+    { "glGetnUniformuivARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glGetnUniformuivARB) },
+    { "glGlobalAlphaFactorbSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, p_glGlobalAlphaFactorbSUN) },
+    { "glGlobalAlphaFactordSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, p_glGlobalAlphaFactordSUN) },
+    { "glGlobalAlphaFactorfSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, p_glGlobalAlphaFactorfSUN) },
+    { "glGlobalAlphaFactoriSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, p_glGlobalAlphaFactoriSUN) },
+    { "glGlobalAlphaFactorsSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, p_glGlobalAlphaFactorsSUN) },
+    { "glGlobalAlphaFactorubSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, p_glGlobalAlphaFactorubSUN) },
+    { "glGlobalAlphaFactoruiSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, p_glGlobalAlphaFactoruiSUN) },
+    { "glGlobalAlphaFactorusSUN", "GL_SUN_global_alpha", offsetof(struct opengl_funcs, p_glGlobalAlphaFactorusSUN) },
+    { "glHintPGI", "GL_PGI_misc_hints", offsetof(struct opengl_funcs, p_glHintPGI) },
+    { "glHistogram", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glHistogram) },
+    { "glHistogramEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glHistogramEXT) },
+    { "glIglooInterfaceSGIX", "GL_SGIX_igloo_interface", offsetof(struct opengl_funcs, p_glIglooInterfaceSGIX) },
+    { "glImageTransformParameterfHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, p_glImageTransformParameterfHP) },
+    { "glImageTransformParameterfvHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, p_glImageTransformParameterfvHP) },
+    { "glImageTransformParameteriHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, p_glImageTransformParameteriHP) },
+    { "glImageTransformParameterivHP", "GL_HP_image_transform", offsetof(struct opengl_funcs, p_glImageTransformParameterivHP) },
+    { "glImportMemoryFdEXT", "GL_EXT_memory_object_fd", offsetof(struct opengl_funcs, p_glImportMemoryFdEXT) },
+    { "glImportMemoryWin32HandleEXT", "GL_EXT_memory_object_win32", offsetof(struct opengl_funcs, p_glImportMemoryWin32HandleEXT) },
+    { "glImportMemoryWin32NameEXT", "GL_EXT_memory_object_win32", offsetof(struct opengl_funcs, p_glImportMemoryWin32NameEXT) },
+    { "glImportSemaphoreFdEXT", "GL_EXT_semaphore_fd", offsetof(struct opengl_funcs, p_glImportSemaphoreFdEXT) },
+    { "glImportSemaphoreWin32HandleEXT", "GL_EXT_semaphore_win32", offsetof(struct opengl_funcs, p_glImportSemaphoreWin32HandleEXT) },
+    { "glImportSemaphoreWin32NameEXT", "GL_EXT_semaphore_win32", offsetof(struct opengl_funcs, p_glImportSemaphoreWin32NameEXT) },
+    { "glImportSyncEXT", "GL_EXT_x11_sync_object", offsetof(struct opengl_funcs, p_glImportSyncEXT) },
+    { "glIndexFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glIndexFormatNV) },
+    { "glIndexFuncEXT", "GL_EXT_index_func", offsetof(struct opengl_funcs, p_glIndexFuncEXT) },
+    { "glIndexMaterialEXT", "GL_EXT_index_material", offsetof(struct opengl_funcs, p_glIndexMaterialEXT) },
+    { "glIndexPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, p_glIndexPointerEXT) },
+    { "glIndexPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, p_glIndexPointerListIBM) },
+    { "glIndexxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glIndexxOES) },
+    { "glIndexxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glIndexxvOES) },
+    { "glInsertComponentEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glInsertComponentEXT) },
+    { "glInsertEventMarkerEXT", "GL_EXT_debug_marker", offsetof(struct opengl_funcs, p_glInsertEventMarkerEXT) },
+    { "glInstrumentsBufferSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, p_glInstrumentsBufferSGIX) },
+    { "glInterpolatePathsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glInterpolatePathsNV) },
+    { "glInvalidateBufferData", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glInvalidateBufferData) },
+    { "glInvalidateBufferSubData", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glInvalidateBufferSubData) },
+    { "glInvalidateFramebuffer", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glInvalidateFramebuffer) },
+    { "glInvalidateNamedFramebufferData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glInvalidateNamedFramebufferData) },
+    { "glInvalidateNamedFramebufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glInvalidateNamedFramebufferSubData) },
+    { "glInvalidateSubFramebuffer", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glInvalidateSubFramebuffer) },
+    { "glInvalidateTexImage", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glInvalidateTexImage) },
+    { "glInvalidateTexSubImage", "GL_ARB_invalidate_subdata GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glInvalidateTexSubImage) },
+    { "glIsAsyncMarkerSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, p_glIsAsyncMarkerSGIX) },
+    { "glIsBuffer", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glIsBuffer) },
+    { "glIsBufferARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glIsBufferARB) },
+    { "glIsBufferResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glIsBufferResidentNV) },
+    { "glIsCommandListNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glIsCommandListNV) },
+    { "glIsEnabledIndexedEXT", "GL_EXT_direct_state_access GL_EXT_draw_buffers2", offsetof(struct opengl_funcs, p_glIsEnabledIndexedEXT) },
+    { "glIsEnabledi", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glIsEnabledi) },
+    { "glIsFenceAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, p_glIsFenceAPPLE) },
+    { "glIsFenceNV", "GL_NV_fence", offsetof(struct opengl_funcs, p_glIsFenceNV) },
+    { "glIsFramebuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glIsFramebuffer) },
+    { "glIsFramebufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glIsFramebufferEXT) },
+    { "glIsImageHandleResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glIsImageHandleResidentARB) },
+    { "glIsImageHandleResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glIsImageHandleResidentNV) },
+    { "glIsMemoryObjectEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glIsMemoryObjectEXT) },
+    { "glIsNameAMD", "GL_AMD_name_gen_delete", offsetof(struct opengl_funcs, p_glIsNameAMD) },
+    { "glIsNamedBufferResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glIsNamedBufferResidentNV) },
+    { "glIsNamedStringARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, p_glIsNamedStringARB) },
+    { "glIsObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glIsObjectBufferATI) },
+    { "glIsOcclusionQueryNV", "GL_NV_occlusion_query", offsetof(struct opengl_funcs, p_glIsOcclusionQueryNV) },
+    { "glIsPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glIsPathNV) },
+    { "glIsPointInFillPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glIsPointInFillPathNV) },
+    { "glIsPointInStrokePathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glIsPointInStrokePathNV) },
+    { "glIsProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glIsProgram) },
+    { "glIsProgramARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glIsProgramARB) },
+    { "glIsProgramNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glIsProgramNV) },
+    { "glIsProgramPipeline", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glIsProgramPipeline) },
+    { "glIsQuery", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glIsQuery) },
+    { "glIsQueryARB", "GL_ARB_occlusion_query", offsetof(struct opengl_funcs, p_glIsQueryARB) },
+    { "glIsRenderbuffer", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glIsRenderbuffer) },
+    { "glIsRenderbufferEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glIsRenderbufferEXT) },
+    { "glIsSampler", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glIsSampler) },
+    { "glIsSemaphoreEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, p_glIsSemaphoreEXT) },
+    { "glIsShader", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glIsShader) },
+    { "glIsStateNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glIsStateNV) },
+    { "glIsSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glIsSync) },
+    { "glIsTextureEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, p_glIsTextureEXT) },
+    { "glIsTextureHandleResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glIsTextureHandleResidentARB) },
+    { "glIsTextureHandleResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glIsTextureHandleResidentNV) },
+    { "glIsTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glIsTransformFeedback) },
+    { "glIsTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, p_glIsTransformFeedbackNV) },
+    { "glIsVariantEnabledEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glIsVariantEnabledEXT) },
+    { "glIsVertexArray", "GL_ARB_vertex_array_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glIsVertexArray) },
+    { "glIsVertexArrayAPPLE", "GL_APPLE_vertex_array_object", offsetof(struct opengl_funcs, p_glIsVertexArrayAPPLE) },
+    { "glIsVertexAttribEnabledAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, p_glIsVertexAttribEnabledAPPLE) },
+    { "glLGPUCopyImageSubDataNVX", "GL_NVX_linked_gpu_multicast", offsetof(struct opengl_funcs, p_glLGPUCopyImageSubDataNVX) },
+    { "glLGPUInterlockNVX", "GL_NVX_linked_gpu_multicast", offsetof(struct opengl_funcs, p_glLGPUInterlockNVX) },
+    { "glLGPUNamedBufferSubDataNVX", "GL_NVX_linked_gpu_multicast", offsetof(struct opengl_funcs, p_glLGPUNamedBufferSubDataNVX) },
+    { "glLabelObjectEXT", "GL_EXT_debug_label", offsetof(struct opengl_funcs, p_glLabelObjectEXT) },
+    { "glLightEnviSGIX", "GL_SGIX_fragment_lighting", offsetof(struct opengl_funcs, p_glLightEnviSGIX) },
+    { "glLightModelxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glLightModelxOES) },
+    { "glLightModelxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glLightModelxvOES) },
+    { "glLightxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glLightxOES) },
+    { "glLightxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glLightxvOES) },
+    { "glLineWidthxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glLineWidthxOES) },
+    { "glLinkProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glLinkProgram) },
+    { "glLinkProgramARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glLinkProgramARB) },
+    { "glListDrawCommandsStatesClientNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glListDrawCommandsStatesClientNV) },
+    { "glListParameterfSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, p_glListParameterfSGIX) },
+    { "glListParameterfvSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, p_glListParameterfvSGIX) },
+    { "glListParameteriSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, p_glListParameteriSGIX) },
+    { "glListParameterivSGIX", "GL_SGIX_list_priority", offsetof(struct opengl_funcs, p_glListParameterivSGIX) },
+    { "glLoadIdentityDeformationMapSGIX", "GL_SGIX_polynomial_ffd", offsetof(struct opengl_funcs, p_glLoadIdentityDeformationMapSGIX) },
+    { "glLoadMatrixxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glLoadMatrixxOES) },
+    { "glLoadProgramNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glLoadProgramNV) },
+    { "glLoadTransposeMatrixd", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glLoadTransposeMatrixd) },
+    { "glLoadTransposeMatrixdARB", "GL_ARB_transpose_matrix", offsetof(struct opengl_funcs, p_glLoadTransposeMatrixdARB) },
+    { "glLoadTransposeMatrixf", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glLoadTransposeMatrixf) },
+    { "glLoadTransposeMatrixfARB", "GL_ARB_transpose_matrix", offsetof(struct opengl_funcs, p_glLoadTransposeMatrixfARB) },
+    { "glLoadTransposeMatrixxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glLoadTransposeMatrixxOES) },
+    { "glLockArraysEXT", "GL_EXT_compiled_vertex_array", offsetof(struct opengl_funcs, p_glLockArraysEXT) },
+    { "glMTexCoord2fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMTexCoord2fSGIS) },
+    { "glMTexCoord2fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMTexCoord2fvSGIS) },
+    { "glMakeBufferNonResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glMakeBufferNonResidentNV) },
+    { "glMakeBufferResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glMakeBufferResidentNV) },
+    { "glMakeImageHandleNonResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glMakeImageHandleNonResidentARB) },
+    { "glMakeImageHandleNonResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glMakeImageHandleNonResidentNV) },
+    { "glMakeImageHandleResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glMakeImageHandleResidentARB) },
+    { "glMakeImageHandleResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glMakeImageHandleResidentNV) },
+    { "glMakeNamedBufferNonResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glMakeNamedBufferNonResidentNV) },
+    { "glMakeNamedBufferResidentNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glMakeNamedBufferResidentNV) },
+    { "glMakeTextureHandleNonResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glMakeTextureHandleNonResidentARB) },
+    { "glMakeTextureHandleNonResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glMakeTextureHandleNonResidentNV) },
+    { "glMakeTextureHandleResidentARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glMakeTextureHandleResidentARB) },
+    { "glMakeTextureHandleResidentNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glMakeTextureHandleResidentNV) },
+    { "glMap1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMap1xOES) },
+    { "glMap2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMap2xOES) },
+    { "glMapBuffer", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glMapBuffer) },
+    { "glMapBufferARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glMapBufferARB) },
+    { "glMapBufferRange", "GL_ARB_map_buffer_range GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glMapBufferRange) },
+    { "glMapControlPointsNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, p_glMapControlPointsNV) },
+    { "glMapGrid1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMapGrid1xOES) },
+    { "glMapGrid2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMapGrid2xOES) },
+    { "glMapNamedBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glMapNamedBuffer) },
+    { "glMapNamedBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMapNamedBufferEXT) },
+    { "glMapNamedBufferRange", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glMapNamedBufferRange) },
+    { "glMapNamedBufferRangeEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMapNamedBufferRangeEXT) },
+    { "glMapObjectBufferATI", "GL_ATI_map_object_buffer", offsetof(struct opengl_funcs, p_glMapObjectBufferATI) },
+    { "glMapParameterfvNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, p_glMapParameterfvNV) },
+    { "glMapParameterivNV", "GL_NV_evaluators", offsetof(struct opengl_funcs, p_glMapParameterivNV) },
+    { "glMapTexture2DINTEL", "GL_INTEL_map_texture", offsetof(struct opengl_funcs, p_glMapTexture2DINTEL) },
+    { "glMapVertexAttrib1dAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, p_glMapVertexAttrib1dAPPLE) },
+    { "glMapVertexAttrib1fAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, p_glMapVertexAttrib1fAPPLE) },
+    { "glMapVertexAttrib2dAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, p_glMapVertexAttrib2dAPPLE) },
+    { "glMapVertexAttrib2fAPPLE", "GL_APPLE_vertex_program_evaluators", offsetof(struct opengl_funcs, p_glMapVertexAttrib2fAPPLE) },
+    { "glMaterialxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMaterialxOES) },
+    { "glMaterialxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMaterialxvOES) },
+    { "glMatrixFrustumEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixFrustumEXT) },
+    { "glMatrixIndexPointerARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, p_glMatrixIndexPointerARB) },
+    { "glMatrixIndexubvARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, p_glMatrixIndexubvARB) },
+    { "glMatrixIndexuivARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, p_glMatrixIndexuivARB) },
+    { "glMatrixIndexusvARB", "GL_ARB_matrix_palette", offsetof(struct opengl_funcs, p_glMatrixIndexusvARB) },
+    { "glMatrixLoad3x2fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixLoad3x2fNV) },
+    { "glMatrixLoad3x3fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixLoad3x3fNV) },
+    { "glMatrixLoadIdentityEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixLoadIdentityEXT) },
+    { "glMatrixLoadTranspose3x3fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixLoadTranspose3x3fNV) },
+    { "glMatrixLoadTransposedEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixLoadTransposedEXT) },
+    { "glMatrixLoadTransposefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixLoadTransposefEXT) },
+    { "glMatrixLoaddEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixLoaddEXT) },
+    { "glMatrixLoadfEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixLoadfEXT) },
+    { "glMatrixMult3x2fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixMult3x2fNV) },
+    { "glMatrixMult3x3fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixMult3x3fNV) },
+    { "glMatrixMultTranspose3x3fNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixMultTranspose3x3fNV) },
+    { "glMatrixMultTransposedEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixMultTransposedEXT) },
+    { "glMatrixMultTransposefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixMultTransposefEXT) },
+    { "glMatrixMultdEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixMultdEXT) },
+    { "glMatrixMultfEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixMultfEXT) },
+    { "glMatrixOrthoEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixOrthoEXT) },
+    { "glMatrixPopEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixPopEXT) },
+    { "glMatrixPushEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixPushEXT) },
+    { "glMatrixRotatedEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixRotatedEXT) },
+    { "glMatrixRotatefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixRotatefEXT) },
+    { "glMatrixScaledEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixScaledEXT) },
+    { "glMatrixScalefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixScalefEXT) },
+    { "glMatrixTranslatedEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixTranslatedEXT) },
+    { "glMatrixTranslatefEXT", "GL_EXT_direct_state_access GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glMatrixTranslatefEXT) },
+    { "glMaxShaderCompilerThreadsARB", "GL_ARB_parallel_shader_compile", offsetof(struct opengl_funcs, p_glMaxShaderCompilerThreadsARB) },
+    { "glMaxShaderCompilerThreadsKHR", "GL_KHR_parallel_shader_compile", offsetof(struct opengl_funcs, p_glMaxShaderCompilerThreadsKHR) },
+    { "glMemoryBarrier", "GL_ARB_shader_image_load_store GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glMemoryBarrier) },
+    { "glMemoryBarrierByRegion", "GL_ARB_ES3_1_compatibility GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glMemoryBarrierByRegion) },
+    { "glMemoryBarrierEXT", "GL_EXT_shader_image_load_store", offsetof(struct opengl_funcs, p_glMemoryBarrierEXT) },
+    { "glMemoryObjectParameterivEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glMemoryObjectParameterivEXT) },
+    { "glMinSampleShading", "GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glMinSampleShading) },
+    { "glMinSampleShadingARB", "GL_ARB_sample_shading", offsetof(struct opengl_funcs, p_glMinSampleShadingARB) },
+    { "glMinmax", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glMinmax) },
+    { "glMinmaxEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glMinmaxEXT) },
+    { "glMultMatrixxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultMatrixxOES) },
+    { "glMultTransposeMatrixd", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultTransposeMatrixd) },
+    { "glMultTransposeMatrixdARB", "GL_ARB_transpose_matrix", offsetof(struct opengl_funcs, p_glMultTransposeMatrixdARB) },
+    { "glMultTransposeMatrixf", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultTransposeMatrixf) },
+    { "glMultTransposeMatrixfARB", "GL_ARB_transpose_matrix", offsetof(struct opengl_funcs, p_glMultTransposeMatrixfARB) },
+    { "glMultTransposeMatrixxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultTransposeMatrixxOES) },
+    { "glMultiDrawArrays", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glMultiDrawArrays) },
+    { "glMultiDrawArraysEXT", "GL_EXT_multi_draw_arrays", offsetof(struct opengl_funcs, p_glMultiDrawArraysEXT) },
+    { "glMultiDrawArraysIndirect", "GL_ARB_multi_draw_indirect GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glMultiDrawArraysIndirect) },
+    { "glMultiDrawArraysIndirectAMD", "GL_AMD_multi_draw_indirect", offsetof(struct opengl_funcs, p_glMultiDrawArraysIndirectAMD) },
+    { "glMultiDrawArraysIndirectBindlessCountNV", "GL_NV_bindless_multi_draw_indirect_count", offsetof(struct opengl_funcs, p_glMultiDrawArraysIndirectBindlessCountNV) },
+    { "glMultiDrawArraysIndirectBindlessNV", "GL_NV_bindless_multi_draw_indirect", offsetof(struct opengl_funcs, p_glMultiDrawArraysIndirectBindlessNV) },
+    { "glMultiDrawArraysIndirectCount", "GL_VERSION_4_6", offsetof(struct opengl_funcs, p_glMultiDrawArraysIndirectCount) },
+    { "glMultiDrawArraysIndirectCountARB", "GL_ARB_indirect_parameters", offsetof(struct opengl_funcs, p_glMultiDrawArraysIndirectCountARB) },
+    { "glMultiDrawElementArrayAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, p_glMultiDrawElementArrayAPPLE) },
+    { "glMultiDrawElements", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glMultiDrawElements) },
+    { "glMultiDrawElementsBaseVertex", "GL_ARB_draw_elements_base_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glMultiDrawElementsBaseVertex) },
+    { "glMultiDrawElementsEXT", "GL_EXT_multi_draw_arrays", offsetof(struct opengl_funcs, p_glMultiDrawElementsEXT) },
+    { "glMultiDrawElementsIndirect", "GL_ARB_multi_draw_indirect GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glMultiDrawElementsIndirect) },
+    { "glMultiDrawElementsIndirectAMD", "GL_AMD_multi_draw_indirect", offsetof(struct opengl_funcs, p_glMultiDrawElementsIndirectAMD) },
+    { "glMultiDrawElementsIndirectBindlessCountNV", "GL_NV_bindless_multi_draw_indirect_count", offsetof(struct opengl_funcs, p_glMultiDrawElementsIndirectBindlessCountNV) },
+    { "glMultiDrawElementsIndirectBindlessNV", "GL_NV_bindless_multi_draw_indirect", offsetof(struct opengl_funcs, p_glMultiDrawElementsIndirectBindlessNV) },
+    { "glMultiDrawElementsIndirectCount", "GL_VERSION_4_6", offsetof(struct opengl_funcs, p_glMultiDrawElementsIndirectCount) },
+    { "glMultiDrawElementsIndirectCountARB", "GL_ARB_indirect_parameters", offsetof(struct opengl_funcs, p_glMultiDrawElementsIndirectCountARB) },
+    { "glMultiDrawMeshTasksIndirectCountNV", "GL_NV_mesh_shader", offsetof(struct opengl_funcs, p_glMultiDrawMeshTasksIndirectCountNV) },
+    { "glMultiDrawMeshTasksIndirectNV", "GL_NV_mesh_shader", offsetof(struct opengl_funcs, p_glMultiDrawMeshTasksIndirectNV) },
+    { "glMultiDrawRangeElementArrayAPPLE", "GL_APPLE_element_array", offsetof(struct opengl_funcs, p_glMultiDrawRangeElementArrayAPPLE) },
+    { "glMultiModeDrawArraysIBM", "GL_IBM_multimode_draw_arrays", offsetof(struct opengl_funcs, p_glMultiModeDrawArraysIBM) },
+    { "glMultiModeDrawElementsIBM", "GL_IBM_multimode_draw_arrays", offsetof(struct opengl_funcs, p_glMultiModeDrawElementsIBM) },
+    { "glMultiTexBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexBufferEXT) },
+    { "glMultiTexCoord1bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glMultiTexCoord1bOES) },
+    { "glMultiTexCoord1bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glMultiTexCoord1bvOES) },
+    { "glMultiTexCoord1d", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord1d) },
+    { "glMultiTexCoord1dARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1dARB) },
+    { "glMultiTexCoord1dSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1dSGIS) },
+    { "glMultiTexCoord1dv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord1dv) },
+    { "glMultiTexCoord1dvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1dvARB) },
+    { "glMultiTexCoord1dvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1dvSGIS) },
+    { "glMultiTexCoord1f", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord1f) },
+    { "glMultiTexCoord1fARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1fARB) },
+    { "glMultiTexCoord1fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1fSGIS) },
+    { "glMultiTexCoord1fv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord1fv) },
+    { "glMultiTexCoord1fvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1fvARB) },
+    { "glMultiTexCoord1fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1fvSGIS) },
+    { "glMultiTexCoord1hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glMultiTexCoord1hNV) },
+    { "glMultiTexCoord1hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glMultiTexCoord1hvNV) },
+    { "glMultiTexCoord1i", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord1i) },
+    { "glMultiTexCoord1iARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1iARB) },
+    { "glMultiTexCoord1iSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1iSGIS) },
+    { "glMultiTexCoord1iv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord1iv) },
+    { "glMultiTexCoord1ivARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1ivARB) },
+    { "glMultiTexCoord1ivSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1ivSGIS) },
+    { "glMultiTexCoord1s", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord1s) },
+    { "glMultiTexCoord1sARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1sARB) },
+    { "glMultiTexCoord1sSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1sSGIS) },
+    { "glMultiTexCoord1sv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord1sv) },
+    { "glMultiTexCoord1svARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1svARB) },
+    { "glMultiTexCoord1svSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord1svSGIS) },
+    { "glMultiTexCoord1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultiTexCoord1xOES) },
+    { "glMultiTexCoord1xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultiTexCoord1xvOES) },
+    { "glMultiTexCoord2bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glMultiTexCoord2bOES) },
+    { "glMultiTexCoord2bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glMultiTexCoord2bvOES) },
+    { "glMultiTexCoord2d", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord2d) },
+    { "glMultiTexCoord2dARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2dARB) },
+    { "glMultiTexCoord2dSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2dSGIS) },
+    { "glMultiTexCoord2dv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord2dv) },
+    { "glMultiTexCoord2dvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2dvARB) },
+    { "glMultiTexCoord2dvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2dvSGIS) },
+    { "glMultiTexCoord2f", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord2f) },
+    { "glMultiTexCoord2fARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2fARB) },
+    { "glMultiTexCoord2fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2fSGIS) },
+    { "glMultiTexCoord2fv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord2fv) },
+    { "glMultiTexCoord2fvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2fvARB) },
+    { "glMultiTexCoord2fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2fvSGIS) },
+    { "glMultiTexCoord2hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glMultiTexCoord2hNV) },
+    { "glMultiTexCoord2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glMultiTexCoord2hvNV) },
+    { "glMultiTexCoord2i", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord2i) },
+    { "glMultiTexCoord2iARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2iARB) },
+    { "glMultiTexCoord2iSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2iSGIS) },
+    { "glMultiTexCoord2iv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord2iv) },
+    { "glMultiTexCoord2ivARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2ivARB) },
+    { "glMultiTexCoord2ivSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2ivSGIS) },
+    { "glMultiTexCoord2s", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord2s) },
+    { "glMultiTexCoord2sARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2sARB) },
+    { "glMultiTexCoord2sSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2sSGIS) },
+    { "glMultiTexCoord2sv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord2sv) },
+    { "glMultiTexCoord2svARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2svARB) },
+    { "glMultiTexCoord2svSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord2svSGIS) },
+    { "glMultiTexCoord2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultiTexCoord2xOES) },
+    { "glMultiTexCoord2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultiTexCoord2xvOES) },
+    { "glMultiTexCoord3bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glMultiTexCoord3bOES) },
+    { "glMultiTexCoord3bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glMultiTexCoord3bvOES) },
+    { "glMultiTexCoord3d", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord3d) },
+    { "glMultiTexCoord3dARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3dARB) },
+    { "glMultiTexCoord3dSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3dSGIS) },
+    { "glMultiTexCoord3dv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord3dv) },
+    { "glMultiTexCoord3dvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3dvARB) },
+    { "glMultiTexCoord3dvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3dvSGIS) },
+    { "glMultiTexCoord3f", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord3f) },
+    { "glMultiTexCoord3fARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3fARB) },
+    { "glMultiTexCoord3fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3fSGIS) },
+    { "glMultiTexCoord3fv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord3fv) },
+    { "glMultiTexCoord3fvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3fvARB) },
+    { "glMultiTexCoord3fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3fvSGIS) },
+    { "glMultiTexCoord3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glMultiTexCoord3hNV) },
+    { "glMultiTexCoord3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glMultiTexCoord3hvNV) },
+    { "glMultiTexCoord3i", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord3i) },
+    { "glMultiTexCoord3iARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3iARB) },
+    { "glMultiTexCoord3iSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3iSGIS) },
+    { "glMultiTexCoord3iv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord3iv) },
+    { "glMultiTexCoord3ivARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3ivARB) },
+    { "glMultiTexCoord3ivSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3ivSGIS) },
+    { "glMultiTexCoord3s", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord3s) },
+    { "glMultiTexCoord3sARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3sARB) },
+    { "glMultiTexCoord3sSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3sSGIS) },
+    { "glMultiTexCoord3sv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord3sv) },
+    { "glMultiTexCoord3svARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3svARB) },
+    { "glMultiTexCoord3svSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord3svSGIS) },
+    { "glMultiTexCoord3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultiTexCoord3xOES) },
+    { "glMultiTexCoord3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultiTexCoord3xvOES) },
+    { "glMultiTexCoord4bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glMultiTexCoord4bOES) },
+    { "glMultiTexCoord4bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glMultiTexCoord4bvOES) },
+    { "glMultiTexCoord4d", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord4d) },
+    { "glMultiTexCoord4dARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4dARB) },
+    { "glMultiTexCoord4dSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4dSGIS) },
+    { "glMultiTexCoord4dv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord4dv) },
+    { "glMultiTexCoord4dvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4dvARB) },
+    { "glMultiTexCoord4dvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4dvSGIS) },
+    { "glMultiTexCoord4f", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord4f) },
+    { "glMultiTexCoord4fARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4fARB) },
+    { "glMultiTexCoord4fSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4fSGIS) },
+    { "glMultiTexCoord4fv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord4fv) },
+    { "glMultiTexCoord4fvARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4fvARB) },
+    { "glMultiTexCoord4fvSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4fvSGIS) },
+    { "glMultiTexCoord4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glMultiTexCoord4hNV) },
+    { "glMultiTexCoord4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glMultiTexCoord4hvNV) },
+    { "glMultiTexCoord4i", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord4i) },
+    { "glMultiTexCoord4iARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4iARB) },
+    { "glMultiTexCoord4iSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4iSGIS) },
+    { "glMultiTexCoord4iv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord4iv) },
+    { "glMultiTexCoord4ivARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4ivARB) },
+    { "glMultiTexCoord4ivSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4ivSGIS) },
+    { "glMultiTexCoord4s", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord4s) },
+    { "glMultiTexCoord4sARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4sARB) },
+    { "glMultiTexCoord4sSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4sSGIS) },
+    { "glMultiTexCoord4sv", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glMultiTexCoord4sv) },
+    { "glMultiTexCoord4svARB", "GL_ARB_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4svARB) },
+    { "glMultiTexCoord4svSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoord4svSGIS) },
+    { "glMultiTexCoord4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultiTexCoord4xOES) },
+    { "glMultiTexCoord4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glMultiTexCoord4xvOES) },
+    { "glMultiTexCoordP1ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glMultiTexCoordP1ui) },
+    { "glMultiTexCoordP1uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glMultiTexCoordP1uiv) },
+    { "glMultiTexCoordP2ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glMultiTexCoordP2ui) },
+    { "glMultiTexCoordP2uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glMultiTexCoordP2uiv) },
+    { "glMultiTexCoordP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glMultiTexCoordP3ui) },
+    { "glMultiTexCoordP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glMultiTexCoordP3uiv) },
+    { "glMultiTexCoordP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glMultiTexCoordP4ui) },
+    { "glMultiTexCoordP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glMultiTexCoordP4uiv) },
+    { "glMultiTexCoordPointerEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexCoordPointerEXT) },
+    { "glMultiTexCoordPointerSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glMultiTexCoordPointerSGIS) },
+    { "glMultiTexEnvfEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexEnvfEXT) },
+    { "glMultiTexEnvfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexEnvfvEXT) },
+    { "glMultiTexEnviEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexEnviEXT) },
+    { "glMultiTexEnvivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexEnvivEXT) },
+    { "glMultiTexGendEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexGendEXT) },
+    { "glMultiTexGendvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexGendvEXT) },
+    { "glMultiTexGenfEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexGenfEXT) },
+    { "glMultiTexGenfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexGenfvEXT) },
+    { "glMultiTexGeniEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexGeniEXT) },
+    { "glMultiTexGenivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexGenivEXT) },
+    { "glMultiTexImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexImage1DEXT) },
+    { "glMultiTexImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexImage2DEXT) },
+    { "glMultiTexImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexImage3DEXT) },
+    { "glMultiTexParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexParameterIivEXT) },
+    { "glMultiTexParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexParameterIuivEXT) },
+    { "glMultiTexParameterfEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexParameterfEXT) },
+    { "glMultiTexParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexParameterfvEXT) },
+    { "glMultiTexParameteriEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexParameteriEXT) },
+    { "glMultiTexParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexParameterivEXT) },
+    { "glMultiTexRenderbufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexRenderbufferEXT) },
+    { "glMultiTexSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexSubImage1DEXT) },
+    { "glMultiTexSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexSubImage2DEXT) },
+    { "glMultiTexSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glMultiTexSubImage3DEXT) },
+    { "glMulticastBarrierNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastBarrierNV) },
+    { "glMulticastBlitFramebufferNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastBlitFramebufferNV) },
+    { "glMulticastBufferSubDataNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastBufferSubDataNV) },
+    { "glMulticastCopyBufferSubDataNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastCopyBufferSubDataNV) },
+    { "glMulticastCopyImageSubDataNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastCopyImageSubDataNV) },
+    { "glMulticastFramebufferSampleLocationsfvNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastFramebufferSampleLocationsfvNV) },
+    { "glMulticastGetQueryObjecti64vNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastGetQueryObjecti64vNV) },
+    { "glMulticastGetQueryObjectivNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastGetQueryObjectivNV) },
+    { "glMulticastGetQueryObjectui64vNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastGetQueryObjectui64vNV) },
+    { "glMulticastGetQueryObjectuivNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastGetQueryObjectuivNV) },
+    { "glMulticastScissorArrayvNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, p_glMulticastScissorArrayvNVX) },
+    { "glMulticastViewportArrayvNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, p_glMulticastViewportArrayvNVX) },
+    { "glMulticastViewportPositionWScaleNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, p_glMulticastViewportPositionWScaleNVX) },
+    { "glMulticastWaitSyncNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glMulticastWaitSyncNV) },
+    { "glNamedBufferAttachMemoryNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, p_glNamedBufferAttachMemoryNV) },
+    { "glNamedBufferData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedBufferData) },
+    { "glNamedBufferDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedBufferDataEXT) },
+    { "glNamedBufferPageCommitmentARB", "GL_ARB_sparse_buffer", offsetof(struct opengl_funcs, p_glNamedBufferPageCommitmentARB) },
+    { "glNamedBufferPageCommitmentEXT", "GL_ARB_sparse_buffer", offsetof(struct opengl_funcs, p_glNamedBufferPageCommitmentEXT) },
+    { "glNamedBufferStorage", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedBufferStorage) },
+    { "glNamedBufferStorageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedBufferStorageEXT) },
+    { "glNamedBufferStorageExternalEXT", "GL_EXT_external_buffer", offsetof(struct opengl_funcs, p_glNamedBufferStorageExternalEXT) },
+    { "glNamedBufferStorageMemEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glNamedBufferStorageMemEXT) },
+    { "glNamedBufferSubData", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedBufferSubData) },
+    { "glNamedBufferSubDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedBufferSubDataEXT) },
+    { "glNamedCopyBufferSubDataEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedCopyBufferSubDataEXT) },
+    { "glNamedFramebufferDrawBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedFramebufferDrawBuffer) },
+    { "glNamedFramebufferDrawBuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedFramebufferDrawBuffers) },
+    { "glNamedFramebufferParameteri", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedFramebufferParameteri) },
+    { "glNamedFramebufferParameteriEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedFramebufferParameteriEXT) },
+    { "glNamedFramebufferReadBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedFramebufferReadBuffer) },
+    { "glNamedFramebufferRenderbuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedFramebufferRenderbuffer) },
+    { "glNamedFramebufferRenderbufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedFramebufferRenderbufferEXT) },
+    { "glNamedFramebufferSampleLocationsfvARB", "GL_ARB_sample_locations", offsetof(struct opengl_funcs, p_glNamedFramebufferSampleLocationsfvARB) },
+    { "glNamedFramebufferSampleLocationsfvNV", "GL_NV_sample_locations", offsetof(struct opengl_funcs, p_glNamedFramebufferSampleLocationsfvNV) },
+    { "glNamedFramebufferSamplePositionsfvAMD", "GL_AMD_framebuffer_sample_positions", offsetof(struct opengl_funcs, p_glNamedFramebufferSamplePositionsfvAMD) },
+    { "glNamedFramebufferTexture", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedFramebufferTexture) },
+    { "glNamedFramebufferTexture1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedFramebufferTexture1DEXT) },
+    { "glNamedFramebufferTexture2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedFramebufferTexture2DEXT) },
+    { "glNamedFramebufferTexture3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedFramebufferTexture3DEXT) },
+    { "glNamedFramebufferTextureEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedFramebufferTextureEXT) },
+    { "glNamedFramebufferTextureFaceEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedFramebufferTextureFaceEXT) },
+    { "glNamedFramebufferTextureLayer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedFramebufferTextureLayer) },
+    { "glNamedFramebufferTextureLayerEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedFramebufferTextureLayerEXT) },
+    { "glNamedProgramLocalParameter4dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParameter4dEXT) },
+    { "glNamedProgramLocalParameter4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParameter4dvEXT) },
+    { "glNamedProgramLocalParameter4fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParameter4fEXT) },
+    { "glNamedProgramLocalParameter4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParameter4fvEXT) },
+    { "glNamedProgramLocalParameterI4iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParameterI4iEXT) },
+    { "glNamedProgramLocalParameterI4ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParameterI4ivEXT) },
+    { "glNamedProgramLocalParameterI4uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParameterI4uiEXT) },
+    { "glNamedProgramLocalParameterI4uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParameterI4uivEXT) },
+    { "glNamedProgramLocalParameters4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParameters4fvEXT) },
+    { "glNamedProgramLocalParametersI4ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParametersI4ivEXT) },
+    { "glNamedProgramLocalParametersI4uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramLocalParametersI4uivEXT) },
+    { "glNamedProgramStringEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedProgramStringEXT) },
+    { "glNamedRenderbufferStorage", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedRenderbufferStorage) },
+    { "glNamedRenderbufferStorageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedRenderbufferStorageEXT) },
+    { "glNamedRenderbufferStorageMultisample", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glNamedRenderbufferStorageMultisample) },
+    { "glNamedRenderbufferStorageMultisampleAdvancedAMD", "GL_AMD_framebuffer_multisample_advanced", offsetof(struct opengl_funcs, p_glNamedRenderbufferStorageMultisampleAdvancedAMD) },
+    { "glNamedRenderbufferStorageMultisampleCoverageEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedRenderbufferStorageMultisampleCoverageEXT) },
+    { "glNamedRenderbufferStorageMultisampleEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glNamedRenderbufferStorageMultisampleEXT) },
+    { "glNamedStringARB", "GL_ARB_shading_language_include", offsetof(struct opengl_funcs, p_glNamedStringARB) },
+    { "glNewBufferRegion", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, p_glNewBufferRegion) },
+    { "glNewObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glNewObjectBufferATI) },
+    { "glNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glNormal3fVertex3fSUN) },
+    { "glNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glNormal3fVertex3fvSUN) },
+    { "glNormal3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glNormal3hNV) },
+    { "glNormal3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glNormal3hvNV) },
+    { "glNormal3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glNormal3xOES) },
+    { "glNormal3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glNormal3xvOES) },
+    { "glNormalFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glNormalFormatNV) },
+    { "glNormalP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glNormalP3ui) },
+    { "glNormalP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glNormalP3uiv) },
+    { "glNormalPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, p_glNormalPointerEXT) },
+    { "glNormalPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, p_glNormalPointerListIBM) },
+    { "glNormalPointervINTEL", "GL_INTEL_parallel_arrays", offsetof(struct opengl_funcs, p_glNormalPointervINTEL) },
+    { "glNormalStream3bATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3bATI) },
+    { "glNormalStream3bvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3bvATI) },
+    { "glNormalStream3dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3dATI) },
+    { "glNormalStream3dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3dvATI) },
+    { "glNormalStream3fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3fATI) },
+    { "glNormalStream3fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3fvATI) },
+    { "glNormalStream3iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3iATI) },
+    { "glNormalStream3ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3ivATI) },
+    { "glNormalStream3sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3sATI) },
+    { "glNormalStream3svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glNormalStream3svATI) },
+    { "glObjectLabel", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glObjectLabel) },
+    { "glObjectPtrLabel", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glObjectPtrLabel) },
+    { "glObjectPurgeableAPPLE", "GL_APPLE_object_purgeable", offsetof(struct opengl_funcs, p_glObjectPurgeableAPPLE) },
+    { "glObjectUnpurgeableAPPLE", "GL_APPLE_object_purgeable", offsetof(struct opengl_funcs, p_glObjectUnpurgeableAPPLE) },
+    { "glOrthofOES", "GL_OES_single_precision", offsetof(struct opengl_funcs, p_glOrthofOES) },
+    { "glOrthoxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glOrthoxOES) },
+    { "glPNTrianglesfATI", "GL_ATI_pn_triangles", offsetof(struct opengl_funcs, p_glPNTrianglesfATI) },
+    { "glPNTrianglesiATI", "GL_ATI_pn_triangles", offsetof(struct opengl_funcs, p_glPNTrianglesiATI) },
+    { "glPassTexCoordATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glPassTexCoordATI) },
+    { "glPassThroughxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glPassThroughxOES) },
+    { "glPatchParameterfv", "GL_ARB_tessellation_shader GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glPatchParameterfv) },
+    { "glPatchParameteri", "GL_ARB_tessellation_shader GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glPatchParameteri) },
+    { "glPathColorGenNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathColorGenNV) },
+    { "glPathCommandsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathCommandsNV) },
+    { "glPathCoordsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathCoordsNV) },
+    { "glPathCoverDepthFuncNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathCoverDepthFuncNV) },
+    { "glPathDashArrayNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathDashArrayNV) },
+    { "glPathFogGenNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathFogGenNV) },
+    { "glPathGlyphIndexArrayNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathGlyphIndexArrayNV) },
+    { "glPathGlyphIndexRangeNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathGlyphIndexRangeNV) },
+    { "glPathGlyphRangeNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathGlyphRangeNV) },
+    { "glPathGlyphsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathGlyphsNV) },
+    { "glPathMemoryGlyphIndexArrayNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathMemoryGlyphIndexArrayNV) },
+    { "glPathParameterfNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathParameterfNV) },
+    { "glPathParameterfvNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathParameterfvNV) },
+    { "glPathParameteriNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathParameteriNV) },
+    { "glPathParameterivNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathParameterivNV) },
+    { "glPathStencilDepthOffsetNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathStencilDepthOffsetNV) },
+    { "glPathStencilFuncNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathStencilFuncNV) },
+    { "glPathStringNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathStringNV) },
+    { "glPathSubCommandsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathSubCommandsNV) },
+    { "glPathSubCoordsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathSubCoordsNV) },
+    { "glPathTexGenNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPathTexGenNV) },
+    { "glPauseTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glPauseTransformFeedback) },
+    { "glPauseTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, p_glPauseTransformFeedbackNV) },
+    { "glPixelDataRangeNV", "GL_NV_pixel_data_range", offsetof(struct opengl_funcs, p_glPixelDataRangeNV) },
+    { "glPixelMapx", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glPixelMapx) },
+    { "glPixelStorex", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glPixelStorex) },
+    { "glPixelTexGenParameterfSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, p_glPixelTexGenParameterfSGIS) },
+    { "glPixelTexGenParameterfvSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, p_glPixelTexGenParameterfvSGIS) },
+    { "glPixelTexGenParameteriSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, p_glPixelTexGenParameteriSGIS) },
+    { "glPixelTexGenParameterivSGIS", "GL_SGIS_pixel_texture", offsetof(struct opengl_funcs, p_glPixelTexGenParameterivSGIS) },
+    { "glPixelTexGenSGIX", "GL_SGIX_pixel_texture", offsetof(struct opengl_funcs, p_glPixelTexGenSGIX) },
+    { "glPixelTransferxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glPixelTransferxOES) },
+    { "glPixelTransformParameterfEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, p_glPixelTransformParameterfEXT) },
+    { "glPixelTransformParameterfvEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, p_glPixelTransformParameterfvEXT) },
+    { "glPixelTransformParameteriEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, p_glPixelTransformParameteriEXT) },
+    { "glPixelTransformParameterivEXT", "GL_EXT_pixel_transform", offsetof(struct opengl_funcs, p_glPixelTransformParameterivEXT) },
+    { "glPixelZoomxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glPixelZoomxOES) },
+    { "glPointAlongPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glPointAlongPathNV) },
+    { "glPointParameterf", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glPointParameterf) },
+    { "glPointParameterfARB", "GL_ARB_point_parameters", offsetof(struct opengl_funcs, p_glPointParameterfARB) },
+    { "glPointParameterfEXT", "GL_EXT_point_parameters", offsetof(struct opengl_funcs, p_glPointParameterfEXT) },
+    { "glPointParameterfSGIS", "GL_SGIS_point_parameters", offsetof(struct opengl_funcs, p_glPointParameterfSGIS) },
+    { "glPointParameterfv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glPointParameterfv) },
+    { "glPointParameterfvARB", "GL_ARB_point_parameters", offsetof(struct opengl_funcs, p_glPointParameterfvARB) },
+    { "glPointParameterfvEXT", "GL_EXT_point_parameters", offsetof(struct opengl_funcs, p_glPointParameterfvEXT) },
+    { "glPointParameterfvSGIS", "GL_SGIS_point_parameters", offsetof(struct opengl_funcs, p_glPointParameterfvSGIS) },
+    { "glPointParameteri", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glPointParameteri) },
+    { "glPointParameteriNV", "GL_NV_point_sprite", offsetof(struct opengl_funcs, p_glPointParameteriNV) },
+    { "glPointParameteriv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glPointParameteriv) },
+    { "glPointParameterivNV", "GL_NV_point_sprite", offsetof(struct opengl_funcs, p_glPointParameterivNV) },
+    { "glPointParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glPointParameterxvOES) },
+    { "glPointSizexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glPointSizexOES) },
+    { "glPollAsyncSGIX", "GL_SGIX_async", offsetof(struct opengl_funcs, p_glPollAsyncSGIX) },
+    { "glPollInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, p_glPollInstrumentsSGIX) },
+    { "glPolygonOffsetClamp", "GL_ARB_polygon_offset_clamp GL_VERSION_4_6", offsetof(struct opengl_funcs, p_glPolygonOffsetClamp) },
+    { "glPolygonOffsetClampEXT", "GL_EXT_polygon_offset_clamp", offsetof(struct opengl_funcs, p_glPolygonOffsetClampEXT) },
+    { "glPolygonOffsetEXT", "GL_EXT_polygon_offset", offsetof(struct opengl_funcs, p_glPolygonOffsetEXT) },
+    { "glPolygonOffsetxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glPolygonOffsetxOES) },
+    { "glPopDebugGroup", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glPopDebugGroup) },
+    { "glPopGroupMarkerEXT", "GL_EXT_debug_marker", offsetof(struct opengl_funcs, p_glPopGroupMarkerEXT) },
+    { "glPresentFrameDualFillNV", "GL_NV_present_video", offsetof(struct opengl_funcs, p_glPresentFrameDualFillNV) },
+    { "glPresentFrameKeyedNV", "GL_NV_present_video", offsetof(struct opengl_funcs, p_glPresentFrameKeyedNV) },
+    { "glPrimitiveBoundingBoxARB", "GL_ARB_ES3_2_compatibility", offsetof(struct opengl_funcs, p_glPrimitiveBoundingBoxARB) },
+    { "glPrimitiveRestartIndex", "GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glPrimitiveRestartIndex) },
+    { "glPrimitiveRestartIndexNV", "GL_NV_primitive_restart", offsetof(struct opengl_funcs, p_glPrimitiveRestartIndexNV) },
+    { "glPrimitiveRestartNV", "GL_NV_primitive_restart", offsetof(struct opengl_funcs, p_glPrimitiveRestartNV) },
+    { "glPrioritizeTexturesEXT", "GL_EXT_texture_object", offsetof(struct opengl_funcs, p_glPrioritizeTexturesEXT) },
+    { "glPrioritizeTexturesxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glPrioritizeTexturesxOES) },
+    { "glProgramBinary", "GL_ARB_get_program_binary GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramBinary) },
+    { "glProgramBufferParametersIivNV", "GL_NV_parameter_buffer_object", offsetof(struct opengl_funcs, p_glProgramBufferParametersIivNV) },
+    { "glProgramBufferParametersIuivNV", "GL_NV_parameter_buffer_object", offsetof(struct opengl_funcs, p_glProgramBufferParametersIuivNV) },
+    { "glProgramBufferParametersfvNV", "GL_NV_parameter_buffer_object", offsetof(struct opengl_funcs, p_glProgramBufferParametersfvNV) },
+    { "glProgramEnvParameter4dARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glProgramEnvParameter4dARB) },
+    { "glProgramEnvParameter4dvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glProgramEnvParameter4dvARB) },
+    { "glProgramEnvParameter4fARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glProgramEnvParameter4fARB) },
+    { "glProgramEnvParameter4fvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glProgramEnvParameter4fvARB) },
+    { "glProgramEnvParameterI4iNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramEnvParameterI4iNV) },
+    { "glProgramEnvParameterI4ivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramEnvParameterI4ivNV) },
+    { "glProgramEnvParameterI4uiNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramEnvParameterI4uiNV) },
+    { "glProgramEnvParameterI4uivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramEnvParameterI4uivNV) },
+    { "glProgramEnvParameters4fvEXT", "GL_EXT_gpu_program_parameters", offsetof(struct opengl_funcs, p_glProgramEnvParameters4fvEXT) },
+    { "glProgramEnvParametersI4ivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramEnvParametersI4ivNV) },
+    { "glProgramEnvParametersI4uivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramEnvParametersI4uivNV) },
+    { "glProgramLocalParameter4dARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glProgramLocalParameter4dARB) },
+    { "glProgramLocalParameter4dvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glProgramLocalParameter4dvARB) },
+    { "glProgramLocalParameter4fARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glProgramLocalParameter4fARB) },
+    { "glProgramLocalParameter4fvARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glProgramLocalParameter4fvARB) },
+    { "glProgramLocalParameterI4iNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramLocalParameterI4iNV) },
+    { "glProgramLocalParameterI4ivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramLocalParameterI4ivNV) },
+    { "glProgramLocalParameterI4uiNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramLocalParameterI4uiNV) },
+    { "glProgramLocalParameterI4uivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramLocalParameterI4uivNV) },
+    { "glProgramLocalParameters4fvEXT", "GL_EXT_gpu_program_parameters", offsetof(struct opengl_funcs, p_glProgramLocalParameters4fvEXT) },
+    { "glProgramLocalParametersI4ivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramLocalParametersI4ivNV) },
+    { "glProgramLocalParametersI4uivNV", "GL_NV_gpu_program4", offsetof(struct opengl_funcs, p_glProgramLocalParametersI4uivNV) },
+    { "glProgramNamedParameter4dNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, p_glProgramNamedParameter4dNV) },
+    { "glProgramNamedParameter4dvNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, p_glProgramNamedParameter4dvNV) },
+    { "glProgramNamedParameter4fNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, p_glProgramNamedParameter4fNV) },
+    { "glProgramNamedParameter4fvNV", "GL_NV_fragment_program", offsetof(struct opengl_funcs, p_glProgramNamedParameter4fvNV) },
+    { "glProgramParameter4dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glProgramParameter4dNV) },
+    { "glProgramParameter4dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glProgramParameter4dvNV) },
+    { "glProgramParameter4fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glProgramParameter4fNV) },
+    { "glProgramParameter4fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glProgramParameter4fvNV) },
+    { "glProgramParameteri", "GL_ARB_get_program_binary GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramParameteri) },
+    { "glProgramParameteriARB", "GL_ARB_geometry_shader4", offsetof(struct opengl_funcs, p_glProgramParameteriARB) },
+    { "glProgramParameteriEXT", "GL_EXT_geometry_shader4", offsetof(struct opengl_funcs, p_glProgramParameteriEXT) },
+    { "glProgramParameters4dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glProgramParameters4dvNV) },
+    { "glProgramParameters4fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glProgramParameters4fvNV) },
+    { "glProgramPathFragmentInputGenNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glProgramPathFragmentInputGenNV) },
+    { "glProgramStringARB", "GL_ARB_fragment_program GL_ARB_vertex_program", offsetof(struct opengl_funcs, p_glProgramStringARB) },
+    { "glProgramSubroutineParametersuivNV", "GL_NV_gpu_program5", offsetof(struct opengl_funcs, p_glProgramSubroutineParametersuivNV) },
+    { "glProgramUniform1d", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform1d) },
+    { "glProgramUniform1dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform1dEXT) },
+    { "glProgramUniform1dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform1dv) },
+    { "glProgramUniform1dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform1dvEXT) },
+    { "glProgramUniform1f", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform1f) },
+    { "glProgramUniform1fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform1fEXT) },
+    { "glProgramUniform1fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform1fv) },
+    { "glProgramUniform1fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform1fvEXT) },
+    { "glProgramUniform1i", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform1i) },
+    { "glProgramUniform1i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform1i64ARB) },
+    { "glProgramUniform1i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform1i64NV) },
+    { "glProgramUniform1i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform1i64vARB) },
+    { "glProgramUniform1i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform1i64vNV) },
+    { "glProgramUniform1iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform1iEXT) },
+    { "glProgramUniform1iv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform1iv) },
+    { "glProgramUniform1ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform1ivEXT) },
+    { "glProgramUniform1ui", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform1ui) },
+    { "glProgramUniform1ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform1ui64ARB) },
+    { "glProgramUniform1ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform1ui64NV) },
+    { "glProgramUniform1ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform1ui64vARB) },
+    { "glProgramUniform1ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform1ui64vNV) },
+    { "glProgramUniform1uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform1uiEXT) },
+    { "glProgramUniform1uiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform1uiv) },
+    { "glProgramUniform1uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform1uivEXT) },
+    { "glProgramUniform2d", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform2d) },
+    { "glProgramUniform2dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform2dEXT) },
+    { "glProgramUniform2dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform2dv) },
+    { "glProgramUniform2dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform2dvEXT) },
+    { "glProgramUniform2f", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform2f) },
+    { "glProgramUniform2fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform2fEXT) },
+    { "glProgramUniform2fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform2fv) },
+    { "glProgramUniform2fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform2fvEXT) },
+    { "glProgramUniform2i", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform2i) },
+    { "glProgramUniform2i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform2i64ARB) },
+    { "glProgramUniform2i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform2i64NV) },
+    { "glProgramUniform2i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform2i64vARB) },
+    { "glProgramUniform2i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform2i64vNV) },
+    { "glProgramUniform2iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform2iEXT) },
+    { "glProgramUniform2iv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform2iv) },
+    { "glProgramUniform2ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform2ivEXT) },
+    { "glProgramUniform2ui", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform2ui) },
+    { "glProgramUniform2ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform2ui64ARB) },
+    { "glProgramUniform2ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform2ui64NV) },
+    { "glProgramUniform2ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform2ui64vARB) },
+    { "glProgramUniform2ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform2ui64vNV) },
+    { "glProgramUniform2uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform2uiEXT) },
+    { "glProgramUniform2uiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform2uiv) },
+    { "glProgramUniform2uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform2uivEXT) },
+    { "glProgramUniform3d", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform3d) },
+    { "glProgramUniform3dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform3dEXT) },
+    { "glProgramUniform3dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform3dv) },
+    { "glProgramUniform3dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform3dvEXT) },
+    { "glProgramUniform3f", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform3f) },
+    { "glProgramUniform3fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform3fEXT) },
+    { "glProgramUniform3fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform3fv) },
+    { "glProgramUniform3fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform3fvEXT) },
+    { "glProgramUniform3i", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform3i) },
+    { "glProgramUniform3i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform3i64ARB) },
+    { "glProgramUniform3i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform3i64NV) },
+    { "glProgramUniform3i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform3i64vARB) },
+    { "glProgramUniform3i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform3i64vNV) },
+    { "glProgramUniform3iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform3iEXT) },
+    { "glProgramUniform3iv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform3iv) },
+    { "glProgramUniform3ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform3ivEXT) },
+    { "glProgramUniform3ui", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform3ui) },
+    { "glProgramUniform3ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform3ui64ARB) },
+    { "glProgramUniform3ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform3ui64NV) },
+    { "glProgramUniform3ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform3ui64vARB) },
+    { "glProgramUniform3ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform3ui64vNV) },
+    { "glProgramUniform3uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform3uiEXT) },
+    { "glProgramUniform3uiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform3uiv) },
+    { "glProgramUniform3uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform3uivEXT) },
+    { "glProgramUniform4d", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform4d) },
+    { "glProgramUniform4dEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform4dEXT) },
+    { "glProgramUniform4dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform4dv) },
+    { "glProgramUniform4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform4dvEXT) },
+    { "glProgramUniform4f", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform4f) },
+    { "glProgramUniform4fEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform4fEXT) },
+    { "glProgramUniform4fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform4fv) },
+    { "glProgramUniform4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform4fvEXT) },
+    { "glProgramUniform4i", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform4i) },
+    { "glProgramUniform4i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform4i64ARB) },
+    { "glProgramUniform4i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform4i64NV) },
+    { "glProgramUniform4i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform4i64vARB) },
+    { "glProgramUniform4i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform4i64vNV) },
+    { "glProgramUniform4iEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform4iEXT) },
+    { "glProgramUniform4iv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform4iv) },
+    { "glProgramUniform4ivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform4ivEXT) },
+    { "glProgramUniform4ui", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform4ui) },
+    { "glProgramUniform4ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform4ui64ARB) },
+    { "glProgramUniform4ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform4ui64NV) },
+    { "glProgramUniform4ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glProgramUniform4ui64vARB) },
+    { "glProgramUniform4ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glProgramUniform4ui64vNV) },
+    { "glProgramUniform4uiEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform4uiEXT) },
+    { "glProgramUniform4uiv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniform4uiv) },
+    { "glProgramUniform4uivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniform4uivEXT) },
+    { "glProgramUniformHandleui64ARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glProgramUniformHandleui64ARB) },
+    { "glProgramUniformHandleui64NV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glProgramUniformHandleui64NV) },
+    { "glProgramUniformHandleui64vARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glProgramUniformHandleui64vARB) },
+    { "glProgramUniformHandleui64vNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glProgramUniformHandleui64vNV) },
+    { "glProgramUniformMatrix2dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2dv) },
+    { "glProgramUniformMatrix2dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2dvEXT) },
+    { "glProgramUniformMatrix2fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2fv) },
+    { "glProgramUniformMatrix2fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2fvEXT) },
+    { "glProgramUniformMatrix2x3dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2x3dv) },
+    { "glProgramUniformMatrix2x3dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2x3dvEXT) },
+    { "glProgramUniformMatrix2x3fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2x3fv) },
+    { "glProgramUniformMatrix2x3fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2x3fvEXT) },
+    { "glProgramUniformMatrix2x4dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2x4dv) },
+    { "glProgramUniformMatrix2x4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2x4dvEXT) },
+    { "glProgramUniformMatrix2x4fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2x4fv) },
+    { "glProgramUniformMatrix2x4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix2x4fvEXT) },
+    { "glProgramUniformMatrix3dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3dv) },
+    { "glProgramUniformMatrix3dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3dvEXT) },
+    { "glProgramUniformMatrix3fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3fv) },
+    { "glProgramUniformMatrix3fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3fvEXT) },
+    { "glProgramUniformMatrix3x2dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3x2dv) },
+    { "glProgramUniformMatrix3x2dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3x2dvEXT) },
+    { "glProgramUniformMatrix3x2fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3x2fv) },
+    { "glProgramUniformMatrix3x2fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3x2fvEXT) },
+    { "glProgramUniformMatrix3x4dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3x4dv) },
+    { "glProgramUniformMatrix3x4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3x4dvEXT) },
+    { "glProgramUniformMatrix3x4fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3x4fv) },
+    { "glProgramUniformMatrix3x4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix3x4fvEXT) },
+    { "glProgramUniformMatrix4dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4dv) },
+    { "glProgramUniformMatrix4dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4dvEXT) },
+    { "glProgramUniformMatrix4fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4fv) },
+    { "glProgramUniformMatrix4fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4fvEXT) },
+    { "glProgramUniformMatrix4x2dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4x2dv) },
+    { "glProgramUniformMatrix4x2dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4x2dvEXT) },
+    { "glProgramUniformMatrix4x2fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4x2fv) },
+    { "glProgramUniformMatrix4x2fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4x2fvEXT) },
+    { "glProgramUniformMatrix4x3dv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4x3dv) },
+    { "glProgramUniformMatrix4x3dvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4x3dvEXT) },
+    { "glProgramUniformMatrix4x3fv", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4x3fv) },
+    { "glProgramUniformMatrix4x3fvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glProgramUniformMatrix4x3fvEXT) },
+    { "glProgramUniformui64NV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glProgramUniformui64NV) },
+    { "glProgramUniformui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glProgramUniformui64vNV) },
+    { "glProgramVertexLimitNV", "GL_NV_geometry_program4", offsetof(struct opengl_funcs, p_glProgramVertexLimitNV) },
+    { "glProvokingVertex", "GL_ARB_provoking_vertex GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glProvokingVertex) },
+    { "glProvokingVertexEXT", "GL_EXT_provoking_vertex", offsetof(struct opengl_funcs, p_glProvokingVertexEXT) },
+    { "glPushClientAttribDefaultEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glPushClientAttribDefaultEXT) },
+    { "glPushDebugGroup", "GL_KHR_debug GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glPushDebugGroup) },
+    { "glPushGroupMarkerEXT", "GL_EXT_debug_marker", offsetof(struct opengl_funcs, p_glPushGroupMarkerEXT) },
+    { "glQueryCounter", "GL_ARB_timer_query GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glQueryCounter) },
+    { "glQueryMatrixxOES", "GL_OES_query_matrix", offsetof(struct opengl_funcs, p_glQueryMatrixxOES) },
+    { "glQueryObjectParameteruiAMD", "GL_AMD_occlusion_query_event", offsetof(struct opengl_funcs, p_glQueryObjectParameteruiAMD) },
+    { "glQueryResourceNV", "GL_NV_query_resource", offsetof(struct opengl_funcs, p_glQueryResourceNV) },
+    { "glQueryResourceTagNV", "GL_NV_query_resource_tag", offsetof(struct opengl_funcs, p_glQueryResourceTagNV) },
+    { "glRasterPos2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glRasterPos2xOES) },
+    { "glRasterPos2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glRasterPos2xvOES) },
+    { "glRasterPos3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glRasterPos3xOES) },
+    { "glRasterPos3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glRasterPos3xvOES) },
+    { "glRasterPos4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glRasterPos4xOES) },
+    { "glRasterPos4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glRasterPos4xvOES) },
+    { "glRasterSamplesEXT", "GL_EXT_raster_multisample GL_NV_framebuffer_mixed_samples", offsetof(struct opengl_funcs, p_glRasterSamplesEXT) },
+    { "glReadBufferRegion", "GL_KTX_buffer_region", offsetof(struct opengl_funcs, p_glReadBufferRegion) },
+    { "glReadInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, p_glReadInstrumentsSGIX) },
+    { "glReadnPixels", "GL_KHR_robustness GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glReadnPixels) },
+    { "glReadnPixelsARB", "GL_ARB_robustness", offsetof(struct opengl_funcs, p_glReadnPixelsARB) },
+    { "glRectxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glRectxOES) },
+    { "glRectxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glRectxvOES) },
+    { "glReferencePlaneSGIX", "GL_SGIX_reference_plane", offsetof(struct opengl_funcs, p_glReferencePlaneSGIX) },
+    { "glReleaseKeyedMutexWin32EXT", "GL_EXT_win32_keyed_mutex", offsetof(struct opengl_funcs, p_glReleaseKeyedMutexWin32EXT) },
+    { "glReleaseShaderCompiler", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glReleaseShaderCompiler) },
+    { "glRenderGpuMaskNV", "GL_NV_gpu_multicast", offsetof(struct opengl_funcs, p_glRenderGpuMaskNV) },
+    { "glRenderbufferStorage", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glRenderbufferStorage) },
+    { "glRenderbufferStorageEXT", "GL_EXT_framebuffer_object", offsetof(struct opengl_funcs, p_glRenderbufferStorageEXT) },
+    { "glRenderbufferStorageMultisample", "GL_ARB_framebuffer_object GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glRenderbufferStorageMultisample) },
+    { "glRenderbufferStorageMultisampleAdvancedAMD", "GL_AMD_framebuffer_multisample_advanced", offsetof(struct opengl_funcs, p_glRenderbufferStorageMultisampleAdvancedAMD) },
+    { "glRenderbufferStorageMultisampleCoverageNV", "GL_NV_framebuffer_multisample_coverage", offsetof(struct opengl_funcs, p_glRenderbufferStorageMultisampleCoverageNV) },
+    { "glRenderbufferStorageMultisampleEXT", "GL_EXT_framebuffer_multisample", offsetof(struct opengl_funcs, p_glRenderbufferStorageMultisampleEXT) },
+    { "glReplacementCodePointerSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, p_glReplacementCodePointerSUN) },
+    { "glReplacementCodeubSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, p_glReplacementCodeubSUN) },
+    { "glReplacementCodeubvSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, p_glReplacementCodeubvSUN) },
+    { "glReplacementCodeuiColor3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiColor3fVertex3fSUN) },
+    { "glReplacementCodeuiColor3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiColor3fVertex3fvSUN) },
+    { "glReplacementCodeuiColor4fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiColor4fNormal3fVertex3fSUN) },
+    { "glReplacementCodeuiColor4fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiColor4fNormal3fVertex3fvSUN) },
+    { "glReplacementCodeuiColor4ubVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiColor4ubVertex3fSUN) },
+    { "glReplacementCodeuiColor4ubVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiColor4ubVertex3fvSUN) },
+    { "glReplacementCodeuiNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiNormal3fVertex3fSUN) },
+    { "glReplacementCodeuiNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiNormal3fVertex3fvSUN) },
+    { "glReplacementCodeuiSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, p_glReplacementCodeuiSUN) },
+    { "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN) },
+    { "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN) },
+    { "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN) },
+    { "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN) },
+    { "glReplacementCodeuiTexCoord2fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiTexCoord2fVertex3fSUN) },
+    { "glReplacementCodeuiTexCoord2fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiTexCoord2fVertex3fvSUN) },
+    { "glReplacementCodeuiVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiVertex3fSUN) },
+    { "glReplacementCodeuiVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glReplacementCodeuiVertex3fvSUN) },
+    { "glReplacementCodeuivSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, p_glReplacementCodeuivSUN) },
+    { "glReplacementCodeusSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, p_glReplacementCodeusSUN) },
+    { "glReplacementCodeusvSUN", "GL_SUN_triangle_list", offsetof(struct opengl_funcs, p_glReplacementCodeusvSUN) },
+    { "glRequestResidentProgramsNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glRequestResidentProgramsNV) },
+    { "glResetHistogram", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glResetHistogram) },
+    { "glResetHistogramEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glResetHistogramEXT) },
+    { "glResetMemoryObjectParameterNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, p_glResetMemoryObjectParameterNV) },
+    { "glResetMinmax", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glResetMinmax) },
+    { "glResetMinmaxEXT", "GL_EXT_histogram", offsetof(struct opengl_funcs, p_glResetMinmaxEXT) },
+    { "glResizeBuffersMESA", "GL_MESA_resize_buffers", offsetof(struct opengl_funcs, p_glResizeBuffersMESA) },
+    { "glResolveDepthValuesNV", "GL_NV_sample_locations", offsetof(struct opengl_funcs, p_glResolveDepthValuesNV) },
+    { "glResumeTransformFeedback", "GL_ARB_transform_feedback2 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glResumeTransformFeedback) },
+    { "glResumeTransformFeedbackNV", "GL_NV_transform_feedback2", offsetof(struct opengl_funcs, p_glResumeTransformFeedbackNV) },
+    { "glRotatexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glRotatexOES) },
+    { "glSampleCoverage", "GL_VERSION_1_3", offsetof(struct opengl_funcs, p_glSampleCoverage) },
+    { "glSampleCoverageARB", "GL_ARB_multisample", offsetof(struct opengl_funcs, p_glSampleCoverageARB) },
+    { "glSampleMapATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glSampleMapATI) },
+    { "glSampleMaskEXT", "GL_EXT_multisample", offsetof(struct opengl_funcs, p_glSampleMaskEXT) },
+    { "glSampleMaskIndexedNV", "GL_NV_explicit_multisample", offsetof(struct opengl_funcs, p_glSampleMaskIndexedNV) },
+    { "glSampleMaskSGIS", "GL_SGIS_multisample", offsetof(struct opengl_funcs, p_glSampleMaskSGIS) },
+    { "glSampleMaski", "GL_ARB_texture_multisample GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glSampleMaski) },
+    { "glSamplePatternEXT", "GL_EXT_multisample", offsetof(struct opengl_funcs, p_glSamplePatternEXT) },
+    { "glSamplePatternSGIS", "GL_SGIS_multisample", offsetof(struct opengl_funcs, p_glSamplePatternSGIS) },
+    { "glSamplerParameterIiv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glSamplerParameterIiv) },
+    { "glSamplerParameterIuiv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glSamplerParameterIuiv) },
+    { "glSamplerParameterf", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glSamplerParameterf) },
+    { "glSamplerParameterfv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glSamplerParameterfv) },
+    { "glSamplerParameteri", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glSamplerParameteri) },
+    { "glSamplerParameteriv", "GL_ARB_sampler_objects GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glSamplerParameteriv) },
+    { "glScalexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glScalexOES) },
+    { "glScissorArrayv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glScissorArrayv) },
+    { "glScissorExclusiveArrayvNV", "GL_NV_scissor_exclusive", offsetof(struct opengl_funcs, p_glScissorExclusiveArrayvNV) },
+    { "glScissorExclusiveNV", "GL_NV_scissor_exclusive", offsetof(struct opengl_funcs, p_glScissorExclusiveNV) },
+    { "glScissorIndexed", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glScissorIndexed) },
+    { "glScissorIndexedv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glScissorIndexedv) },
+    { "glSecondaryColor3b", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3b) },
+    { "glSecondaryColor3bEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3bEXT) },
+    { "glSecondaryColor3bv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3bv) },
+    { "glSecondaryColor3bvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3bvEXT) },
+    { "glSecondaryColor3d", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3d) },
+    { "glSecondaryColor3dEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3dEXT) },
+    { "glSecondaryColor3dv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3dv) },
+    { "glSecondaryColor3dvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3dvEXT) },
+    { "glSecondaryColor3f", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3f) },
+    { "glSecondaryColor3fEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3fEXT) },
+    { "glSecondaryColor3fv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3fv) },
+    { "glSecondaryColor3fvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3fvEXT) },
+    { "glSecondaryColor3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glSecondaryColor3hNV) },
+    { "glSecondaryColor3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glSecondaryColor3hvNV) },
+    { "glSecondaryColor3i", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3i) },
+    { "glSecondaryColor3iEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3iEXT) },
+    { "glSecondaryColor3iv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3iv) },
+    { "glSecondaryColor3ivEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3ivEXT) },
+    { "glSecondaryColor3s", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3s) },
+    { "glSecondaryColor3sEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3sEXT) },
+    { "glSecondaryColor3sv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3sv) },
+    { "glSecondaryColor3svEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3svEXT) },
+    { "glSecondaryColor3ub", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3ub) },
+    { "glSecondaryColor3ubEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3ubEXT) },
+    { "glSecondaryColor3ubv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3ubv) },
+    { "glSecondaryColor3ubvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3ubvEXT) },
+    { "glSecondaryColor3ui", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3ui) },
+    { "glSecondaryColor3uiEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3uiEXT) },
+    { "glSecondaryColor3uiv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3uiv) },
+    { "glSecondaryColor3uivEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3uivEXT) },
+    { "glSecondaryColor3us", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3us) },
+    { "glSecondaryColor3usEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3usEXT) },
+    { "glSecondaryColor3usv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColor3usv) },
+    { "glSecondaryColor3usvEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColor3usvEXT) },
+    { "glSecondaryColorFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glSecondaryColorFormatNV) },
+    { "glSecondaryColorP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glSecondaryColorP3ui) },
+    { "glSecondaryColorP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glSecondaryColorP3uiv) },
+    { "glSecondaryColorPointer", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glSecondaryColorPointer) },
+    { "glSecondaryColorPointerEXT", "GL_EXT_secondary_color", offsetof(struct opengl_funcs, p_glSecondaryColorPointerEXT) },
+    { "glSecondaryColorPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, p_glSecondaryColorPointerListIBM) },
+    { "glSelectPerfMonitorCountersAMD", "GL_AMD_performance_monitor", offsetof(struct opengl_funcs, p_glSelectPerfMonitorCountersAMD) },
+    { "glSelectTextureCoordSetSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glSelectTextureCoordSetSGIS) },
+    { "glSelectTextureSGIS", "GL_SGIS_multitexture", offsetof(struct opengl_funcs, p_glSelectTextureSGIS) },
+    { "glSemaphoreParameterui64vEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, p_glSemaphoreParameterui64vEXT) },
+    { "glSeparableFilter2D", "GL_ARB_imaging", offsetof(struct opengl_funcs, p_glSeparableFilter2D) },
+    { "glSeparableFilter2DEXT", "GL_EXT_convolution", offsetof(struct opengl_funcs, p_glSeparableFilter2DEXT) },
+    { "glSetFenceAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, p_glSetFenceAPPLE) },
+    { "glSetFenceNV", "GL_NV_fence", offsetof(struct opengl_funcs, p_glSetFenceNV) },
+    { "glSetFragmentShaderConstantATI", "GL_ATI_fragment_shader", offsetof(struct opengl_funcs, p_glSetFragmentShaderConstantATI) },
+    { "glSetInvariantEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glSetInvariantEXT) },
+    { "glSetLocalConstantEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glSetLocalConstantEXT) },
+    { "glSetMultisamplefvAMD", "GL_AMD_sample_positions", offsetof(struct opengl_funcs, p_glSetMultisamplefvAMD) },
+    { "glShaderBinary", "GL_ARB_ES2_compatibility GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glShaderBinary) },
+    { "glShaderOp1EXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glShaderOp1EXT) },
+    { "glShaderOp2EXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glShaderOp2EXT) },
+    { "glShaderOp3EXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glShaderOp3EXT) },
+    { "glShaderSource", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glShaderSource) },
+    { "glShaderSourceARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glShaderSourceARB) },
+    { "glShaderStorageBlockBinding", "GL_ARB_shader_storage_buffer_object GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glShaderStorageBlockBinding) },
+    { "glShadingRateImageBarrierNV", "GL_NV_shading_rate_image GL_NV_shading_rate_image", offsetof(struct opengl_funcs, p_glShadingRateImageBarrierNV) },
+    { "glShadingRateImagePaletteNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, p_glShadingRateImagePaletteNV) },
+    { "glShadingRateSampleOrderCustomNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, p_glShadingRateSampleOrderCustomNV) },
+    { "glShadingRateSampleOrderNV", "GL_NV_shading_rate_image", offsetof(struct opengl_funcs, p_glShadingRateSampleOrderNV) },
+    { "glSharpenTexFuncSGIS", "GL_SGIS_sharpen_texture", offsetof(struct opengl_funcs, p_glSharpenTexFuncSGIS) },
+    { "glSignalSemaphoreEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, p_glSignalSemaphoreEXT) },
+    { "glSignalSemaphoreui64NVX", "GL_NVX_progress_fence", offsetof(struct opengl_funcs, p_glSignalSemaphoreui64NVX) },
+    { "glSignalVkFenceNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, p_glSignalVkFenceNV) },
+    { "glSignalVkSemaphoreNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, p_glSignalVkSemaphoreNV) },
+    { "glSpecializeShader", "GL_VERSION_4_6", offsetof(struct opengl_funcs, p_glSpecializeShader) },
+    { "glSpecializeShaderARB", "GL_ARB_gl_spirv", offsetof(struct opengl_funcs, p_glSpecializeShaderARB) },
+    { "glSpriteParameterfSGIX", "GL_SGIX_sprite", offsetof(struct opengl_funcs, p_glSpriteParameterfSGIX) },
+    { "glSpriteParameterfvSGIX", "GL_SGIX_sprite", offsetof(struct opengl_funcs, p_glSpriteParameterfvSGIX) },
+    { "glSpriteParameteriSGIX", "GL_SGIX_sprite", offsetof(struct opengl_funcs, p_glSpriteParameteriSGIX) },
+    { "glSpriteParameterivSGIX", "GL_SGIX_sprite", offsetof(struct opengl_funcs, p_glSpriteParameterivSGIX) },
+    { "glStartInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, p_glStartInstrumentsSGIX) },
+    { "glStateCaptureNV", "GL_NV_command_list", offsetof(struct opengl_funcs, p_glStateCaptureNV) },
+    { "glStencilClearTagEXT", "GL_EXT_stencil_clear_tag", offsetof(struct opengl_funcs, p_glStencilClearTagEXT) },
+    { "glStencilFillPathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glStencilFillPathInstancedNV) },
+    { "glStencilFillPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glStencilFillPathNV) },
+    { "glStencilFuncSeparate", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glStencilFuncSeparate) },
+    { "glStencilFuncSeparateATI", "GL_ATI_separate_stencil", offsetof(struct opengl_funcs, p_glStencilFuncSeparateATI) },
+    { "glStencilMaskSeparate", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glStencilMaskSeparate) },
+    { "glStencilOpSeparate", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glStencilOpSeparate) },
+    { "glStencilOpSeparateATI", "GL_ATI_separate_stencil", offsetof(struct opengl_funcs, p_glStencilOpSeparateATI) },
+    { "glStencilOpValueAMD", "GL_AMD_stencil_operation_extended", offsetof(struct opengl_funcs, p_glStencilOpValueAMD) },
+    { "glStencilStrokePathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glStencilStrokePathInstancedNV) },
+    { "glStencilStrokePathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glStencilStrokePathNV) },
+    { "glStencilThenCoverFillPathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glStencilThenCoverFillPathInstancedNV) },
+    { "glStencilThenCoverFillPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glStencilThenCoverFillPathNV) },
+    { "glStencilThenCoverStrokePathInstancedNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glStencilThenCoverStrokePathInstancedNV) },
+    { "glStencilThenCoverStrokePathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glStencilThenCoverStrokePathNV) },
+    { "glStopInstrumentsSGIX", "GL_SGIX_instruments", offsetof(struct opengl_funcs, p_glStopInstrumentsSGIX) },
+    { "glStringMarkerGREMEDY", "GL_GREMEDY_string_marker", offsetof(struct opengl_funcs, p_glStringMarkerGREMEDY) },
+    { "glSubpixelPrecisionBiasNV", "GL_NV_conservative_raster", offsetof(struct opengl_funcs, p_glSubpixelPrecisionBiasNV) },
+    { "glSwizzleEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glSwizzleEXT) },
+    { "glSyncTextureINTEL", "GL_INTEL_map_texture", offsetof(struct opengl_funcs, p_glSyncTextureINTEL) },
+    { "glTagSampleBufferSGIX", "GL_SGIX_tag_sample_buffer", offsetof(struct opengl_funcs, p_glTagSampleBufferSGIX) },
+    { "glTangent3bEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3bEXT) },
+    { "glTangent3bvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3bvEXT) },
+    { "glTangent3dEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3dEXT) },
+    { "glTangent3dvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3dvEXT) },
+    { "glTangent3fEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3fEXT) },
+    { "glTangent3fvEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3fvEXT) },
+    { "glTangent3iEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3iEXT) },
+    { "glTangent3ivEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3ivEXT) },
+    { "glTangent3sEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3sEXT) },
+    { "glTangent3svEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangent3svEXT) },
+    { "glTangentPointerEXT", "GL_EXT_coordinate_frame", offsetof(struct opengl_funcs, p_glTangentPointerEXT) },
+    { "glTbufferMask3DFX", "GL_3DFX_tbuffer", offsetof(struct opengl_funcs, p_glTbufferMask3DFX) },
+    { "glTessellationFactorAMD", "GL_AMD_vertex_shader_tessellator", offsetof(struct opengl_funcs, p_glTessellationFactorAMD) },
+    { "glTessellationModeAMD", "GL_AMD_vertex_shader_tessellator", offsetof(struct opengl_funcs, p_glTessellationModeAMD) },
+    { "glTestFenceAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, p_glTestFenceAPPLE) },
+    { "glTestFenceNV", "GL_NV_fence", offsetof(struct opengl_funcs, p_glTestFenceNV) },
+    { "glTestObjectAPPLE", "GL_APPLE_fence", offsetof(struct opengl_funcs, p_glTestObjectAPPLE) },
+    { "glTexAttachMemoryNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, p_glTexAttachMemoryNV) },
+    { "glTexBuffer", "GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glTexBuffer) },
+    { "glTexBufferARB", "GL_ARB_texture_buffer_object", offsetof(struct opengl_funcs, p_glTexBufferARB) },
+    { "glTexBufferEXT", "GL_EXT_texture_buffer_object", offsetof(struct opengl_funcs, p_glTexBufferEXT) },
+    { "glTexBufferRange", "GL_ARB_texture_buffer_range GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glTexBufferRange) },
+    { "glTexBumpParameterfvATI", "GL_ATI_envmap_bumpmap", offsetof(struct opengl_funcs, p_glTexBumpParameterfvATI) },
+    { "glTexBumpParameterivATI", "GL_ATI_envmap_bumpmap", offsetof(struct opengl_funcs, p_glTexBumpParameterivATI) },
+    { "glTexCoord1bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glTexCoord1bOES) },
+    { "glTexCoord1bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glTexCoord1bvOES) },
+    { "glTexCoord1hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glTexCoord1hNV) },
+    { "glTexCoord1hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glTexCoord1hvNV) },
+    { "glTexCoord1xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexCoord1xOES) },
+    { "glTexCoord1xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexCoord1xvOES) },
+    { "glTexCoord2bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glTexCoord2bOES) },
+    { "glTexCoord2bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glTexCoord2bvOES) },
+    { "glTexCoord2fColor3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fColor3fVertex3fSUN) },
+    { "glTexCoord2fColor3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fColor3fVertex3fvSUN) },
+    { "glTexCoord2fColor4fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fColor4fNormal3fVertex3fSUN) },
+    { "glTexCoord2fColor4fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fColor4fNormal3fVertex3fvSUN) },
+    { "glTexCoord2fColor4ubVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fColor4ubVertex3fSUN) },
+    { "glTexCoord2fColor4ubVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fColor4ubVertex3fvSUN) },
+    { "glTexCoord2fNormal3fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fNormal3fVertex3fSUN) },
+    { "glTexCoord2fNormal3fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fNormal3fVertex3fvSUN) },
+    { "glTexCoord2fVertex3fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fVertex3fSUN) },
+    { "glTexCoord2fVertex3fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord2fVertex3fvSUN) },
+    { "glTexCoord2hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glTexCoord2hNV) },
+    { "glTexCoord2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glTexCoord2hvNV) },
+    { "glTexCoord2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexCoord2xOES) },
+    { "glTexCoord2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexCoord2xvOES) },
+    { "glTexCoord3bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glTexCoord3bOES) },
+    { "glTexCoord3bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glTexCoord3bvOES) },
+    { "glTexCoord3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glTexCoord3hNV) },
+    { "glTexCoord3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glTexCoord3hvNV) },
+    { "glTexCoord3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexCoord3xOES) },
+    { "glTexCoord3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexCoord3xvOES) },
+    { "glTexCoord4bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glTexCoord4bOES) },
+    { "glTexCoord4bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glTexCoord4bvOES) },
+    { "glTexCoord4fColor4fNormal3fVertex4fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord4fColor4fNormal3fVertex4fSUN) },
+    { "glTexCoord4fColor4fNormal3fVertex4fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord4fColor4fNormal3fVertex4fvSUN) },
+    { "glTexCoord4fVertex4fSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord4fVertex4fSUN) },
+    { "glTexCoord4fVertex4fvSUN", "GL_SUN_vertex", offsetof(struct opengl_funcs, p_glTexCoord4fVertex4fvSUN) },
+    { "glTexCoord4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glTexCoord4hNV) },
+    { "glTexCoord4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glTexCoord4hvNV) },
+    { "glTexCoord4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexCoord4xOES) },
+    { "glTexCoord4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexCoord4xvOES) },
+    { "glTexCoordFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glTexCoordFormatNV) },
+    { "glTexCoordP1ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glTexCoordP1ui) },
+    { "glTexCoordP1uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glTexCoordP1uiv) },
+    { "glTexCoordP2ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glTexCoordP2ui) },
+    { "glTexCoordP2uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glTexCoordP2uiv) },
+    { "glTexCoordP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glTexCoordP3ui) },
+    { "glTexCoordP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glTexCoordP3uiv) },
+    { "glTexCoordP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glTexCoordP4ui) },
+    { "glTexCoordP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glTexCoordP4uiv) },
+    { "glTexCoordPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, p_glTexCoordPointerEXT) },
+    { "glTexCoordPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, p_glTexCoordPointerListIBM) },
+    { "glTexCoordPointervINTEL", "GL_INTEL_parallel_arrays", offsetof(struct opengl_funcs, p_glTexCoordPointervINTEL) },
+    { "glTexEnvxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexEnvxOES) },
+    { "glTexEnvxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexEnvxvOES) },
+    { "glTexFilterFuncSGIS", "GL_SGIS_texture_filter4", offsetof(struct opengl_funcs, p_glTexFilterFuncSGIS) },
+    { "glTexGenxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexGenxOES) },
+    { "glTexGenxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexGenxvOES) },
+    { "glTexImage2DMultisample", "GL_ARB_texture_multisample GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glTexImage2DMultisample) },
+    { "glTexImage2DMultisampleCoverageNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, p_glTexImage2DMultisampleCoverageNV) },
+    { "glTexImage3D", "GL_VERSION_1_2", offsetof(struct opengl_funcs, p_glTexImage3D) },
+    { "glTexImage3DEXT", "GL_EXT_texture3D", offsetof(struct opengl_funcs, p_glTexImage3DEXT) },
+    { "glTexImage3DMultisample", "GL_ARB_texture_multisample GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glTexImage3DMultisample) },
+    { "glTexImage3DMultisampleCoverageNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, p_glTexImage3DMultisampleCoverageNV) },
+    { "glTexImage4DSGIS", "GL_SGIS_texture4D", offsetof(struct opengl_funcs, p_glTexImage4DSGIS) },
+    { "glTexPageCommitmentARB", "GL_ARB_sparse_texture", offsetof(struct opengl_funcs, p_glTexPageCommitmentARB) },
+    { "glTexParameterIiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glTexParameterIiv) },
+    { "glTexParameterIivEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, p_glTexParameterIivEXT) },
+    { "glTexParameterIuiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glTexParameterIuiv) },
+    { "glTexParameterIuivEXT", "GL_EXT_texture_integer", offsetof(struct opengl_funcs, p_glTexParameterIuivEXT) },
+    { "glTexParameterxOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexParameterxOES) },
+    { "glTexParameterxvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTexParameterxvOES) },
+    { "glTexRenderbufferNV", "GL_NV_explicit_multisample", offsetof(struct opengl_funcs, p_glTexRenderbufferNV) },
+    { "glTexStorage1D", "GL_ARB_texture_storage GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glTexStorage1D) },
+    { "glTexStorage2D", "GL_ARB_texture_storage GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glTexStorage2D) },
+    { "glTexStorage2DMultisample", "GL_ARB_texture_storage_multisample GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glTexStorage2DMultisample) },
+    { "glTexStorage3D", "GL_ARB_texture_storage GL_VERSION_4_2", offsetof(struct opengl_funcs, p_glTexStorage3D) },
+    { "glTexStorage3DMultisample", "GL_ARB_texture_storage_multisample GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glTexStorage3DMultisample) },
+    { "glTexStorageMem1DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTexStorageMem1DEXT) },
+    { "glTexStorageMem2DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTexStorageMem2DEXT) },
+    { "glTexStorageMem2DMultisampleEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTexStorageMem2DMultisampleEXT) },
+    { "glTexStorageMem3DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTexStorageMem3DEXT) },
+    { "glTexStorageMem3DMultisampleEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTexStorageMem3DMultisampleEXT) },
+    { "glTexStorageSparseAMD", "GL_AMD_sparse_texture", offsetof(struct opengl_funcs, p_glTexStorageSparseAMD) },
+    { "glTexSubImage1DEXT", "GL_EXT_subtexture", offsetof(struct opengl_funcs, p_glTexSubImage1DEXT) },
+    { "glTexSubImage2DEXT", "GL_EXT_subtexture", offsetof(struct opengl_funcs, p_glTexSubImage2DEXT) },
+    { "glTexSubImage3D", "GL_VERSION_1_2", offsetof(struct opengl_funcs, p_glTexSubImage3D) },
+    { "glTexSubImage3DEXT", "GL_EXT_texture3D", offsetof(struct opengl_funcs, p_glTexSubImage3DEXT) },
+    { "glTexSubImage4DSGIS", "GL_SGIS_texture4D", offsetof(struct opengl_funcs, p_glTexSubImage4DSGIS) },
+    { "glTextureAttachMemoryNV", "GL_NV_memory_attachment", offsetof(struct opengl_funcs, p_glTextureAttachMemoryNV) },
+    { "glTextureBarrier", "GL_ARB_texture_barrier GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureBarrier) },
+    { "glTextureBarrierNV", "GL_NV_texture_barrier", offsetof(struct opengl_funcs, p_glTextureBarrierNV) },
+    { "glTextureBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureBuffer) },
+    { "glTextureBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureBufferEXT) },
+    { "glTextureBufferRange", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureBufferRange) },
+    { "glTextureBufferRangeEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureBufferRangeEXT) },
+    { "glTextureColorMaskSGIS", "GL_SGIS_texture_color_mask", offsetof(struct opengl_funcs, p_glTextureColorMaskSGIS) },
+    { "glTextureImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureImage1DEXT) },
+    { "glTextureImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureImage2DEXT) },
+    { "glTextureImage2DMultisampleCoverageNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, p_glTextureImage2DMultisampleCoverageNV) },
+    { "glTextureImage2DMultisampleNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, p_glTextureImage2DMultisampleNV) },
+    { "glTextureImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureImage3DEXT) },
+    { "glTextureImage3DMultisampleCoverageNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, p_glTextureImage3DMultisampleCoverageNV) },
+    { "glTextureImage3DMultisampleNV", "GL_NV_texture_multisample", offsetof(struct opengl_funcs, p_glTextureImage3DMultisampleNV) },
+    { "glTextureLightEXT", "GL_EXT_light_texture", offsetof(struct opengl_funcs, p_glTextureLightEXT) },
+    { "glTextureMaterialEXT", "GL_EXT_light_texture", offsetof(struct opengl_funcs, p_glTextureMaterialEXT) },
+    { "glTextureNormalEXT", "GL_EXT_texture_perturb_normal", offsetof(struct opengl_funcs, p_glTextureNormalEXT) },
+    { "glTexturePageCommitmentEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTexturePageCommitmentEXT) },
+    { "glTextureParameterIiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureParameterIiv) },
+    { "glTextureParameterIivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureParameterIivEXT) },
+    { "glTextureParameterIuiv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureParameterIuiv) },
+    { "glTextureParameterIuivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureParameterIuivEXT) },
+    { "glTextureParameterf", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureParameterf) },
+    { "glTextureParameterfEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureParameterfEXT) },
+    { "glTextureParameterfv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureParameterfv) },
+    { "glTextureParameterfvEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureParameterfvEXT) },
+    { "glTextureParameteri", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureParameteri) },
+    { "glTextureParameteriEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureParameteriEXT) },
+    { "glTextureParameteriv", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureParameteriv) },
+    { "glTextureParameterivEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureParameterivEXT) },
+    { "glTextureRangeAPPLE", "GL_APPLE_texture_range", offsetof(struct opengl_funcs, p_glTextureRangeAPPLE) },
+    { "glTextureRenderbufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureRenderbufferEXT) },
+    { "glTextureStorage1D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureStorage1D) },
+    { "glTextureStorage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureStorage1DEXT) },
+    { "glTextureStorage2D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureStorage2D) },
+    { "glTextureStorage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureStorage2DEXT) },
+    { "glTextureStorage2DMultisample", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureStorage2DMultisample) },
+    { "glTextureStorage2DMultisampleEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureStorage2DMultisampleEXT) },
+    { "glTextureStorage3D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureStorage3D) },
+    { "glTextureStorage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureStorage3DEXT) },
+    { "glTextureStorage3DMultisample", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureStorage3DMultisample) },
+    { "glTextureStorage3DMultisampleEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureStorage3DMultisampleEXT) },
+    { "glTextureStorageMem1DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTextureStorageMem1DEXT) },
+    { "glTextureStorageMem2DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTextureStorageMem2DEXT) },
+    { "glTextureStorageMem2DMultisampleEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTextureStorageMem2DMultisampleEXT) },
+    { "glTextureStorageMem3DEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTextureStorageMem3DEXT) },
+    { "glTextureStorageMem3DMultisampleEXT", "GL_EXT_memory_object", offsetof(struct opengl_funcs, p_glTextureStorageMem3DMultisampleEXT) },
+    { "glTextureStorageSparseAMD", "GL_AMD_sparse_texture", offsetof(struct opengl_funcs, p_glTextureStorageSparseAMD) },
+    { "glTextureSubImage1D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureSubImage1D) },
+    { "glTextureSubImage1DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureSubImage1DEXT) },
+    { "glTextureSubImage2D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureSubImage2D) },
+    { "glTextureSubImage2DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureSubImage2DEXT) },
+    { "glTextureSubImage3D", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTextureSubImage3D) },
+    { "glTextureSubImage3DEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glTextureSubImage3DEXT) },
+    { "glTextureView", "GL_ARB_texture_view GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glTextureView) },
+    { "glTrackMatrixNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glTrackMatrixNV) },
+    { "glTransformFeedbackAttribsNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glTransformFeedbackAttribsNV) },
+    { "glTransformFeedbackBufferBase", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTransformFeedbackBufferBase) },
+    { "glTransformFeedbackBufferRange", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glTransformFeedbackBufferRange) },
+    { "glTransformFeedbackStreamAttribsNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glTransformFeedbackStreamAttribsNV) },
+    { "glTransformFeedbackVaryings", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glTransformFeedbackVaryings) },
+    { "glTransformFeedbackVaryingsEXT", "GL_EXT_transform_feedback", offsetof(struct opengl_funcs, p_glTransformFeedbackVaryingsEXT) },
+    { "glTransformFeedbackVaryingsNV", "GL_NV_transform_feedback", offsetof(struct opengl_funcs, p_glTransformFeedbackVaryingsNV) },
+    { "glTransformPathNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glTransformPathNV) },
+    { "glTranslatexOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glTranslatexOES) },
+    { "glUniform1d", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniform1d) },
+    { "glUniform1dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniform1dv) },
+    { "glUniform1f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform1f) },
+    { "glUniform1fARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform1fARB) },
+    { "glUniform1fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform1fv) },
+    { "glUniform1fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform1fvARB) },
+    { "glUniform1i", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform1i) },
+    { "glUniform1i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform1i64ARB) },
+    { "glUniform1i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform1i64NV) },
+    { "glUniform1i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform1i64vARB) },
+    { "glUniform1i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform1i64vNV) },
+    { "glUniform1iARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform1iARB) },
+    { "glUniform1iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform1iv) },
+    { "glUniform1ivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform1ivARB) },
+    { "glUniform1ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glUniform1ui) },
+    { "glUniform1ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform1ui64ARB) },
+    { "glUniform1ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform1ui64NV) },
+    { "glUniform1ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform1ui64vARB) },
+    { "glUniform1ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform1ui64vNV) },
+    { "glUniform1uiEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glUniform1uiEXT) },
+    { "glUniform1uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glUniform1uiv) },
+    { "glUniform1uivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glUniform1uivEXT) },
+    { "glUniform2d", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniform2d) },
+    { "glUniform2dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniform2dv) },
+    { "glUniform2f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform2f) },
+    { "glUniform2fARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform2fARB) },
+    { "glUniform2fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform2fv) },
+    { "glUniform2fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform2fvARB) },
+    { "glUniform2i", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform2i) },
+    { "glUniform2i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform2i64ARB) },
+    { "glUniform2i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform2i64NV) },
+    { "glUniform2i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform2i64vARB) },
+    { "glUniform2i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform2i64vNV) },
+    { "glUniform2iARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform2iARB) },
+    { "glUniform2iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform2iv) },
+    { "glUniform2ivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform2ivARB) },
+    { "glUniform2ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glUniform2ui) },
+    { "glUniform2ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform2ui64ARB) },
+    { "glUniform2ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform2ui64NV) },
+    { "glUniform2ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform2ui64vARB) },
+    { "glUniform2ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform2ui64vNV) },
+    { "glUniform2uiEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glUniform2uiEXT) },
+    { "glUniform2uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glUniform2uiv) },
+    { "glUniform2uivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glUniform2uivEXT) },
+    { "glUniform3d", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniform3d) },
+    { "glUniform3dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniform3dv) },
+    { "glUniform3f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform3f) },
+    { "glUniform3fARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform3fARB) },
+    { "glUniform3fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform3fv) },
+    { "glUniform3fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform3fvARB) },
+    { "glUniform3i", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform3i) },
+    { "glUniform3i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform3i64ARB) },
+    { "glUniform3i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform3i64NV) },
+    { "glUniform3i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform3i64vARB) },
+    { "glUniform3i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform3i64vNV) },
+    { "glUniform3iARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform3iARB) },
+    { "glUniform3iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform3iv) },
+    { "glUniform3ivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform3ivARB) },
+    { "glUniform3ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glUniform3ui) },
+    { "glUniform3ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform3ui64ARB) },
+    { "glUniform3ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform3ui64NV) },
+    { "glUniform3ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform3ui64vARB) },
+    { "glUniform3ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform3ui64vNV) },
+    { "glUniform3uiEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glUniform3uiEXT) },
+    { "glUniform3uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glUniform3uiv) },
+    { "glUniform3uivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glUniform3uivEXT) },
+    { "glUniform4d", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniform4d) },
+    { "glUniform4dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniform4dv) },
+    { "glUniform4f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform4f) },
+    { "glUniform4fARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform4fARB) },
+    { "glUniform4fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform4fv) },
+    { "glUniform4fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform4fvARB) },
+    { "glUniform4i", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform4i) },
+    { "glUniform4i64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform4i64ARB) },
+    { "glUniform4i64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform4i64NV) },
+    { "glUniform4i64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform4i64vARB) },
+    { "glUniform4i64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform4i64vNV) },
+    { "glUniform4iARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform4iARB) },
+    { "glUniform4iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniform4iv) },
+    { "glUniform4ivARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniform4ivARB) },
+    { "glUniform4ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glUniform4ui) },
+    { "glUniform4ui64ARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform4ui64ARB) },
+    { "glUniform4ui64NV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform4ui64NV) },
+    { "glUniform4ui64vARB", "GL_ARB_gpu_shader_int64", offsetof(struct opengl_funcs, p_glUniform4ui64vARB) },
+    { "glUniform4ui64vNV", "GL_AMD_gpu_shader_int64 GL_NV_gpu_shader5", offsetof(struct opengl_funcs, p_glUniform4ui64vNV) },
+    { "glUniform4uiEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glUniform4uiEXT) },
+    { "glUniform4uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glUniform4uiv) },
+    { "glUniform4uivEXT", "GL_EXT_gpu_shader4", offsetof(struct opengl_funcs, p_glUniform4uivEXT) },
+    { "glUniformBlockBinding", "GL_ARB_uniform_buffer_object GL_VERSION_3_1", offsetof(struct opengl_funcs, p_glUniformBlockBinding) },
+    { "glUniformBufferEXT", "GL_EXT_bindable_uniform", offsetof(struct opengl_funcs, p_glUniformBufferEXT) },
+    { "glUniformHandleui64ARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glUniformHandleui64ARB) },
+    { "glUniformHandleui64NV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glUniformHandleui64NV) },
+    { "glUniformHandleui64vARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glUniformHandleui64vARB) },
+    { "glUniformHandleui64vNV", "GL_NV_bindless_texture", offsetof(struct opengl_funcs, p_glUniformHandleui64vNV) },
+    { "glUniformMatrix2dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformMatrix2dv) },
+    { "glUniformMatrix2fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniformMatrix2fv) },
+    { "glUniformMatrix2fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniformMatrix2fvARB) },
+    { "glUniformMatrix2x3dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformMatrix2x3dv) },
+    { "glUniformMatrix2x3fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, p_glUniformMatrix2x3fv) },
+    { "glUniformMatrix2x4dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformMatrix2x4dv) },
+    { "glUniformMatrix2x4fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, p_glUniformMatrix2x4fv) },
+    { "glUniformMatrix3dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformMatrix3dv) },
+    { "glUniformMatrix3fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniformMatrix3fv) },
+    { "glUniformMatrix3fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniformMatrix3fvARB) },
+    { "glUniformMatrix3x2dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformMatrix3x2dv) },
+    { "glUniformMatrix3x2fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, p_glUniformMatrix3x2fv) },
+    { "glUniformMatrix3x4dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformMatrix3x4dv) },
+    { "glUniformMatrix3x4fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, p_glUniformMatrix3x4fv) },
+    { "glUniformMatrix4dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformMatrix4dv) },
+    { "glUniformMatrix4fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUniformMatrix4fv) },
+    { "glUniformMatrix4fvARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUniformMatrix4fvARB) },
+    { "glUniformMatrix4x2dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformMatrix4x2dv) },
+    { "glUniformMatrix4x2fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, p_glUniformMatrix4x2fv) },
+    { "glUniformMatrix4x3dv", "GL_ARB_gpu_shader_fp64 GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformMatrix4x3dv) },
+    { "glUniformMatrix4x3fv", "GL_VERSION_2_1", offsetof(struct opengl_funcs, p_glUniformMatrix4x3fv) },
+    { "glUniformSubroutinesuiv", "GL_ARB_shader_subroutine GL_VERSION_4_0", offsetof(struct opengl_funcs, p_glUniformSubroutinesuiv) },
+    { "glUniformui64NV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glUniformui64NV) },
+    { "glUniformui64vNV", "GL_NV_shader_buffer_load", offsetof(struct opengl_funcs, p_glUniformui64vNV) },
+    { "glUnlockArraysEXT", "GL_EXT_compiled_vertex_array", offsetof(struct opengl_funcs, p_glUnlockArraysEXT) },
+    { "glUnmapBuffer", "GL_VERSION_1_5", offsetof(struct opengl_funcs, p_glUnmapBuffer) },
+    { "glUnmapBufferARB", "GL_ARB_vertex_buffer_object", offsetof(struct opengl_funcs, p_glUnmapBufferARB) },
+    { "glUnmapNamedBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glUnmapNamedBuffer) },
+    { "glUnmapNamedBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glUnmapNamedBufferEXT) },
+    { "glUnmapObjectBufferATI", "GL_ATI_map_object_buffer", offsetof(struct opengl_funcs, p_glUnmapObjectBufferATI) },
+    { "glUnmapTexture2DINTEL", "GL_INTEL_map_texture", offsetof(struct opengl_funcs, p_glUnmapTexture2DINTEL) },
+    { "glUpdateObjectBufferATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glUpdateObjectBufferATI) },
+    { "glUploadGpuMaskNVX", "GL_NVX_gpu_multicast2", offsetof(struct opengl_funcs, p_glUploadGpuMaskNVX) },
+    { "glUseProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glUseProgram) },
+    { "glUseProgramObjectARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glUseProgramObjectARB) },
+    { "glUseProgramStages", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glUseProgramStages) },
+    { "glUseShaderProgramEXT", "GL_EXT_separate_shader_objects", offsetof(struct opengl_funcs, p_glUseShaderProgramEXT) },
+    { "glVDPAUFiniNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAUFiniNV) },
+    { "glVDPAUGetSurfaceivNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAUGetSurfaceivNV) },
+    { "glVDPAUInitNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAUInitNV) },
+    { "glVDPAUIsSurfaceNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAUIsSurfaceNV) },
+    { "glVDPAUMapSurfacesNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAUMapSurfacesNV) },
+    { "glVDPAURegisterOutputSurfaceNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAURegisterOutputSurfaceNV) },
+    { "glVDPAURegisterVideoSurfaceNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAURegisterVideoSurfaceNV) },
+    { "glVDPAURegisterVideoSurfaceWithPictureStructureNV", "GL_NV_vdpau_interop2", offsetof(struct opengl_funcs, p_glVDPAURegisterVideoSurfaceWithPictureStructureNV) },
+    { "glVDPAUSurfaceAccessNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAUSurfaceAccessNV) },
+    { "glVDPAUUnmapSurfacesNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAUUnmapSurfacesNV) },
+    { "glVDPAUUnregisterSurfaceNV", "GL_NV_vdpau_interop", offsetof(struct opengl_funcs, p_glVDPAUUnregisterSurfaceNV) },
+    { "glValidateProgram", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glValidateProgram) },
+    { "glValidateProgramARB", "GL_ARB_shader_objects", offsetof(struct opengl_funcs, p_glValidateProgramARB) },
+    { "glValidateProgramPipeline", "GL_ARB_separate_shader_objects GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glValidateProgramPipeline) },
+    { "glVariantArrayObjectATI", "GL_ATI_vertex_array_object", offsetof(struct opengl_funcs, p_glVariantArrayObjectATI) },
+    { "glVariantPointerEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glVariantPointerEXT) },
+    { "glVariantbvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glVariantbvEXT) },
+    { "glVariantdvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glVariantdvEXT) },
+    { "glVariantfvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glVariantfvEXT) },
+    { "glVariantivEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glVariantivEXT) },
+    { "glVariantsvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glVariantsvEXT) },
+    { "glVariantubvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glVariantubvEXT) },
+    { "glVariantuivEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glVariantuivEXT) },
+    { "glVariantusvEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glVariantusvEXT) },
+    { "glVertex2bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glVertex2bOES) },
+    { "glVertex2bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glVertex2bvOES) },
+    { "glVertex2hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertex2hNV) },
+    { "glVertex2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertex2hvNV) },
+    { "glVertex2xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glVertex2xOES) },
+    { "glVertex2xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glVertex2xvOES) },
+    { "glVertex3bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glVertex3bOES) },
+    { "glVertex3bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glVertex3bvOES) },
+    { "glVertex3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertex3hNV) },
+    { "glVertex3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertex3hvNV) },
+    { "glVertex3xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glVertex3xOES) },
+    { "glVertex3xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glVertex3xvOES) },
+    { "glVertex4bOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glVertex4bOES) },
+    { "glVertex4bvOES", "GL_OES_byte_coordinates", offsetof(struct opengl_funcs, p_glVertex4bvOES) },
+    { "glVertex4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertex4hNV) },
+    { "glVertex4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertex4hvNV) },
+    { "glVertex4xOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glVertex4xOES) },
+    { "glVertex4xvOES", "GL_OES_fixed_point", offsetof(struct opengl_funcs, p_glVertex4xvOES) },
+    { "glVertexArrayAttribBinding", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glVertexArrayAttribBinding) },
+    { "glVertexArrayAttribFormat", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glVertexArrayAttribFormat) },
+    { "glVertexArrayAttribIFormat", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glVertexArrayAttribIFormat) },
+    { "glVertexArrayAttribLFormat", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glVertexArrayAttribLFormat) },
+    { "glVertexArrayBindVertexBufferEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayBindVertexBufferEXT) },
+    { "glVertexArrayBindingDivisor", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glVertexArrayBindingDivisor) },
+    { "glVertexArrayColorOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayColorOffsetEXT) },
+    { "glVertexArrayEdgeFlagOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayEdgeFlagOffsetEXT) },
+    { "glVertexArrayElementBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glVertexArrayElementBuffer) },
+    { "glVertexArrayFogCoordOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayFogCoordOffsetEXT) },
+    { "glVertexArrayIndexOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayIndexOffsetEXT) },
+    { "glVertexArrayMultiTexCoordOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayMultiTexCoordOffsetEXT) },
+    { "glVertexArrayNormalOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayNormalOffsetEXT) },
+    { "glVertexArrayParameteriAPPLE", "GL_APPLE_vertex_array_range", offsetof(struct opengl_funcs, p_glVertexArrayParameteriAPPLE) },
+    { "glVertexArrayRangeAPPLE", "GL_APPLE_vertex_array_range", offsetof(struct opengl_funcs, p_glVertexArrayRangeAPPLE) },
+    { "glVertexArrayRangeNV", "GL_NV_vertex_array_range", offsetof(struct opengl_funcs, p_glVertexArrayRangeNV) },
+    { "glVertexArraySecondaryColorOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArraySecondaryColorOffsetEXT) },
+    { "glVertexArrayTexCoordOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayTexCoordOffsetEXT) },
+    { "glVertexArrayVertexAttribBindingEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexAttribBindingEXT) },
+    { "glVertexArrayVertexAttribDivisorEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexAttribDivisorEXT) },
+    { "glVertexArrayVertexAttribFormatEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexAttribFormatEXT) },
+    { "glVertexArrayVertexAttribIFormatEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexAttribIFormatEXT) },
+    { "glVertexArrayVertexAttribIOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexAttribIOffsetEXT) },
+    { "glVertexArrayVertexAttribLFormatEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexAttribLFormatEXT) },
+    { "glVertexArrayVertexAttribLOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexAttribLOffsetEXT) },
+    { "glVertexArrayVertexAttribOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexAttribOffsetEXT) },
+    { "glVertexArrayVertexBindingDivisorEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexBindingDivisorEXT) },
+    { "glVertexArrayVertexBuffer", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glVertexArrayVertexBuffer) },
+    { "glVertexArrayVertexBuffers", "GL_ARB_direct_state_access GL_VERSION_4_5", offsetof(struct opengl_funcs, p_glVertexArrayVertexBuffers) },
+    { "glVertexArrayVertexOffsetEXT", "GL_EXT_direct_state_access", offsetof(struct opengl_funcs, p_glVertexArrayVertexOffsetEXT) },
+    { "glVertexAttrib1d", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib1d) },
+    { "glVertexAttrib1dARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib1dARB) },
+    { "glVertexAttrib1dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib1dNV) },
+    { "glVertexAttrib1dv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib1dv) },
+    { "glVertexAttrib1dvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib1dvARB) },
+    { "glVertexAttrib1dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib1dvNV) },
+    { "glVertexAttrib1f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib1f) },
+    { "glVertexAttrib1fARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib1fARB) },
+    { "glVertexAttrib1fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib1fNV) },
+    { "glVertexAttrib1fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib1fv) },
+    { "glVertexAttrib1fvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib1fvARB) },
+    { "glVertexAttrib1fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib1fvNV) },
+    { "glVertexAttrib1hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttrib1hNV) },
+    { "glVertexAttrib1hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttrib1hvNV) },
+    { "glVertexAttrib1s", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib1s) },
+    { "glVertexAttrib1sARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib1sARB) },
+    { "glVertexAttrib1sNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib1sNV) },
+    { "glVertexAttrib1sv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib1sv) },
+    { "glVertexAttrib1svARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib1svARB) },
+    { "glVertexAttrib1svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib1svNV) },
+    { "glVertexAttrib2d", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib2d) },
+    { "glVertexAttrib2dARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib2dARB) },
+    { "glVertexAttrib2dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib2dNV) },
+    { "glVertexAttrib2dv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib2dv) },
+    { "glVertexAttrib2dvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib2dvARB) },
+    { "glVertexAttrib2dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib2dvNV) },
+    { "glVertexAttrib2f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib2f) },
+    { "glVertexAttrib2fARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib2fARB) },
+    { "glVertexAttrib2fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib2fNV) },
+    { "glVertexAttrib2fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib2fv) },
+    { "glVertexAttrib2fvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib2fvARB) },
+    { "glVertexAttrib2fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib2fvNV) },
+    { "glVertexAttrib2hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttrib2hNV) },
+    { "glVertexAttrib2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttrib2hvNV) },
+    { "glVertexAttrib2s", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib2s) },
+    { "glVertexAttrib2sARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib2sARB) },
+    { "glVertexAttrib2sNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib2sNV) },
+    { "glVertexAttrib2sv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib2sv) },
+    { "glVertexAttrib2svARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib2svARB) },
+    { "glVertexAttrib2svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib2svNV) },
+    { "glVertexAttrib3d", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib3d) },
+    { "glVertexAttrib3dARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib3dARB) },
+    { "glVertexAttrib3dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib3dNV) },
+    { "glVertexAttrib3dv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib3dv) },
+    { "glVertexAttrib3dvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib3dvARB) },
+    { "glVertexAttrib3dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib3dvNV) },
+    { "glVertexAttrib3f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib3f) },
+    { "glVertexAttrib3fARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib3fARB) },
+    { "glVertexAttrib3fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib3fNV) },
+    { "glVertexAttrib3fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib3fv) },
+    { "glVertexAttrib3fvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib3fvARB) },
+    { "glVertexAttrib3fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib3fvNV) },
+    { "glVertexAttrib3hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttrib3hNV) },
+    { "glVertexAttrib3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttrib3hvNV) },
+    { "glVertexAttrib3s", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib3s) },
+    { "glVertexAttrib3sARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib3sARB) },
+    { "glVertexAttrib3sNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib3sNV) },
+    { "glVertexAttrib3sv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib3sv) },
+    { "glVertexAttrib3svARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib3svARB) },
+    { "glVertexAttrib3svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib3svNV) },
+    { "glVertexAttrib4Nbv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4Nbv) },
+    { "glVertexAttrib4NbvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4NbvARB) },
+    { "glVertexAttrib4Niv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4Niv) },
+    { "glVertexAttrib4NivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4NivARB) },
+    { "glVertexAttrib4Nsv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4Nsv) },
+    { "glVertexAttrib4NsvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4NsvARB) },
+    { "glVertexAttrib4Nub", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4Nub) },
+    { "glVertexAttrib4NubARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4NubARB) },
+    { "glVertexAttrib4Nubv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4Nubv) },
+    { "glVertexAttrib4NubvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4NubvARB) },
+    { "glVertexAttrib4Nuiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4Nuiv) },
+    { "glVertexAttrib4NuivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4NuivARB) },
+    { "glVertexAttrib4Nusv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4Nusv) },
+    { "glVertexAttrib4NusvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4NusvARB) },
+    { "glVertexAttrib4bv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4bv) },
+    { "glVertexAttrib4bvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4bvARB) },
+    { "glVertexAttrib4d", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4d) },
+    { "glVertexAttrib4dARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4dARB) },
+    { "glVertexAttrib4dNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib4dNV) },
+    { "glVertexAttrib4dv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4dv) },
+    { "glVertexAttrib4dvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4dvARB) },
+    { "glVertexAttrib4dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib4dvNV) },
+    { "glVertexAttrib4f", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4f) },
+    { "glVertexAttrib4fARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4fARB) },
+    { "glVertexAttrib4fNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib4fNV) },
+    { "glVertexAttrib4fv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4fv) },
+    { "glVertexAttrib4fvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4fvARB) },
+    { "glVertexAttrib4fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib4fvNV) },
+    { "glVertexAttrib4hNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttrib4hNV) },
+    { "glVertexAttrib4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttrib4hvNV) },
+    { "glVertexAttrib4iv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4iv) },
+    { "glVertexAttrib4ivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4ivARB) },
+    { "glVertexAttrib4s", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4s) },
+    { "glVertexAttrib4sARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4sARB) },
+    { "glVertexAttrib4sNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib4sNV) },
+    { "glVertexAttrib4sv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4sv) },
+    { "glVertexAttrib4svARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4svARB) },
+    { "glVertexAttrib4svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib4svNV) },
+    { "glVertexAttrib4ubNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib4ubNV) },
+    { "glVertexAttrib4ubv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4ubv) },
+    { "glVertexAttrib4ubvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4ubvARB) },
+    { "glVertexAttrib4ubvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttrib4ubvNV) },
+    { "glVertexAttrib4uiv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4uiv) },
+    { "glVertexAttrib4uivARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4uivARB) },
+    { "glVertexAttrib4usv", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttrib4usv) },
+    { "glVertexAttrib4usvARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttrib4usvARB) },
+    { "glVertexAttribArrayObjectATI", "GL_ATI_vertex_attrib_array_object", offsetof(struct opengl_funcs, p_glVertexAttribArrayObjectATI) },
+    { "glVertexAttribBinding", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glVertexAttribBinding) },
+    { "glVertexAttribDivisor", "GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexAttribDivisor) },
+    { "glVertexAttribDivisorARB", "GL_ARB_instanced_arrays", offsetof(struct opengl_funcs, p_glVertexAttribDivisorARB) },
+    { "glVertexAttribFormat", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glVertexAttribFormat) },
+    { "glVertexAttribFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glVertexAttribFormatNV) },
+    { "glVertexAttribI1i", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI1i) },
+    { "glVertexAttribI1iEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI1iEXT) },
+    { "glVertexAttribI1iv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI1iv) },
+    { "glVertexAttribI1ivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI1ivEXT) },
+    { "glVertexAttribI1ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI1ui) },
+    { "glVertexAttribI1uiEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI1uiEXT) },
+    { "glVertexAttribI1uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI1uiv) },
+    { "glVertexAttribI1uivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI1uivEXT) },
+    { "glVertexAttribI2i", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI2i) },
+    { "glVertexAttribI2iEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI2iEXT) },
+    { "glVertexAttribI2iv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI2iv) },
+    { "glVertexAttribI2ivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI2ivEXT) },
+    { "glVertexAttribI2ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI2ui) },
+    { "glVertexAttribI2uiEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI2uiEXT) },
+    { "glVertexAttribI2uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI2uiv) },
+    { "glVertexAttribI2uivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI2uivEXT) },
+    { "glVertexAttribI3i", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI3i) },
+    { "glVertexAttribI3iEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI3iEXT) },
+    { "glVertexAttribI3iv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI3iv) },
+    { "glVertexAttribI3ivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI3ivEXT) },
+    { "glVertexAttribI3ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI3ui) },
+    { "glVertexAttribI3uiEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI3uiEXT) },
+    { "glVertexAttribI3uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI3uiv) },
+    { "glVertexAttribI3uivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI3uivEXT) },
+    { "glVertexAttribI4bv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI4bv) },
+    { "glVertexAttribI4bvEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI4bvEXT) },
+    { "glVertexAttribI4i", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI4i) },
+    { "glVertexAttribI4iEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI4iEXT) },
+    { "glVertexAttribI4iv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI4iv) },
+    { "glVertexAttribI4ivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI4ivEXT) },
+    { "glVertexAttribI4sv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI4sv) },
+    { "glVertexAttribI4svEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI4svEXT) },
+    { "glVertexAttribI4ubv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI4ubv) },
+    { "glVertexAttribI4ubvEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI4ubvEXT) },
+    { "glVertexAttribI4ui", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI4ui) },
+    { "glVertexAttribI4uiEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI4uiEXT) },
+    { "glVertexAttribI4uiv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI4uiv) },
+    { "glVertexAttribI4uivEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI4uivEXT) },
+    { "glVertexAttribI4usv", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribI4usv) },
+    { "glVertexAttribI4usvEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribI4usvEXT) },
+    { "glVertexAttribIFormat", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glVertexAttribIFormat) },
+    { "glVertexAttribIFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glVertexAttribIFormatNV) },
+    { "glVertexAttribIPointer", "GL_VERSION_3_0", offsetof(struct opengl_funcs, p_glVertexAttribIPointer) },
+    { "glVertexAttribIPointerEXT", "GL_NV_vertex_program4", offsetof(struct opengl_funcs, p_glVertexAttribIPointerEXT) },
+    { "glVertexAttribL1d", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glVertexAttribL1d) },
+    { "glVertexAttribL1dEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL1dEXT) },
+    { "glVertexAttribL1dv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glVertexAttribL1dv) },
+    { "glVertexAttribL1dvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL1dvEXT) },
+    { "glVertexAttribL1i64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL1i64NV) },
+    { "glVertexAttribL1i64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL1i64vNV) },
+    { "glVertexAttribL1ui64ARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glVertexAttribL1ui64ARB) },
+    { "glVertexAttribL1ui64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL1ui64NV) },
+    { "glVertexAttribL1ui64vARB", "GL_ARB_bindless_texture", offsetof(struct opengl_funcs, p_glVertexAttribL1ui64vARB) },
+    { "glVertexAttribL1ui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL1ui64vNV) },
+    { "glVertexAttribL2d", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glVertexAttribL2d) },
+    { "glVertexAttribL2dEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL2dEXT) },
+    { "glVertexAttribL2dv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glVertexAttribL2dv) },
+    { "glVertexAttribL2dvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL2dvEXT) },
+    { "glVertexAttribL2i64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL2i64NV) },
+    { "glVertexAttribL2i64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL2i64vNV) },
+    { "glVertexAttribL2ui64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL2ui64NV) },
+    { "glVertexAttribL2ui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL2ui64vNV) },
+    { "glVertexAttribL3d", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glVertexAttribL3d) },
+    { "glVertexAttribL3dEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL3dEXT) },
+    { "glVertexAttribL3dv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glVertexAttribL3dv) },
+    { "glVertexAttribL3dvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL3dvEXT) },
+    { "glVertexAttribL3i64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL3i64NV) },
+    { "glVertexAttribL3i64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL3i64vNV) },
+    { "glVertexAttribL3ui64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL3ui64NV) },
+    { "glVertexAttribL3ui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL3ui64vNV) },
+    { "glVertexAttribL4d", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glVertexAttribL4d) },
+    { "glVertexAttribL4dEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL4dEXT) },
+    { "glVertexAttribL4dv", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glVertexAttribL4dv) },
+    { "glVertexAttribL4dvEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL4dvEXT) },
+    { "glVertexAttribL4i64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL4i64NV) },
+    { "glVertexAttribL4i64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL4i64vNV) },
+    { "glVertexAttribL4ui64NV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL4ui64NV) },
+    { "glVertexAttribL4ui64vNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribL4ui64vNV) },
+    { "glVertexAttribLFormat", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glVertexAttribLFormat) },
+    { "glVertexAttribLFormatNV", "GL_NV_vertex_attrib_integer_64bit", offsetof(struct opengl_funcs, p_glVertexAttribLFormatNV) },
+    { "glVertexAttribLPointer", "GL_ARB_vertex_attrib_64bit GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glVertexAttribLPointer) },
+    { "glVertexAttribLPointerEXT", "GL_EXT_vertex_attrib_64bit", offsetof(struct opengl_funcs, p_glVertexAttribLPointerEXT) },
+    { "glVertexAttribP1ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexAttribP1ui) },
+    { "glVertexAttribP1uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexAttribP1uiv) },
+    { "glVertexAttribP2ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexAttribP2ui) },
+    { "glVertexAttribP2uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexAttribP2uiv) },
+    { "glVertexAttribP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexAttribP3ui) },
+    { "glVertexAttribP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexAttribP3uiv) },
+    { "glVertexAttribP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexAttribP4ui) },
+    { "glVertexAttribP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexAttribP4uiv) },
+    { "glVertexAttribParameteriAMD", "GL_AMD_interleaved_elements", offsetof(struct opengl_funcs, p_glVertexAttribParameteriAMD) },
+    { "glVertexAttribPointer", "GL_VERSION_2_0", offsetof(struct opengl_funcs, p_glVertexAttribPointer) },
+    { "glVertexAttribPointerARB", "GL_ARB_vertex_program GL_ARB_vertex_shader", offsetof(struct opengl_funcs, p_glVertexAttribPointerARB) },
+    { "glVertexAttribPointerNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribPointerNV) },
+    { "glVertexAttribs1dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs1dvNV) },
+    { "glVertexAttribs1fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs1fvNV) },
+    { "glVertexAttribs1hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttribs1hvNV) },
+    { "glVertexAttribs1svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs1svNV) },
+    { "glVertexAttribs2dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs2dvNV) },
+    { "glVertexAttribs2fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs2fvNV) },
+    { "glVertexAttribs2hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttribs2hvNV) },
+    { "glVertexAttribs2svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs2svNV) },
+    { "glVertexAttribs3dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs3dvNV) },
+    { "glVertexAttribs3fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs3fvNV) },
+    { "glVertexAttribs3hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttribs3hvNV) },
+    { "glVertexAttribs3svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs3svNV) },
+    { "glVertexAttribs4dvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs4dvNV) },
+    { "glVertexAttribs4fvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs4fvNV) },
+    { "glVertexAttribs4hvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexAttribs4hvNV) },
+    { "glVertexAttribs4svNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs4svNV) },
+    { "glVertexAttribs4ubvNV", "GL_NV_vertex_program", offsetof(struct opengl_funcs, p_glVertexAttribs4ubvNV) },
+    { "glVertexBindingDivisor", "GL_ARB_vertex_attrib_binding GL_VERSION_4_3", offsetof(struct opengl_funcs, p_glVertexBindingDivisor) },
+    { "glVertexBlendARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glVertexBlendARB) },
+    { "glVertexBlendEnvfATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexBlendEnvfATI) },
+    { "glVertexBlendEnviATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexBlendEnviATI) },
+    { "glVertexFormatNV", "GL_NV_vertex_buffer_unified_memory", offsetof(struct opengl_funcs, p_glVertexFormatNV) },
+    { "glVertexP2ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexP2ui) },
+    { "glVertexP2uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexP2uiv) },
+    { "glVertexP3ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexP3ui) },
+    { "glVertexP3uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexP3uiv) },
+    { "glVertexP4ui", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexP4ui) },
+    { "glVertexP4uiv", "GL_ARB_vertex_type_2_10_10_10_rev GL_VERSION_3_3", offsetof(struct opengl_funcs, p_glVertexP4uiv) },
+    { "glVertexPointerEXT", "GL_EXT_vertex_array", offsetof(struct opengl_funcs, p_glVertexPointerEXT) },
+    { "glVertexPointerListIBM", "GL_IBM_vertex_array_lists", offsetof(struct opengl_funcs, p_glVertexPointerListIBM) },
+    { "glVertexPointervINTEL", "GL_INTEL_parallel_arrays", offsetof(struct opengl_funcs, p_glVertexPointervINTEL) },
+    { "glVertexStream1dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream1dATI) },
+    { "glVertexStream1dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream1dvATI) },
+    { "glVertexStream1fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream1fATI) },
+    { "glVertexStream1fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream1fvATI) },
+    { "glVertexStream1iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream1iATI) },
+    { "glVertexStream1ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream1ivATI) },
+    { "glVertexStream1sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream1sATI) },
+    { "glVertexStream1svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream1svATI) },
+    { "glVertexStream2dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream2dATI) },
+    { "glVertexStream2dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream2dvATI) },
+    { "glVertexStream2fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream2fATI) },
+    { "glVertexStream2fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream2fvATI) },
+    { "glVertexStream2iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream2iATI) },
+    { "glVertexStream2ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream2ivATI) },
+    { "glVertexStream2sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream2sATI) },
+    { "glVertexStream2svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream2svATI) },
+    { "glVertexStream3dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream3dATI) },
+    { "glVertexStream3dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream3dvATI) },
+    { "glVertexStream3fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream3fATI) },
+    { "glVertexStream3fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream3fvATI) },
+    { "glVertexStream3iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream3iATI) },
+    { "glVertexStream3ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream3ivATI) },
+    { "glVertexStream3sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream3sATI) },
+    { "glVertexStream3svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream3svATI) },
+    { "glVertexStream4dATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream4dATI) },
+    { "glVertexStream4dvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream4dvATI) },
+    { "glVertexStream4fATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream4fATI) },
+    { "glVertexStream4fvATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream4fvATI) },
+    { "glVertexStream4iATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream4iATI) },
+    { "glVertexStream4ivATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream4ivATI) },
+    { "glVertexStream4sATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream4sATI) },
+    { "glVertexStream4svATI", "GL_ATI_vertex_streams", offsetof(struct opengl_funcs, p_glVertexStream4svATI) },
+    { "glVertexWeightPointerEXT", "GL_EXT_vertex_weighting", offsetof(struct opengl_funcs, p_glVertexWeightPointerEXT) },
+    { "glVertexWeightfEXT", "GL_EXT_vertex_weighting", offsetof(struct opengl_funcs, p_glVertexWeightfEXT) },
+    { "glVertexWeightfvEXT", "GL_EXT_vertex_weighting", offsetof(struct opengl_funcs, p_glVertexWeightfvEXT) },
+    { "glVertexWeighthNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexWeighthNV) },
+    { "glVertexWeighthvNV", "GL_NV_half_float", offsetof(struct opengl_funcs, p_glVertexWeighthvNV) },
+    { "glVideoCaptureNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glVideoCaptureNV) },
+    { "glVideoCaptureStreamParameterdvNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glVideoCaptureStreamParameterdvNV) },
+    { "glVideoCaptureStreamParameterfvNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glVideoCaptureStreamParameterfvNV) },
+    { "glVideoCaptureStreamParameterivNV", "GL_NV_video_capture", offsetof(struct opengl_funcs, p_glVideoCaptureStreamParameterivNV) },
+    { "glViewportArrayv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glViewportArrayv) },
+    { "glViewportIndexedf", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glViewportIndexedf) },
+    { "glViewportIndexedfv", "GL_ARB_viewport_array GL_VERSION_4_1", offsetof(struct opengl_funcs, p_glViewportIndexedfv) },
+    { "glViewportPositionWScaleNV", "GL_NV_clip_space_w_scaling", offsetof(struct opengl_funcs, p_glViewportPositionWScaleNV) },
+    { "glViewportSwizzleNV", "GL_NV_viewport_swizzle", offsetof(struct opengl_funcs, p_glViewportSwizzleNV) },
+    { "glWaitSemaphoreEXT", "GL_EXT_semaphore", offsetof(struct opengl_funcs, p_glWaitSemaphoreEXT) },
+    { "glWaitSemaphoreui64NVX", "GL_NVX_progress_fence", offsetof(struct opengl_funcs, p_glWaitSemaphoreui64NVX) },
+    { "glWaitSync", "GL_ARB_sync GL_VERSION_3_2", offsetof(struct opengl_funcs, p_glWaitSync) },
+    { "glWaitVkSemaphoreNV", "GL_NV_draw_vulkan_image", offsetof(struct opengl_funcs, p_glWaitVkSemaphoreNV) },
+    { "glWeightPathsNV", "GL_NV_path_rendering", offsetof(struct opengl_funcs, p_glWeightPathsNV) },
+    { "glWeightPointerARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glWeightPointerARB) },
+    { "glWeightbvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glWeightbvARB) },
+    { "glWeightdvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glWeightdvARB) },
+    { "glWeightfvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glWeightfvARB) },
+    { "glWeightivARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glWeightivARB) },
+    { "glWeightsvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glWeightsvARB) },
+    { "glWeightubvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glWeightubvARB) },
+    { "glWeightuivARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glWeightuivARB) },
+    { "glWeightusvARB", "GL_ARB_vertex_blend", offsetof(struct opengl_funcs, p_glWeightusvARB) },
+    { "glWindowPos2d", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos2d) },
+    { "glWindowPos2dARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2dARB) },
+    { "glWindowPos2dMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2dMESA) },
+    { "glWindowPos2dv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos2dv) },
+    { "glWindowPos2dvARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2dvARB) },
+    { "glWindowPos2dvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2dvMESA) },
+    { "glWindowPos2f", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos2f) },
+    { "glWindowPos2fARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2fARB) },
+    { "glWindowPos2fMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2fMESA) },
+    { "glWindowPos2fv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos2fv) },
+    { "glWindowPos2fvARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2fvARB) },
+    { "glWindowPos2fvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2fvMESA) },
+    { "glWindowPos2i", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos2i) },
+    { "glWindowPos2iARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2iARB) },
+    { "glWindowPos2iMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2iMESA) },
+    { "glWindowPos2iv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos2iv) },
+    { "glWindowPos2ivARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2ivARB) },
+    { "glWindowPos2ivMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2ivMESA) },
+    { "glWindowPos2s", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos2s) },
+    { "glWindowPos2sARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2sARB) },
+    { "glWindowPos2sMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2sMESA) },
+    { "glWindowPos2sv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos2sv) },
+    { "glWindowPos2svARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2svARB) },
+    { "glWindowPos2svMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos2svMESA) },
+    { "glWindowPos3d", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos3d) },
+    { "glWindowPos3dARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3dARB) },
+    { "glWindowPos3dMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3dMESA) },
+    { "glWindowPos3dv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos3dv) },
+    { "glWindowPos3dvARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3dvARB) },
+    { "glWindowPos3dvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3dvMESA) },
+    { "glWindowPos3f", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos3f) },
+    { "glWindowPos3fARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3fARB) },
+    { "glWindowPos3fMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3fMESA) },
+    { "glWindowPos3fv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos3fv) },
+    { "glWindowPos3fvARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3fvARB) },
+    { "glWindowPos3fvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3fvMESA) },
+    { "glWindowPos3i", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos3i) },
+    { "glWindowPos3iARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3iARB) },
+    { "glWindowPos3iMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3iMESA) },
+    { "glWindowPos3iv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos3iv) },
+    { "glWindowPos3ivARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3ivARB) },
+    { "glWindowPos3ivMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3ivMESA) },
+    { "glWindowPos3s", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos3s) },
+    { "glWindowPos3sARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3sARB) },
+    { "glWindowPos3sMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3sMESA) },
+    { "glWindowPos3sv", "GL_VERSION_1_4", offsetof(struct opengl_funcs, p_glWindowPos3sv) },
+    { "glWindowPos3svARB", "GL_ARB_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3svARB) },
+    { "glWindowPos3svMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos3svMESA) },
+    { "glWindowPos4dMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos4dMESA) },
+    { "glWindowPos4dvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos4dvMESA) },
+    { "glWindowPos4fMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos4fMESA) },
+    { "glWindowPos4fvMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos4fvMESA) },
+    { "glWindowPos4iMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos4iMESA) },
+    { "glWindowPos4ivMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos4ivMESA) },
+    { "glWindowPos4sMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos4sMESA) },
+    { "glWindowPos4svMESA", "GL_MESA_window_pos", offsetof(struct opengl_funcs, p_glWindowPos4svMESA) },
+    { "glWindowRectanglesEXT", "GL_EXT_window_rectangles", offsetof(struct opengl_funcs, p_glWindowRectanglesEXT) },
+    { "glWriteMaskEXT", "GL_EXT_vertex_shader", offsetof(struct opengl_funcs, p_glWriteMaskEXT) },
+    { "wglAllocateMemoryNV", "WGL_NV_vertex_array_range", offsetof(struct opengl_funcs, p_wglAllocateMemoryNV) },
+    { "wglBindTexImageARB", "WGL_ARB_render_texture", offsetof(struct opengl_funcs, p_wglBindTexImageARB) },
+    { "wglChoosePixelFormatARB", "WGL_ARB_pixel_format", offsetof(struct opengl_funcs, p_wglChoosePixelFormatARB) },
+    { "wglCreateContextAttribsARB", "WGL_ARB_create_context", offsetof(struct opengl_funcs, p_wglCreateContextAttribsARB) },
+    { "wglCreatePbufferARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, p_wglCreatePbufferARB) },
+    { "wglDestroyPbufferARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, p_wglDestroyPbufferARB) },
+    { "wglFreeMemoryNV", "WGL_NV_vertex_array_range", offsetof(struct opengl_funcs, p_wglFreeMemoryNV) },
+    { "wglGetCurrentReadDCARB", "WGL_ARB_make_current_read", offsetof(struct opengl_funcs, p_wglGetCurrentReadDCARB) },
+    { "wglGetExtensionsStringARB", "WGL_ARB_extensions_string", offsetof(struct opengl_funcs, p_wglGetExtensionsStringARB) },
+    { "wglGetExtensionsStringEXT", "WGL_EXT_extensions_string", offsetof(struct opengl_funcs, p_wglGetExtensionsStringEXT) },
+    { "wglGetPbufferDCARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, p_wglGetPbufferDCARB) },
+    { "wglGetPixelFormatAttribfvARB", "WGL_ARB_pixel_format", offsetof(struct opengl_funcs, p_wglGetPixelFormatAttribfvARB) },
+    { "wglGetPixelFormatAttribivARB", "WGL_ARB_pixel_format", offsetof(struct opengl_funcs, p_wglGetPixelFormatAttribivARB) },
+    { "wglGetSwapIntervalEXT", "WGL_EXT_swap_control", offsetof(struct opengl_funcs, p_wglGetSwapIntervalEXT) },
+    { "wglMakeContextCurrentARB", "WGL_ARB_make_current_read", offsetof(struct opengl_funcs, p_wglMakeContextCurrentARB) },
+    { "wglQueryCurrentRendererIntegerWINE", "WGL_WINE_query_renderer", offsetof(struct opengl_funcs, p_wglQueryCurrentRendererIntegerWINE) },
+    { "wglQueryCurrentRendererStringWINE", "WGL_WINE_query_renderer", offsetof(struct opengl_funcs, p_wglQueryCurrentRendererStringWINE) },
+    { "wglQueryPbufferARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, p_wglQueryPbufferARB) },
+    { "wglQueryRendererIntegerWINE", "WGL_WINE_query_renderer", offsetof(struct opengl_funcs, p_wglQueryRendererIntegerWINE) },
+    { "wglQueryRendererStringWINE", "WGL_WINE_query_renderer", offsetof(struct opengl_funcs, p_wglQueryRendererStringWINE) },
+    { "wglReleasePbufferDCARB", "WGL_ARB_pbuffer", offsetof(struct opengl_funcs, p_wglReleasePbufferDCARB) },
+    { "wglReleaseTexImageARB", "WGL_ARB_render_texture", offsetof(struct opengl_funcs, p_wglReleaseTexImageARB) },
+    { "wglSetPbufferAttribARB", "WGL_ARB_render_texture", offsetof(struct opengl_funcs, p_wglSetPbufferAttribARB) },
+    { "wglSetPixelFormatWINE", "WGL_WINE_pixel_format_passthrough", offsetof(struct opengl_funcs, p_wglSetPixelFormatWINE) },
+    { "wglSwapIntervalEXT", "WGL_EXT_swap_control", offsetof(struct opengl_funcs, p_wglSwapIntervalEXT) },
 };
diff --git a/dlls/opengl32/unix_wgl.c b/dlls/opengl32/unix_wgl.c
index 90ed6c9e3f3..f21ee652ea1 100644
--- a/dlls/opengl32/unix_wgl.c
+++ b/dlls/opengl32/unix_wgl.c
@@ -227,19 +227,19 @@ static GLuint *filter_extensions_index( TEB *teb, const char *disabled )
     unsigned int i = 0, j;
     int major, minor;
 
-    if (!funcs->ext.p_glGetStringi)
+    if (!funcs->p_glGetStringi)
     {
-        void **func_ptr = (void **)&funcs->ext.p_glGetStringi;
-        *func_ptr = funcs->wgl.p_wglGetProcAddress( "glGetStringi" );
-        if (!funcs->ext.p_glGetStringi) return NULL;
+        void **func_ptr = (void **)&funcs->p_glGetStringi;
+        *func_ptr = funcs->p_wglGetProcAddress( "glGetStringi" );
+        if (!funcs->p_glGetStringi) return NULL;
     }
 
-    version = (const char *)funcs->gl.p_glGetString( GL_VERSION );
+    version = (const char *)funcs->p_glGetString( GL_VERSION );
     parse_gl_version( version, &major, &minor );
     if (major < 3)
         return NULL;
 
-    funcs->gl.p_glGetIntegerv( GL_NUM_EXTENSIONS, &extensions_count );
+    funcs->p_glGetIntegerv( GL_NUM_EXTENSIONS, &extensions_count );
     disabled_index = malloc( extensions_count * sizeof(*disabled_index) );
     if (!disabled_index) return NULL;
 
@@ -247,7 +247,7 @@ static GLuint *filter_extensions_index( TEB *teb, const char *disabled )
 
     for (j = 0; j < extensions_count; ++j)
     {
-        ext = (const char *)funcs->ext.p_glGetStringi( GL_EXTENSIONS, j );
+        ext = (const char *)funcs->p_glGetStringi( GL_EXTENSIONS, j );
 
         /* We do not support GL_MAP_PERSISTENT_BIT, and hence
          * ARB_buffer_storage, on wow64. */
@@ -415,7 +415,7 @@ static BOOL check_extension_support( TEB *teb, const char *extension, const char
          * Check if we are searching for a core GL function */
         if (!strncmp( extension, "GL_VERSION_", 11 ))
         {
-            const GLubyte *gl_version = funcs->gl.p_glGetString( GL_VERSION );
+            const GLubyte *gl_version = funcs->p_glGetString( GL_VERSION );
             const char *version = extension + 11; /* Move past 'GL_VERSION_' */
 
             if (!gl_version)
@@ -444,7 +444,7 @@ static void wrap_glGetIntegerv( TEB *teb, GLenum pname, GLint *data )
     const struct opengl_funcs *funcs = teb->glTable;
     const GLuint *disabled;
 
-    funcs->gl.p_glGetIntegerv( pname, data );
+    funcs->p_glGetIntegerv( pname, data );
 
     if (pname == GL_NUM_EXTENSIONS && (disabled = disabled_extensions_index( teb )))
         while (*disabled++ != ~0u) (*data)--;
@@ -458,7 +458,7 @@ static void wrap_glGetIntegerv( TEB *teb, GLenum pname, GLint *data )
         {
             GLint major;
 
-            funcs->gl.p_glGetIntegerv( GL_MAJOR_VERSION, &major );
+            funcs->p_glGetIntegerv( GL_MAJOR_VERSION, &major );
             if (major == 4 && *data > 3)
                 *data = 3;
         }
@@ -470,7 +470,7 @@ static const GLubyte *wrap_glGetString( TEB *teb, GLenum name )
     const struct opengl_funcs *funcs = teb->glTable;
     const GLubyte *ret;
 
-    if ((ret = funcs->gl.p_glGetString( name )))
+    if ((ret = funcs->p_glGetString( name )))
     {
         if (name == GL_EXTENSIONS)
         {
@@ -511,16 +511,16 @@ static const GLubyte *wrap_glGetStringi( TEB *teb, GLenum name, GLuint index )
     const struct opengl_funcs *funcs = teb->glTable;
     const GLuint *disabled;
 
-    if (!funcs->ext.p_glGetStringi)
+    if (!funcs->p_glGetStringi)
     {
-        void **func_ptr = (void **)&funcs->ext.p_glGetStringi;
-        *func_ptr = funcs->wgl.p_wglGetProcAddress( "glGetStringi" );
+        void **func_ptr = (void **)&funcs->p_glGetStringi;
+        *func_ptr = funcs->p_wglGetProcAddress( "glGetStringi" );
     }
 
     if (name == GL_EXTENSIONS && (disabled = disabled_extensions_index( teb )))
         while (index >= *disabled++) index++;
 
-    return funcs->ext.p_glGetStringi( name, index );
+    return funcs->p_glGetStringi( name, index );
 }
 
 static char *build_extension_list( TEB *teb )
@@ -598,7 +598,7 @@ static PROC wrap_wglGetProcAddress( TEB *teb, LPCSTR name )
     func_ptr = (const void **)((char *)funcs + found->offset);
     if (!*func_ptr)
     {
-        void *driver_func = funcs->wgl.p_wglGetProcAddress( name );
+        void *driver_func = funcs->p_wglGetProcAddress( name );
 
         if (!is_extension_supported( teb, found->extension ))
         {
@@ -645,7 +645,7 @@ static BOOL wrap_wglCopyContext( HGLRC hglrcSrc, HGLRC hglrcDst, UINT mask )
     if ((dst = get_handle_ptr( hglrcDst, HANDLE_CONTEXT )))
     {
         if (src->funcs != dst->funcs) RtlSetLastWin32Error( ERROR_INVALID_HANDLE );
-        else ret = src->funcs->wgl.p_wglCopyContext( src->u.context->drv_ctx, dst->u.context->drv_ctx, mask );
+        else ret = src->funcs->p_wglCopyContext( src->u.context->drv_ctx, dst->u.context->drv_ctx, mask );
     }
     return ret;
 }
@@ -658,13 +658,13 @@ static HGLRC wrap_wglCreateContext( HDC hdc )
     const struct opengl_funcs *funcs = get_dc_funcs( hdc );
 
     if (!funcs) return 0;
-    if (!(drv_ctx = funcs->wgl.p_wglCreateContext( hdc ))) return 0;
+    if (!(drv_ctx = funcs->p_wglCreateContext( hdc ))) return 0;
     if ((context = calloc( 1, sizeof(*context) )))
     {
         context->drv_ctx = drv_ctx;
         if (!(ret = alloc_handle( HANDLE_CONTEXT, funcs, context ))) free( context );
     }
-    if (!ret) funcs->wgl.p_wglDeleteContext( drv_ctx );
+    if (!ret) funcs->p_wglDeleteContext( drv_ctx );
     return ret;
 }
 
@@ -679,7 +679,7 @@ static BOOL wrap_wglMakeCurrent( TEB *teb, HDC hdc, HGLRC hglrc )
         if (!(ptr = get_handle_ptr( hglrc, HANDLE_CONTEXT ))) return FALSE;
         if (!ptr->u.context->tid || ptr->u.context->tid == tid)
         {
-            ret = ptr->funcs->wgl.p_wglMakeCurrent( hdc, ptr->u.context->drv_ctx );
+            ret = ptr->funcs->p_wglMakeCurrent( hdc, ptr->u.context->drv_ctx );
             if (ret)
             {
                 if (prev) prev->u.context->tid = 0;
@@ -698,7 +698,7 @@ static BOOL wrap_wglMakeCurrent( TEB *teb, HDC hdc, HGLRC hglrc )
     }
     else if (prev)
     {
-        if (!prev->funcs->wgl.p_wglMakeCurrent( 0, NULL )) return FALSE;
+        if (!prev->funcs->p_wglMakeCurrent( 0, NULL )) return FALSE;
         prev->u.context->tid = 0;
         teb->glCurrentRC = 0;
         teb->glTable = &null_opengl_funcs;
@@ -723,7 +723,7 @@ static BOOL wrap_wglDeleteContext( TEB *teb, HGLRC hglrc )
         return FALSE;
     }
     if (hglrc == teb->glCurrentRC) wrap_wglMakeCurrent( teb, 0, 0 );
-    ptr->funcs->wgl.p_wglDeleteContext( ptr->u.context->drv_ctx );
+    ptr->funcs->p_wglDeleteContext( ptr->u.context->drv_ctx );
     free( ptr->u.context->version_string );
     free( ptr->u.context->disabled_exts );
     free( ptr->u.context->extensions );
@@ -741,7 +741,7 @@ static BOOL wrap_wglShareLists( HGLRC hglrcSrc, HGLRC hglrcDst )
     if ((dst = get_handle_ptr( hglrcDst, HANDLE_CONTEXT )))
     {
         if (src->funcs != dst->funcs) RtlSetLastWin32Error( ERROR_INVALID_HANDLE );
-        else ret = src->funcs->wgl.p_wglShareLists( src->u.context->drv_ctx, dst->u.context->drv_ctx );
+        else ret = src->funcs->p_wglShareLists( src->u.context->drv_ctx, dst->u.context->drv_ctx );
     }
     return ret;
 }
@@ -750,7 +750,7 @@ static BOOL wrap_wglBindTexImageARB( HPBUFFERARB handle, int buffer )
 {
     struct wgl_handle *ptr;
     if (!(ptr = get_handle_ptr( handle, HANDLE_PBUFFER ))) return FALSE;
-    return ptr->funcs->ext.p_wglBindTexImageARB( ptr->u.pbuffer, buffer );
+    return ptr->funcs->p_wglBindTexImageARB( ptr->u.pbuffer, buffer );
 }
 
 static HGLRC wrap_wglCreateContextAttribsARB( HDC hdc, HGLRC share, const int *attribs )
@@ -766,13 +766,13 @@ static HGLRC wrap_wglCreateContextAttribsARB( HDC hdc, HGLRC share, const int *a
         RtlSetLastWin32Error( ERROR_DC_NOT_FOUND );
         return 0;
     }
-    if (!funcs->ext.p_wglCreateContextAttribsARB) return 0;
+    if (!funcs->p_wglCreateContextAttribsARB) return 0;
     if (share && !(share_ptr = get_handle_ptr( share, HANDLE_CONTEXT )))
     {
         RtlSetLastWin32Error( ERROR_INVALID_OPERATION );
         return 0;
     }
-    if ((drv_ctx = funcs->ext.p_wglCreateContextAttribsARB( hdc, share_ptr ? share_ptr->u.context->drv_ctx : NULL, attribs )))
+    if ((drv_ctx = funcs->p_wglCreateContextAttribsARB( hdc, share_ptr ? share_ptr->u.context->drv_ctx : NULL, attribs )))
     {
         if ((context = calloc( 1, sizeof(*context) )))
         {
@@ -794,7 +794,7 @@ static HGLRC wrap_wglCreateContextAttribsARB( HDC hdc, HGLRC share, const int *a
             context->drv_ctx = drv_ctx;
             if (!(ret = alloc_handle( type, funcs, context ))) free( context );
         }
-        if (!ret) funcs->wgl.p_wglDeleteContext( drv_ctx );
+        if (!ret) funcs->p_wglDeleteContext( drv_ctx );
     }
 
     return ret;
@@ -806,10 +806,10 @@ static HPBUFFERARB wrap_wglCreatePbufferARB( HDC hdc, int format, int width, int
     struct wgl_pbuffer *pbuffer;
     const struct opengl_funcs *funcs = get_dc_funcs( hdc );
 
-    if (!funcs || !funcs->ext.p_wglCreatePbufferARB) return 0;
-    if (!(pbuffer = funcs->ext.p_wglCreatePbufferARB( hdc, format, width, height, attribs ))) return 0;
+    if (!funcs || !funcs->p_wglCreatePbufferARB) return 0;
+    if (!(pbuffer = funcs->p_wglCreatePbufferARB( hdc, format, width, height, attribs ))) return 0;
     ret = alloc_handle( HANDLE_PBUFFER, funcs, pbuffer );
-    if (!ret) funcs->ext.p_wglDestroyPbufferARB( pbuffer );
+    if (!ret) funcs->p_wglDestroyPbufferARB( pbuffer );
     return ret;
 }
 
@@ -818,7 +818,7 @@ static BOOL wrap_wglDestroyPbufferARB( HPBUFFERARB handle )
     struct wgl_handle *ptr;
 
     if (!(ptr = get_handle_ptr( handle, HANDLE_PBUFFER ))) return FALSE;
-    ptr->funcs->ext.p_wglDestroyPbufferARB( ptr->u.pbuffer );
+    ptr->funcs->p_wglDestroyPbufferARB( ptr->u.pbuffer );
     free_handle_ptr( ptr );
     return TRUE;
 }
@@ -827,7 +827,7 @@ static HDC wrap_wglGetPbufferDCARB( HPBUFFERARB handle )
 {
     struct wgl_handle *ptr;
     if (!(ptr = get_handle_ptr( handle, HANDLE_PBUFFER ))) return 0;
-    return ptr->funcs->ext.p_wglGetPbufferDCARB( ptr->u.pbuffer );
+    return ptr->funcs->p_wglGetPbufferDCARB( ptr->u.pbuffer );
 }
 
 static BOOL wrap_wglMakeContextCurrentARB( TEB *teb, HDC draw_hdc, HDC read_hdc, HGLRC hglrc )
@@ -841,8 +841,8 @@ static BOOL wrap_wglMakeContextCurrentARB( TEB *teb, HDC draw_hdc, HDC read_hdc,
         if (!(ptr = get_handle_ptr( hglrc, HANDLE_CONTEXT ))) return FALSE;
         if (!ptr->u.context->tid || ptr->u.context->tid == tid)
         {
-            ret = (ptr->funcs->ext.p_wglMakeContextCurrentARB &&
-                   ptr->funcs->ext.p_wglMakeContextCurrentARB( draw_hdc, read_hdc, ptr->u.context->drv_ctx ));
+            ret = (ptr->funcs->p_wglMakeContextCurrentARB &&
+                   ptr->funcs->p_wglMakeContextCurrentARB( draw_hdc, read_hdc, ptr->u.context->drv_ctx ));
             if (ret)
             {
                 if (prev) prev->u.context->tid = 0;
@@ -861,7 +861,7 @@ static BOOL wrap_wglMakeContextCurrentARB( TEB *teb, HDC draw_hdc, HDC read_hdc,
     }
     else if (prev)
     {
-        if (!prev->funcs->wgl.p_wglMakeCurrent( 0, NULL )) return FALSE;
+        if (!prev->funcs->p_wglMakeCurrent( 0, NULL )) return FALSE;
         prev->u.context->tid = 0;
         teb->glCurrentRC = 0;
         teb->glTable = &null_opengl_funcs;
@@ -873,28 +873,28 @@ static BOOL wrap_wglQueryPbufferARB( HPBUFFERARB handle, int attrib, int *value
 {
     struct wgl_handle *ptr;
     if (!(ptr = get_handle_ptr( handle, HANDLE_PBUFFER ))) return FALSE;
-    return ptr->funcs->ext.p_wglQueryPbufferARB( ptr->u.pbuffer, attrib, value );
+    return ptr->funcs->p_wglQueryPbufferARB( ptr->u.pbuffer, attrib, value );
 }
 
 static int wrap_wglReleasePbufferDCARB( HPBUFFERARB handle, HDC hdc )
 {
     struct wgl_handle *ptr;
     if (!(ptr = get_handle_ptr( handle, HANDLE_PBUFFER ))) return FALSE;
-    return ptr->funcs->ext.p_wglReleasePbufferDCARB( ptr->u.pbuffer, hdc );
+    return ptr->funcs->p_wglReleasePbufferDCARB( ptr->u.pbuffer, hdc );
 }
 
 static BOOL wrap_wglReleaseTexImageARB( HPBUFFERARB handle, int buffer )
 {
     struct wgl_handle *ptr;
     if (!(ptr = get_handle_ptr( handle, HANDLE_PBUFFER ))) return FALSE;
-    return ptr->funcs->ext.p_wglReleaseTexImageARB( ptr->u.pbuffer, buffer );
+    return ptr->funcs->p_wglReleaseTexImageARB( ptr->u.pbuffer, buffer );
 }
 
 static BOOL wrap_wglSetPbufferAttribARB( HPBUFFERARB handle, const int *attribs )
 {
     struct wgl_handle *ptr;
     if (!(ptr = get_handle_ptr( handle, HANDLE_PBUFFER ))) return FALSE;
-    return ptr->funcs->ext.p_wglSetPbufferAttribARB( ptr->u.pbuffer, attribs );
+    return ptr->funcs->p_wglSetPbufferAttribARB( ptr->u.pbuffer, attribs );
 }
 
 static void gl_debug_message_callback( GLenum source, GLenum type, GLuint id, GLenum severity,
@@ -935,11 +935,11 @@ static void wrap_glDebugMessageCallback( TEB *teb, GLDEBUGPROC callback, const v
     struct wgl_handle *ptr = get_current_context_ptr( teb );
     const struct opengl_funcs *funcs = teb->glTable;
 
-    if (!funcs->ext.p_glDebugMessageCallback) return;
+    if (!funcs->p_glDebugMessageCallback) return;
 
     ptr->u.context->debug_callback = (UINT_PTR)callback;
     ptr->u.context->debug_user     = (UINT_PTR)user;
-    funcs->ext.p_glDebugMessageCallback( gl_debug_message_callback, ptr );
+    funcs->p_glDebugMessageCallback( gl_debug_message_callback, ptr );
 }
 
 static void wrap_glDebugMessageCallbackAMD( TEB *teb, GLDEBUGPROCAMD callback, void *user )
@@ -947,11 +947,11 @@ static void wrap_glDebugMessageCallbackAMD( TEB *teb, GLDEBUGPROCAMD callback, v
     struct wgl_handle *ptr = get_current_context_ptr( teb );
     const struct opengl_funcs *funcs = teb->glTable;
 
-    if (!funcs->ext.p_glDebugMessageCallbackAMD) return;
+    if (!funcs->p_glDebugMessageCallbackAMD) return;
 
     ptr->u.context->debug_callback = (UINT_PTR)callback;
     ptr->u.context->debug_user     = (UINT_PTR)user;
-    funcs->ext.p_glDebugMessageCallbackAMD( gl_debug_message_callback, ptr );
+    funcs->p_glDebugMessageCallbackAMD( gl_debug_message_callback, ptr );
 }
 
 static void wrap_glDebugMessageCallbackARB( TEB *teb, GLDEBUGPROCARB callback, const void *user )
@@ -959,11 +959,11 @@ static void wrap_glDebugMessageCallbackARB( TEB *teb, GLDEBUGPROCARB callback, c
     struct wgl_handle *ptr = get_current_context_ptr( teb );
     const struct opengl_funcs *funcs = teb->glTable;
 
-    if (!funcs->ext.p_glDebugMessageCallbackARB) return;
+    if (!funcs->p_glDebugMessageCallbackARB) return;
 
     ptr->u.context->debug_callback = (UINT_PTR)callback;
     ptr->u.context->debug_user     = (UINT_PTR)user;
-    funcs->ext.p_glDebugMessageCallbackARB( gl_debug_message_callback, ptr );
+    funcs->p_glDebugMessageCallbackARB( gl_debug_message_callback, ptr );
 }
 
 NTSTATUS wgl_wglCopyContext( void *args )
@@ -1173,8 +1173,8 @@ NTSTATUS get_pixel_formats( void *args )
 {
     struct get_pixel_formats_params *params = args;
     const struct opengl_funcs *funcs = get_dc_funcs( params->hdc );
-    if (!funcs || !funcs->wgl.p_get_pixel_formats) return STATUS_NOT_IMPLEMENTED;
-    funcs->wgl.p_get_pixel_formats( params->formats, params->max_formats,
+    if (!funcs || !funcs->p_get_pixel_formats) return STATUS_NOT_IMPLEMENTED;
+    funcs->p_get_pixel_formats( params->formats, params->max_formats,
                                     &params->num_formats, &params->num_onscreen_formats );
     return STATUS_SUCCESS;
 }
@@ -1821,9 +1821,9 @@ NTSTATUS wow64_ext_glWaitSync( void *args )
 static GLint get_buffer_param( TEB *teb, GLenum target, GLenum param )
 {
     const struct opengl_funcs *funcs = teb->glTable;
-    typeof(*funcs->ext.p_glGetBufferParameteriv) *func;
+    typeof(*funcs->p_glGetBufferParameteriv) *func;
     GLint size = 0;
-    if (!(func = funcs->ext.p_glGetBufferParameteriv)) func = (void *)funcs->wgl.p_wglGetProcAddress( "glGetBufferParameteriv" );
+    if (!(func = funcs->p_glGetBufferParameteriv)) func = (void *)funcs->p_wglGetProcAddress( "glGetBufferParameteriv" );
     if (func) func( target, param, &size );
     return size;
 }
@@ -1831,9 +1831,9 @@ static GLint get_buffer_param( TEB *teb, GLenum target, GLenum param )
 static void *get_buffer_pointer( TEB *teb, GLenum target )
 {
     const struct opengl_funcs *funcs = teb->glTable;
-    typeof(*funcs->ext.p_glGetBufferPointerv) *func;
+    typeof(*funcs->p_glGetBufferPointerv) *func;
     void *ptr = NULL;
-    if (!(func = funcs->ext.p_glGetBufferPointerv)) func = (void *)funcs->wgl.p_wglGetProcAddress( "glGetBufferPointerv" );
+    if (!(func = funcs->p_glGetBufferPointerv)) func = (void *)funcs->p_wglGetProcAddress( "glGetBufferPointerv" );
     if (func) func( target, GL_BUFFER_MAP_POINTER, &ptr );
     return ptr;
 }
@@ -1841,9 +1841,9 @@ static void *get_buffer_pointer( TEB *teb, GLenum target )
 static GLint get_named_buffer_param( TEB *teb, GLint buffer, GLenum param )
 {
     const struct opengl_funcs *funcs = teb->glTable;
-    typeof(*funcs->ext.p_glGetNamedBufferParameteriv) *func;
+    typeof(*funcs->p_glGetNamedBufferParameteriv) *func;
     GLint size = 0;
-    if (!(func = funcs->ext.p_glGetNamedBufferParameteriv)) func = (void *)funcs->wgl.p_wglGetProcAddress( "glGetNamedBufferParameteriv" );
+    if (!(func = funcs->p_glGetNamedBufferParameteriv)) func = (void *)funcs->p_wglGetProcAddress( "glGetNamedBufferParameteriv" );
     if (func) func( buffer, param, &size );
     return size;
 }
@@ -1851,9 +1851,9 @@ static GLint get_named_buffer_param( TEB *teb, GLint buffer, GLenum param )
 static void *get_named_buffer_pointer( TEB *teb, GLint buffer )
 {
     const struct opengl_funcs *funcs = teb->glTable;
-    typeof(*funcs->ext.p_glGetNamedBufferPointerv) *func;
+    typeof(*funcs->p_glGetNamedBufferPointerv) *func;
     void *ptr = NULL;
-    if (!(func = funcs->ext.p_glGetNamedBufferPointerv)) func = (void *)funcs->wgl.p_wglGetProcAddress( "glGetNamedBufferPointerv" );
+    if (!(func = funcs->p_glGetNamedBufferPointerv)) func = (void *)funcs->p_wglGetProcAddress( "glGetNamedBufferPointerv" );
     if (func) func( buffer, GL_BUFFER_MAP_POINTER, &ptr );
     return ptr;
 }
@@ -1861,16 +1861,16 @@ static void *get_named_buffer_pointer( TEB *teb, GLint buffer )
 static void unmap_buffer( TEB *teb, GLenum target )
 {
     const struct opengl_funcs *funcs = teb->glTable;
-    typeof(*funcs->ext.p_glUnmapBuffer) *func;
-    if (!(func = funcs->ext.p_glUnmapBuffer)) func = (void *)funcs->wgl.p_wglGetProcAddress( "glUnmapBuffer" );
+    typeof(*funcs->p_glUnmapBuffer) *func;
+    if (!(func = funcs->p_glUnmapBuffer)) func = (void *)funcs->p_wglGetProcAddress( "glUnmapBuffer" );
     if (func) func( target );
 }
 
 static void unmap_named_buffer( TEB *teb, GLint buffer )
 {
     const struct opengl_funcs *funcs = teb->glTable;
-    typeof(*funcs->ext.p_glUnmapNamedBuffer) *func;
-    if (!(func = funcs->ext.p_glUnmapNamedBuffer)) func = (void *)funcs->wgl.p_wglGetProcAddress( "glUnmapNamedBuffer" );
+    typeof(*funcs->p_glUnmapNamedBuffer) *func;
+    if (!(func = funcs->p_glUnmapNamedBuffer)) func = (void *)funcs->p_wglGetProcAddress( "glUnmapNamedBuffer" );
     if (func) func( buffer );
 }
 
diff --git a/dlls/win32u/opengl.c b/dlls/win32u/opengl.c
index 1bfdfb9f6ca..9b0bc380070 100644
--- a/dlls/win32u/opengl.c
+++ b/dlls/win32u/opengl.c
@@ -61,10 +61,6 @@ struct wgl_context
 
 static struct opengl_funcs osmesa_opengl_funcs;
 
-#define USE_GL_FUNC(name) #name,
-static const char *opengl_func_names[] = { ALL_GL_UNIX_FUNCS };
-#undef USE_GL_FUNC
-
 static OSMesaContext (*pOSMesaCreateContextExt)( GLenum format, GLint depthBits, GLint stencilBits,
                                                  GLint accumBits, OSMesaContext sharelist );
 static void (*pOSMesaDestroyContext)( OSMesaContext ctx );
@@ -76,7 +72,6 @@ static void (*pOSMesaPixelStore)( GLint pname, GLint value );
 static struct opengl_funcs *osmesa_get_wgl_driver(void)
 {
     static void *osmesa_handle;
-    unsigned int i;
 
     osmesa_handle = dlopen( SONAME_LIBOSMESA, RTLD_NOW );
     if (osmesa_handle == NULL)
@@ -98,14 +93,14 @@ static struct opengl_funcs *osmesa_get_wgl_driver(void)
     LOAD_FUNCPTR(OSMesaPixelStore);
 #undef LOAD_FUNCPTR
 
-    for (i = 0; i < ARRAY_SIZE( opengl_func_names ); i++)
-    {
-        if (!(((void **)&osmesa_opengl_funcs.gl)[i] = pOSMesaGetProcAddress( opengl_func_names[i] )))
-        {
-            ERR( "%s not found in %s, disabling.\n", opengl_func_names[i], SONAME_LIBOSMESA );
-            goto failed;
+#define USE_GL_FUNC(func) \
+        if (!(osmesa_opengl_funcs.p_##func = pOSMesaGetProcAddress( #func ))) \
+        { \
+            ERR( "%s not found in %s, disabling.\n", #func, SONAME_LIBOSMESA ); \
+            goto failed; \
         }
-    }
+    ALL_GL_UNIX_FUNCS
+#undef USE_GL_FUNC
 
     return &osmesa_opengl_funcs;
 
@@ -337,16 +332,16 @@ static void osmesa_get_pixel_formats( struct wgl_pixel_format *formats, UINT max
 
 static struct opengl_funcs osmesa_opengl_funcs =
 {
-    .wgl.p_wglCopyContext = osmesa_wglCopyContext,
-    .wgl.p_wglCreateContext = osmesa_wglCreateContext,
-    .wgl.p_wglDeleteContext = osmesa_wglDeleteContext,
-    .wgl.p_wglGetPixelFormat = osmesa_wglGetPixelFormat,
-    .wgl.p_wglGetProcAddress = osmesa_wglGetProcAddress,
-    .wgl.p_wglMakeCurrent = osmesa_wglMakeCurrent,
-    .wgl.p_wglSetPixelFormat = osmesa_wglSetPixelFormat,
-    .wgl.p_wglShareLists = osmesa_wglShareLists,
-    .wgl.p_wglSwapBuffers = osmesa_wglSwapBuffers,
-    .wgl.p_get_pixel_formats = osmesa_get_pixel_formats,
+    .p_wglCopyContext = osmesa_wglCopyContext,
+    .p_wglCreateContext = osmesa_wglCreateContext,
+    .p_wglDeleteContext = osmesa_wglDeleteContext,
+    .p_wglGetPixelFormat = osmesa_wglGetPixelFormat,
+    .p_wglGetProcAddress = osmesa_wglGetProcAddress,
+    .p_wglMakeCurrent = osmesa_wglMakeCurrent,
+    .p_wglSetPixelFormat = osmesa_wglSetPixelFormat,
+    .p_wglShareLists = osmesa_wglShareLists,
+    .p_wglSwapBuffers = osmesa_wglSwapBuffers,
+    .p_get_pixel_formats = osmesa_get_pixel_formats,
 };
 
 #else  /* SONAME_LIBOSMESA */
diff --git a/dlls/wineandroid.drv/opengl.c b/dlls/wineandroid.drv/opengl.c
index fcc16f85cfb..e28f1f537c5 100644
--- a/dlls/wineandroid.drv/opengl.c
+++ b/dlls/wineandroid.drv/opengl.c
@@ -643,21 +643,21 @@ static void init_extensions(void)
 
     register_extension("WGL_ARB_create_context");
     register_extension("WGL_ARB_create_context_profile");
-    egl_funcs.ext.p_wglCreateContextAttribsARB = android_wglCreateContextAttribsARB;
+    egl_funcs.p_wglCreateContextAttribsARB = android_wglCreateContextAttribsARB;
 
     register_extension("WGL_ARB_extensions_string");
-    egl_funcs.ext.p_wglGetExtensionsStringARB = android_wglGetExtensionsStringARB;
+    egl_funcs.p_wglGetExtensionsStringARB = android_wglGetExtensionsStringARB;
 
     register_extension("WGL_ARB_make_current_read");
-    egl_funcs.ext.p_wglGetCurrentReadDCARB   = (void *)1;  /* never called */
-    egl_funcs.ext.p_wglMakeContextCurrentARB = android_wglMakeContextCurrentARB;
+    egl_funcs.p_wglGetCurrentReadDCARB   = (void *)1;  /* never called */
+    egl_funcs.p_wglMakeContextCurrentARB = android_wglMakeContextCurrentARB;
 
     register_extension("WGL_EXT_extensions_string");
-    egl_funcs.ext.p_wglGetExtensionsStringEXT = android_wglGetExtensionsStringEXT;
+    egl_funcs.p_wglGetExtensionsStringEXT = android_wglGetExtensionsStringEXT;
 
     register_extension("WGL_EXT_swap_control");
-    egl_funcs.ext.p_wglSwapIntervalEXT = android_wglSwapIntervalEXT;
-    egl_funcs.ext.p_wglGetSwapIntervalEXT = android_wglGetSwapIntervalEXT;
+    egl_funcs.p_wglSwapIntervalEXT = android_wglSwapIntervalEXT;
+    egl_funcs.p_wglGetSwapIntervalEXT = android_wglGetSwapIntervalEXT;
 
     register_extension("WGL_EXT_framebuffer_sRGB");
 
@@ -665,15 +665,15 @@ static void init_extensions(void)
      * The default wglSetPixelFormat doesn't allow this, so add our own which allows it.
      */
     register_extension("WGL_WINE_pixel_format_passthrough");
-    egl_funcs.ext.p_wglSetPixelFormatWINE = android_wglSetPixelFormatWINE;
+    egl_funcs.p_wglSetPixelFormatWINE = android_wglSetPixelFormatWINE;
 
     /* load standard functions and extensions exported from the OpenGL library */
 
-#define USE_GL_FUNC(func) if ((ptr = dlsym( opengl_handle, #func ))) egl_funcs.gl.p_##func = ptr;
+#define USE_GL_FUNC(func) if ((ptr = dlsym( opengl_handle, #func ))) egl_funcs.p_##func = ptr;
     ALL_GL_UNIX_FUNCS
 #undef USE_GL_FUNC
 
-#define LOAD_FUNCPTR(func) egl_funcs.ext.p_##func = dlsym( opengl_handle, #func )
+#define LOAD_FUNCPTR(func) egl_funcs.p_##func = dlsym( opengl_handle, #func )
     LOAD_FUNCPTR( glActiveShaderProgram );
     LOAD_FUNCPTR( glActiveTexture );
     LOAD_FUNCPTR( glAttachShader );
@@ -952,7 +952,7 @@ static void init_extensions(void)
     /* redirect some standard OpenGL functions */
 
 #define REDIRECT(func) \
-    do { p##func = egl_funcs.gl.p_##func; egl_funcs.gl.p_##func = w##func; } while(0)
+    do { p##func = egl_funcs.p_##func; egl_funcs.p_##func = w##func; } while(0)
     REDIRECT(glFinish);
     REDIRECT(glFlush);
 #undef REDIRECT
@@ -1065,19 +1065,17 @@ ALL_GL_UNIX_FUNCS
 
 static struct opengl_funcs egl_funcs =
 {
-    {
-        android_wglCopyContext,
-        android_wglCreateContext,
-        android_wglDeleteContext,
-        android_wglGetPixelFormat,
-        android_wglGetProcAddress,
-        android_wglMakeCurrent,
-        android_wglSetPixelFormat,
-        android_wglShareLists,
-        android_wglSwapBuffers,
-        android_get_pixel_formats,
-    },
-#define USE_GL_FUNC(name) (void *)glstub_##name,
-    { ALL_GL_UNIX_FUNCS }
+    .p_wglCopyContext = android_wglCopyContext,
+    .p_wglCreateContext = android_wglCreateContext,
+    .p_wglDeleteContext = android_wglDeleteContext,
+    .p_wglGetPixelFormat = android_wglGetPixelFormat,
+    .p_wglGetProcAddress = android_wglGetProcAddress,
+    .p_wglMakeCurrent = android_wglMakeCurrent,
+    .p_wglSetPixelFormat = android_wglSetPixelFormat,
+    .p_wglShareLists = android_wglShareLists,
+    .p_wglSwapBuffers = android_wglSwapBuffers,
+    .p_get_pixel_formats = android_get_pixel_formats,
+#define USE_GL_FUNC(name) .p_##name = (void *)glstub_##name,
+    ALL_GL_UNIX_FUNCS
 #undef USE_GL_FUNC
 };
diff --git a/dlls/winemac.drv/opengl.c b/dlls/winemac.drv/opengl.c
index d0776c0b5a3..10c696ddbb2 100644
--- a/dlls/winemac.drv/opengl.c
+++ b/dlls/winemac.drv/opengl.c
@@ -100,11 +100,6 @@ static pthread_mutex_t dc_pbuffers_mutex = PTHREAD_MUTEX_INITIALIZER;
 
 static struct opengl_funcs opengl_funcs;
 
-#define USE_GL_FUNC(name) #name,
-static const char *opengl_func_names[] = { ALL_GL_UNIX_FUNCS };
-#undef USE_GL_FUNC
-
-
 static void (*pglCopyColorTable)(GLenum target, GLenum internalformat, GLint x, GLint y,
                                  GLsizei width);
 static void (*pglCopyPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
@@ -1273,7 +1268,7 @@ static BOOL init_gl_info(void)
         return FALSE;
     }
 
-    str = (const char*)opengl_funcs.gl.p_glGetString(GL_EXTENSIONS);
+    str = (const char*)opengl_funcs.p_glGetString(GL_EXTENSIONS);
     length = strlen(str) + sizeof(legacy_extensions);
     if (allow_vsync)
         length += strlen(legacy_ext_swap_control);
@@ -1283,12 +1278,12 @@ static BOOL init_gl_info(void)
     if (allow_vsync)
         strcat(gl_info.glExtensions, legacy_ext_swap_control);
 
-    opengl_funcs.gl.p_glGetIntegerv(GL_MAX_VIEWPORT_DIMS, gl_info.max_viewport_dims);
+    opengl_funcs.p_glGetIntegerv(GL_MAX_VIEWPORT_DIMS, gl_info.max_viewport_dims);
 
-    str = (const char*)opengl_funcs.gl.p_glGetString(GL_VERSION);
+    str = (const char*)opengl_funcs.p_glGetString(GL_VERSION);
     sscanf(str, "%u.%u", &gl_info.max_major, &gl_info.max_minor);
     TRACE("GL version   : %s\n", str);
-    TRACE("GL renderer  : %s\n", opengl_funcs.gl.p_glGetString(GL_RENDERER));
+    TRACE("GL renderer  : %s\n", opengl_funcs.p_glGetString(GL_RENDERER));
 
     CGLSetCurrentContext(old_context);
     CGLReleaseContext(context);
@@ -1319,7 +1314,7 @@ static BOOL init_gl_info(void)
         return TRUE;
     }
 
-    str = (const char*)opengl_funcs.gl.p_glGetString(GL_VERSION);
+    str = (const char*)opengl_funcs.p_glGetString(GL_VERSION);
     TRACE("Core context GL version: %s\n", str);
     sscanf(str, "%u.%u", &gl_info.max_major, &gl_info.max_minor);
     CGLSetCurrentContext(old_context);
@@ -1895,7 +1890,7 @@ static const char* get_gl_string(CGLPixelFormatObj pixel_format, GLenum name)
         err = CGLSetCurrentContext(context);
         if (err == kCGLNoError)
         {
-            ret = (const char*)opengl_funcs.gl.p_glGetString(name);
+            ret = (const char*)opengl_funcs.p_glGetString(name);
             CGLSetCurrentContext(old_context);
         }
         else
@@ -2323,7 +2318,7 @@ static BOOL macdrv_wglBindTexImageARB(struct wgl_pbuffer *pbuffer, int iBuffer)
     }
 
     if (!context->draw_view && context->draw_pbuffer == pbuffer)
-        opengl_funcs.gl.p_glFlush();
+        opengl_funcs.p_glFlush();
 
     switch (iBuffer)
     {
@@ -3575,7 +3570,7 @@ static BOOL macdrv_wglQueryCurrentRendererIntegerWINE(GLenum attribute, GLuint *
 
     if (attribute == WGL_RENDERER_VERSION_WINE)
     {
-        if (!parse_renderer_version((const char*)opengl_funcs.gl.p_glGetString(GL_VERSION), value))
+        if (!parse_renderer_version((const char*)opengl_funcs.p_glGetString(GL_VERSION), value))
             get_fallback_renderer_version(value);
         TRACE("WGL_RENDERER_VERSION_WINE -> %u.%u.%u\n", value[0], value[1], value[2]);
         return TRUE;
@@ -3649,14 +3644,14 @@ static const char *macdrv_wglQueryCurrentRendererStringWINE(GLenum attribute)
     {
         case WGL_RENDERER_DEVICE_ID_WINE:
         {
-            ret = (const char*)opengl_funcs.gl.p_glGetString(GL_RENDERER);
+            ret = (const char*)opengl_funcs.p_glGetString(GL_RENDERER);
             TRACE("WGL_RENDERER_DEVICE_ID_WINE -> %s\n", debugstr_a(ret));
             break;
         }
 
         case WGL_RENDERER_VENDOR_ID_WINE:
         {
-            ret = (const char*)opengl_funcs.gl.p_glGetString(GL_VENDOR);
+            ret = (const char*)opengl_funcs.p_glGetString(GL_VENDOR);
             TRACE("WGL_RENDERER_VENDOR_ID_WINE -> %s\n", debugstr_a(ret));
             break;
         }
@@ -4085,16 +4080,16 @@ static void load_extensions(void)
      * ARB Extensions
      */
     register_extension("WGL_ARB_extensions_string");
-    opengl_funcs.ext.p_wglGetExtensionsStringARB = macdrv_wglGetExtensionsStringARB;
+    opengl_funcs.p_wglGetExtensionsStringARB = macdrv_wglGetExtensionsStringARB;
 
     register_extension("WGL_ARB_make_current_read");
-    opengl_funcs.ext.p_wglGetCurrentReadDCARB   = (void *)1;  /* never called */
-    opengl_funcs.ext.p_wglMakeContextCurrentARB = macdrv_wglMakeContextCurrentARB;
+    opengl_funcs.p_wglGetCurrentReadDCARB   = (void *)1;  /* never called */
+    opengl_funcs.p_wglMakeContextCurrentARB = macdrv_wglMakeContextCurrentARB;
 
     register_extension("WGL_ARB_pixel_format");
-    opengl_funcs.ext.p_wglChoosePixelFormatARB      = macdrv_wglChoosePixelFormatARB;
-    opengl_funcs.ext.p_wglGetPixelFormatAttribfvARB = (void *)1; /* never called */
-    opengl_funcs.ext.p_wglGetPixelFormatAttribivARB = macdrv_wglGetPixelFormatAttribivARB;
+    opengl_funcs.p_wglChoosePixelFormatARB      = macdrv_wglChoosePixelFormatARB;
+    opengl_funcs.p_wglGetPixelFormatAttribfvARB = (void *)1; /* never called */
+    opengl_funcs.p_wglGetPixelFormatAttribivARB = macdrv_wglGetPixelFormatAttribivARB;
 
     if (gluCheckExtension((GLubyte*)"GL_ARB_color_buffer_float", (GLubyte*)gl_info.glExtensions))
     {
@@ -4111,16 +4106,16 @@ static void load_extensions(void)
     if (gluCheckExtension((GLubyte*)"GL_APPLE_pixel_buffer", (GLubyte*)gl_info.glExtensions))
     {
         register_extension("WGL_ARB_pbuffer");
-        opengl_funcs.ext.p_wglCreatePbufferARB    = macdrv_wglCreatePbufferARB;
-        opengl_funcs.ext.p_wglDestroyPbufferARB   = macdrv_wglDestroyPbufferARB;
-        opengl_funcs.ext.p_wglGetPbufferDCARB     = macdrv_wglGetPbufferDCARB;
-        opengl_funcs.ext.p_wglQueryPbufferARB     = macdrv_wglQueryPbufferARB;
-        opengl_funcs.ext.p_wglReleasePbufferDCARB = macdrv_wglReleasePbufferDCARB;
+        opengl_funcs.p_wglCreatePbufferARB    = macdrv_wglCreatePbufferARB;
+        opengl_funcs.p_wglDestroyPbufferARB   = macdrv_wglDestroyPbufferARB;
+        opengl_funcs.p_wglGetPbufferDCARB     = macdrv_wglGetPbufferDCARB;
+        opengl_funcs.p_wglQueryPbufferARB     = macdrv_wglQueryPbufferARB;
+        opengl_funcs.p_wglReleasePbufferDCARB = macdrv_wglReleasePbufferDCARB;
 
         register_extension("WGL_ARB_render_texture");
-        opengl_funcs.ext.p_wglBindTexImageARB       = macdrv_wglBindTexImageARB;
-        opengl_funcs.ext.p_wglReleaseTexImageARB    = macdrv_wglReleaseTexImageARB;
-        opengl_funcs.ext.p_wglSetPbufferAttribARB   = macdrv_wglSetPbufferAttribARB;
+        opengl_funcs.p_wglBindTexImageARB       = macdrv_wglBindTexImageARB;
+        opengl_funcs.p_wglReleaseTexImageARB    = macdrv_wglReleaseTexImageARB;
+        opengl_funcs.p_wglSetPbufferAttribARB   = macdrv_wglSetPbufferAttribARB;
 
         if (gluCheckExtension((GLubyte*)"GL_ARB_texture_rectangle", (GLubyte*)gl_info.glExtensions) ||
             gluCheckExtension((GLubyte*)"GL_EXT_texture_rectangle", (GLubyte*)gl_info.glExtensions))
@@ -4129,19 +4124,19 @@ static void load_extensions(void)
 
     register_extension("WGL_ARB_create_context");
     register_extension("WGL_ARB_create_context_profile");
-    opengl_funcs.ext.p_wglCreateContextAttribsARB = macdrv_wglCreateContextAttribsARB;
+    opengl_funcs.p_wglCreateContextAttribsARB = macdrv_wglCreateContextAttribsARB;
 
     /*
      * EXT Extensions
      */
     register_extension("WGL_EXT_extensions_string");
-    opengl_funcs.ext.p_wglGetExtensionsStringEXT = macdrv_wglGetExtensionsStringEXT;
+    opengl_funcs.p_wglGetExtensionsStringEXT = macdrv_wglGetExtensionsStringEXT;
 
     if (allow_vsync)
     {
         register_extension("WGL_EXT_swap_control");
-        opengl_funcs.ext.p_wglSwapIntervalEXT = macdrv_wglSwapIntervalEXT;
-        opengl_funcs.ext.p_wglGetSwapIntervalEXT = macdrv_wglGetSwapIntervalEXT;
+        opengl_funcs.p_wglSwapIntervalEXT = macdrv_wglSwapIntervalEXT;
+        opengl_funcs.p_wglGetSwapIntervalEXT = macdrv_wglGetSwapIntervalEXT;
     }
 
     /* Presumably identical to [W]GL_ARB_framebuffer_sRGB, above, but clients may
@@ -4160,13 +4155,13 @@ static void load_extensions(void)
      * The default wglSetPixelFormat doesn't allow this, so add our own which allows it.
      */
     register_extension("WGL_WINE_pixel_format_passthrough");
-    opengl_funcs.ext.p_wglSetPixelFormatWINE = macdrv_wglSetPixelFormatWINE;
+    opengl_funcs.p_wglSetPixelFormatWINE = macdrv_wglSetPixelFormatWINE;
 
     register_extension("WGL_WINE_query_renderer");
-    opengl_funcs.ext.p_wglQueryCurrentRendererIntegerWINE = macdrv_wglQueryCurrentRendererIntegerWINE;
-    opengl_funcs.ext.p_wglQueryCurrentRendererStringWINE = macdrv_wglQueryCurrentRendererStringWINE;
-    opengl_funcs.ext.p_wglQueryRendererIntegerWINE = macdrv_wglQueryRendererIntegerWINE;
-    opengl_funcs.ext.p_wglQueryRendererStringWINE = macdrv_wglQueryRendererStringWINE;
+    opengl_funcs.p_wglQueryCurrentRendererIntegerWINE = macdrv_wglQueryCurrentRendererIntegerWINE;
+    opengl_funcs.p_wglQueryCurrentRendererStringWINE = macdrv_wglQueryCurrentRendererStringWINE;
+    opengl_funcs.p_wglQueryRendererIntegerWINE = macdrv_wglQueryRendererIntegerWINE;
+    opengl_funcs.p_wglQueryRendererStringWINE = macdrv_wglQueryRendererStringWINE;
 }
 
 
@@ -4175,8 +4170,6 @@ static void load_extensions(void)
  */
 struct opengl_funcs *macdrv_wine_get_wgl_driver(UINT version)
 {
-    unsigned int i;
-
     TRACE("()\n");
 
     if (version != WINE_WGL_DRIVER_VERSION)
@@ -4200,21 +4193,21 @@ struct opengl_funcs *macdrv_wine_get_wgl_driver(UINT version)
         return NULL;
     }
 
-    for (i = 0; i < ARRAY_SIZE(opengl_func_names); i++)
-    {
-        if (!(((void **)&opengl_funcs.gl)[i] = dlsym(opengl_handle, opengl_func_names[i])))
-        {
-            ERR("%s not found in OpenGL, disabling.\n", opengl_func_names[i]);
-            goto failed;
+#define USE_GL_FUNC(func) \
+        if (!(opengl_funcs.p_##func = dlsym(opengl_handle, #func))) \
+        { \
+            ERR( "%s not found in OpenGL, disabling.\n", #func ); \
+            goto failed; \
         }
-    }
+    ALL_GL_UNIX_FUNCS
+#undef USE_GL_FUNC
 
     if (!init_gl_info())
         goto failed;
 
     /* redirect some standard OpenGL functions */
 #define REDIRECT(func) \
-    do { p##func = opengl_funcs.gl.p_##func; opengl_funcs.gl.p_##func = macdrv_##func; } while(0)
+    do { p##func = opengl_funcs.p_##func; opengl_funcs.p_##func = macdrv_##func; } while(0)
     REDIRECT(glCopyPixels);
     REDIRECT(glGetString);
     REDIRECT(glReadPixels);
@@ -4227,7 +4220,7 @@ struct opengl_funcs *macdrv_wine_get_wgl_driver(UINT version)
 
     /* redirect some OpenGL extension functions */
 #define REDIRECT(func) \
-    do { if ((p##func = dlsym(opengl_handle, #func))) { opengl_funcs.ext.p_##func = macdrv_##func; } } while(0)
+    do { if ((p##func = dlsym(opengl_handle, #func))) { opengl_funcs.p_##func = macdrv_##func; } } while(0)
     REDIRECT(glCopyColorTable);
 #undef REDIRECT
 
@@ -4577,16 +4570,14 @@ static void macdrv_get_pixel_formats(struct wgl_pixel_format *formats,
 
 static struct opengl_funcs opengl_funcs =
 {
-    {
-        macdrv_wglCopyContext,          /* p_wglCopyContext */
-        macdrv_wglCreateContext,        /* p_wglCreateContext */
-        macdrv_wglDeleteContext,        /* p_wglDeleteContext */
-        macdrv_wglGetPixelFormat,       /* p_wglGetPixelFormat */
-        macdrv_wglGetProcAddress,       /* p_wglGetProcAddress */
-        macdrv_wglMakeCurrent,          /* p_wglMakeCurrent */
-        macdrv_wglSetPixelFormat,       /* p_wglSetPixelFormat */
-        macdrv_wglShareLists,           /* p_wglShareLists */
-        macdrv_wglSwapBuffers,          /* p_wglSwapBuffers */
-        macdrv_get_pixel_formats,       /* p_get_pixel_formats */
-    }
+    .p_wglCopyContext = macdrv_wglCopyContext,
+    .p_wglCreateContext = macdrv_wglCreateContext,
+    .p_wglDeleteContext = macdrv_wglDeleteContext,
+    .p_wglGetPixelFormat = macdrv_wglGetPixelFormat,
+    .p_wglGetProcAddress = macdrv_wglGetProcAddress,
+    .p_wglMakeCurrent = macdrv_wglMakeCurrent,
+    .p_wglSetPixelFormat = macdrv_wglSetPixelFormat,
+    .p_wglShareLists = macdrv_wglShareLists,
+    .p_wglSwapBuffers = macdrv_wglSwapBuffers,
+    .p_get_pixel_formats = macdrv_get_pixel_formats,
 };
diff --git a/dlls/winewayland.drv/opengl.c b/dlls/winewayland.drv/opengl.c
index 788b31f259f..4e8dc567230 100644
--- a/dlls/winewayland.drv/opengl.c
+++ b/dlls/winewayland.drv/opengl.c
@@ -51,10 +51,6 @@ static EGLConfig *egl_configs;
 static int num_egl_configs;
 static BOOL has_egl_ext_pixel_format_float;
 
-#define USE_GL_FUNC(name) #name,
-static const char *opengl_func_names[] = { ALL_GL_UNIX_FUNCS };
-#undef USE_GL_FUNC
-
 #define DECL_FUNCPTR(f) static typeof(f) * p_##f
 DECL_FUNCPTR(eglBindAPI);
 DECL_FUNCPTR(eglChooseConfig);
@@ -991,7 +987,7 @@ static BOOL wayland_wglBindTexImageARB(struct wgl_pbuffer *pbuffer, int buffer)
         pbuffer->prev_context = prev_context;
     }
 
-    opengl_funcs.gl.p_glGetIntegerv(pbuffer->texture_binding, &prev_bound_texture);
+    opengl_funcs.p_glGetIntegerv(pbuffer->texture_binding, &prev_bound_texture);
 
     p_eglMakeCurrent(egl_display, pbuffer->gl->surface, pbuffer->gl->surface,
                      pbuffer->tmp_context);
@@ -1000,8 +996,8 @@ static BOOL wayland_wglBindTexImageARB(struct wgl_pbuffer *pbuffer, int buffer)
      * state isn't shared between contexts. After that copy the pbuffer texture
      * data. Note that at the moment we ignore the 'buffer' argument and always
      * copy from the pbuffer back buffer. */
-    opengl_funcs.gl.p_glBindTexture(pbuffer->texture_target, prev_bound_texture);
-    opengl_funcs.gl.p_glCopyTexImage2D(pbuffer->texture_target, 0,
+    opengl_funcs.p_glBindTexture(pbuffer->texture_target, prev_bound_texture);
+    opengl_funcs.p_glCopyTexImage2D(pbuffer->texture_target, 0,
                                        pbuffer->texture_format, 0, 0,
                                        pbuffer->width, pbuffer->height, 0);
 
@@ -1201,46 +1197,44 @@ static void register_extension(const char *ext)
 
 static BOOL init_opengl_funcs(void)
 {
-    unsigned int i;
-
-    for (i = 0; i < ARRAY_SIZE(opengl_func_names); i++)
-    {
-        if (!(((void **)&opengl_funcs.gl)[i] = p_eglGetProcAddress(opengl_func_names[i])))
-        {
-            ERR("%s not found, disabling OpenGL.\n", opengl_func_names[i]);
-            return FALSE;
+#define USE_GL_FUNC(func) \
+        if (!(opengl_funcs.p_##func = (void *)p_eglGetProcAddress(#func))) \
+        { \
+            ERR("%s not found, disabling OpenGL.\n", #func); \
+            return FALSE; \
         }
-    }
+    ALL_GL_UNIX_FUNCS
+#undef USE_GL_FUNC
 
-    p_glClear = opengl_funcs.gl.p_glClear;
-    opengl_funcs.gl.p_glClear = wayland_glClear;
+    p_glClear = opengl_funcs.p_glClear;
+    opengl_funcs.p_glClear = wayland_glClear;
 
     register_extension("WGL_ARB_extensions_string");
-    opengl_funcs.ext.p_wglGetExtensionsStringARB = wayland_wglGetExtensionsStringARB;
+    opengl_funcs.p_wglGetExtensionsStringARB = wayland_wglGetExtensionsStringARB;
 
     register_extension("WGL_EXT_extensions_string");
-    opengl_funcs.ext.p_wglGetExtensionsStringEXT = wayland_wglGetExtensionsStringEXT;
+    opengl_funcs.p_wglGetExtensionsStringEXT = wayland_wglGetExtensionsStringEXT;
 
     register_extension("WGL_WINE_pixel_format_passthrough");
-    opengl_funcs.ext.p_wglSetPixelFormatWINE = wayland_wglSetPixelFormatWINE;
+    opengl_funcs.p_wglSetPixelFormatWINE = wayland_wglSetPixelFormatWINE;
 
     register_extension("WGL_ARB_make_current_read");
-    opengl_funcs.ext.p_wglGetCurrentReadDCARB = (void *)1;  /* never called */
-    opengl_funcs.ext.p_wglMakeContextCurrentARB = wayland_wglMakeContextCurrentARB;
+    opengl_funcs.p_wglGetCurrentReadDCARB = (void *)1;  /* never called */
+    opengl_funcs.p_wglMakeContextCurrentARB = wayland_wglMakeContextCurrentARB;
 
     register_extension("WGL_ARB_create_context");
     register_extension("WGL_ARB_create_context_no_error");
     register_extension("WGL_ARB_create_context_profile");
-    opengl_funcs.ext.p_wglCreateContextAttribsARB = wayland_wglCreateContextAttribsARB;
+    opengl_funcs.p_wglCreateContextAttribsARB = wayland_wglCreateContextAttribsARB;
 
     register_extension("WGL_EXT_swap_control");
-    opengl_funcs.ext.p_wglGetSwapIntervalEXT = wayland_wglGetSwapIntervalEXT;
-    opengl_funcs.ext.p_wglSwapIntervalEXT = wayland_wglSwapIntervalEXT;
+    opengl_funcs.p_wglGetSwapIntervalEXT = wayland_wglGetSwapIntervalEXT;
+    opengl_funcs.p_wglSwapIntervalEXT = wayland_wglSwapIntervalEXT;
 
     register_extension("WGL_ARB_pixel_format");
-    opengl_funcs.ext.p_wglChoosePixelFormatARB = (void *)1; /* never called */
-    opengl_funcs.ext.p_wglGetPixelFormatAttribfvARB = (void *)1; /* never called */
-    opengl_funcs.ext.p_wglGetPixelFormatAttribivARB = (void *)1; /* never called */
+    opengl_funcs.p_wglChoosePixelFormatARB = (void *)1; /* never called */
+    opengl_funcs.p_wglGetPixelFormatAttribfvARB = (void *)1; /* never called */
+    opengl_funcs.p_wglGetPixelFormatAttribivARB = (void *)1; /* never called */
 
     if (has_egl_ext_pixel_format_float)
     {
@@ -1249,16 +1243,16 @@ static BOOL init_opengl_funcs(void)
     }
 
     register_extension("WGL_ARB_pbuffer");
-    opengl_funcs.ext.p_wglCreatePbufferARB = wayland_wglCreatePbufferARB;
-    opengl_funcs.ext.p_wglDestroyPbufferARB = wayland_wglDestroyPbufferARB;
-    opengl_funcs.ext.p_wglGetPbufferDCARB = wayland_wglGetPbufferDCARB;
-    opengl_funcs.ext.p_wglQueryPbufferARB = wayland_wglQueryPbufferARB;
-    opengl_funcs.ext.p_wglReleasePbufferDCARB = wayland_wglReleasePbufferDCARB;
+    opengl_funcs.p_wglCreatePbufferARB = wayland_wglCreatePbufferARB;
+    opengl_funcs.p_wglDestroyPbufferARB = wayland_wglDestroyPbufferARB;
+    opengl_funcs.p_wglGetPbufferDCARB = wayland_wglGetPbufferDCARB;
+    opengl_funcs.p_wglQueryPbufferARB = wayland_wglQueryPbufferARB;
+    opengl_funcs.p_wglReleasePbufferDCARB = wayland_wglReleasePbufferDCARB;
 
     register_extension("WGL_ARB_render_texture");
-    opengl_funcs.ext.p_wglBindTexImageARB = wayland_wglBindTexImageARB;
-    opengl_funcs.ext.p_wglReleaseTexImageARB = wayland_wglReleaseTexImageARB;
-    opengl_funcs.ext.p_wglSetPbufferAttribARB = wayland_wglSetPbufferAttribARB;
+    opengl_funcs.p_wglBindTexImageARB = wayland_wglBindTexImageARB;
+    opengl_funcs.p_wglReleaseTexImageARB = wayland_wglReleaseTexImageARB;
+    opengl_funcs.p_wglSetPbufferAttribARB = wayland_wglSetPbufferAttribARB;
 
     return TRUE;
 }
@@ -1421,18 +1415,15 @@ err:
 
 static struct opengl_funcs opengl_funcs =
 {
-    .wgl =
-    {
-        .p_wglCopyContext = wayland_wglCopyContext,
-        .p_wglCreateContext = wayland_wglCreateContext,
-        .p_wglDeleteContext = wayland_wglDeleteContext,
-        .p_wglGetProcAddress = wayland_wglGetProcAddress,
-        .p_wglMakeCurrent = wayland_wglMakeCurrent,
-        .p_wglSetPixelFormat = wayland_wglSetPixelFormat,
-        .p_wglShareLists = wayland_wglShareLists,
-        .p_wglSwapBuffers = wayland_wglSwapBuffers,
-        .p_get_pixel_formats = wayland_get_pixel_formats,
-    }
+    .p_wglCopyContext = wayland_wglCopyContext,
+    .p_wglCreateContext = wayland_wglCreateContext,
+    .p_wglDeleteContext = wayland_wglDeleteContext,
+    .p_wglGetProcAddress = wayland_wglGetProcAddress,
+    .p_wglMakeCurrent = wayland_wglMakeCurrent,
+    .p_wglSetPixelFormat = wayland_wglSetPixelFormat,
+    .p_wglShareLists = wayland_wglShareLists,
+    .p_wglSwapBuffers = wayland_wglSwapBuffers,
+    .p_get_pixel_formats = wayland_get_pixel_formats,
 };
 
 /**********************************************************************
diff --git a/dlls/winex11.drv/opengl.c b/dlls/winex11.drv/opengl.c
index 86cce62b66f..626eeba083e 100644
--- a/dlls/winex11.drv/opengl.c
+++ b/dlls/winex11.drv/opengl.c
@@ -286,10 +286,6 @@ static const BOOL is_win64 = sizeof(void *) > sizeof(int);
 
 static struct opengl_funcs opengl_funcs;
 
-#define USE_GL_FUNC(name) #name,
-static const char *opengl_func_names[] = { ALL_GL_UNIX_FUNCS };
-#undef USE_GL_FUNC
-
 static void X11DRV_WineGL_LoadExtensions(void);
 static void init_pixel_formats( Display *display );
 static BOOL glxRequireVersion(int requiredVersion);
@@ -470,9 +466,9 @@ static BOOL X11DRV_WineGL_InitOpenglInfo(void)
                         "installed correctly\n", is_win64 ? "64-bit" : "32-bit" );
         goto done;
     }
-    gl_renderer = (const char *)opengl_funcs.gl.p_glGetString(GL_RENDERER);
-    gl_version  = (const char *)opengl_funcs.gl.p_glGetString(GL_VERSION);
-    str = (const char *) opengl_funcs.gl.p_glGetString(GL_EXTENSIONS);
+    gl_renderer = (const char *)opengl_funcs.p_glGetString(GL_RENDERER);
+    gl_version  = (const char *)opengl_funcs.p_glGetString(GL_VERSION);
+    str = (const char *) opengl_funcs.p_glGetString(GL_EXTENSIONS);
     glExtensions = malloc( strlen(str) + sizeof(legacy_extensions) );
     strcpy(glExtensions, str);
     strcat(glExtensions, legacy_extensions);
@@ -546,7 +542,6 @@ static void *opengl_handle;
 struct opengl_funcs *X11DRV_wine_get_wgl_driver(UINT version)
 {
     int error_base, event_base;
-    unsigned int i;
 
     if (version != WINE_WGL_DRIVER_VERSION)
     {
@@ -564,18 +559,18 @@ struct opengl_funcs *X11DRV_wine_get_wgl_driver(UINT version)
         return NULL;
     }
 
-    for (i = 0; i < ARRAY_SIZE( opengl_func_names ); i++)
-    {
-        if (!(((void **)&opengl_funcs.gl)[i] = dlsym( opengl_handle, opengl_func_names[i] )))
-        {
-            ERR( "%s not found in libGL, disabling OpenGL.\n", opengl_func_names[i] );
-            goto failed;
+#define USE_GL_FUNC(func) \
+        if (!(opengl_funcs.p_##func = dlsym( opengl_handle, #func ))) \
+        { \
+            ERR( "%s not found in libGL, disabling OpenGL.\n", #func ); \
+            goto failed; \
         }
-    }
+    ALL_GL_UNIX_FUNCS
+#undef USE_GL_FUNC
 
     /* redirect some standard OpenGL functions */
 #define REDIRECT(func) \
-    do { p##func = opengl_funcs.gl.p_##func; opengl_funcs.gl.p_##func = w##func; } while(0)
+    do { p##func = opengl_funcs.p_##func; opengl_funcs.p_##func = w##func; } while(0)
     REDIRECT( glFinish );
     REDIRECT( glFlush );
     REDIRECT( glGetString );
@@ -2496,15 +2491,15 @@ static BOOL X11DRV_wglBindTexImageARB( struct wgl_pbuffer *object, int iBuffer )
             object->prev_context = prev_context;
         }
 
-        opengl_funcs.gl.p_glGetIntegerv(object->texture_bind_target, &prev_binded_texture);
+        opengl_funcs.p_glGetIntegerv(object->texture_bind_target, &prev_binded_texture);
 
         /* Switch to our pbuffer */
         pglXMakeCurrent(gdi_display, object->gl->drawable, object->tmp_context);
 
         /* Make sure that the prev_binded_texture is set as the current texture state isn't shared between contexts.
          * After that copy the pbuffer texture data. */
-        opengl_funcs.gl.p_glBindTexture(object->texture_target, prev_binded_texture);
-        opengl_funcs.gl.p_glCopyTexImage2D(object->texture_target, 0, object->use_render_texture, 0, 0, object->width, object->height, 0);
+        opengl_funcs.p_glBindTexture(object->texture_target, prev_binded_texture);
+        opengl_funcs.p_glCopyTexImage2D(object->texture_target, 0, object->use_render_texture, 0, 0, object->width, object->height, 0);
 
         /* Switch back to the original drawable and context */
         pglXMakeCurrent(gdi_display, prev_drawable, prev_context);
@@ -2679,7 +2674,7 @@ static void X11DRV_WineGL_LoadExtensions(void)
     if (has_extension( glxExtensions, "GLX_ARB_create_context"))
     {
         register_extension( "WGL_ARB_create_context" );
-        opengl_funcs.ext.p_wglCreateContextAttribsARB = X11DRV_wglCreateContextAttribsARB;
+        opengl_funcs.p_wglCreateContextAttribsARB = X11DRV_wglCreateContextAttribsARB;
 
         if (has_extension( glxExtensions, "GLX_ARB_create_context_no_error" ))
             register_extension( "WGL_ARB_create_context_no_error" );
@@ -2689,13 +2684,13 @@ static void X11DRV_WineGL_LoadExtensions(void)
 
 
     register_extension( "WGL_ARB_extensions_string" );
-    opengl_funcs.ext.p_wglGetExtensionsStringARB = X11DRV_wglGetExtensionsStringARB;
+    opengl_funcs.p_wglGetExtensionsStringARB = X11DRV_wglGetExtensionsStringARB;
 
     if (glxRequireVersion(3))
     {
         register_extension( "WGL_ARB_make_current_read" );
-        opengl_funcs.ext.p_wglGetCurrentReadDCARB   = (void *)1;  /* never called */
-        opengl_funcs.ext.p_wglMakeContextCurrentARB = X11DRV_wglMakeContextCurrentARB;
+        opengl_funcs.p_wglGetCurrentReadDCARB   = (void *)1;  /* never called */
+        opengl_funcs.p_wglMakeContextCurrentARB = X11DRV_wglMakeContextCurrentARB;
     }
 
     if (has_extension( glxExtensions, "GLX_ARB_multisample")) register_extension( "WGL_ARB_multisample" );
@@ -2703,18 +2698,18 @@ static void X11DRV_WineGL_LoadExtensions(void)
     if (glxRequireVersion(3))
     {
         register_extension( "WGL_ARB_pbuffer" );
-        opengl_funcs.ext.p_wglCreatePbufferARB    = X11DRV_wglCreatePbufferARB;
-        opengl_funcs.ext.p_wglDestroyPbufferARB   = X11DRV_wglDestroyPbufferARB;
-        opengl_funcs.ext.p_wglGetPbufferDCARB     = X11DRV_wglGetPbufferDCARB;
-        opengl_funcs.ext.p_wglQueryPbufferARB     = X11DRV_wglQueryPbufferARB;
-        opengl_funcs.ext.p_wglReleasePbufferDCARB = X11DRV_wglReleasePbufferDCARB;
-        opengl_funcs.ext.p_wglSetPbufferAttribARB = X11DRV_wglSetPbufferAttribARB;
+        opengl_funcs.p_wglCreatePbufferARB    = X11DRV_wglCreatePbufferARB;
+        opengl_funcs.p_wglDestroyPbufferARB   = X11DRV_wglDestroyPbufferARB;
+        opengl_funcs.p_wglGetPbufferDCARB     = X11DRV_wglGetPbufferDCARB;
+        opengl_funcs.p_wglQueryPbufferARB     = X11DRV_wglQueryPbufferARB;
+        opengl_funcs.p_wglReleasePbufferDCARB = X11DRV_wglReleasePbufferDCARB;
+        opengl_funcs.p_wglSetPbufferAttribARB = X11DRV_wglSetPbufferAttribARB;
     }
 
     register_extension( "WGL_ARB_pixel_format" );
-    opengl_funcs.ext.p_wglChoosePixelFormatARB      = (void *)1; /* never called */
-    opengl_funcs.ext.p_wglGetPixelFormatAttribfvARB = (void *)1; /* never called */
-    opengl_funcs.ext.p_wglGetPixelFormatAttribivARB = (void *)1; /* never called */
+    opengl_funcs.p_wglChoosePixelFormatARB      = (void *)1; /* never called */
+    opengl_funcs.p_wglGetPixelFormatAttribfvARB = (void *)1; /* never called */
+    opengl_funcs.p_wglGetPixelFormatAttribivARB = (void *)1; /* never called */
 
     if (has_extension( glxExtensions, "GLX_ARB_fbconfig_float"))
     {
@@ -2727,8 +2722,8 @@ static void X11DRV_WineGL_LoadExtensions(void)
         (glxRequireVersion(3) && use_render_texture_emulation))
     {
         register_extension( "WGL_ARB_render_texture" );
-        opengl_funcs.ext.p_wglBindTexImageARB    = X11DRV_wglBindTexImageARB;
-        opengl_funcs.ext.p_wglReleaseTexImageARB = X11DRV_wglReleaseTexImageARB;
+        opengl_funcs.p_wglBindTexImageARB    = X11DRV_wglBindTexImageARB;
+        opengl_funcs.p_wglReleaseTexImageARB = X11DRV_wglReleaseTexImageARB;
 
         /* The WGL version of GLX_NV_float_buffer requires render_texture */
         if (has_extension( glxExtensions, "GLX_NV_float_buffer"))
@@ -2742,13 +2737,13 @@ static void X11DRV_WineGL_LoadExtensions(void)
     /* EXT Extensions */
 
     register_extension( "WGL_EXT_extensions_string" );
-    opengl_funcs.ext.p_wglGetExtensionsStringEXT = X11DRV_wglGetExtensionsStringEXT;
+    opengl_funcs.p_wglGetExtensionsStringEXT = X11DRV_wglGetExtensionsStringEXT;
 
     /* Load this extension even when it isn't backed by a GLX extension because it is has been around for ages.
      * Games like Call of Duty and K.O.T.O.R. rely on it. Further our emulation is good enough. */
     register_extension( "WGL_EXT_swap_control" );
-    opengl_funcs.ext.p_wglSwapIntervalEXT = X11DRV_wglSwapIntervalEXT;
-    opengl_funcs.ext.p_wglGetSwapIntervalEXT = X11DRV_wglGetSwapIntervalEXT;
+    opengl_funcs.p_wglSwapIntervalEXT = X11DRV_wglSwapIntervalEXT;
+    opengl_funcs.p_wglGetSwapIntervalEXT = X11DRV_wglGetSwapIntervalEXT;
 
     if (has_extension( glxExtensions, "GLX_EXT_framebuffer_sRGB"))
         register_extension("WGL_EXT_framebuffer_sRGB");
@@ -2778,8 +2773,8 @@ static void X11DRV_WineGL_LoadExtensions(void)
     if (has_extension(glExtensions, "GL_NV_vertex_array_range"))
     {
         register_extension( "WGL_NV_vertex_array_range" );
-        opengl_funcs.ext.p_wglAllocateMemoryNV = pglXAllocateMemoryNV;
-        opengl_funcs.ext.p_wglFreeMemoryNV = pglXFreeMemoryNV;
+        opengl_funcs.p_wglAllocateMemoryNV = pglXAllocateMemoryNV;
+        opengl_funcs.p_wglFreeMemoryNV = pglXFreeMemoryNV;
     }
 
     if (has_extension(glxExtensions, "GLX_OML_swap_method"))
@@ -2791,15 +2786,15 @@ static void X11DRV_WineGL_LoadExtensions(void)
      * The default wglSetPixelFormat doesn't allow this, so add our own which allows it.
      */
     register_extension( "WGL_WINE_pixel_format_passthrough" );
-    opengl_funcs.ext.p_wglSetPixelFormatWINE = X11DRV_wglSetPixelFormatWINE;
+    opengl_funcs.p_wglSetPixelFormatWINE = X11DRV_wglSetPixelFormatWINE;
 
     if (has_extension( glxExtensions, "GLX_MESA_query_renderer" ))
     {
         register_extension( "WGL_WINE_query_renderer" );
-        opengl_funcs.ext.p_wglQueryCurrentRendererIntegerWINE = X11DRV_wglQueryCurrentRendererIntegerWINE;
-        opengl_funcs.ext.p_wglQueryCurrentRendererStringWINE = X11DRV_wglQueryCurrentRendererStringWINE;
-        opengl_funcs.ext.p_wglQueryRendererIntegerWINE = X11DRV_wglQueryRendererIntegerWINE;
-        opengl_funcs.ext.p_wglQueryRendererStringWINE = X11DRV_wglQueryRendererStringWINE;
+        opengl_funcs.p_wglQueryCurrentRendererIntegerWINE = X11DRV_wglQueryCurrentRendererIntegerWINE;
+        opengl_funcs.p_wglQueryCurrentRendererStringWINE = X11DRV_wglQueryCurrentRendererStringWINE;
+        opengl_funcs.p_wglQueryRendererIntegerWINE = X11DRV_wglQueryRendererIntegerWINE;
+        opengl_funcs.p_wglQueryRendererStringWINE = X11DRV_wglQueryRendererStringWINE;
     }
 }
 
@@ -2896,18 +2891,16 @@ static void glxdrv_get_pixel_formats( struct wgl_pixel_format *formats,
 
 static struct opengl_funcs opengl_funcs =
 {
-    {
-        glxdrv_wglCopyContext,              /* p_wglCopyContext */
-        glxdrv_wglCreateContext,            /* p_wglCreateContext */
-        glxdrv_wglDeleteContext,            /* p_wglDeleteContext */
-        glxdrv_wglGetPixelFormat,           /* p_wglGetPixelFormat */
-        glxdrv_wglGetProcAddress,           /* p_wglGetProcAddress */
-        glxdrv_wglMakeCurrent,              /* p_wglMakeCurrent */
-        glxdrv_wglSetPixelFormat,           /* p_wglSetPixelFormat */
-        glxdrv_wglShareLists,               /* p_wglShareLists */
-        glxdrv_wglSwapBuffers,              /* p_wglSwapBuffers */
-        glxdrv_get_pixel_formats,           /* p_get_pixel_formats */
-    }
+    .p_wglCopyContext = glxdrv_wglCopyContext,
+    .p_wglCreateContext = glxdrv_wglCreateContext,
+    .p_wglDeleteContext = glxdrv_wglDeleteContext,
+    .p_wglGetPixelFormat = glxdrv_wglGetPixelFormat,
+    .p_wglGetProcAddress = glxdrv_wglGetProcAddress,
+    .p_wglMakeCurrent = glxdrv_wglMakeCurrent,
+    .p_wglSetPixelFormat = glxdrv_wglSetPixelFormat,
+    .p_wglShareLists = glxdrv_wglShareLists,
+    .p_wglSwapBuffers = glxdrv_wglSwapBuffers,
+    .p_get_pixel_formats = glxdrv_get_pixel_formats,
 };
 
 #else  /* no OpenGL includes */
diff --git a/include/wine/wgl_driver.h b/include/wine/wgl_driver.h
index a5397b20814..3d612c20782 100644
--- a/include/wine/wgl_driver.h
+++ b/include/wine/wgl_driver.h
@@ -3,11 +3,7 @@
 #ifndef __WINE_WGL_DRIVER_H
 #define __WINE_WGL_DRIVER_H
 
-#ifndef WINE_GLAPI
-#define WINE_GLAPI
-#endif
-
-#define WINE_WGL_DRIVER_VERSION 28
+#define WINE_WGL_DRIVER_VERSION 29
 
 struct wgl_context;
 struct wgl_pbuffer;
@@ -44,3057 +40,3046 @@ struct wgl_pixel_format
 
 struct opengl_funcs
 {
-    struct
-    {
-        BOOL       (WINE_GLAPI *p_wglCopyContext)( struct wgl_context * hglrcSrc, struct wgl_context * hglrcDst, UINT mask );
-        struct wgl_context * (WINE_GLAPI *p_wglCreateContext)( HDC hDc );
-        BOOL       (WINE_GLAPI *p_wglDeleteContext)( struct wgl_context * oldContext );
-        int        (WINE_GLAPI *p_wglGetPixelFormat)( HDC hdc );
-        PROC       (WINE_GLAPI *p_wglGetProcAddress)( LPCSTR lpszProc );
-        BOOL       (WINE_GLAPI *p_wglMakeCurrent)( HDC hDc, struct wgl_context * newContext );
-        BOOL       (WINE_GLAPI *p_wglSetPixelFormat)( HDC hdc, int ipfd, const PIXELFORMATDESCRIPTOR *ppfd );
-        BOOL       (WINE_GLAPI *p_wglShareLists)( struct wgl_context * hrcSrvShare, struct wgl_context * hrcSrvSource );
-        BOOL       (WINE_GLAPI *p_wglSwapBuffers)( HDC hdc );
-        void       (WINE_GLAPI *p_get_pixel_formats)( struct wgl_pixel_format *formats, UINT max_formats, UINT *num_formats, UINT *num_onscreen_formats );
-    } wgl;
-
-    struct
-    {
-        void       (WINE_GLAPI *p_glAccum)( GLenum op, GLfloat value );
-        void       (WINE_GLAPI *p_glAlphaFunc)( GLenum func, GLfloat ref );
-        GLboolean  (WINE_GLAPI *p_glAreTexturesResident)( GLsizei n, const GLuint *textures, GLboolean *residences );
-        void       (WINE_GLAPI *p_glArrayElement)( GLint i );
-        void       (WINE_GLAPI *p_glBegin)( GLenum mode );
-        void       (WINE_GLAPI *p_glBindTexture)( GLenum target, GLuint texture );
-        void       (WINE_GLAPI *p_glBitmap)( GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap );
-        void       (WINE_GLAPI *p_glBlendFunc)( GLenum sfactor, GLenum dfactor );
-        void       (WINE_GLAPI *p_glCallList)( GLuint list );
-        void       (WINE_GLAPI *p_glCallLists)( GLsizei n, GLenum type, const void *lists );
-        void       (WINE_GLAPI *p_glClear)( GLbitfield mask );
-        void       (WINE_GLAPI *p_glClearAccum)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
-        void       (WINE_GLAPI *p_glClearColor)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
-        void       (WINE_GLAPI *p_glClearDepth)( GLdouble depth );
-        void       (WINE_GLAPI *p_glClearIndex)( GLfloat c );
-        void       (WINE_GLAPI *p_glClearStencil)( GLint s );
-        void       (WINE_GLAPI *p_glClipPlane)( GLenum plane, const GLdouble *equation );
-        void       (WINE_GLAPI *p_glColor3b)( GLbyte red, GLbyte green, GLbyte blue );
-        void       (WINE_GLAPI *p_glColor3bv)( const GLbyte *v );
-        void       (WINE_GLAPI *p_glColor3d)( GLdouble red, GLdouble green, GLdouble blue );
-        void       (WINE_GLAPI *p_glColor3dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glColor3f)( GLfloat red, GLfloat green, GLfloat blue );
-        void       (WINE_GLAPI *p_glColor3fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glColor3i)( GLint red, GLint green, GLint blue );
-        void       (WINE_GLAPI *p_glColor3iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glColor3s)( GLshort red, GLshort green, GLshort blue );
-        void       (WINE_GLAPI *p_glColor3sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glColor3ub)( GLubyte red, GLubyte green, GLubyte blue );
-        void       (WINE_GLAPI *p_glColor3ubv)( const GLubyte *v );
-        void       (WINE_GLAPI *p_glColor3ui)( GLuint red, GLuint green, GLuint blue );
-        void       (WINE_GLAPI *p_glColor3uiv)( const GLuint *v );
-        void       (WINE_GLAPI *p_glColor3us)( GLushort red, GLushort green, GLushort blue );
-        void       (WINE_GLAPI *p_glColor3usv)( const GLushort *v );
-        void       (WINE_GLAPI *p_glColor4b)( GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha );
-        void       (WINE_GLAPI *p_glColor4bv)( const GLbyte *v );
-        void       (WINE_GLAPI *p_glColor4d)( GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha );
-        void       (WINE_GLAPI *p_glColor4dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glColor4f)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
-        void       (WINE_GLAPI *p_glColor4fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glColor4i)( GLint red, GLint green, GLint blue, GLint alpha );
-        void       (WINE_GLAPI *p_glColor4iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glColor4s)( GLshort red, GLshort green, GLshort blue, GLshort alpha );
-        void       (WINE_GLAPI *p_glColor4sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glColor4ub)( GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha );
-        void       (WINE_GLAPI *p_glColor4ubv)( const GLubyte *v );
-        void       (WINE_GLAPI *p_glColor4ui)( GLuint red, GLuint green, GLuint blue, GLuint alpha );
-        void       (WINE_GLAPI *p_glColor4uiv)( const GLuint *v );
-        void       (WINE_GLAPI *p_glColor4us)( GLushort red, GLushort green, GLushort blue, GLushort alpha );
-        void       (WINE_GLAPI *p_glColor4usv)( const GLushort *v );
-        void       (WINE_GLAPI *p_glColorMask)( GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha );
-        void       (WINE_GLAPI *p_glColorMaterial)( GLenum face, GLenum mode );
-        void       (WINE_GLAPI *p_glColorPointer)( GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glCopyPixels)( GLint x, GLint y, GLsizei width, GLsizei height, GLenum type );
-        void       (WINE_GLAPI *p_glCopyTexImage1D)( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
-        void       (WINE_GLAPI *p_glCopyTexImage2D)( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );
-        void       (WINE_GLAPI *p_glCopyTexSubImage1D)( GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyTexSubImage2D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCullFace)( GLenum mode );
-        void       (WINE_GLAPI *p_glDeleteLists)( GLuint list, GLsizei range );
-        void       (WINE_GLAPI *p_glDeleteTextures)( GLsizei n, const GLuint *textures );
-        void       (WINE_GLAPI *p_glDepthFunc)( GLenum func );
-        void       (WINE_GLAPI *p_glDepthMask)( GLboolean flag );
-        void       (WINE_GLAPI *p_glDepthRange)( GLdouble n, GLdouble f );
-        void       (WINE_GLAPI *p_glDisable)( GLenum cap );
-        void       (WINE_GLAPI *p_glDisableClientState)( GLenum array );
-        void       (WINE_GLAPI *p_glDrawArrays)( GLenum mode, GLint first, GLsizei count );
-        void       (WINE_GLAPI *p_glDrawBuffer)( GLenum buf );
-        void       (WINE_GLAPI *p_glDrawElements)( GLenum mode, GLsizei count, GLenum type, const void *indices );
-        void       (WINE_GLAPI *p_glDrawPixels)( GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glEdgeFlag)( GLboolean flag );
-        void       (WINE_GLAPI *p_glEdgeFlagPointer)( GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glEdgeFlagv)( const GLboolean *flag );
-        void       (WINE_GLAPI *p_glEnable)( GLenum cap );
-        void       (WINE_GLAPI *p_glEnableClientState)( GLenum array );
-        void       (WINE_GLAPI *p_glEnd)(void);
-        void       (WINE_GLAPI *p_glEndList)(void);
-        void       (WINE_GLAPI *p_glEvalCoord1d)( GLdouble u );
-        void       (WINE_GLAPI *p_glEvalCoord1dv)( const GLdouble *u );
-        void       (WINE_GLAPI *p_glEvalCoord1f)( GLfloat u );
-        void       (WINE_GLAPI *p_glEvalCoord1fv)( const GLfloat *u );
-        void       (WINE_GLAPI *p_glEvalCoord2d)( GLdouble u, GLdouble v );
-        void       (WINE_GLAPI *p_glEvalCoord2dv)( const GLdouble *u );
-        void       (WINE_GLAPI *p_glEvalCoord2f)( GLfloat u, GLfloat v );
-        void       (WINE_GLAPI *p_glEvalCoord2fv)( const GLfloat *u );
-        void       (WINE_GLAPI *p_glEvalMesh1)( GLenum mode, GLint i1, GLint i2 );
-        void       (WINE_GLAPI *p_glEvalMesh2)( GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2 );
-        void       (WINE_GLAPI *p_glEvalPoint1)( GLint i );
-        void       (WINE_GLAPI *p_glEvalPoint2)( GLint i, GLint j );
-        void       (WINE_GLAPI *p_glFeedbackBuffer)( GLsizei size, GLenum type, GLfloat *buffer );
-        void       (WINE_GLAPI *p_glFinish)(void);
-        void       (WINE_GLAPI *p_glFlush)(void);
-        void       (WINE_GLAPI *p_glFogf)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glFogfv)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glFogi)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glFogiv)( GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glFrontFace)( GLenum mode );
-        void       (WINE_GLAPI *p_glFrustum)( GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar );
-        GLuint     (WINE_GLAPI *p_glGenLists)( GLsizei range );
-        void       (WINE_GLAPI *p_glGenTextures)( GLsizei n, GLuint *textures );
-        void       (WINE_GLAPI *p_glGetBooleanv)( GLenum pname, GLboolean *data );
-        void       (WINE_GLAPI *p_glGetClipPlane)( GLenum plane, GLdouble *equation );
-        void       (WINE_GLAPI *p_glGetDoublev)( GLenum pname, GLdouble *data );
-        GLenum     (WINE_GLAPI *p_glGetError)(void);
-        void       (WINE_GLAPI *p_glGetFloatv)( GLenum pname, GLfloat *data );
-        void       (WINE_GLAPI *p_glGetIntegerv)( GLenum pname, GLint *data );
-        void       (WINE_GLAPI *p_glGetLightfv)( GLenum light, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetLightiv)( GLenum light, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMapdv)( GLenum target, GLenum query, GLdouble *v );
-        void       (WINE_GLAPI *p_glGetMapfv)( GLenum target, GLenum query, GLfloat *v );
-        void       (WINE_GLAPI *p_glGetMapiv)( GLenum target, GLenum query, GLint *v );
-        void       (WINE_GLAPI *p_glGetMaterialfv)( GLenum face, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetMaterialiv)( GLenum face, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetPixelMapfv)( GLenum map, GLfloat *values );
-        void       (WINE_GLAPI *p_glGetPixelMapuiv)( GLenum map, GLuint *values );
-        void       (WINE_GLAPI *p_glGetPixelMapusv)( GLenum map, GLushort *values );
-        void       (WINE_GLAPI *p_glGetPointerv)( GLenum pname, void **params );
-        void       (WINE_GLAPI *p_glGetPolygonStipple)( GLubyte *mask );
-        const GLubyte * (WINE_GLAPI *p_glGetString)( GLenum name );
-        void       (WINE_GLAPI *p_glGetTexEnvfv)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetTexEnviv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTexGendv)( GLenum coord, GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetTexGenfv)( GLenum coord, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetTexGeniv)( GLenum coord, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTexImage)( GLenum target, GLint level, GLenum format, GLenum type, void *pixels );
-        void       (WINE_GLAPI *p_glGetTexLevelParameterfv)( GLenum target, GLint level, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetTexLevelParameteriv)( GLenum target, GLint level, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTexParameterfv)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetTexParameteriv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glHint)( GLenum target, GLenum mode );
-        void       (WINE_GLAPI *p_glIndexMask)( GLuint mask );
-        void       (WINE_GLAPI *p_glIndexPointer)( GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glIndexd)( GLdouble c );
-        void       (WINE_GLAPI *p_glIndexdv)( const GLdouble *c );
-        void       (WINE_GLAPI *p_glIndexf)( GLfloat c );
-        void       (WINE_GLAPI *p_glIndexfv)( const GLfloat *c );
-        void       (WINE_GLAPI *p_glIndexi)( GLint c );
-        void       (WINE_GLAPI *p_glIndexiv)( const GLint *c );
-        void       (WINE_GLAPI *p_glIndexs)( GLshort c );
-        void       (WINE_GLAPI *p_glIndexsv)( const GLshort *c );
-        void       (WINE_GLAPI *p_glIndexub)( GLubyte c );
-        void       (WINE_GLAPI *p_glIndexubv)( const GLubyte *c );
-        void       (WINE_GLAPI *p_glInitNames)(void);
-        void       (WINE_GLAPI *p_glInterleavedArrays)( GLenum format, GLsizei stride, const void *pointer );
-        GLboolean  (WINE_GLAPI *p_glIsEnabled)( GLenum cap );
-        GLboolean  (WINE_GLAPI *p_glIsList)( GLuint list );
-        GLboolean  (WINE_GLAPI *p_glIsTexture)( GLuint texture );
-        void       (WINE_GLAPI *p_glLightModelf)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glLightModelfv)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glLightModeli)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glLightModeliv)( GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glLightf)( GLenum light, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glLightfv)( GLenum light, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glLighti)( GLenum light, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glLightiv)( GLenum light, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glLineStipple)( GLint factor, GLushort pattern );
-        void       (WINE_GLAPI *p_glLineWidth)( GLfloat width );
-        void       (WINE_GLAPI *p_glListBase)( GLuint base );
-        void       (WINE_GLAPI *p_glLoadIdentity)(void);
-        void       (WINE_GLAPI *p_glLoadMatrixd)( const GLdouble *m );
-        void       (WINE_GLAPI *p_glLoadMatrixf)( const GLfloat *m );
-        void       (WINE_GLAPI *p_glLoadName)( GLuint name );
-        void       (WINE_GLAPI *p_glLogicOp)( GLenum opcode );
-        void       (WINE_GLAPI *p_glMap1d)( GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points );
-        void       (WINE_GLAPI *p_glMap1f)( GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points );
-        void       (WINE_GLAPI *p_glMap2d)( GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points );
-        void       (WINE_GLAPI *p_glMap2f)( GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points );
-        void       (WINE_GLAPI *p_glMapGrid1d)( GLint un, GLdouble u1, GLdouble u2 );
-        void       (WINE_GLAPI *p_glMapGrid1f)( GLint un, GLfloat u1, GLfloat u2 );
-        void       (WINE_GLAPI *p_glMapGrid2d)( GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2 );
-        void       (WINE_GLAPI *p_glMapGrid2f)( GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2 );
-        void       (WINE_GLAPI *p_glMaterialf)( GLenum face, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glMaterialfv)( GLenum face, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glMateriali)( GLenum face, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glMaterialiv)( GLenum face, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glMatrixMode)( GLenum mode );
-        void       (WINE_GLAPI *p_glMultMatrixd)( const GLdouble *m );
-        void       (WINE_GLAPI *p_glMultMatrixf)( const GLfloat *m );
-        void       (WINE_GLAPI *p_glNewList)( GLuint list, GLenum mode );
-        void       (WINE_GLAPI *p_glNormal3b)( GLbyte nx, GLbyte ny, GLbyte nz );
-        void       (WINE_GLAPI *p_glNormal3bv)( const GLbyte *v );
-        void       (WINE_GLAPI *p_glNormal3d)( GLdouble nx, GLdouble ny, GLdouble nz );
-        void       (WINE_GLAPI *p_glNormal3dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glNormal3f)( GLfloat nx, GLfloat ny, GLfloat nz );
-        void       (WINE_GLAPI *p_glNormal3fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glNormal3i)( GLint nx, GLint ny, GLint nz );
-        void       (WINE_GLAPI *p_glNormal3iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glNormal3s)( GLshort nx, GLshort ny, GLshort nz );
-        void       (WINE_GLAPI *p_glNormal3sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glNormalPointer)( GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glOrtho)( GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar );
-        void       (WINE_GLAPI *p_glPassThrough)( GLfloat token );
-        void       (WINE_GLAPI *p_glPixelMapfv)( GLenum map, GLsizei mapsize, const GLfloat *values );
-        void       (WINE_GLAPI *p_glPixelMapuiv)( GLenum map, GLsizei mapsize, const GLuint *values );
-        void       (WINE_GLAPI *p_glPixelMapusv)( GLenum map, GLsizei mapsize, const GLushort *values );
-        void       (WINE_GLAPI *p_glPixelStoref)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glPixelStorei)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glPixelTransferf)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glPixelTransferi)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glPixelZoom)( GLfloat xfactor, GLfloat yfactor );
-        void       (WINE_GLAPI *p_glPointSize)( GLfloat size );
-        void       (WINE_GLAPI *p_glPolygonMode)( GLenum face, GLenum mode );
-        void       (WINE_GLAPI *p_glPolygonOffset)( GLfloat factor, GLfloat units );
-        void       (WINE_GLAPI *p_glPolygonStipple)( const GLubyte *mask );
-        void       (WINE_GLAPI *p_glPopAttrib)(void);
-        void       (WINE_GLAPI *p_glPopClientAttrib)(void);
-        void       (WINE_GLAPI *p_glPopMatrix)(void);
-        void       (WINE_GLAPI *p_glPopName)(void);
-        void       (WINE_GLAPI *p_glPrioritizeTextures)( GLsizei n, const GLuint *textures, const GLfloat *priorities );
-        void       (WINE_GLAPI *p_glPushAttrib)( GLbitfield mask );
-        void       (WINE_GLAPI *p_glPushClientAttrib)( GLbitfield mask );
-        void       (WINE_GLAPI *p_glPushMatrix)(void);
-        void       (WINE_GLAPI *p_glPushName)( GLuint name );
-        void       (WINE_GLAPI *p_glRasterPos2d)( GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glRasterPos2dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glRasterPos2f)( GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glRasterPos2fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glRasterPos2i)( GLint x, GLint y );
-        void       (WINE_GLAPI *p_glRasterPos2iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glRasterPos2s)( GLshort x, GLshort y );
-        void       (WINE_GLAPI *p_glRasterPos2sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glRasterPos3d)( GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glRasterPos3dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glRasterPos3f)( GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glRasterPos3fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glRasterPos3i)( GLint x, GLint y, GLint z );
-        void       (WINE_GLAPI *p_glRasterPos3iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glRasterPos3s)( GLshort x, GLshort y, GLshort z );
-        void       (WINE_GLAPI *p_glRasterPos3sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glRasterPos4d)( GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glRasterPos4dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glRasterPos4f)( GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glRasterPos4fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glRasterPos4i)( GLint x, GLint y, GLint z, GLint w );
-        void       (WINE_GLAPI *p_glRasterPos4iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glRasterPos4s)( GLshort x, GLshort y, GLshort z, GLshort w );
-        void       (WINE_GLAPI *p_glRasterPos4sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glReadBuffer)( GLenum src );
-        void       (WINE_GLAPI *p_glReadPixels)( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels );
-        void       (WINE_GLAPI *p_glRectd)( GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2 );
-        void       (WINE_GLAPI *p_glRectdv)( const GLdouble *v1, const GLdouble *v2 );
-        void       (WINE_GLAPI *p_glRectf)( GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2 );
-        void       (WINE_GLAPI *p_glRectfv)( const GLfloat *v1, const GLfloat *v2 );
-        void       (WINE_GLAPI *p_glRecti)( GLint x1, GLint y1, GLint x2, GLint y2 );
-        void       (WINE_GLAPI *p_glRectiv)( const GLint *v1, const GLint *v2 );
-        void       (WINE_GLAPI *p_glRects)( GLshort x1, GLshort y1, GLshort x2, GLshort y2 );
-        void       (WINE_GLAPI *p_glRectsv)( const GLshort *v1, const GLshort *v2 );
-        GLint      (WINE_GLAPI *p_glRenderMode)( GLenum mode );
-        void       (WINE_GLAPI *p_glRotated)( GLdouble angle, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glRotatef)( GLfloat angle, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glScaled)( GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glScalef)( GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glScissor)( GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glSelectBuffer)( GLsizei size, GLuint *buffer );
-        void       (WINE_GLAPI *p_glShadeModel)( GLenum mode );
-        void       (WINE_GLAPI *p_glStencilFunc)( GLenum func, GLint ref, GLuint mask );
-        void       (WINE_GLAPI *p_glStencilMask)( GLuint mask );
-        void       (WINE_GLAPI *p_glStencilOp)( GLenum fail, GLenum zfail, GLenum zpass );
-        void       (WINE_GLAPI *p_glTexCoord1d)( GLdouble s );
-        void       (WINE_GLAPI *p_glTexCoord1dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glTexCoord1f)( GLfloat s );
-        void       (WINE_GLAPI *p_glTexCoord1fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord1i)( GLint s );
-        void       (WINE_GLAPI *p_glTexCoord1iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glTexCoord1s)( GLshort s );
-        void       (WINE_GLAPI *p_glTexCoord1sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glTexCoord2d)( GLdouble s, GLdouble t );
-        void       (WINE_GLAPI *p_glTexCoord2dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glTexCoord2f)( GLfloat s, GLfloat t );
-        void       (WINE_GLAPI *p_glTexCoord2fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord2i)( GLint s, GLint t );
-        void       (WINE_GLAPI *p_glTexCoord2iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glTexCoord2s)( GLshort s, GLshort t );
-        void       (WINE_GLAPI *p_glTexCoord2sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glTexCoord3d)( GLdouble s, GLdouble t, GLdouble r );
-        void       (WINE_GLAPI *p_glTexCoord3dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glTexCoord3f)( GLfloat s, GLfloat t, GLfloat r );
-        void       (WINE_GLAPI *p_glTexCoord3fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord3i)( GLint s, GLint t, GLint r );
-        void       (WINE_GLAPI *p_glTexCoord3iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glTexCoord3s)( GLshort s, GLshort t, GLshort r );
-        void       (WINE_GLAPI *p_glTexCoord3sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glTexCoord4d)( GLdouble s, GLdouble t, GLdouble r, GLdouble q );
-        void       (WINE_GLAPI *p_glTexCoord4dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glTexCoord4f)( GLfloat s, GLfloat t, GLfloat r, GLfloat q );
-        void       (WINE_GLAPI *p_glTexCoord4fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord4i)( GLint s, GLint t, GLint r, GLint q );
-        void       (WINE_GLAPI *p_glTexCoord4iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glTexCoord4s)( GLshort s, GLshort t, GLshort r, GLshort q );
-        void       (WINE_GLAPI *p_glTexCoord4sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glTexCoordPointer)( GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glTexEnvf)( GLenum target, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glTexEnvfv)( GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glTexEnvi)( GLenum target, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glTexEnviv)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glTexGend)( GLenum coord, GLenum pname, GLdouble param );
-        void       (WINE_GLAPI *p_glTexGendv)( GLenum coord, GLenum pname, const GLdouble *params );
-        void       (WINE_GLAPI *p_glTexGenf)( GLenum coord, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glTexGenfv)( GLenum coord, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glTexGeni)( GLenum coord, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glTexGeniv)( GLenum coord, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glTexImage1D)( GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexImage2D)( GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexParameterf)( GLenum target, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glTexParameterfv)( GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glTexParameteri)( GLenum target, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glTexParameteriv)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glTexSubImage1D)( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexSubImage2D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTranslated)( GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glTranslatef)( GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glVertex2d)( GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glVertex2dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertex2f)( GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glVertex2fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertex2i)( GLint x, GLint y );
-        void       (WINE_GLAPI *p_glVertex2iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glVertex2s)( GLshort x, GLshort y );
-        void       (WINE_GLAPI *p_glVertex2sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glVertex3d)( GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glVertex3dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertex3f)( GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glVertex3fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertex3i)( GLint x, GLint y, GLint z );
-        void       (WINE_GLAPI *p_glVertex3iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glVertex3s)( GLshort x, GLshort y, GLshort z );
-        void       (WINE_GLAPI *p_glVertex3sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glVertex4d)( GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glVertex4dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertex4f)( GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glVertex4fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertex4i)( GLint x, GLint y, GLint z, GLint w );
-        void       (WINE_GLAPI *p_glVertex4iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glVertex4s)( GLshort x, GLshort y, GLshort z, GLshort w );
-        void       (WINE_GLAPI *p_glVertex4sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexPointer)( GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glViewport)( GLint x, GLint y, GLsizei width, GLsizei height );
-    } gl;
-
-    struct
-    {
-        void       (WINE_GLAPI *p_glAccumxOES)( GLenum op, GLfixed value );
-        GLboolean  (WINE_GLAPI *p_glAcquireKeyedMutexWin32EXT)( GLuint memory, GLuint64 key, GLuint timeout );
-        void       (WINE_GLAPI *p_glActiveProgramEXT)( GLuint program );
-        void       (WINE_GLAPI *p_glActiveShaderProgram)( GLuint pipeline, GLuint program );
-        void       (WINE_GLAPI *p_glActiveStencilFaceEXT)( GLenum face );
-        void       (WINE_GLAPI *p_glActiveTexture)( GLenum texture );
-        void       (WINE_GLAPI *p_glActiveTextureARB)( GLenum texture );
-        void       (WINE_GLAPI *p_glActiveVaryingNV)( GLuint program, const GLchar *name );
-        void       (WINE_GLAPI *p_glAlphaFragmentOp1ATI)( GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod );
-        void       (WINE_GLAPI *p_glAlphaFragmentOp2ATI)( GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod );
-        void       (WINE_GLAPI *p_glAlphaFragmentOp3ATI)( GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod );
-        void       (WINE_GLAPI *p_glAlphaFuncxOES)( GLenum func, GLfixed ref );
-        void       (WINE_GLAPI *p_glAlphaToCoverageDitherControlNV)( GLenum mode );
-        void       (WINE_GLAPI *p_glApplyFramebufferAttachmentCMAAINTEL)(void);
-        void       (WINE_GLAPI *p_glApplyTextureEXT)( GLenum mode );
-        GLboolean  (WINE_GLAPI *p_glAreProgramsResidentNV)( GLsizei n, const GLuint *programs, GLboolean *residences );
-        GLboolean  (WINE_GLAPI *p_glAreTexturesResidentEXT)( GLsizei n, const GLuint *textures, GLboolean *residences );
-        void       (WINE_GLAPI *p_glArrayElementEXT)( GLint i );
-        void       (WINE_GLAPI *p_glArrayObjectATI)( GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset );
-        GLuint     (WINE_GLAPI *p_glAsyncCopyBufferSubDataNVX)( GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *fenceValueArray, GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray );
-        GLuint     (WINE_GLAPI *p_glAsyncCopyImageSubDataNVX)( GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *waitValueArray, GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray );
-        void       (WINE_GLAPI *p_glAsyncMarkerSGIX)( GLuint marker );
-        void       (WINE_GLAPI *p_glAttachObjectARB)( GLhandleARB containerObj, GLhandleARB obj );
-        void       (WINE_GLAPI *p_glAttachShader)( GLuint program, GLuint shader );
-        void       (WINE_GLAPI *p_glBeginConditionalRender)( GLuint id, GLenum mode );
-        void       (WINE_GLAPI *p_glBeginConditionalRenderNV)( GLuint id, GLenum mode );
-        void       (WINE_GLAPI *p_glBeginConditionalRenderNVX)( GLuint id );
-        void       (WINE_GLAPI *p_glBeginFragmentShaderATI)(void);
-        void       (WINE_GLAPI *p_glBeginOcclusionQueryNV)( GLuint id );
-        void       (WINE_GLAPI *p_glBeginPerfMonitorAMD)( GLuint monitor );
-        void       (WINE_GLAPI *p_glBeginPerfQueryINTEL)( GLuint queryHandle );
-        void       (WINE_GLAPI *p_glBeginQuery)( GLenum target, GLuint id );
-        void       (WINE_GLAPI *p_glBeginQueryARB)( GLenum target, GLuint id );
-        void       (WINE_GLAPI *p_glBeginQueryIndexed)( GLenum target, GLuint index, GLuint id );
-        void       (WINE_GLAPI *p_glBeginTransformFeedback)( GLenum primitiveMode );
-        void       (WINE_GLAPI *p_glBeginTransformFeedbackEXT)( GLenum primitiveMode );
-        void       (WINE_GLAPI *p_glBeginTransformFeedbackNV)( GLenum primitiveMode );
-        void       (WINE_GLAPI *p_glBeginVertexShaderEXT)(void);
-        void       (WINE_GLAPI *p_glBeginVideoCaptureNV)( GLuint video_capture_slot );
-        void       (WINE_GLAPI *p_glBindAttribLocation)( GLuint program, GLuint index, const GLchar *name );
-        void       (WINE_GLAPI *p_glBindAttribLocationARB)( GLhandleARB programObj, GLuint index, const GLcharARB *name );
-        void       (WINE_GLAPI *p_glBindBuffer)( GLenum target, GLuint buffer );
-        void       (WINE_GLAPI *p_glBindBufferARB)( GLenum target, GLuint buffer );
-        void       (WINE_GLAPI *p_glBindBufferBase)( GLenum target, GLuint index, GLuint buffer );
-        void       (WINE_GLAPI *p_glBindBufferBaseEXT)( GLenum target, GLuint index, GLuint buffer );
-        void       (WINE_GLAPI *p_glBindBufferBaseNV)( GLenum target, GLuint index, GLuint buffer );
-        void       (WINE_GLAPI *p_glBindBufferOffsetEXT)( GLenum target, GLuint index, GLuint buffer, GLintptr offset );
-        void       (WINE_GLAPI *p_glBindBufferOffsetNV)( GLenum target, GLuint index, GLuint buffer, GLintptr offset );
-        void       (WINE_GLAPI *p_glBindBufferRange)( GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glBindBufferRangeEXT)( GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glBindBufferRangeNV)( GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glBindBuffersBase)( GLenum target, GLuint first, GLsizei count, const GLuint *buffers );
-        void       (WINE_GLAPI *p_glBindBuffersRange)( GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes );
-        void       (WINE_GLAPI *p_glBindFragDataLocation)( GLuint program, GLuint color, const GLchar *name );
-        void       (WINE_GLAPI *p_glBindFragDataLocationEXT)( GLuint program, GLuint color, const GLchar *name );
-        void       (WINE_GLAPI *p_glBindFragDataLocationIndexed)( GLuint program, GLuint colorNumber, GLuint index, const GLchar *name );
-        void       (WINE_GLAPI *p_glBindFragmentShaderATI)( GLuint id );
-        void       (WINE_GLAPI *p_glBindFramebuffer)( GLenum target, GLuint framebuffer );
-        void       (WINE_GLAPI *p_glBindFramebufferEXT)( GLenum target, GLuint framebuffer );
-        void       (WINE_GLAPI *p_glBindImageTexture)( GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format );
-        void       (WINE_GLAPI *p_glBindImageTextureEXT)( GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format );
-        void       (WINE_GLAPI *p_glBindImageTextures)( GLuint first, GLsizei count, const GLuint *textures );
-        GLuint     (WINE_GLAPI *p_glBindLightParameterEXT)( GLenum light, GLenum value );
-        GLuint     (WINE_GLAPI *p_glBindMaterialParameterEXT)( GLenum face, GLenum value );
-        void       (WINE_GLAPI *p_glBindMultiTextureEXT)( GLenum texunit, GLenum target, GLuint texture );
-        GLuint     (WINE_GLAPI *p_glBindParameterEXT)( GLenum value );
-        void       (WINE_GLAPI *p_glBindProgramARB)( GLenum target, GLuint program );
-        void       (WINE_GLAPI *p_glBindProgramNV)( GLenum target, GLuint id );
-        void       (WINE_GLAPI *p_glBindProgramPipeline)( GLuint pipeline );
-        void       (WINE_GLAPI *p_glBindRenderbuffer)( GLenum target, GLuint renderbuffer );
-        void       (WINE_GLAPI *p_glBindRenderbufferEXT)( GLenum target, GLuint renderbuffer );
-        void       (WINE_GLAPI *p_glBindSampler)( GLuint unit, GLuint sampler );
-        void       (WINE_GLAPI *p_glBindSamplers)( GLuint first, GLsizei count, const GLuint *samplers );
-        void       (WINE_GLAPI *p_glBindShadingRateImageNV)( GLuint texture );
-        GLuint     (WINE_GLAPI *p_glBindTexGenParameterEXT)( GLenum unit, GLenum coord, GLenum value );
-        void       (WINE_GLAPI *p_glBindTextureEXT)( GLenum target, GLuint texture );
-        void       (WINE_GLAPI *p_glBindTextureUnit)( GLuint unit, GLuint texture );
-        GLuint     (WINE_GLAPI *p_glBindTextureUnitParameterEXT)( GLenum unit, GLenum value );
-        void       (WINE_GLAPI *p_glBindTextures)( GLuint first, GLsizei count, const GLuint *textures );
-        void       (WINE_GLAPI *p_glBindTransformFeedback)( GLenum target, GLuint id );
-        void       (WINE_GLAPI *p_glBindTransformFeedbackNV)( GLenum target, GLuint id );
-        void       (WINE_GLAPI *p_glBindVertexArray)( GLuint array );
-        void       (WINE_GLAPI *p_glBindVertexArrayAPPLE)( GLuint array );
-        void       (WINE_GLAPI *p_glBindVertexBuffer)( GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride );
-        void       (WINE_GLAPI *p_glBindVertexBuffers)( GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides );
-        void       (WINE_GLAPI *p_glBindVertexShaderEXT)( GLuint id );
-        void       (WINE_GLAPI *p_glBindVideoCaptureStreamBufferNV)( GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset );
-        void       (WINE_GLAPI *p_glBindVideoCaptureStreamTextureNV)( GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture );
-        void       (WINE_GLAPI *p_glBinormal3bEXT)( GLbyte bx, GLbyte by, GLbyte bz );
-        void       (WINE_GLAPI *p_glBinormal3bvEXT)( const GLbyte *v );
-        void       (WINE_GLAPI *p_glBinormal3dEXT)( GLdouble bx, GLdouble by, GLdouble bz );
-        void       (WINE_GLAPI *p_glBinormal3dvEXT)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glBinormal3fEXT)( GLfloat bx, GLfloat by, GLfloat bz );
-        void       (WINE_GLAPI *p_glBinormal3fvEXT)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glBinormal3iEXT)( GLint bx, GLint by, GLint bz );
-        void       (WINE_GLAPI *p_glBinormal3ivEXT)( const GLint *v );
-        void       (WINE_GLAPI *p_glBinormal3sEXT)( GLshort bx, GLshort by, GLshort bz );
-        void       (WINE_GLAPI *p_glBinormal3svEXT)( const GLshort *v );
-        void       (WINE_GLAPI *p_glBinormalPointerEXT)( GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glBitmapxOES)( GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap );
-        void       (WINE_GLAPI *p_glBlendBarrierKHR)(void);
-        void       (WINE_GLAPI *p_glBlendBarrierNV)(void);
-        void       (WINE_GLAPI *p_glBlendColor)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
-        void       (WINE_GLAPI *p_glBlendColorEXT)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
-        void       (WINE_GLAPI *p_glBlendColorxOES)( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha );
-        void       (WINE_GLAPI *p_glBlendEquation)( GLenum mode );
-        void       (WINE_GLAPI *p_glBlendEquationEXT)( GLenum mode );
-        void       (WINE_GLAPI *p_glBlendEquationIndexedAMD)( GLuint buf, GLenum mode );
-        void       (WINE_GLAPI *p_glBlendEquationSeparate)( GLenum modeRGB, GLenum modeAlpha );
-        void       (WINE_GLAPI *p_glBlendEquationSeparateEXT)( GLenum modeRGB, GLenum modeAlpha );
-        void       (WINE_GLAPI *p_glBlendEquationSeparateIndexedAMD)( GLuint buf, GLenum modeRGB, GLenum modeAlpha );
-        void       (WINE_GLAPI *p_glBlendEquationSeparatei)( GLuint buf, GLenum modeRGB, GLenum modeAlpha );
-        void       (WINE_GLAPI *p_glBlendEquationSeparateiARB)( GLuint buf, GLenum modeRGB, GLenum modeAlpha );
-        void       (WINE_GLAPI *p_glBlendEquationi)( GLuint buf, GLenum mode );
-        void       (WINE_GLAPI *p_glBlendEquationiARB)( GLuint buf, GLenum mode );
-        void       (WINE_GLAPI *p_glBlendFuncIndexedAMD)( GLuint buf, GLenum src, GLenum dst );
-        void       (WINE_GLAPI *p_glBlendFuncSeparate)( GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha );
-        void       (WINE_GLAPI *p_glBlendFuncSeparateEXT)( GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha );
-        void       (WINE_GLAPI *p_glBlendFuncSeparateINGR)( GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha );
-        void       (WINE_GLAPI *p_glBlendFuncSeparateIndexedAMD)( GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha );
-        void       (WINE_GLAPI *p_glBlendFuncSeparatei)( GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha );
-        void       (WINE_GLAPI *p_glBlendFuncSeparateiARB)( GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha );
-        void       (WINE_GLAPI *p_glBlendFunci)( GLuint buf, GLenum src, GLenum dst );
-        void       (WINE_GLAPI *p_glBlendFunciARB)( GLuint buf, GLenum src, GLenum dst );
-        void       (WINE_GLAPI *p_glBlendParameteriNV)( GLenum pname, GLint value );
-        void       (WINE_GLAPI *p_glBlitFramebuffer)( GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter );
-        void       (WINE_GLAPI *p_glBlitFramebufferEXT)( GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter );
-        void       (WINE_GLAPI *p_glBlitNamedFramebuffer)( GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter );
-        void       (WINE_GLAPI *p_glBufferAddressRangeNV)( GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length );
-        void       (WINE_GLAPI *p_glBufferAttachMemoryNV)( GLenum target, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glBufferData)( GLenum target, GLsizeiptr size, const void *data, GLenum usage );
-        void       (WINE_GLAPI *p_glBufferDataARB)( GLenum target, GLsizeiptrARB size, const void *data, GLenum usage );
-        void       (WINE_GLAPI *p_glBufferPageCommitmentARB)( GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit );
-        void       (WINE_GLAPI *p_glBufferParameteriAPPLE)( GLenum target, GLenum pname, GLint param );
-        GLuint     (WINE_GLAPI *p_glBufferRegionEnabled)(void);
-        void       (WINE_GLAPI *p_glBufferStorage)( GLenum target, GLsizeiptr size, const void *data, GLbitfield flags );
-        void       (WINE_GLAPI *p_glBufferStorageExternalEXT)( GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags );
-        void       (WINE_GLAPI *p_glBufferStorageMemEXT)( GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glBufferSubData)( GLenum target, GLintptr offset, GLsizeiptr size, const void *data );
-        void       (WINE_GLAPI *p_glBufferSubDataARB)( GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data );
-        void       (WINE_GLAPI *p_glCallCommandListNV)( GLuint list );
-        GLenum     (WINE_GLAPI *p_glCheckFramebufferStatus)( GLenum target );
-        GLenum     (WINE_GLAPI *p_glCheckFramebufferStatusEXT)( GLenum target );
-        GLenum     (WINE_GLAPI *p_glCheckNamedFramebufferStatus)( GLuint framebuffer, GLenum target );
-        GLenum     (WINE_GLAPI *p_glCheckNamedFramebufferStatusEXT)( GLuint framebuffer, GLenum target );
-        void       (WINE_GLAPI *p_glClampColor)( GLenum target, GLenum clamp );
-        void       (WINE_GLAPI *p_glClampColorARB)( GLenum target, GLenum clamp );
-        void       (WINE_GLAPI *p_glClearAccumxOES)( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha );
-        void       (WINE_GLAPI *p_glClearBufferData)( GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glClearBufferSubData)( GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glClearBufferfi)( GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil );
-        void       (WINE_GLAPI *p_glClearBufferfv)( GLenum buffer, GLint drawbuffer, const GLfloat *value );
-        void       (WINE_GLAPI *p_glClearBufferiv)( GLenum buffer, GLint drawbuffer, const GLint *value );
-        void       (WINE_GLAPI *p_glClearBufferuiv)( GLenum buffer, GLint drawbuffer, const GLuint *value );
-        void       (WINE_GLAPI *p_glClearColorIiEXT)( GLint red, GLint green, GLint blue, GLint alpha );
-        void       (WINE_GLAPI *p_glClearColorIuiEXT)( GLuint red, GLuint green, GLuint blue, GLuint alpha );
-        void       (WINE_GLAPI *p_glClearColorxOES)( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha );
-        void       (WINE_GLAPI *p_glClearDepthdNV)( GLdouble depth );
-        void       (WINE_GLAPI *p_glClearDepthf)( GLfloat d );
-        void       (WINE_GLAPI *p_glClearDepthfOES)( GLclampf depth );
-        void       (WINE_GLAPI *p_glClearDepthxOES)( GLfixed depth );
-        void       (WINE_GLAPI *p_glClearNamedBufferData)( GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glClearNamedBufferDataEXT)( GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glClearNamedBufferSubData)( GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glClearNamedBufferSubDataEXT)( GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glClearNamedFramebufferfi)( GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil );
-        void       (WINE_GLAPI *p_glClearNamedFramebufferfv)( GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value );
-        void       (WINE_GLAPI *p_glClearNamedFramebufferiv)( GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value );
-        void       (WINE_GLAPI *p_glClearNamedFramebufferuiv)( GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value );
-        void       (WINE_GLAPI *p_glClearTexImage)( GLuint texture, GLint level, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glClearTexSubImage)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glClientActiveTexture)( GLenum texture );
-        void       (WINE_GLAPI *p_glClientActiveTextureARB)( GLenum texture );
-        void       (WINE_GLAPI *p_glClientActiveVertexStreamATI)( GLenum stream );
-        void       (WINE_GLAPI *p_glClientAttribDefaultEXT)( GLbitfield mask );
-        void       (WINE_GLAPI *p_glClientWaitSemaphoreui64NVX)( GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray );
-        GLenum     (WINE_GLAPI *p_glClientWaitSync)( GLsync sync, GLbitfield flags, GLuint64 timeout );
-        void       (WINE_GLAPI *p_glClipControl)( GLenum origin, GLenum depth );
-        void       (WINE_GLAPI *p_glClipPlanefOES)( GLenum plane, const GLfloat *equation );
-        void       (WINE_GLAPI *p_glClipPlanexOES)( GLenum plane, const GLfixed *equation );
-        void       (WINE_GLAPI *p_glColor3fVertex3fSUN)( GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glColor3fVertex3fvSUN)( const GLfloat *c, const GLfloat *v );
-        void       (WINE_GLAPI *p_glColor3hNV)( GLhalfNV red, GLhalfNV green, GLhalfNV blue );
-        void       (WINE_GLAPI *p_glColor3hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glColor3xOES)( GLfixed red, GLfixed green, GLfixed blue );
-        void       (WINE_GLAPI *p_glColor3xvOES)( const GLfixed *components );
-        void       (WINE_GLAPI *p_glColor4fNormal3fVertex3fSUN)( GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glColor4fNormal3fVertex3fvSUN)( const GLfloat *c, const GLfloat *n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glColor4hNV)( GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha );
-        void       (WINE_GLAPI *p_glColor4hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glColor4ubVertex2fSUN)( GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glColor4ubVertex2fvSUN)( const GLubyte *c, const GLfloat *v );
-        void       (WINE_GLAPI *p_glColor4ubVertex3fSUN)( GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glColor4ubVertex3fvSUN)( const GLubyte *c, const GLfloat *v );
-        void       (WINE_GLAPI *p_glColor4xOES)( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha );
-        void       (WINE_GLAPI *p_glColor4xvOES)( const GLfixed *components );
-        void       (WINE_GLAPI *p_glColorFormatNV)( GLint size, GLenum type, GLsizei stride );
-        void       (WINE_GLAPI *p_glColorFragmentOp1ATI)( GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod );
-        void       (WINE_GLAPI *p_glColorFragmentOp2ATI)( GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod );
-        void       (WINE_GLAPI *p_glColorFragmentOp3ATI)( GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod );
-        void       (WINE_GLAPI *p_glColorMaskIndexedEXT)( GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a );
-        void       (WINE_GLAPI *p_glColorMaski)( GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a );
-        void       (WINE_GLAPI *p_glColorP3ui)( GLenum type, GLuint color );
-        void       (WINE_GLAPI *p_glColorP3uiv)( GLenum type, const GLuint *color );
-        void       (WINE_GLAPI *p_glColorP4ui)( GLenum type, GLuint color );
-        void       (WINE_GLAPI *p_glColorP4uiv)( GLenum type, const GLuint *color );
-        void       (WINE_GLAPI *p_glColorPointerEXT)( GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer );
-        void       (WINE_GLAPI *p_glColorPointerListIBM)( GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride );
-        void       (WINE_GLAPI *p_glColorPointervINTEL)( GLint size, GLenum type, const void **pointer );
-        void       (WINE_GLAPI *p_glColorSubTable)( GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glColorSubTableEXT)( GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data );
-        void       (WINE_GLAPI *p_glColorTable)( GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table );
-        void       (WINE_GLAPI *p_glColorTableEXT)( GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table );
-        void       (WINE_GLAPI *p_glColorTableParameterfv)( GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glColorTableParameterfvSGI)( GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glColorTableParameteriv)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glColorTableParameterivSGI)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glColorTableSGI)( GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table );
-        void       (WINE_GLAPI *p_glCombinerInputNV)( GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage );
-        void       (WINE_GLAPI *p_glCombinerOutputNV)( GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum );
-        void       (WINE_GLAPI *p_glCombinerParameterfNV)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glCombinerParameterfvNV)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glCombinerParameteriNV)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glCombinerParameterivNV)( GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glCombinerStageParameterfvNV)( GLenum stage, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glCommandListSegmentsNV)( GLuint list, GLuint segments );
-        void       (WINE_GLAPI *p_glCompileCommandListNV)( GLuint list );
-        void       (WINE_GLAPI *p_glCompileShader)( GLuint shader );
-        void       (WINE_GLAPI *p_glCompileShaderARB)( GLhandleARB shaderObj );
-        void       (WINE_GLAPI *p_glCompileShaderIncludeARB)( GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length );
-        void       (WINE_GLAPI *p_glCompressedMultiTexImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedMultiTexImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedMultiTexImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedMultiTexSubImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedMultiTexSubImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedMultiTexSubImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedTexImage1D)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexImage1DARB)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexImage2D)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexImage2DARB)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexImage3D)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexImage3DARB)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexSubImage1D)( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexSubImage1DARB)( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexSubImage2D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexSubImage2DARB)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexSubImage3D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTexSubImage3DARB)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTextureImage1DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedTextureImage2DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedTextureImage3DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedTextureSubImage1D)( GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTextureSubImage1DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedTextureSubImage2D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTextureSubImage2DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glCompressedTextureSubImage3D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data );
-        void       (WINE_GLAPI *p_glCompressedTextureSubImage3DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits );
-        void       (WINE_GLAPI *p_glConservativeRasterParameterfNV)( GLenum pname, GLfloat value );
-        void       (WINE_GLAPI *p_glConservativeRasterParameteriNV)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glConvolutionFilter1D)( GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image );
-        void       (WINE_GLAPI *p_glConvolutionFilter1DEXT)( GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image );
-        void       (WINE_GLAPI *p_glConvolutionFilter2D)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image );
-        void       (WINE_GLAPI *p_glConvolutionFilter2DEXT)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image );
-        void       (WINE_GLAPI *p_glConvolutionParameterf)( GLenum target, GLenum pname, GLfloat params );
-        void       (WINE_GLAPI *p_glConvolutionParameterfEXT)( GLenum target, GLenum pname, GLfloat params );
-        void       (WINE_GLAPI *p_glConvolutionParameterfv)( GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glConvolutionParameterfvEXT)( GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glConvolutionParameteri)( GLenum target, GLenum pname, GLint params );
-        void       (WINE_GLAPI *p_glConvolutionParameteriEXT)( GLenum target, GLenum pname, GLint params );
-        void       (WINE_GLAPI *p_glConvolutionParameteriv)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glConvolutionParameterivEXT)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glConvolutionParameterxOES)( GLenum target, GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glConvolutionParameterxvOES)( GLenum target, GLenum pname, const GLfixed *params );
-        void       (WINE_GLAPI *p_glCopyBufferSubData)( GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glCopyColorSubTable)( GLenum target, GLsizei start, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyColorSubTableEXT)( GLenum target, GLsizei start, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyColorTable)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyColorTableSGI)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyConvolutionFilter1D)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyConvolutionFilter1DEXT)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyConvolutionFilter2D)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyConvolutionFilter2DEXT)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyImageSubData)( GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth );
-        void       (WINE_GLAPI *p_glCopyImageSubDataNV)( GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth );
-        void       (WINE_GLAPI *p_glCopyMultiTexImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
-        void       (WINE_GLAPI *p_glCopyMultiTexImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );
-        void       (WINE_GLAPI *p_glCopyMultiTexSubImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyMultiTexSubImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyMultiTexSubImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyNamedBufferSubData)( GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glCopyPathNV)( GLuint resultPath, GLuint srcPath );
-        void       (WINE_GLAPI *p_glCopyTexImage1DEXT)( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
-        void       (WINE_GLAPI *p_glCopyTexImage2DEXT)( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );
-        void       (WINE_GLAPI *p_glCopyTexSubImage1DEXT)( GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyTexSubImage2DEXT)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyTexSubImage3D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyTexSubImage3DEXT)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyTextureImage1DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
-        void       (WINE_GLAPI *p_glCopyTextureImage2DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );
-        void       (WINE_GLAPI *p_glCopyTextureSubImage1D)( GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyTextureSubImage1DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
-        void       (WINE_GLAPI *p_glCopyTextureSubImage2D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyTextureSubImage2DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyTextureSubImage3D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCopyTextureSubImage3DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glCoverFillPathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues );
-        void       (WINE_GLAPI *p_glCoverFillPathNV)( GLuint path, GLenum coverMode );
-        void       (WINE_GLAPI *p_glCoverStrokePathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues );
-        void       (WINE_GLAPI *p_glCoverStrokePathNV)( GLuint path, GLenum coverMode );
-        void       (WINE_GLAPI *p_glCoverageModulationNV)( GLenum components );
-        void       (WINE_GLAPI *p_glCoverageModulationTableNV)( GLsizei n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glCreateBuffers)( GLsizei n, GLuint *buffers );
-        void       (WINE_GLAPI *p_glCreateCommandListsNV)( GLsizei n, GLuint *lists );
-        void       (WINE_GLAPI *p_glCreateFramebuffers)( GLsizei n, GLuint *framebuffers );
-        void       (WINE_GLAPI *p_glCreateMemoryObjectsEXT)( GLsizei n, GLuint *memoryObjects );
-        void       (WINE_GLAPI *p_glCreatePerfQueryINTEL)( GLuint queryId, GLuint *queryHandle );
-        GLuint     (WINE_GLAPI *p_glCreateProgram)(void);
-        GLhandleARB (WINE_GLAPI *p_glCreateProgramObjectARB)(void);
-        void       (WINE_GLAPI *p_glCreateProgramPipelines)( GLsizei n, GLuint *pipelines );
-        GLuint     (WINE_GLAPI *p_glCreateProgressFenceNVX)(void);
-        void       (WINE_GLAPI *p_glCreateQueries)( GLenum target, GLsizei n, GLuint *ids );
-        void       (WINE_GLAPI *p_glCreateRenderbuffers)( GLsizei n, GLuint *renderbuffers );
-        void       (WINE_GLAPI *p_glCreateSamplers)( GLsizei n, GLuint *samplers );
-        GLuint     (WINE_GLAPI *p_glCreateShader)( GLenum type );
-        GLhandleARB (WINE_GLAPI *p_glCreateShaderObjectARB)( GLenum shaderType );
-        GLuint     (WINE_GLAPI *p_glCreateShaderProgramEXT)( GLenum type, const GLchar *string );
-        GLuint     (WINE_GLAPI *p_glCreateShaderProgramv)( GLenum type, GLsizei count, const GLchar *const*strings );
-        void       (WINE_GLAPI *p_glCreateStatesNV)( GLsizei n, GLuint *states );
-        GLsync     (WINE_GLAPI *p_glCreateSyncFromCLeventARB)( struct _cl_context *context, struct _cl_event *event, GLbitfield flags );
-        void       (WINE_GLAPI *p_glCreateTextures)( GLenum target, GLsizei n, GLuint *textures );
-        void       (WINE_GLAPI *p_glCreateTransformFeedbacks)( GLsizei n, GLuint *ids );
-        void       (WINE_GLAPI *p_glCreateVertexArrays)( GLsizei n, GLuint *arrays );
-        void       (WINE_GLAPI *p_glCullParameterdvEXT)( GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glCullParameterfvEXT)( GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glCurrentPaletteMatrixARB)( GLint index );
-        void       (WINE_GLAPI *p_glDebugMessageCallback)( GLDEBUGPROC callback, const void *userParam );
-        void       (WINE_GLAPI *p_glDebugMessageCallbackAMD)( GLDEBUGPROCAMD callback, void *userParam );
-        void       (WINE_GLAPI *p_glDebugMessageCallbackARB)( GLDEBUGPROCARB callback, const void *userParam );
-        void       (WINE_GLAPI *p_glDebugMessageControl)( GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled );
-        void       (WINE_GLAPI *p_glDebugMessageControlARB)( GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled );
-        void       (WINE_GLAPI *p_glDebugMessageEnableAMD)( GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled );
-        void       (WINE_GLAPI *p_glDebugMessageInsert)( GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf );
-        void       (WINE_GLAPI *p_glDebugMessageInsertAMD)( GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf );
-        void       (WINE_GLAPI *p_glDebugMessageInsertARB)( GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf );
-        void       (WINE_GLAPI *p_glDeformSGIX)( GLbitfield mask );
-        void       (WINE_GLAPI *p_glDeformationMap3dSGIX)( GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points );
-        void       (WINE_GLAPI *p_glDeformationMap3fSGIX)( GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points );
-        void       (WINE_GLAPI *p_glDeleteAsyncMarkersSGIX)( GLuint marker, GLsizei range );
-        void       (WINE_GLAPI *p_glDeleteBufferRegion)( GLenum region );
-        void       (WINE_GLAPI *p_glDeleteBuffers)( GLsizei n, const GLuint *buffers );
-        void       (WINE_GLAPI *p_glDeleteBuffersARB)( GLsizei n, const GLuint *buffers );
-        void       (WINE_GLAPI *p_glDeleteCommandListsNV)( GLsizei n, const GLuint *lists );
-        void       (WINE_GLAPI *p_glDeleteFencesAPPLE)( GLsizei n, const GLuint *fences );
-        void       (WINE_GLAPI *p_glDeleteFencesNV)( GLsizei n, const GLuint *fences );
-        void       (WINE_GLAPI *p_glDeleteFragmentShaderATI)( GLuint id );
-        void       (WINE_GLAPI *p_glDeleteFramebuffers)( GLsizei n, const GLuint *framebuffers );
-        void       (WINE_GLAPI *p_glDeleteFramebuffersEXT)( GLsizei n, const GLuint *framebuffers );
-        void       (WINE_GLAPI *p_glDeleteMemoryObjectsEXT)( GLsizei n, const GLuint *memoryObjects );
-        void       (WINE_GLAPI *p_glDeleteNamedStringARB)( GLint namelen, const GLchar *name );
-        void       (WINE_GLAPI *p_glDeleteNamesAMD)( GLenum identifier, GLuint num, const GLuint *names );
-        void       (WINE_GLAPI *p_glDeleteObjectARB)( GLhandleARB obj );
-        void       (WINE_GLAPI *p_glDeleteObjectBufferATI)( GLuint buffer );
-        void       (WINE_GLAPI *p_glDeleteOcclusionQueriesNV)( GLsizei n, const GLuint *ids );
-        void       (WINE_GLAPI *p_glDeletePathsNV)( GLuint path, GLsizei range );
-        void       (WINE_GLAPI *p_glDeletePerfMonitorsAMD)( GLsizei n, GLuint *monitors );
-        void       (WINE_GLAPI *p_glDeletePerfQueryINTEL)( GLuint queryHandle );
-        void       (WINE_GLAPI *p_glDeleteProgram)( GLuint program );
-        void       (WINE_GLAPI *p_glDeleteProgramPipelines)( GLsizei n, const GLuint *pipelines );
-        void       (WINE_GLAPI *p_glDeleteProgramsARB)( GLsizei n, const GLuint *programs );
-        void       (WINE_GLAPI *p_glDeleteProgramsNV)( GLsizei n, const GLuint *programs );
-        void       (WINE_GLAPI *p_glDeleteQueries)( GLsizei n, const GLuint *ids );
-        void       (WINE_GLAPI *p_glDeleteQueriesARB)( GLsizei n, const GLuint *ids );
-        void       (WINE_GLAPI *p_glDeleteQueryResourceTagNV)( GLsizei n, const GLint *tagIds );
-        void       (WINE_GLAPI *p_glDeleteRenderbuffers)( GLsizei n, const GLuint *renderbuffers );
-        void       (WINE_GLAPI *p_glDeleteRenderbuffersEXT)( GLsizei n, const GLuint *renderbuffers );
-        void       (WINE_GLAPI *p_glDeleteSamplers)( GLsizei count, const GLuint *samplers );
-        void       (WINE_GLAPI *p_glDeleteSemaphoresEXT)( GLsizei n, const GLuint *semaphores );
-        void       (WINE_GLAPI *p_glDeleteShader)( GLuint shader );
-        void       (WINE_GLAPI *p_glDeleteStatesNV)( GLsizei n, const GLuint *states );
-        void       (WINE_GLAPI *p_glDeleteSync)( GLsync sync );
-        void       (WINE_GLAPI *p_glDeleteTexturesEXT)( GLsizei n, const GLuint *textures );
-        void       (WINE_GLAPI *p_glDeleteTransformFeedbacks)( GLsizei n, const GLuint *ids );
-        void       (WINE_GLAPI *p_glDeleteTransformFeedbacksNV)( GLsizei n, const GLuint *ids );
-        void       (WINE_GLAPI *p_glDeleteVertexArrays)( GLsizei n, const GLuint *arrays );
-        void       (WINE_GLAPI *p_glDeleteVertexArraysAPPLE)( GLsizei n, const GLuint *arrays );
-        void       (WINE_GLAPI *p_glDeleteVertexShaderEXT)( GLuint id );
-        void       (WINE_GLAPI *p_glDepthBoundsEXT)( GLclampd zmin, GLclampd zmax );
-        void       (WINE_GLAPI *p_glDepthBoundsdNV)( GLdouble zmin, GLdouble zmax );
-        void       (WINE_GLAPI *p_glDepthRangeArraydvNV)( GLuint first, GLsizei count, const GLdouble *v );
-        void       (WINE_GLAPI *p_glDepthRangeArrayv)( GLuint first, GLsizei count, const GLdouble *v );
-        void       (WINE_GLAPI *p_glDepthRangeIndexed)( GLuint index, GLdouble n, GLdouble f );
-        void       (WINE_GLAPI *p_glDepthRangeIndexeddNV)( GLuint index, GLdouble n, GLdouble f );
-        void       (WINE_GLAPI *p_glDepthRangedNV)( GLdouble zNear, GLdouble zFar );
-        void       (WINE_GLAPI *p_glDepthRangef)( GLfloat n, GLfloat f );
-        void       (WINE_GLAPI *p_glDepthRangefOES)( GLclampf n, GLclampf f );
-        void       (WINE_GLAPI *p_glDepthRangexOES)( GLfixed n, GLfixed f );
-        void       (WINE_GLAPI *p_glDetachObjectARB)( GLhandleARB containerObj, GLhandleARB attachedObj );
-        void       (WINE_GLAPI *p_glDetachShader)( GLuint program, GLuint shader );
-        void       (WINE_GLAPI *p_glDetailTexFuncSGIS)( GLenum target, GLsizei n, const GLfloat *points );
-        void       (WINE_GLAPI *p_glDisableClientStateIndexedEXT)( GLenum array, GLuint index );
-        void       (WINE_GLAPI *p_glDisableClientStateiEXT)( GLenum array, GLuint index );
-        void       (WINE_GLAPI *p_glDisableIndexedEXT)( GLenum target, GLuint index );
-        void       (WINE_GLAPI *p_glDisableVariantClientStateEXT)( GLuint id );
-        void       (WINE_GLAPI *p_glDisableVertexArrayAttrib)( GLuint vaobj, GLuint index );
-        void       (WINE_GLAPI *p_glDisableVertexArrayAttribEXT)( GLuint vaobj, GLuint index );
-        void       (WINE_GLAPI *p_glDisableVertexArrayEXT)( GLuint vaobj, GLenum array );
-        void       (WINE_GLAPI *p_glDisableVertexAttribAPPLE)( GLuint index, GLenum pname );
-        void       (WINE_GLAPI *p_glDisableVertexAttribArray)( GLuint index );
-        void       (WINE_GLAPI *p_glDisableVertexAttribArrayARB)( GLuint index );
-        void       (WINE_GLAPI *p_glDisablei)( GLenum target, GLuint index );
-        void       (WINE_GLAPI *p_glDispatchCompute)( GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z );
-        void       (WINE_GLAPI *p_glDispatchComputeGroupSizeARB)( GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z );
-        void       (WINE_GLAPI *p_glDispatchComputeIndirect)( GLintptr indirect );
-        void       (WINE_GLAPI *p_glDrawArraysEXT)( GLenum mode, GLint first, GLsizei count );
-        void       (WINE_GLAPI *p_glDrawArraysIndirect)( GLenum mode, const void *indirect );
-        void       (WINE_GLAPI *p_glDrawArraysInstanced)( GLenum mode, GLint first, GLsizei count, GLsizei instancecount );
-        void       (WINE_GLAPI *p_glDrawArraysInstancedARB)( GLenum mode, GLint first, GLsizei count, GLsizei primcount );
-        void       (WINE_GLAPI *p_glDrawArraysInstancedBaseInstance)( GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance );
-        void       (WINE_GLAPI *p_glDrawArraysInstancedEXT)( GLenum mode, GLint start, GLsizei count, GLsizei primcount );
-        void       (WINE_GLAPI *p_glDrawBufferRegion)( GLenum region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest );
-        void       (WINE_GLAPI *p_glDrawBuffers)( GLsizei n, const GLenum *bufs );
-        void       (WINE_GLAPI *p_glDrawBuffersARB)( GLsizei n, const GLenum *bufs );
-        void       (WINE_GLAPI *p_glDrawBuffersATI)( GLsizei n, const GLenum *bufs );
-        void       (WINE_GLAPI *p_glDrawCommandsAddressNV)( GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count );
-        void       (WINE_GLAPI *p_glDrawCommandsNV)( GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count );
-        void       (WINE_GLAPI *p_glDrawCommandsStatesAddressNV)( const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count );
-        void       (WINE_GLAPI *p_glDrawCommandsStatesNV)( GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count );
-        void       (WINE_GLAPI *p_glDrawElementArrayAPPLE)( GLenum mode, GLint first, GLsizei count );
-        void       (WINE_GLAPI *p_glDrawElementArrayATI)( GLenum mode, GLsizei count );
-        void       (WINE_GLAPI *p_glDrawElementsBaseVertex)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex );
-        void       (WINE_GLAPI *p_glDrawElementsIndirect)( GLenum mode, GLenum type, const void *indirect );
-        void       (WINE_GLAPI *p_glDrawElementsInstanced)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount );
-        void       (WINE_GLAPI *p_glDrawElementsInstancedARB)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount );
-        void       (WINE_GLAPI *p_glDrawElementsInstancedBaseInstance)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance );
-        void       (WINE_GLAPI *p_glDrawElementsInstancedBaseVertex)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex );
-        void       (WINE_GLAPI *p_glDrawElementsInstancedBaseVertexBaseInstance)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance );
-        void       (WINE_GLAPI *p_glDrawElementsInstancedEXT)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount );
-        void       (WINE_GLAPI *p_glDrawMeshArraysSUN)( GLenum mode, GLint first, GLsizei count, GLsizei width );
-        void       (WINE_GLAPI *p_glDrawMeshTasksIndirectNV)( GLintptr indirect );
-        void       (WINE_GLAPI *p_glDrawMeshTasksNV)( GLuint first, GLuint count );
-        void       (WINE_GLAPI *p_glDrawRangeElementArrayAPPLE)( GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count );
-        void       (WINE_GLAPI *p_glDrawRangeElementArrayATI)( GLenum mode, GLuint start, GLuint end, GLsizei count );
-        void       (WINE_GLAPI *p_glDrawRangeElements)( GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices );
-        void       (WINE_GLAPI *p_glDrawRangeElementsBaseVertex)( GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex );
-        void       (WINE_GLAPI *p_glDrawRangeElementsEXT)( GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices );
-        void       (WINE_GLAPI *p_glDrawTextureNV)( GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1 );
-        void       (WINE_GLAPI *p_glDrawTransformFeedback)( GLenum mode, GLuint id );
-        void       (WINE_GLAPI *p_glDrawTransformFeedbackInstanced)( GLenum mode, GLuint id, GLsizei instancecount );
-        void       (WINE_GLAPI *p_glDrawTransformFeedbackNV)( GLenum mode, GLuint id );
-        void       (WINE_GLAPI *p_glDrawTransformFeedbackStream)( GLenum mode, GLuint id, GLuint stream );
-        void       (WINE_GLAPI *p_glDrawTransformFeedbackStreamInstanced)( GLenum mode, GLuint id, GLuint stream, GLsizei instancecount );
-        void       (WINE_GLAPI *p_glDrawVkImageNV)( GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1 );
-        void       (WINE_GLAPI *p_glEGLImageTargetTexStorageEXT)( GLenum target, GLeglImageOES image, const GLint* attrib_list );
-        void       (WINE_GLAPI *p_glEGLImageTargetTextureStorageEXT)( GLuint texture, GLeglImageOES image, const GLint* attrib_list );
-        void       (WINE_GLAPI *p_glEdgeFlagFormatNV)( GLsizei stride );
-        void       (WINE_GLAPI *p_glEdgeFlagPointerEXT)( GLsizei stride, GLsizei count, const GLboolean *pointer );
-        void       (WINE_GLAPI *p_glEdgeFlagPointerListIBM)( GLint stride, const GLboolean **pointer, GLint ptrstride );
-        void       (WINE_GLAPI *p_glElementPointerAPPLE)( GLenum type, const void *pointer );
-        void       (WINE_GLAPI *p_glElementPointerATI)( GLenum type, const void *pointer );
-        void       (WINE_GLAPI *p_glEnableClientStateIndexedEXT)( GLenum array, GLuint index );
-        void       (WINE_GLAPI *p_glEnableClientStateiEXT)( GLenum array, GLuint index );
-        void       (WINE_GLAPI *p_glEnableIndexedEXT)( GLenum target, GLuint index );
-        void       (WINE_GLAPI *p_glEnableVariantClientStateEXT)( GLuint id );
-        void       (WINE_GLAPI *p_glEnableVertexArrayAttrib)( GLuint vaobj, GLuint index );
-        void       (WINE_GLAPI *p_glEnableVertexArrayAttribEXT)( GLuint vaobj, GLuint index );
-        void       (WINE_GLAPI *p_glEnableVertexArrayEXT)( GLuint vaobj, GLenum array );
-        void       (WINE_GLAPI *p_glEnableVertexAttribAPPLE)( GLuint index, GLenum pname );
-        void       (WINE_GLAPI *p_glEnableVertexAttribArray)( GLuint index );
-        void       (WINE_GLAPI *p_glEnableVertexAttribArrayARB)( GLuint index );
-        void       (WINE_GLAPI *p_glEnablei)( GLenum target, GLuint index );
-        void       (WINE_GLAPI *p_glEndConditionalRender)(void);
-        void       (WINE_GLAPI *p_glEndConditionalRenderNV)(void);
-        void       (WINE_GLAPI *p_glEndConditionalRenderNVX)(void);
-        void       (WINE_GLAPI *p_glEndFragmentShaderATI)(void);
-        void       (WINE_GLAPI *p_glEndOcclusionQueryNV)(void);
-        void       (WINE_GLAPI *p_glEndPerfMonitorAMD)( GLuint monitor );
-        void       (WINE_GLAPI *p_glEndPerfQueryINTEL)( GLuint queryHandle );
-        void       (WINE_GLAPI *p_glEndQuery)( GLenum target );
-        void       (WINE_GLAPI *p_glEndQueryARB)( GLenum target );
-        void       (WINE_GLAPI *p_glEndQueryIndexed)( GLenum target, GLuint index );
-        void       (WINE_GLAPI *p_glEndTransformFeedback)(void);
-        void       (WINE_GLAPI *p_glEndTransformFeedbackEXT)(void);
-        void       (WINE_GLAPI *p_glEndTransformFeedbackNV)(void);
-        void       (WINE_GLAPI *p_glEndVertexShaderEXT)(void);
-        void       (WINE_GLAPI *p_glEndVideoCaptureNV)( GLuint video_capture_slot );
-        void       (WINE_GLAPI *p_glEvalCoord1xOES)( GLfixed u );
-        void       (WINE_GLAPI *p_glEvalCoord1xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glEvalCoord2xOES)( GLfixed u, GLfixed v );
-        void       (WINE_GLAPI *p_glEvalCoord2xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glEvalMapsNV)( GLenum target, GLenum mode );
-        void       (WINE_GLAPI *p_glEvaluateDepthValuesARB)(void);
-        void       (WINE_GLAPI *p_glExecuteProgramNV)( GLenum target, GLuint id, const GLfloat *params );
-        void       (WINE_GLAPI *p_glExtractComponentEXT)( GLuint res, GLuint src, GLuint num );
-        void       (WINE_GLAPI *p_glFeedbackBufferxOES)( GLsizei n, GLenum type, const GLfixed *buffer );
-        GLsync     (WINE_GLAPI *p_glFenceSync)( GLenum condition, GLbitfield flags );
-        void       (WINE_GLAPI *p_glFinalCombinerInputNV)( GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage );
-        GLint      (WINE_GLAPI *p_glFinishAsyncSGIX)( GLuint *markerp );
-        void       (WINE_GLAPI *p_glFinishFenceAPPLE)( GLuint fence );
-        void       (WINE_GLAPI *p_glFinishFenceNV)( GLuint fence );
-        void       (WINE_GLAPI *p_glFinishObjectAPPLE)( GLenum object, GLint name );
-        void       (WINE_GLAPI *p_glFinishTextureSUNX)(void);
-        void       (WINE_GLAPI *p_glFlushMappedBufferRange)( GLenum target, GLintptr offset, GLsizeiptr length );
-        void       (WINE_GLAPI *p_glFlushMappedBufferRangeAPPLE)( GLenum target, GLintptr offset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glFlushMappedNamedBufferRange)( GLuint buffer, GLintptr offset, GLsizeiptr length );
-        void       (WINE_GLAPI *p_glFlushMappedNamedBufferRangeEXT)( GLuint buffer, GLintptr offset, GLsizeiptr length );
-        void       (WINE_GLAPI *p_glFlushPixelDataRangeNV)( GLenum target );
-        void       (WINE_GLAPI *p_glFlushRasterSGIX)(void);
-        void       (WINE_GLAPI *p_glFlushStaticDataIBM)( GLenum target );
-        void       (WINE_GLAPI *p_glFlushVertexArrayRangeAPPLE)( GLsizei length, void *pointer );
-        void       (WINE_GLAPI *p_glFlushVertexArrayRangeNV)(void);
-        void       (WINE_GLAPI *p_glFogCoordFormatNV)( GLenum type, GLsizei stride );
-        void       (WINE_GLAPI *p_glFogCoordPointer)( GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glFogCoordPointerEXT)( GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glFogCoordPointerListIBM)( GLenum type, GLint stride, const void **pointer, GLint ptrstride );
-        void       (WINE_GLAPI *p_glFogCoordd)( GLdouble coord );
-        void       (WINE_GLAPI *p_glFogCoorddEXT)( GLdouble coord );
-        void       (WINE_GLAPI *p_glFogCoorddv)( const GLdouble *coord );
-        void       (WINE_GLAPI *p_glFogCoorddvEXT)( const GLdouble *coord );
-        void       (WINE_GLAPI *p_glFogCoordf)( GLfloat coord );
-        void       (WINE_GLAPI *p_glFogCoordfEXT)( GLfloat coord );
-        void       (WINE_GLAPI *p_glFogCoordfv)( const GLfloat *coord );
-        void       (WINE_GLAPI *p_glFogCoordfvEXT)( const GLfloat *coord );
-        void       (WINE_GLAPI *p_glFogCoordhNV)( GLhalfNV fog );
-        void       (WINE_GLAPI *p_glFogCoordhvNV)( const GLhalfNV *fog );
-        void       (WINE_GLAPI *p_glFogFuncSGIS)( GLsizei n, const GLfloat *points );
-        void       (WINE_GLAPI *p_glFogxOES)( GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glFogxvOES)( GLenum pname, const GLfixed *param );
-        void       (WINE_GLAPI *p_glFragmentColorMaterialSGIX)( GLenum face, GLenum mode );
-        void       (WINE_GLAPI *p_glFragmentCoverageColorNV)( GLuint color );
-        void       (WINE_GLAPI *p_glFragmentLightModelfSGIX)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glFragmentLightModelfvSGIX)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glFragmentLightModeliSGIX)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glFragmentLightModelivSGIX)( GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glFragmentLightfSGIX)( GLenum light, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glFragmentLightfvSGIX)( GLenum light, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glFragmentLightiSGIX)( GLenum light, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glFragmentLightivSGIX)( GLenum light, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glFragmentMaterialfSGIX)( GLenum face, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glFragmentMaterialfvSGIX)( GLenum face, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glFragmentMaterialiSGIX)( GLenum face, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glFragmentMaterialivSGIX)( GLenum face, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glFrameTerminatorGREMEDY)(void);
-        void       (WINE_GLAPI *p_glFrameZoomSGIX)( GLint factor );
-        void       (WINE_GLAPI *p_glFramebufferDrawBufferEXT)( GLuint framebuffer, GLenum mode );
-        void       (WINE_GLAPI *p_glFramebufferDrawBuffersEXT)( GLuint framebuffer, GLsizei n, const GLenum *bufs );
-        void       (WINE_GLAPI *p_glFramebufferFetchBarrierEXT)(void);
-        void       (WINE_GLAPI *p_glFramebufferParameteri)( GLenum target, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glFramebufferParameteriMESA)( GLenum target, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glFramebufferReadBufferEXT)( GLuint framebuffer, GLenum mode );
-        void       (WINE_GLAPI *p_glFramebufferRenderbuffer)( GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer );
-        void       (WINE_GLAPI *p_glFramebufferRenderbufferEXT)( GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer );
-        void       (WINE_GLAPI *p_glFramebufferSampleLocationsfvARB)( GLenum target, GLuint start, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glFramebufferSampleLocationsfvNV)( GLenum target, GLuint start, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glFramebufferSamplePositionsfvAMD)( GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values );
-        void       (WINE_GLAPI *p_glFramebufferTexture)( GLenum target, GLenum attachment, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glFramebufferTexture1D)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glFramebufferTexture1DEXT)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glFramebufferTexture2D)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glFramebufferTexture2DEXT)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glFramebufferTexture3D)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset );
-        void       (WINE_GLAPI *p_glFramebufferTexture3DEXT)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset );
-        void       (WINE_GLAPI *p_glFramebufferTextureARB)( GLenum target, GLenum attachment, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glFramebufferTextureEXT)( GLenum target, GLenum attachment, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glFramebufferTextureFaceARB)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face );
-        void       (WINE_GLAPI *p_glFramebufferTextureFaceEXT)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face );
-        void       (WINE_GLAPI *p_glFramebufferTextureLayer)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer );
-        void       (WINE_GLAPI *p_glFramebufferTextureLayerARB)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer );
-        void       (WINE_GLAPI *p_glFramebufferTextureLayerEXT)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer );
-        void       (WINE_GLAPI *p_glFramebufferTextureMultiviewOVR)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews );
-        void       (WINE_GLAPI *p_glFreeObjectBufferATI)( GLuint buffer );
-        void       (WINE_GLAPI *p_glFrustumfOES)( GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f );
-        void       (WINE_GLAPI *p_glFrustumxOES)( GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f );
-        GLuint     (WINE_GLAPI *p_glGenAsyncMarkersSGIX)( GLsizei range );
-        void       (WINE_GLAPI *p_glGenBuffers)( GLsizei n, GLuint *buffers );
-        void       (WINE_GLAPI *p_glGenBuffersARB)( GLsizei n, GLuint *buffers );
-        void       (WINE_GLAPI *p_glGenFencesAPPLE)( GLsizei n, GLuint *fences );
-        void       (WINE_GLAPI *p_glGenFencesNV)( GLsizei n, GLuint *fences );
-        GLuint     (WINE_GLAPI *p_glGenFragmentShadersATI)( GLuint range );
-        void       (WINE_GLAPI *p_glGenFramebuffers)( GLsizei n, GLuint *framebuffers );
-        void       (WINE_GLAPI *p_glGenFramebuffersEXT)( GLsizei n, GLuint *framebuffers );
-        void       (WINE_GLAPI *p_glGenNamesAMD)( GLenum identifier, GLuint num, GLuint *names );
-        void       (WINE_GLAPI *p_glGenOcclusionQueriesNV)( GLsizei n, GLuint *ids );
-        GLuint     (WINE_GLAPI *p_glGenPathsNV)( GLsizei range );
-        void       (WINE_GLAPI *p_glGenPerfMonitorsAMD)( GLsizei n, GLuint *monitors );
-        void       (WINE_GLAPI *p_glGenProgramPipelines)( GLsizei n, GLuint *pipelines );
-        void       (WINE_GLAPI *p_glGenProgramsARB)( GLsizei n, GLuint *programs );
-        void       (WINE_GLAPI *p_glGenProgramsNV)( GLsizei n, GLuint *programs );
-        void       (WINE_GLAPI *p_glGenQueries)( GLsizei n, GLuint *ids );
-        void       (WINE_GLAPI *p_glGenQueriesARB)( GLsizei n, GLuint *ids );
-        void       (WINE_GLAPI *p_glGenQueryResourceTagNV)( GLsizei n, GLint *tagIds );
-        void       (WINE_GLAPI *p_glGenRenderbuffers)( GLsizei n, GLuint *renderbuffers );
-        void       (WINE_GLAPI *p_glGenRenderbuffersEXT)( GLsizei n, GLuint *renderbuffers );
-        void       (WINE_GLAPI *p_glGenSamplers)( GLsizei count, GLuint *samplers );
-        void       (WINE_GLAPI *p_glGenSemaphoresEXT)( GLsizei n, GLuint *semaphores );
-        GLuint     (WINE_GLAPI *p_glGenSymbolsEXT)( GLenum datatype, GLenum storagetype, GLenum range, GLuint components );
-        void       (WINE_GLAPI *p_glGenTexturesEXT)( GLsizei n, GLuint *textures );
-        void       (WINE_GLAPI *p_glGenTransformFeedbacks)( GLsizei n, GLuint *ids );
-        void       (WINE_GLAPI *p_glGenTransformFeedbacksNV)( GLsizei n, GLuint *ids );
-        void       (WINE_GLAPI *p_glGenVertexArrays)( GLsizei n, GLuint *arrays );
-        void       (WINE_GLAPI *p_glGenVertexArraysAPPLE)( GLsizei n, GLuint *arrays );
-        GLuint     (WINE_GLAPI *p_glGenVertexShadersEXT)( GLuint range );
-        void       (WINE_GLAPI *p_glGenerateMipmap)( GLenum target );
-        void       (WINE_GLAPI *p_glGenerateMipmapEXT)( GLenum target );
-        void       (WINE_GLAPI *p_glGenerateMultiTexMipmapEXT)( GLenum texunit, GLenum target );
-        void       (WINE_GLAPI *p_glGenerateTextureMipmap)( GLuint texture );
-        void       (WINE_GLAPI *p_glGenerateTextureMipmapEXT)( GLuint texture, GLenum target );
-        void       (WINE_GLAPI *p_glGetActiveAtomicCounterBufferiv)( GLuint program, GLuint bufferIndex, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetActiveAttrib)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name );
-        void       (WINE_GLAPI *p_glGetActiveAttribARB)( GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name );
-        void       (WINE_GLAPI *p_glGetActiveSubroutineName)( GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name );
-        void       (WINE_GLAPI *p_glGetActiveSubroutineUniformName)( GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name );
-        void       (WINE_GLAPI *p_glGetActiveSubroutineUniformiv)( GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values );
-        void       (WINE_GLAPI *p_glGetActiveUniform)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name );
-        void       (WINE_GLAPI *p_glGetActiveUniformARB)( GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name );
-        void       (WINE_GLAPI *p_glGetActiveUniformBlockName)( GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName );
-        void       (WINE_GLAPI *p_glGetActiveUniformBlockiv)( GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetActiveUniformName)( GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName );
-        void       (WINE_GLAPI *p_glGetActiveUniformsiv)( GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetActiveVaryingNV)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name );
-        void       (WINE_GLAPI *p_glGetArrayObjectfvATI)( GLenum array, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetArrayObjectivATI)( GLenum array, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetAttachedObjectsARB)( GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj );
-        void       (WINE_GLAPI *p_glGetAttachedShaders)( GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders );
-        GLint      (WINE_GLAPI *p_glGetAttribLocation)( GLuint program, const GLchar *name );
-        GLint      (WINE_GLAPI *p_glGetAttribLocationARB)( GLhandleARB programObj, const GLcharARB *name );
-        void       (WINE_GLAPI *p_glGetBooleanIndexedvEXT)( GLenum target, GLuint index, GLboolean *data );
-        void       (WINE_GLAPI *p_glGetBooleani_v)( GLenum target, GLuint index, GLboolean *data );
-        void       (WINE_GLAPI *p_glGetBufferParameteri64v)( GLenum target, GLenum pname, GLint64 *params );
-        void       (WINE_GLAPI *p_glGetBufferParameteriv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetBufferParameterivARB)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetBufferParameterui64vNV)( GLenum target, GLenum pname, GLuint64EXT *params );
-        void       (WINE_GLAPI *p_glGetBufferPointerv)( GLenum target, GLenum pname, void **params );
-        void       (WINE_GLAPI *p_glGetBufferPointervARB)( GLenum target, GLenum pname, void **params );
-        void       (WINE_GLAPI *p_glGetBufferSubData)( GLenum target, GLintptr offset, GLsizeiptr size, void *data );
-        void       (WINE_GLAPI *p_glGetBufferSubDataARB)( GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data );
-        void       (WINE_GLAPI *p_glGetClipPlanefOES)( GLenum plane, GLfloat *equation );
-        void       (WINE_GLAPI *p_glGetClipPlanexOES)( GLenum plane, GLfixed *equation );
-        void       (WINE_GLAPI *p_glGetColorTable)( GLenum target, GLenum format, GLenum type, void *table );
-        void       (WINE_GLAPI *p_glGetColorTableEXT)( GLenum target, GLenum format, GLenum type, void *data );
-        void       (WINE_GLAPI *p_glGetColorTableParameterfv)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetColorTableParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetColorTableParameterfvSGI)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetColorTableParameteriv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetColorTableParameterivEXT)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetColorTableParameterivSGI)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetColorTableSGI)( GLenum target, GLenum format, GLenum type, void *table );
-        void       (WINE_GLAPI *p_glGetCombinerInputParameterfvNV)( GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetCombinerInputParameterivNV)( GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetCombinerOutputParameterfvNV)( GLenum stage, GLenum portion, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetCombinerOutputParameterivNV)( GLenum stage, GLenum portion, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetCombinerStageParameterfvNV)( GLenum stage, GLenum pname, GLfloat *params );
-        GLuint     (WINE_GLAPI *p_glGetCommandHeaderNV)( GLenum tokenID, GLuint size );
-        void       (WINE_GLAPI *p_glGetCompressedMultiTexImageEXT)( GLenum texunit, GLenum target, GLint lod, void *img );
-        void       (WINE_GLAPI *p_glGetCompressedTexImage)( GLenum target, GLint level, void *img );
-        void       (WINE_GLAPI *p_glGetCompressedTexImageARB)( GLenum target, GLint level, void *img );
-        void       (WINE_GLAPI *p_glGetCompressedTextureImage)( GLuint texture, GLint level, GLsizei bufSize, void *pixels );
-        void       (WINE_GLAPI *p_glGetCompressedTextureImageEXT)( GLuint texture, GLenum target, GLint lod, void *img );
-        void       (WINE_GLAPI *p_glGetCompressedTextureSubImage)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels );
-        void       (WINE_GLAPI *p_glGetConvolutionFilter)( GLenum target, GLenum format, GLenum type, void *image );
-        void       (WINE_GLAPI *p_glGetConvolutionFilterEXT)( GLenum target, GLenum format, GLenum type, void *image );
-        void       (WINE_GLAPI *p_glGetConvolutionParameterfv)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetConvolutionParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetConvolutionParameteriv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetConvolutionParameterivEXT)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetConvolutionParameterxvOES)( GLenum target, GLenum pname, GLfixed *params );
-        void       (WINE_GLAPI *p_glGetCoverageModulationTableNV)( GLsizei bufSize, GLfloat *v );
-        GLuint     (WINE_GLAPI *p_glGetDebugMessageLog)( GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog );
-        GLuint     (WINE_GLAPI *p_glGetDebugMessageLogAMD)( GLuint count, GLsizei bufSize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message );
-        GLuint     (WINE_GLAPI *p_glGetDebugMessageLogARB)( GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog );
-        void       (WINE_GLAPI *p_glGetDetailTexFuncSGIS)( GLenum target, GLfloat *points );
-        void       (WINE_GLAPI *p_glGetDoubleIndexedvEXT)( GLenum target, GLuint index, GLdouble *data );
-        void       (WINE_GLAPI *p_glGetDoublei_v)( GLenum target, GLuint index, GLdouble *data );
-        void       (WINE_GLAPI *p_glGetDoublei_vEXT)( GLenum pname, GLuint index, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetFenceivNV)( GLuint fence, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetFinalCombinerInputParameterfvNV)( GLenum variable, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetFinalCombinerInputParameterivNV)( GLenum variable, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetFirstPerfQueryIdINTEL)( GLuint *queryId );
-        void       (WINE_GLAPI *p_glGetFixedvOES)( GLenum pname, GLfixed *params );
-        void       (WINE_GLAPI *p_glGetFloatIndexedvEXT)( GLenum target, GLuint index, GLfloat *data );
-        void       (WINE_GLAPI *p_glGetFloati_v)( GLenum target, GLuint index, GLfloat *data );
-        void       (WINE_GLAPI *p_glGetFloati_vEXT)( GLenum pname, GLuint index, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetFogFuncSGIS)( GLfloat *points );
-        GLint      (WINE_GLAPI *p_glGetFragDataIndex)( GLuint program, const GLchar *name );
-        GLint      (WINE_GLAPI *p_glGetFragDataLocation)( GLuint program, const GLchar *name );
-        GLint      (WINE_GLAPI *p_glGetFragDataLocationEXT)( GLuint program, const GLchar *name );
-        void       (WINE_GLAPI *p_glGetFragmentLightfvSGIX)( GLenum light, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetFragmentLightivSGIX)( GLenum light, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetFragmentMaterialfvSGIX)( GLenum face, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetFragmentMaterialivSGIX)( GLenum face, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetFramebufferAttachmentParameteriv)( GLenum target, GLenum attachment, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetFramebufferAttachmentParameterivEXT)( GLenum target, GLenum attachment, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetFramebufferParameterfvAMD)( GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values );
-        void       (WINE_GLAPI *p_glGetFramebufferParameteriv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetFramebufferParameterivEXT)( GLuint framebuffer, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetFramebufferParameterivMESA)( GLenum target, GLenum pname, GLint *params );
-        GLenum     (WINE_GLAPI *p_glGetGraphicsResetStatus)(void);
-        GLenum     (WINE_GLAPI *p_glGetGraphicsResetStatusARB)(void);
-        GLhandleARB (WINE_GLAPI *p_glGetHandleARB)( GLenum pname );
-        void       (WINE_GLAPI *p_glGetHistogram)( GLenum target, GLboolean reset, GLenum format, GLenum type, void *values );
-        void       (WINE_GLAPI *p_glGetHistogramEXT)( GLenum target, GLboolean reset, GLenum format, GLenum type, void *values );
-        void       (WINE_GLAPI *p_glGetHistogramParameterfv)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetHistogramParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetHistogramParameteriv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetHistogramParameterivEXT)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetHistogramParameterxvOES)( GLenum target, GLenum pname, GLfixed *params );
-        GLuint64   (WINE_GLAPI *p_glGetImageHandleARB)( GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format );
-        GLuint64   (WINE_GLAPI *p_glGetImageHandleNV)( GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format );
-        void       (WINE_GLAPI *p_glGetImageTransformParameterfvHP)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetImageTransformParameterivHP)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetInfoLogARB)( GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog );
-        GLint      (WINE_GLAPI *p_glGetInstrumentsSGIX)(void);
-        void       (WINE_GLAPI *p_glGetInteger64i_v)( GLenum target, GLuint index, GLint64 *data );
-        void       (WINE_GLAPI *p_glGetInteger64v)( GLenum pname, GLint64 *data );
-        void       (WINE_GLAPI *p_glGetIntegerIndexedvEXT)( GLenum target, GLuint index, GLint *data );
-        void       (WINE_GLAPI *p_glGetIntegeri_v)( GLenum target, GLuint index, GLint *data );
-        void       (WINE_GLAPI *p_glGetIntegerui64i_vNV)( GLenum value, GLuint index, GLuint64EXT *result );
-        void       (WINE_GLAPI *p_glGetIntegerui64vNV)( GLenum value, GLuint64EXT *result );
-        void       (WINE_GLAPI *p_glGetInternalformatSampleivNV)( GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params );
-        void       (WINE_GLAPI *p_glGetInternalformati64v)( GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params );
-        void       (WINE_GLAPI *p_glGetInternalformativ)( GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params );
-        void       (WINE_GLAPI *p_glGetInvariantBooleanvEXT)( GLuint id, GLenum value, GLboolean *data );
-        void       (WINE_GLAPI *p_glGetInvariantFloatvEXT)( GLuint id, GLenum value, GLfloat *data );
-        void       (WINE_GLAPI *p_glGetInvariantIntegervEXT)( GLuint id, GLenum value, GLint *data );
-        void       (WINE_GLAPI *p_glGetLightxOES)( GLenum light, GLenum pname, GLfixed *params );
-        void       (WINE_GLAPI *p_glGetListParameterfvSGIX)( GLuint list, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetListParameterivSGIX)( GLuint list, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetLocalConstantBooleanvEXT)( GLuint id, GLenum value, GLboolean *data );
-        void       (WINE_GLAPI *p_glGetLocalConstantFloatvEXT)( GLuint id, GLenum value, GLfloat *data );
-        void       (WINE_GLAPI *p_glGetLocalConstantIntegervEXT)( GLuint id, GLenum value, GLint *data );
-        void       (WINE_GLAPI *p_glGetMapAttribParameterfvNV)( GLenum target, GLuint index, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetMapAttribParameterivNV)( GLenum target, GLuint index, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMapControlPointsNV)( GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points );
-        void       (WINE_GLAPI *p_glGetMapParameterfvNV)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetMapParameterivNV)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMapxvOES)( GLenum target, GLenum query, GLfixed *v );
-        void       (WINE_GLAPI *p_glGetMaterialxOES)( GLenum face, GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glGetMemoryObjectDetachedResourcesuivNV)( GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params );
-        void       (WINE_GLAPI *p_glGetMemoryObjectParameterivEXT)( GLuint memoryObject, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMinmax)( GLenum target, GLboolean reset, GLenum format, GLenum type, void *values );
-        void       (WINE_GLAPI *p_glGetMinmaxEXT)( GLenum target, GLboolean reset, GLenum format, GLenum type, void *values );
-        void       (WINE_GLAPI *p_glGetMinmaxParameterfv)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetMinmaxParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetMinmaxParameteriv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMinmaxParameterivEXT)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMultiTexEnvfvEXT)( GLenum texunit, GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetMultiTexEnvivEXT)( GLenum texunit, GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMultiTexGendvEXT)( GLenum texunit, GLenum coord, GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetMultiTexGenfvEXT)( GLenum texunit, GLenum coord, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetMultiTexGenivEXT)( GLenum texunit, GLenum coord, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMultiTexImageEXT)( GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels );
-        void       (WINE_GLAPI *p_glGetMultiTexLevelParameterfvEXT)( GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetMultiTexLevelParameterivEXT)( GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMultiTexParameterIivEXT)( GLenum texunit, GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMultiTexParameterIuivEXT)( GLenum texunit, GLenum target, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetMultiTexParameterfvEXT)( GLenum texunit, GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetMultiTexParameterivEXT)( GLenum texunit, GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetMultisamplefv)( GLenum pname, GLuint index, GLfloat *val );
-        void       (WINE_GLAPI *p_glGetMultisamplefvNV)( GLenum pname, GLuint index, GLfloat *val );
-        void       (WINE_GLAPI *p_glGetNamedBufferParameteri64v)( GLuint buffer, GLenum pname, GLint64 *params );
-        void       (WINE_GLAPI *p_glGetNamedBufferParameteriv)( GLuint buffer, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetNamedBufferParameterivEXT)( GLuint buffer, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetNamedBufferParameterui64vNV)( GLuint buffer, GLenum pname, GLuint64EXT *params );
-        void       (WINE_GLAPI *p_glGetNamedBufferPointerv)( GLuint buffer, GLenum pname, void **params );
-        void       (WINE_GLAPI *p_glGetNamedBufferPointervEXT)( GLuint buffer, GLenum pname, void **params );
-        void       (WINE_GLAPI *p_glGetNamedBufferSubData)( GLuint buffer, GLintptr offset, GLsizeiptr size, void *data );
-        void       (WINE_GLAPI *p_glGetNamedBufferSubDataEXT)( GLuint buffer, GLintptr offset, GLsizeiptr size, void *data );
-        void       (WINE_GLAPI *p_glGetNamedFramebufferAttachmentParameteriv)( GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetNamedFramebufferAttachmentParameterivEXT)( GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetNamedFramebufferParameterfvAMD)( GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values );
-        void       (WINE_GLAPI *p_glGetNamedFramebufferParameteriv)( GLuint framebuffer, GLenum pname, GLint *param );
-        void       (WINE_GLAPI *p_glGetNamedFramebufferParameterivEXT)( GLuint framebuffer, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetNamedProgramLocalParameterIivEXT)( GLuint program, GLenum target, GLuint index, GLint *params );
-        void       (WINE_GLAPI *p_glGetNamedProgramLocalParameterIuivEXT)( GLuint program, GLenum target, GLuint index, GLuint *params );
-        void       (WINE_GLAPI *p_glGetNamedProgramLocalParameterdvEXT)( GLuint program, GLenum target, GLuint index, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetNamedProgramLocalParameterfvEXT)( GLuint program, GLenum target, GLuint index, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetNamedProgramStringEXT)( GLuint program, GLenum target, GLenum pname, void *string );
-        void       (WINE_GLAPI *p_glGetNamedProgramivEXT)( GLuint program, GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetNamedRenderbufferParameteriv)( GLuint renderbuffer, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetNamedRenderbufferParameterivEXT)( GLuint renderbuffer, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetNamedStringARB)( GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string );
-        void       (WINE_GLAPI *p_glGetNamedStringivARB)( GLint namelen, const GLchar *name, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetNextPerfQueryIdINTEL)( GLuint queryId, GLuint *nextQueryId );
-        void       (WINE_GLAPI *p_glGetObjectBufferfvATI)( GLuint buffer, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetObjectBufferivATI)( GLuint buffer, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetObjectLabel)( GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label );
-        void       (WINE_GLAPI *p_glGetObjectLabelEXT)( GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label );
-        void       (WINE_GLAPI *p_glGetObjectParameterfvARB)( GLhandleARB obj, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetObjectParameterivAPPLE)( GLenum objectType, GLuint name, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetObjectParameterivARB)( GLhandleARB obj, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetObjectPtrLabel)( const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label );
-        void       (WINE_GLAPI *p_glGetOcclusionQueryivNV)( GLuint id, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetOcclusionQueryuivNV)( GLuint id, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetPathColorGenfvNV)( GLenum color, GLenum pname, GLfloat *value );
-        void       (WINE_GLAPI *p_glGetPathColorGenivNV)( GLenum color, GLenum pname, GLint *value );
-        void       (WINE_GLAPI *p_glGetPathCommandsNV)( GLuint path, GLubyte *commands );
-        void       (WINE_GLAPI *p_glGetPathCoordsNV)( GLuint path, GLfloat *coords );
-        void       (WINE_GLAPI *p_glGetPathDashArrayNV)( GLuint path, GLfloat *dashArray );
-        GLfloat    (WINE_GLAPI *p_glGetPathLengthNV)( GLuint path, GLsizei startSegment, GLsizei numSegments );
-        void       (WINE_GLAPI *p_glGetPathMetricRangeNV)( GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics );
-        void       (WINE_GLAPI *p_glGetPathMetricsNV)( GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics );
-        void       (WINE_GLAPI *p_glGetPathParameterfvNV)( GLuint path, GLenum pname, GLfloat *value );
-        void       (WINE_GLAPI *p_glGetPathParameterivNV)( GLuint path, GLenum pname, GLint *value );
-        void       (WINE_GLAPI *p_glGetPathSpacingNV)( GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing );
-        void       (WINE_GLAPI *p_glGetPathTexGenfvNV)( GLenum texCoordSet, GLenum pname, GLfloat *value );
-        void       (WINE_GLAPI *p_glGetPathTexGenivNV)( GLenum texCoordSet, GLenum pname, GLint *value );
-        void       (WINE_GLAPI *p_glGetPerfCounterInfoINTEL)( GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue );
-        void       (WINE_GLAPI *p_glGetPerfMonitorCounterDataAMD)( GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten );
-        void       (WINE_GLAPI *p_glGetPerfMonitorCounterInfoAMD)( GLuint group, GLuint counter, GLenum pname, void *data );
-        void       (WINE_GLAPI *p_glGetPerfMonitorCounterStringAMD)( GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString );
-        void       (WINE_GLAPI *p_glGetPerfMonitorCountersAMD)( GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters );
-        void       (WINE_GLAPI *p_glGetPerfMonitorGroupStringAMD)( GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString );
-        void       (WINE_GLAPI *p_glGetPerfMonitorGroupsAMD)( GLint *numGroups, GLsizei groupsSize, GLuint *groups );
-        void       (WINE_GLAPI *p_glGetPerfQueryDataINTEL)( GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten );
-        void       (WINE_GLAPI *p_glGetPerfQueryIdByNameINTEL)( GLchar *queryName, GLuint *queryId );
-        void       (WINE_GLAPI *p_glGetPerfQueryInfoINTEL)( GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask );
-        void       (WINE_GLAPI *p_glGetPixelMapxv)( GLenum map, GLint size, GLfixed *values );
-        void       (WINE_GLAPI *p_glGetPixelTexGenParameterfvSGIS)( GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetPixelTexGenParameterivSGIS)( GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetPixelTransformParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetPixelTransformParameterivEXT)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetPointerIndexedvEXT)( GLenum target, GLuint index, void **data );
-        void       (WINE_GLAPI *p_glGetPointeri_vEXT)( GLenum pname, GLuint index, void **params );
-        void       (WINE_GLAPI *p_glGetPointervEXT)( GLenum pname, void **params );
-        void       (WINE_GLAPI *p_glGetProgramBinary)( GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary );
-        void       (WINE_GLAPI *p_glGetProgramEnvParameterIivNV)( GLenum target, GLuint index, GLint *params );
-        void       (WINE_GLAPI *p_glGetProgramEnvParameterIuivNV)( GLenum target, GLuint index, GLuint *params );
-        void       (WINE_GLAPI *p_glGetProgramEnvParameterdvARB)( GLenum target, GLuint index, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetProgramEnvParameterfvARB)( GLenum target, GLuint index, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetProgramInfoLog)( GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog );
-        void       (WINE_GLAPI *p_glGetProgramInterfaceiv)( GLuint program, GLenum programInterface, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetProgramLocalParameterIivNV)( GLenum target, GLuint index, GLint *params );
-        void       (WINE_GLAPI *p_glGetProgramLocalParameterIuivNV)( GLenum target, GLuint index, GLuint *params );
-        void       (WINE_GLAPI *p_glGetProgramLocalParameterdvARB)( GLenum target, GLuint index, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetProgramLocalParameterfvARB)( GLenum target, GLuint index, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetProgramNamedParameterdvNV)( GLuint id, GLsizei len, const GLubyte *name, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetProgramNamedParameterfvNV)( GLuint id, GLsizei len, const GLubyte *name, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetProgramParameterdvNV)( GLenum target, GLuint index, GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetProgramParameterfvNV)( GLenum target, GLuint index, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetProgramPipelineInfoLog)( GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog );
-        void       (WINE_GLAPI *p_glGetProgramPipelineiv)( GLuint pipeline, GLenum pname, GLint *params );
-        GLuint     (WINE_GLAPI *p_glGetProgramResourceIndex)( GLuint program, GLenum programInterface, const GLchar *name );
-        GLint      (WINE_GLAPI *p_glGetProgramResourceLocation)( GLuint program, GLenum programInterface, const GLchar *name );
-        GLint      (WINE_GLAPI *p_glGetProgramResourceLocationIndex)( GLuint program, GLenum programInterface, const GLchar *name );
-        void       (WINE_GLAPI *p_glGetProgramResourceName)( GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name );
-        void       (WINE_GLAPI *p_glGetProgramResourcefvNV)( GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetProgramResourceiv)( GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params );
-        void       (WINE_GLAPI *p_glGetProgramStageiv)( GLuint program, GLenum shadertype, GLenum pname, GLint *values );
-        void       (WINE_GLAPI *p_glGetProgramStringARB)( GLenum target, GLenum pname, void *string );
-        void       (WINE_GLAPI *p_glGetProgramStringNV)( GLuint id, GLenum pname, GLubyte *program );
-        void       (WINE_GLAPI *p_glGetProgramSubroutineParameteruivNV)( GLenum target, GLuint index, GLuint *param );
-        void       (WINE_GLAPI *p_glGetProgramiv)( GLuint program, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetProgramivARB)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetProgramivNV)( GLuint id, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetQueryBufferObjecti64v)( GLuint id, GLuint buffer, GLenum pname, GLintptr offset );
-        void       (WINE_GLAPI *p_glGetQueryBufferObjectiv)( GLuint id, GLuint buffer, GLenum pname, GLintptr offset );
-        void       (WINE_GLAPI *p_glGetQueryBufferObjectui64v)( GLuint id, GLuint buffer, GLenum pname, GLintptr offset );
-        void       (WINE_GLAPI *p_glGetQueryBufferObjectuiv)( GLuint id, GLuint buffer, GLenum pname, GLintptr offset );
-        void       (WINE_GLAPI *p_glGetQueryIndexediv)( GLenum target, GLuint index, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetQueryObjecti64v)( GLuint id, GLenum pname, GLint64 *params );
-        void       (WINE_GLAPI *p_glGetQueryObjecti64vEXT)( GLuint id, GLenum pname, GLint64 *params );
-        void       (WINE_GLAPI *p_glGetQueryObjectiv)( GLuint id, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetQueryObjectivARB)( GLuint id, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetQueryObjectui64v)( GLuint id, GLenum pname, GLuint64 *params );
-        void       (WINE_GLAPI *p_glGetQueryObjectui64vEXT)( GLuint id, GLenum pname, GLuint64 *params );
-        void       (WINE_GLAPI *p_glGetQueryObjectuiv)( GLuint id, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetQueryObjectuivARB)( GLuint id, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetQueryiv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetQueryivARB)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetRenderbufferParameteriv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetRenderbufferParameterivEXT)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetSamplerParameterIiv)( GLuint sampler, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetSamplerParameterIuiv)( GLuint sampler, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetSamplerParameterfv)( GLuint sampler, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetSamplerParameteriv)( GLuint sampler, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetSemaphoreParameterui64vEXT)( GLuint semaphore, GLenum pname, GLuint64 *params );
-        void       (WINE_GLAPI *p_glGetSeparableFilter)( GLenum target, GLenum format, GLenum type, void *row, void *column, void *span );
-        void       (WINE_GLAPI *p_glGetSeparableFilterEXT)( GLenum target, GLenum format, GLenum type, void *row, void *column, void *span );
-        void       (WINE_GLAPI *p_glGetShaderInfoLog)( GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog );
-        void       (WINE_GLAPI *p_glGetShaderPrecisionFormat)( GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision );
-        void       (WINE_GLAPI *p_glGetShaderSource)( GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source );
-        void       (WINE_GLAPI *p_glGetShaderSourceARB)( GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source );
-        void       (WINE_GLAPI *p_glGetShaderiv)( GLuint shader, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetShadingRateImagePaletteNV)( GLuint viewport, GLuint entry, GLenum *rate );
-        void       (WINE_GLAPI *p_glGetShadingRateSampleLocationivNV)( GLenum rate, GLuint samples, GLuint index, GLint *location );
-        void       (WINE_GLAPI *p_glGetSharpenTexFuncSGIS)( GLenum target, GLfloat *points );
-        GLushort   (WINE_GLAPI *p_glGetStageIndexNV)( GLenum shadertype );
-        const GLubyte * (WINE_GLAPI *p_glGetStringi)( GLenum name, GLuint index );
-        GLuint     (WINE_GLAPI *p_glGetSubroutineIndex)( GLuint program, GLenum shadertype, const GLchar *name );
-        GLint      (WINE_GLAPI *p_glGetSubroutineUniformLocation)( GLuint program, GLenum shadertype, const GLchar *name );
-        void       (WINE_GLAPI *p_glGetSynciv)( GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values );
-        void       (WINE_GLAPI *p_glGetTexBumpParameterfvATI)( GLenum pname, GLfloat *param );
-        void       (WINE_GLAPI *p_glGetTexBumpParameterivATI)( GLenum pname, GLint *param );
-        void       (WINE_GLAPI *p_glGetTexEnvxvOES)( GLenum target, GLenum pname, GLfixed *params );
-        void       (WINE_GLAPI *p_glGetTexFilterFuncSGIS)( GLenum target, GLenum filter, GLfloat *weights );
-        void       (WINE_GLAPI *p_glGetTexGenxvOES)( GLenum coord, GLenum pname, GLfixed *params );
-        void       (WINE_GLAPI *p_glGetTexLevelParameterxvOES)( GLenum target, GLint level, GLenum pname, GLfixed *params );
-        void       (WINE_GLAPI *p_glGetTexParameterIiv)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTexParameterIivEXT)( GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTexParameterIuiv)( GLenum target, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetTexParameterIuivEXT)( GLenum target, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetTexParameterPointervAPPLE)( GLenum target, GLenum pname, void **params );
-        void       (WINE_GLAPI *p_glGetTexParameterxvOES)( GLenum target, GLenum pname, GLfixed *params );
-        GLuint64   (WINE_GLAPI *p_glGetTextureHandleARB)( GLuint texture );
-        GLuint64   (WINE_GLAPI *p_glGetTextureHandleNV)( GLuint texture );
-        void       (WINE_GLAPI *p_glGetTextureImage)( GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels );
-        void       (WINE_GLAPI *p_glGetTextureImageEXT)( GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels );
-        void       (WINE_GLAPI *p_glGetTextureLevelParameterfv)( GLuint texture, GLint level, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetTextureLevelParameterfvEXT)( GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetTextureLevelParameteriv)( GLuint texture, GLint level, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTextureLevelParameterivEXT)( GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTextureParameterIiv)( GLuint texture, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTextureParameterIivEXT)( GLuint texture, GLenum target, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTextureParameterIuiv)( GLuint texture, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetTextureParameterIuivEXT)( GLuint texture, GLenum target, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetTextureParameterfv)( GLuint texture, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetTextureParameterfvEXT)( GLuint texture, GLenum target, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetTextureParameteriv)( GLuint texture, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTextureParameterivEXT)( GLuint texture, GLenum target, GLenum pname, GLint *params );
-        GLuint64   (WINE_GLAPI *p_glGetTextureSamplerHandleARB)( GLuint texture, GLuint sampler );
-        GLuint64   (WINE_GLAPI *p_glGetTextureSamplerHandleNV)( GLuint texture, GLuint sampler );
-        void       (WINE_GLAPI *p_glGetTextureSubImage)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels );
-        void       (WINE_GLAPI *p_glGetTrackMatrixivNV)( GLenum target, GLuint address, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetTransformFeedbackVarying)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name );
-        void       (WINE_GLAPI *p_glGetTransformFeedbackVaryingEXT)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name );
-        void       (WINE_GLAPI *p_glGetTransformFeedbackVaryingNV)( GLuint program, GLuint index, GLint *location );
-        void       (WINE_GLAPI *p_glGetTransformFeedbacki64_v)( GLuint xfb, GLenum pname, GLuint index, GLint64 *param );
-        void       (WINE_GLAPI *p_glGetTransformFeedbacki_v)( GLuint xfb, GLenum pname, GLuint index, GLint *param );
-        void       (WINE_GLAPI *p_glGetTransformFeedbackiv)( GLuint xfb, GLenum pname, GLint *param );
-        GLuint     (WINE_GLAPI *p_glGetUniformBlockIndex)( GLuint program, const GLchar *uniformBlockName );
-        GLint      (WINE_GLAPI *p_glGetUniformBufferSizeEXT)( GLuint program, GLint location );
-        void       (WINE_GLAPI *p_glGetUniformIndices)( GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices );
-        GLint      (WINE_GLAPI *p_glGetUniformLocation)( GLuint program, const GLchar *name );
-        GLint      (WINE_GLAPI *p_glGetUniformLocationARB)( GLhandleARB programObj, const GLcharARB *name );
-        GLintptr   (WINE_GLAPI *p_glGetUniformOffsetEXT)( GLuint program, GLint location );
-        void       (WINE_GLAPI *p_glGetUniformSubroutineuiv)( GLenum shadertype, GLint location, GLuint *params );
-        void       (WINE_GLAPI *p_glGetUniformdv)( GLuint program, GLint location, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetUniformfv)( GLuint program, GLint location, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetUniformfvARB)( GLhandleARB programObj, GLint location, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetUniformi64vARB)( GLuint program, GLint location, GLint64 *params );
-        void       (WINE_GLAPI *p_glGetUniformi64vNV)( GLuint program, GLint location, GLint64EXT *params );
-        void       (WINE_GLAPI *p_glGetUniformiv)( GLuint program, GLint location, GLint *params );
-        void       (WINE_GLAPI *p_glGetUniformivARB)( GLhandleARB programObj, GLint location, GLint *params );
-        void       (WINE_GLAPI *p_glGetUniformui64vARB)( GLuint program, GLint location, GLuint64 *params );
-        void       (WINE_GLAPI *p_glGetUniformui64vNV)( GLuint program, GLint location, GLuint64EXT *params );
-        void       (WINE_GLAPI *p_glGetUniformuiv)( GLuint program, GLint location, GLuint *params );
-        void       (WINE_GLAPI *p_glGetUniformuivEXT)( GLuint program, GLint location, GLuint *params );
-        void       (WINE_GLAPI *p_glGetUnsignedBytei_vEXT)( GLenum target, GLuint index, GLubyte *data );
-        void       (WINE_GLAPI *p_glGetUnsignedBytevEXT)( GLenum pname, GLubyte *data );
-        void       (WINE_GLAPI *p_glGetVariantArrayObjectfvATI)( GLuint id, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetVariantArrayObjectivATI)( GLuint id, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVariantBooleanvEXT)( GLuint id, GLenum value, GLboolean *data );
-        void       (WINE_GLAPI *p_glGetVariantFloatvEXT)( GLuint id, GLenum value, GLfloat *data );
-        void       (WINE_GLAPI *p_glGetVariantIntegervEXT)( GLuint id, GLenum value, GLint *data );
-        void       (WINE_GLAPI *p_glGetVariantPointervEXT)( GLuint id, GLenum value, void **data );
-        GLint      (WINE_GLAPI *p_glGetVaryingLocationNV)( GLuint program, const GLchar *name );
-        void       (WINE_GLAPI *p_glGetVertexArrayIndexed64iv)( GLuint vaobj, GLuint index, GLenum pname, GLint64 *param );
-        void       (WINE_GLAPI *p_glGetVertexArrayIndexediv)( GLuint vaobj, GLuint index, GLenum pname, GLint *param );
-        void       (WINE_GLAPI *p_glGetVertexArrayIntegeri_vEXT)( GLuint vaobj, GLuint index, GLenum pname, GLint *param );
-        void       (WINE_GLAPI *p_glGetVertexArrayIntegervEXT)( GLuint vaobj, GLenum pname, GLint *param );
-        void       (WINE_GLAPI *p_glGetVertexArrayPointeri_vEXT)( GLuint vaobj, GLuint index, GLenum pname, void **param );
-        void       (WINE_GLAPI *p_glGetVertexArrayPointervEXT)( GLuint vaobj, GLenum pname, void **param );
-        void       (WINE_GLAPI *p_glGetVertexArrayiv)( GLuint vaobj, GLenum pname, GLint *param );
-        void       (WINE_GLAPI *p_glGetVertexAttribArrayObjectfvATI)( GLuint index, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribArrayObjectivATI)( GLuint index, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribIiv)( GLuint index, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribIivEXT)( GLuint index, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribIuiv)( GLuint index, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribIuivEXT)( GLuint index, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribLdv)( GLuint index, GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribLdvEXT)( GLuint index, GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribLi64vNV)( GLuint index, GLenum pname, GLint64EXT *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribLui64vARB)( GLuint index, GLenum pname, GLuint64EXT *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribLui64vNV)( GLuint index, GLenum pname, GLuint64EXT *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribPointerv)( GLuint index, GLenum pname, void **pointer );
-        void       (WINE_GLAPI *p_glGetVertexAttribPointervARB)( GLuint index, GLenum pname, void **pointer );
-        void       (WINE_GLAPI *p_glGetVertexAttribPointervNV)( GLuint index, GLenum pname, void **pointer );
-        void       (WINE_GLAPI *p_glGetVertexAttribdv)( GLuint index, GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribdvARB)( GLuint index, GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribdvNV)( GLuint index, GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribfv)( GLuint index, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribfvARB)( GLuint index, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribfvNV)( GLuint index, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribiv)( GLuint index, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribivARB)( GLuint index, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVertexAttribivNV)( GLuint index, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVideoCaptureStreamdvNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetVideoCaptureStreamfvNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetVideoCaptureStreamivNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVideoCaptureivNV)( GLuint video_capture_slot, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVideoi64vNV)( GLuint video_slot, GLenum pname, GLint64EXT *params );
-        void       (WINE_GLAPI *p_glGetVideoivNV)( GLuint video_slot, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glGetVideoui64vNV)( GLuint video_slot, GLenum pname, GLuint64EXT *params );
-        void       (WINE_GLAPI *p_glGetVideouivNV)( GLuint video_slot, GLenum pname, GLuint *params );
-        GLVULKANPROCNV (WINE_GLAPI *p_glGetVkProcAddrNV)( const GLchar *name );
-        void       (WINE_GLAPI *p_glGetnColorTable)( GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table );
-        void       (WINE_GLAPI *p_glGetnColorTableARB)( GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table );
-        void       (WINE_GLAPI *p_glGetnCompressedTexImage)( GLenum target, GLint lod, GLsizei bufSize, void *pixels );
-        void       (WINE_GLAPI *p_glGetnCompressedTexImageARB)( GLenum target, GLint lod, GLsizei bufSize, void *img );
-        void       (WINE_GLAPI *p_glGetnConvolutionFilter)( GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image );
-        void       (WINE_GLAPI *p_glGetnConvolutionFilterARB)( GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image );
-        void       (WINE_GLAPI *p_glGetnHistogram)( GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values );
-        void       (WINE_GLAPI *p_glGetnHistogramARB)( GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values );
-        void       (WINE_GLAPI *p_glGetnMapdv)( GLenum target, GLenum query, GLsizei bufSize, GLdouble *v );
-        void       (WINE_GLAPI *p_glGetnMapdvARB)( GLenum target, GLenum query, GLsizei bufSize, GLdouble *v );
-        void       (WINE_GLAPI *p_glGetnMapfv)( GLenum target, GLenum query, GLsizei bufSize, GLfloat *v );
-        void       (WINE_GLAPI *p_glGetnMapfvARB)( GLenum target, GLenum query, GLsizei bufSize, GLfloat *v );
-        void       (WINE_GLAPI *p_glGetnMapiv)( GLenum target, GLenum query, GLsizei bufSize, GLint *v );
-        void       (WINE_GLAPI *p_glGetnMapivARB)( GLenum target, GLenum query, GLsizei bufSize, GLint *v );
-        void       (WINE_GLAPI *p_glGetnMinmax)( GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values );
-        void       (WINE_GLAPI *p_glGetnMinmaxARB)( GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values );
-        void       (WINE_GLAPI *p_glGetnPixelMapfv)( GLenum map, GLsizei bufSize, GLfloat *values );
-        void       (WINE_GLAPI *p_glGetnPixelMapfvARB)( GLenum map, GLsizei bufSize, GLfloat *values );
-        void       (WINE_GLAPI *p_glGetnPixelMapuiv)( GLenum map, GLsizei bufSize, GLuint *values );
-        void       (WINE_GLAPI *p_glGetnPixelMapuivARB)( GLenum map, GLsizei bufSize, GLuint *values );
-        void       (WINE_GLAPI *p_glGetnPixelMapusv)( GLenum map, GLsizei bufSize, GLushort *values );
-        void       (WINE_GLAPI *p_glGetnPixelMapusvARB)( GLenum map, GLsizei bufSize, GLushort *values );
-        void       (WINE_GLAPI *p_glGetnPolygonStipple)( GLsizei bufSize, GLubyte *pattern );
-        void       (WINE_GLAPI *p_glGetnPolygonStippleARB)( GLsizei bufSize, GLubyte *pattern );
-        void       (WINE_GLAPI *p_glGetnSeparableFilter)( GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span );
-        void       (WINE_GLAPI *p_glGetnSeparableFilterARB)( GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span );
-        void       (WINE_GLAPI *p_glGetnTexImage)( GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels );
-        void       (WINE_GLAPI *p_glGetnTexImageARB)( GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img );
-        void       (WINE_GLAPI *p_glGetnUniformdv)( GLuint program, GLint location, GLsizei bufSize, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetnUniformdvARB)( GLuint program, GLint location, GLsizei bufSize, GLdouble *params );
-        void       (WINE_GLAPI *p_glGetnUniformfv)( GLuint program, GLint location, GLsizei bufSize, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetnUniformfvARB)( GLuint program, GLint location, GLsizei bufSize, GLfloat *params );
-        void       (WINE_GLAPI *p_glGetnUniformi64vARB)( GLuint program, GLint location, GLsizei bufSize, GLint64 *params );
-        void       (WINE_GLAPI *p_glGetnUniformiv)( GLuint program, GLint location, GLsizei bufSize, GLint *params );
-        void       (WINE_GLAPI *p_glGetnUniformivARB)( GLuint program, GLint location, GLsizei bufSize, GLint *params );
-        void       (WINE_GLAPI *p_glGetnUniformui64vARB)( GLuint program, GLint location, GLsizei bufSize, GLuint64 *params );
-        void       (WINE_GLAPI *p_glGetnUniformuiv)( GLuint program, GLint location, GLsizei bufSize, GLuint *params );
-        void       (WINE_GLAPI *p_glGetnUniformuivARB)( GLuint program, GLint location, GLsizei bufSize, GLuint *params );
-        void       (WINE_GLAPI *p_glGlobalAlphaFactorbSUN)( GLbyte factor );
-        void       (WINE_GLAPI *p_glGlobalAlphaFactordSUN)( GLdouble factor );
-        void       (WINE_GLAPI *p_glGlobalAlphaFactorfSUN)( GLfloat factor );
-        void       (WINE_GLAPI *p_glGlobalAlphaFactoriSUN)( GLint factor );
-        void       (WINE_GLAPI *p_glGlobalAlphaFactorsSUN)( GLshort factor );
-        void       (WINE_GLAPI *p_glGlobalAlphaFactorubSUN)( GLubyte factor );
-        void       (WINE_GLAPI *p_glGlobalAlphaFactoruiSUN)( GLuint factor );
-        void       (WINE_GLAPI *p_glGlobalAlphaFactorusSUN)( GLushort factor );
-        void       (WINE_GLAPI *p_glHintPGI)( GLenum target, GLint mode );
-        void       (WINE_GLAPI *p_glHistogram)( GLenum target, GLsizei width, GLenum internalformat, GLboolean sink );
-        void       (WINE_GLAPI *p_glHistogramEXT)( GLenum target, GLsizei width, GLenum internalformat, GLboolean sink );
-        void       (WINE_GLAPI *p_glIglooInterfaceSGIX)( GLenum pname, const void *params );
-        void       (WINE_GLAPI *p_glImageTransformParameterfHP)( GLenum target, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glImageTransformParameterfvHP)( GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glImageTransformParameteriHP)( GLenum target, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glImageTransformParameterivHP)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glImportMemoryFdEXT)( GLuint memory, GLuint64 size, GLenum handleType, GLint fd );
-        void       (WINE_GLAPI *p_glImportMemoryWin32HandleEXT)( GLuint memory, GLuint64 size, GLenum handleType, void *handle );
-        void       (WINE_GLAPI *p_glImportMemoryWin32NameEXT)( GLuint memory, GLuint64 size, GLenum handleType, const void *name );
-        void       (WINE_GLAPI *p_glImportSemaphoreFdEXT)( GLuint semaphore, GLenum handleType, GLint fd );
-        void       (WINE_GLAPI *p_glImportSemaphoreWin32HandleEXT)( GLuint semaphore, GLenum handleType, void *handle );
-        void       (WINE_GLAPI *p_glImportSemaphoreWin32NameEXT)( GLuint semaphore, GLenum handleType, const void *name );
-        GLsync     (WINE_GLAPI *p_glImportSyncEXT)( GLenum external_sync_type, GLintptr external_sync, GLbitfield flags );
-        void       (WINE_GLAPI *p_glIndexFormatNV)( GLenum type, GLsizei stride );
-        void       (WINE_GLAPI *p_glIndexFuncEXT)( GLenum func, GLclampf ref );
-        void       (WINE_GLAPI *p_glIndexMaterialEXT)( GLenum face, GLenum mode );
-        void       (WINE_GLAPI *p_glIndexPointerEXT)( GLenum type, GLsizei stride, GLsizei count, const void *pointer );
-        void       (WINE_GLAPI *p_glIndexPointerListIBM)( GLenum type, GLint stride, const void **pointer, GLint ptrstride );
-        void       (WINE_GLAPI *p_glIndexxOES)( GLfixed component );
-        void       (WINE_GLAPI *p_glIndexxvOES)( const GLfixed *component );
-        void       (WINE_GLAPI *p_glInsertComponentEXT)( GLuint res, GLuint src, GLuint num );
-        void       (WINE_GLAPI *p_glInsertEventMarkerEXT)( GLsizei length, const GLchar *marker );
-        void       (WINE_GLAPI *p_glInstrumentsBufferSGIX)( GLsizei size, GLint *buffer );
-        void       (WINE_GLAPI *p_glInterpolatePathsNV)( GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight );
-        void       (WINE_GLAPI *p_glInvalidateBufferData)( GLuint buffer );
-        void       (WINE_GLAPI *p_glInvalidateBufferSubData)( GLuint buffer, GLintptr offset, GLsizeiptr length );
-        void       (WINE_GLAPI *p_glInvalidateFramebuffer)( GLenum target, GLsizei numAttachments, const GLenum *attachments );
-        void       (WINE_GLAPI *p_glInvalidateNamedFramebufferData)( GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments );
-        void       (WINE_GLAPI *p_glInvalidateNamedFramebufferSubData)( GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glInvalidateSubFramebuffer)( GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glInvalidateTexImage)( GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glInvalidateTexSubImage)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth );
-        GLboolean  (WINE_GLAPI *p_glIsAsyncMarkerSGIX)( GLuint marker );
-        GLboolean  (WINE_GLAPI *p_glIsBuffer)( GLuint buffer );
-        GLboolean  (WINE_GLAPI *p_glIsBufferARB)( GLuint buffer );
-        GLboolean  (WINE_GLAPI *p_glIsBufferResidentNV)( GLenum target );
-        GLboolean  (WINE_GLAPI *p_glIsCommandListNV)( GLuint list );
-        GLboolean  (WINE_GLAPI *p_glIsEnabledIndexedEXT)( GLenum target, GLuint index );
-        GLboolean  (WINE_GLAPI *p_glIsEnabledi)( GLenum target, GLuint index );
-        GLboolean  (WINE_GLAPI *p_glIsFenceAPPLE)( GLuint fence );
-        GLboolean  (WINE_GLAPI *p_glIsFenceNV)( GLuint fence );
-        GLboolean  (WINE_GLAPI *p_glIsFramebuffer)( GLuint framebuffer );
-        GLboolean  (WINE_GLAPI *p_glIsFramebufferEXT)( GLuint framebuffer );
-        GLboolean  (WINE_GLAPI *p_glIsImageHandleResidentARB)( GLuint64 handle );
-        GLboolean  (WINE_GLAPI *p_glIsImageHandleResidentNV)( GLuint64 handle );
-        GLboolean  (WINE_GLAPI *p_glIsMemoryObjectEXT)( GLuint memoryObject );
-        GLboolean  (WINE_GLAPI *p_glIsNameAMD)( GLenum identifier, GLuint name );
-        GLboolean  (WINE_GLAPI *p_glIsNamedBufferResidentNV)( GLuint buffer );
-        GLboolean  (WINE_GLAPI *p_glIsNamedStringARB)( GLint namelen, const GLchar *name );
-        GLboolean  (WINE_GLAPI *p_glIsObjectBufferATI)( GLuint buffer );
-        GLboolean  (WINE_GLAPI *p_glIsOcclusionQueryNV)( GLuint id );
-        GLboolean  (WINE_GLAPI *p_glIsPathNV)( GLuint path );
-        GLboolean  (WINE_GLAPI *p_glIsPointInFillPathNV)( GLuint path, GLuint mask, GLfloat x, GLfloat y );
-        GLboolean  (WINE_GLAPI *p_glIsPointInStrokePathNV)( GLuint path, GLfloat x, GLfloat y );
-        GLboolean  (WINE_GLAPI *p_glIsProgram)( GLuint program );
-        GLboolean  (WINE_GLAPI *p_glIsProgramARB)( GLuint program );
-        GLboolean  (WINE_GLAPI *p_glIsProgramNV)( GLuint id );
-        GLboolean  (WINE_GLAPI *p_glIsProgramPipeline)( GLuint pipeline );
-        GLboolean  (WINE_GLAPI *p_glIsQuery)( GLuint id );
-        GLboolean  (WINE_GLAPI *p_glIsQueryARB)( GLuint id );
-        GLboolean  (WINE_GLAPI *p_glIsRenderbuffer)( GLuint renderbuffer );
-        GLboolean  (WINE_GLAPI *p_glIsRenderbufferEXT)( GLuint renderbuffer );
-        GLboolean  (WINE_GLAPI *p_glIsSampler)( GLuint sampler );
-        GLboolean  (WINE_GLAPI *p_glIsSemaphoreEXT)( GLuint semaphore );
-        GLboolean  (WINE_GLAPI *p_glIsShader)( GLuint shader );
-        GLboolean  (WINE_GLAPI *p_glIsStateNV)( GLuint state );
-        GLboolean  (WINE_GLAPI *p_glIsSync)( GLsync sync );
-        GLboolean  (WINE_GLAPI *p_glIsTextureEXT)( GLuint texture );
-        GLboolean  (WINE_GLAPI *p_glIsTextureHandleResidentARB)( GLuint64 handle );
-        GLboolean  (WINE_GLAPI *p_glIsTextureHandleResidentNV)( GLuint64 handle );
-        GLboolean  (WINE_GLAPI *p_glIsTransformFeedback)( GLuint id );
-        GLboolean  (WINE_GLAPI *p_glIsTransformFeedbackNV)( GLuint id );
-        GLboolean  (WINE_GLAPI *p_glIsVariantEnabledEXT)( GLuint id, GLenum cap );
-        GLboolean  (WINE_GLAPI *p_glIsVertexArray)( GLuint array );
-        GLboolean  (WINE_GLAPI *p_glIsVertexArrayAPPLE)( GLuint array );
-        GLboolean  (WINE_GLAPI *p_glIsVertexAttribEnabledAPPLE)( GLuint index, GLenum pname );
-        void       (WINE_GLAPI *p_glLGPUCopyImageSubDataNVX)( GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth );
-        void       (WINE_GLAPI *p_glLGPUInterlockNVX)(void);
-        void       (WINE_GLAPI *p_glLGPUNamedBufferSubDataNVX)( GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data );
-        void       (WINE_GLAPI *p_glLabelObjectEXT)( GLenum type, GLuint object, GLsizei length, const GLchar *label );
-        void       (WINE_GLAPI *p_glLightEnviSGIX)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glLightModelxOES)( GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glLightModelxvOES)( GLenum pname, const GLfixed *param );
-        void       (WINE_GLAPI *p_glLightxOES)( GLenum light, GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glLightxvOES)( GLenum light, GLenum pname, const GLfixed *params );
-        void       (WINE_GLAPI *p_glLineWidthxOES)( GLfixed width );
-        void       (WINE_GLAPI *p_glLinkProgram)( GLuint program );
-        void       (WINE_GLAPI *p_glLinkProgramARB)( GLhandleARB programObj );
-        void       (WINE_GLAPI *p_glListDrawCommandsStatesClientNV)( GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count );
-        void       (WINE_GLAPI *p_glListParameterfSGIX)( GLuint list, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glListParameterfvSGIX)( GLuint list, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glListParameteriSGIX)( GLuint list, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glListParameterivSGIX)( GLuint list, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glLoadIdentityDeformationMapSGIX)( GLbitfield mask );
-        void       (WINE_GLAPI *p_glLoadMatrixxOES)( const GLfixed *m );
-        void       (WINE_GLAPI *p_glLoadProgramNV)( GLenum target, GLuint id, GLsizei len, const GLubyte *program );
-        void       (WINE_GLAPI *p_glLoadTransposeMatrixd)( const GLdouble *m );
-        void       (WINE_GLAPI *p_glLoadTransposeMatrixdARB)( const GLdouble *m );
-        void       (WINE_GLAPI *p_glLoadTransposeMatrixf)( const GLfloat *m );
-        void       (WINE_GLAPI *p_glLoadTransposeMatrixfARB)( const GLfloat *m );
-        void       (WINE_GLAPI *p_glLoadTransposeMatrixxOES)( const GLfixed *m );
-        void       (WINE_GLAPI *p_glLockArraysEXT)( GLint first, GLsizei count );
-        void       (WINE_GLAPI *p_glMTexCoord2fSGIS)( GLenum target, GLfloat s, GLfloat t );
-        void       (WINE_GLAPI *p_glMTexCoord2fvSGIS)( GLenum target, GLfloat * v );
-        void       (WINE_GLAPI *p_glMakeBufferNonResidentNV)( GLenum target );
-        void       (WINE_GLAPI *p_glMakeBufferResidentNV)( GLenum target, GLenum access );
-        void       (WINE_GLAPI *p_glMakeImageHandleNonResidentARB)( GLuint64 handle );
-        void       (WINE_GLAPI *p_glMakeImageHandleNonResidentNV)( GLuint64 handle );
-        void       (WINE_GLAPI *p_glMakeImageHandleResidentARB)( GLuint64 handle, GLenum access );
-        void       (WINE_GLAPI *p_glMakeImageHandleResidentNV)( GLuint64 handle, GLenum access );
-        void       (WINE_GLAPI *p_glMakeNamedBufferNonResidentNV)( GLuint buffer );
-        void       (WINE_GLAPI *p_glMakeNamedBufferResidentNV)( GLuint buffer, GLenum access );
-        void       (WINE_GLAPI *p_glMakeTextureHandleNonResidentARB)( GLuint64 handle );
-        void       (WINE_GLAPI *p_glMakeTextureHandleNonResidentNV)( GLuint64 handle );
-        void       (WINE_GLAPI *p_glMakeTextureHandleResidentARB)( GLuint64 handle );
-        void       (WINE_GLAPI *p_glMakeTextureHandleResidentNV)( GLuint64 handle );
-        void       (WINE_GLAPI *p_glMap1xOES)( GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points );
-        void       (WINE_GLAPI *p_glMap2xOES)( GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points );
-        void *     (WINE_GLAPI *p_glMapBuffer)( GLenum target, GLenum access );
-        void *     (WINE_GLAPI *p_glMapBufferARB)( GLenum target, GLenum access );
-        void *     (WINE_GLAPI *p_glMapBufferRange)( GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access );
-        void       (WINE_GLAPI *p_glMapControlPointsNV)( GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points );
-        void       (WINE_GLAPI *p_glMapGrid1xOES)( GLint n, GLfixed u1, GLfixed u2 );
-        void       (WINE_GLAPI *p_glMapGrid2xOES)( GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2 );
-        void *     (WINE_GLAPI *p_glMapNamedBuffer)( GLuint buffer, GLenum access );
-        void *     (WINE_GLAPI *p_glMapNamedBufferEXT)( GLuint buffer, GLenum access );
-        void *     (WINE_GLAPI *p_glMapNamedBufferRange)( GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access );
-        void *     (WINE_GLAPI *p_glMapNamedBufferRangeEXT)( GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access );
-        void *     (WINE_GLAPI *p_glMapObjectBufferATI)( GLuint buffer );
-        void       (WINE_GLAPI *p_glMapParameterfvNV)( GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glMapParameterivNV)( GLenum target, GLenum pname, const GLint *params );
-        void *     (WINE_GLAPI *p_glMapTexture2DINTEL)( GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout );
-        void       (WINE_GLAPI *p_glMapVertexAttrib1dAPPLE)( GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points );
-        void       (WINE_GLAPI *p_glMapVertexAttrib1fAPPLE)( GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points );
-        void       (WINE_GLAPI *p_glMapVertexAttrib2dAPPLE)( GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points );
-        void       (WINE_GLAPI *p_glMapVertexAttrib2fAPPLE)( GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points );
-        void       (WINE_GLAPI *p_glMaterialxOES)( GLenum face, GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glMaterialxvOES)( GLenum face, GLenum pname, const GLfixed *param );
-        void       (WINE_GLAPI *p_glMatrixFrustumEXT)( GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar );
-        void       (WINE_GLAPI *p_glMatrixIndexPointerARB)( GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glMatrixIndexubvARB)( GLint size, const GLubyte *indices );
-        void       (WINE_GLAPI *p_glMatrixIndexuivARB)( GLint size, const GLuint *indices );
-        void       (WINE_GLAPI *p_glMatrixIndexusvARB)( GLint size, const GLushort *indices );
-        void       (WINE_GLAPI *p_glMatrixLoad3x2fNV)( GLenum matrixMode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixLoad3x3fNV)( GLenum matrixMode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixLoadIdentityEXT)( GLenum mode );
-        void       (WINE_GLAPI *p_glMatrixLoadTranspose3x3fNV)( GLenum matrixMode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixLoadTransposedEXT)( GLenum mode, const GLdouble *m );
-        void       (WINE_GLAPI *p_glMatrixLoadTransposefEXT)( GLenum mode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixLoaddEXT)( GLenum mode, const GLdouble *m );
-        void       (WINE_GLAPI *p_glMatrixLoadfEXT)( GLenum mode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixMult3x2fNV)( GLenum matrixMode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixMult3x3fNV)( GLenum matrixMode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixMultTranspose3x3fNV)( GLenum matrixMode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixMultTransposedEXT)( GLenum mode, const GLdouble *m );
-        void       (WINE_GLAPI *p_glMatrixMultTransposefEXT)( GLenum mode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixMultdEXT)( GLenum mode, const GLdouble *m );
-        void       (WINE_GLAPI *p_glMatrixMultfEXT)( GLenum mode, const GLfloat *m );
-        void       (WINE_GLAPI *p_glMatrixOrthoEXT)( GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar );
-        void       (WINE_GLAPI *p_glMatrixPopEXT)( GLenum mode );
-        void       (WINE_GLAPI *p_glMatrixPushEXT)( GLenum mode );
-        void       (WINE_GLAPI *p_glMatrixRotatedEXT)( GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glMatrixRotatefEXT)( GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glMatrixScaledEXT)( GLenum mode, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glMatrixScalefEXT)( GLenum mode, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glMatrixTranslatedEXT)( GLenum mode, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glMatrixTranslatefEXT)( GLenum mode, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glMaxShaderCompilerThreadsARB)( GLuint count );
-        void       (WINE_GLAPI *p_glMaxShaderCompilerThreadsKHR)( GLuint count );
-        void       (WINE_GLAPI *p_glMemoryBarrier)( GLbitfield barriers );
-        void       (WINE_GLAPI *p_glMemoryBarrierByRegion)( GLbitfield barriers );
-        void       (WINE_GLAPI *p_glMemoryBarrierEXT)( GLbitfield barriers );
-        void       (WINE_GLAPI *p_glMemoryObjectParameterivEXT)( GLuint memoryObject, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glMinSampleShading)( GLfloat value );
-        void       (WINE_GLAPI *p_glMinSampleShadingARB)( GLfloat value );
-        void       (WINE_GLAPI *p_glMinmax)( GLenum target, GLenum internalformat, GLboolean sink );
-        void       (WINE_GLAPI *p_glMinmaxEXT)( GLenum target, GLenum internalformat, GLboolean sink );
-        void       (WINE_GLAPI *p_glMultMatrixxOES)( const GLfixed *m );
-        void       (WINE_GLAPI *p_glMultTransposeMatrixd)( const GLdouble *m );
-        void       (WINE_GLAPI *p_glMultTransposeMatrixdARB)( const GLdouble *m );
-        void       (WINE_GLAPI *p_glMultTransposeMatrixf)( const GLfloat *m );
-        void       (WINE_GLAPI *p_glMultTransposeMatrixfARB)( const GLfloat *m );
-        void       (WINE_GLAPI *p_glMultTransposeMatrixxOES)( const GLfixed *m );
-        void       (WINE_GLAPI *p_glMultiDrawArrays)( GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount );
-        void       (WINE_GLAPI *p_glMultiDrawArraysEXT)( GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount );
-        void       (WINE_GLAPI *p_glMultiDrawArraysIndirect)( GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawArraysIndirectAMD)( GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawArraysIndirectBindlessCountNV)( GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount );
-        void       (WINE_GLAPI *p_glMultiDrawArraysIndirectBindlessNV)( GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount );
-        void       (WINE_GLAPI *p_glMultiDrawArraysIndirectCount)( GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawArraysIndirectCountARB)( GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawElementArrayAPPLE)( GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount );
-        void       (WINE_GLAPI *p_glMultiDrawElements)( GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount );
-        void       (WINE_GLAPI *p_glMultiDrawElementsBaseVertex)( GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex );
-        void       (WINE_GLAPI *p_glMultiDrawElementsEXT)( GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount );
-        void       (WINE_GLAPI *p_glMultiDrawElementsIndirect)( GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawElementsIndirectAMD)( GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawElementsIndirectBindlessCountNV)( GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount );
-        void       (WINE_GLAPI *p_glMultiDrawElementsIndirectBindlessNV)( GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount );
-        void       (WINE_GLAPI *p_glMultiDrawElementsIndirectCount)( GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawElementsIndirectCountARB)( GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawMeshTasksIndirectCountNV)( GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawMeshTasksIndirectNV)( GLintptr indirect, GLsizei drawcount, GLsizei stride );
-        void       (WINE_GLAPI *p_glMultiDrawRangeElementArrayAPPLE)( GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount );
-        void       (WINE_GLAPI *p_glMultiModeDrawArraysIBM)( const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride );
-        void       (WINE_GLAPI *p_glMultiModeDrawElementsIBM)( const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride );
-        void       (WINE_GLAPI *p_glMultiTexBufferEXT)( GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer );
-        void       (WINE_GLAPI *p_glMultiTexCoord1bOES)( GLenum texture, GLbyte s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1bvOES)( GLenum texture, const GLbyte *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoord1d)( GLenum target, GLdouble s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1dARB)( GLenum target, GLdouble s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1dSGIS)( GLenum target, GLdouble s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1dv)( GLenum target, const GLdouble *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1dvARB)( GLenum target, const GLdouble *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1dvSGIS)( GLenum target, GLdouble * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1f)( GLenum target, GLfloat s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1fARB)( GLenum target, GLfloat s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1fSGIS)( GLenum target, GLfloat s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1fv)( GLenum target, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1fvARB)( GLenum target, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1fvSGIS)( GLenum target, const GLfloat * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1hNV)( GLenum target, GLhalfNV s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1hvNV)( GLenum target, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1i)( GLenum target, GLint s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1iARB)( GLenum target, GLint s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1iSGIS)( GLenum target, GLint s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1iv)( GLenum target, const GLint *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1ivARB)( GLenum target, const GLint *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1ivSGIS)( GLenum target, GLint * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1s)( GLenum target, GLshort s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1sARB)( GLenum target, GLshort s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1sSGIS)( GLenum target, GLshort s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1sv)( GLenum target, const GLshort *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1svARB)( GLenum target, const GLshort *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1svSGIS)( GLenum target, GLshort * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord1xOES)( GLenum texture, GLfixed s );
-        void       (WINE_GLAPI *p_glMultiTexCoord1xvOES)( GLenum texture, const GLfixed *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoord2bOES)( GLenum texture, GLbyte s, GLbyte t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2bvOES)( GLenum texture, const GLbyte *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoord2d)( GLenum target, GLdouble s, GLdouble t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2dARB)( GLenum target, GLdouble s, GLdouble t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2dSGIS)( GLenum target, GLdouble s, GLdouble t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2dv)( GLenum target, const GLdouble *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2dvARB)( GLenum target, const GLdouble *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2dvSGIS)( GLenum target, GLdouble * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2f)( GLenum target, GLfloat s, GLfloat t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2fARB)( GLenum target, GLfloat s, GLfloat t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2fSGIS)( GLenum target, GLfloat s, GLfloat t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2fv)( GLenum target, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2fvARB)( GLenum target, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2fvSGIS)( GLenum target, GLfloat * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2hNV)( GLenum target, GLhalfNV s, GLhalfNV t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2hvNV)( GLenum target, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2i)( GLenum target, GLint s, GLint t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2iARB)( GLenum target, GLint s, GLint t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2iSGIS)( GLenum target, GLint s, GLint t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2iv)( GLenum target, const GLint *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2ivARB)( GLenum target, const GLint *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2ivSGIS)( GLenum target, GLint * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2s)( GLenum target, GLshort s, GLshort t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2sARB)( GLenum target, GLshort s, GLshort t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2sSGIS)( GLenum target, GLshort s, GLshort t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2sv)( GLenum target, const GLshort *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2svARB)( GLenum target, const GLshort *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2svSGIS)( GLenum target, GLshort * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord2xOES)( GLenum texture, GLfixed s, GLfixed t );
-        void       (WINE_GLAPI *p_glMultiTexCoord2xvOES)( GLenum texture, const GLfixed *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoord3bOES)( GLenum texture, GLbyte s, GLbyte t, GLbyte r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3bvOES)( GLenum texture, const GLbyte *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoord3d)( GLenum target, GLdouble s, GLdouble t, GLdouble r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3dARB)( GLenum target, GLdouble s, GLdouble t, GLdouble r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3dSGIS)( GLenum target, GLdouble s, GLdouble t, GLdouble r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3dv)( GLenum target, const GLdouble *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3dvARB)( GLenum target, const GLdouble *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3dvSGIS)( GLenum target, GLdouble * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3f)( GLenum target, GLfloat s, GLfloat t, GLfloat r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3fARB)( GLenum target, GLfloat s, GLfloat t, GLfloat r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3fSGIS)( GLenum target, GLfloat s, GLfloat t, GLfloat r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3fv)( GLenum target, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3fvARB)( GLenum target, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3fvSGIS)( GLenum target, GLfloat * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3hNV)( GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3hvNV)( GLenum target, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3i)( GLenum target, GLint s, GLint t, GLint r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3iARB)( GLenum target, GLint s, GLint t, GLint r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3iSGIS)( GLenum target, GLint s, GLint t, GLint r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3iv)( GLenum target, const GLint *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3ivARB)( GLenum target, const GLint *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3ivSGIS)( GLenum target, GLint * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3s)( GLenum target, GLshort s, GLshort t, GLshort r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3sARB)( GLenum target, GLshort s, GLshort t, GLshort r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3sSGIS)( GLenum target, GLshort s, GLshort t, GLshort r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3sv)( GLenum target, const GLshort *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3svARB)( GLenum target, const GLshort *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3svSGIS)( GLenum target, GLshort * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord3xOES)( GLenum texture, GLfixed s, GLfixed t, GLfixed r );
-        void       (WINE_GLAPI *p_glMultiTexCoord3xvOES)( GLenum texture, const GLfixed *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoord4bOES)( GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4bvOES)( GLenum texture, const GLbyte *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoord4d)( GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4dARB)( GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4dSGIS)( GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4dv)( GLenum target, const GLdouble *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4dvARB)( GLenum target, const GLdouble *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4dvSGIS)( GLenum target, GLdouble * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4f)( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4fARB)( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4fSGIS)( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4fv)( GLenum target, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4fvARB)( GLenum target, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4fvSGIS)( GLenum target, GLfloat * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4hNV)( GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4hvNV)( GLenum target, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4i)( GLenum target, GLint s, GLint t, GLint r, GLint q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4iARB)( GLenum target, GLint s, GLint t, GLint r, GLint q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4iSGIS)( GLenum target, GLint s, GLint t, GLint r, GLint q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4iv)( GLenum target, const GLint *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4ivARB)( GLenum target, const GLint *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4ivSGIS)( GLenum target, GLint * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4s)( GLenum target, GLshort s, GLshort t, GLshort r, GLshort q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4sARB)( GLenum target, GLshort s, GLshort t, GLshort r, GLshort q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4sSGIS)( GLenum target, GLshort s, GLshort t, GLshort r, GLshort q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4sv)( GLenum target, const GLshort *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4svARB)( GLenum target, const GLshort *v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4svSGIS)( GLenum target, GLshort * v );
-        void       (WINE_GLAPI *p_glMultiTexCoord4xOES)( GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q );
-        void       (WINE_GLAPI *p_glMultiTexCoord4xvOES)( GLenum texture, const GLfixed *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoordP1ui)( GLenum texture, GLenum type, GLuint coords );
-        void       (WINE_GLAPI *p_glMultiTexCoordP1uiv)( GLenum texture, GLenum type, const GLuint *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoordP2ui)( GLenum texture, GLenum type, GLuint coords );
-        void       (WINE_GLAPI *p_glMultiTexCoordP2uiv)( GLenum texture, GLenum type, const GLuint *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoordP3ui)( GLenum texture, GLenum type, GLuint coords );
-        void       (WINE_GLAPI *p_glMultiTexCoordP3uiv)( GLenum texture, GLenum type, const GLuint *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoordP4ui)( GLenum texture, GLenum type, GLuint coords );
-        void       (WINE_GLAPI *p_glMultiTexCoordP4uiv)( GLenum texture, GLenum type, const GLuint *coords );
-        void       (WINE_GLAPI *p_glMultiTexCoordPointerEXT)( GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glMultiTexCoordPointerSGIS)( GLenum target, GLint size, GLenum type, GLsizei stride, GLvoid * pointer );
-        void       (WINE_GLAPI *p_glMultiTexEnvfEXT)( GLenum texunit, GLenum target, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glMultiTexEnvfvEXT)( GLenum texunit, GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glMultiTexEnviEXT)( GLenum texunit, GLenum target, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glMultiTexEnvivEXT)( GLenum texunit, GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glMultiTexGendEXT)( GLenum texunit, GLenum coord, GLenum pname, GLdouble param );
-        void       (WINE_GLAPI *p_glMultiTexGendvEXT)( GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params );
-        void       (WINE_GLAPI *p_glMultiTexGenfEXT)( GLenum texunit, GLenum coord, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glMultiTexGenfvEXT)( GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glMultiTexGeniEXT)( GLenum texunit, GLenum coord, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glMultiTexGenivEXT)( GLenum texunit, GLenum coord, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glMultiTexImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glMultiTexImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glMultiTexImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glMultiTexParameterIivEXT)( GLenum texunit, GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glMultiTexParameterIuivEXT)( GLenum texunit, GLenum target, GLenum pname, const GLuint *params );
-        void       (WINE_GLAPI *p_glMultiTexParameterfEXT)( GLenum texunit, GLenum target, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glMultiTexParameterfvEXT)( GLenum texunit, GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glMultiTexParameteriEXT)( GLenum texunit, GLenum target, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glMultiTexParameterivEXT)( GLenum texunit, GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glMultiTexRenderbufferEXT)( GLenum texunit, GLenum target, GLuint renderbuffer );
-        void       (WINE_GLAPI *p_glMultiTexSubImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glMultiTexSubImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glMultiTexSubImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glMulticastBarrierNV)(void);
-        void       (WINE_GLAPI *p_glMulticastBlitFramebufferNV)( GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter );
-        void       (WINE_GLAPI *p_glMulticastBufferSubDataNV)( GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data );
-        void       (WINE_GLAPI *p_glMulticastCopyBufferSubDataNV)( GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glMulticastCopyImageSubDataNV)( GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth );
-        void       (WINE_GLAPI *p_glMulticastFramebufferSampleLocationsfvNV)( GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMulticastGetQueryObjecti64vNV)( GLuint gpu, GLuint id, GLenum pname, GLint64 *params );
-        void       (WINE_GLAPI *p_glMulticastGetQueryObjectivNV)( GLuint gpu, GLuint id, GLenum pname, GLint *params );
-        void       (WINE_GLAPI *p_glMulticastGetQueryObjectui64vNV)( GLuint gpu, GLuint id, GLenum pname, GLuint64 *params );
-        void       (WINE_GLAPI *p_glMulticastGetQueryObjectuivNV)( GLuint gpu, GLuint id, GLenum pname, GLuint *params );
-        void       (WINE_GLAPI *p_glMulticastScissorArrayvNVX)( GLuint gpu, GLuint first, GLsizei count, const GLint *v );
-        void       (WINE_GLAPI *p_glMulticastViewportArrayvNVX)( GLuint gpu, GLuint first, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glMulticastViewportPositionWScaleNVX)( GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff );
-        void       (WINE_GLAPI *p_glMulticastWaitSyncNV)( GLuint signalGpu, GLbitfield waitGpuMask );
-        void       (WINE_GLAPI *p_glNamedBufferAttachMemoryNV)( GLuint buffer, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glNamedBufferData)( GLuint buffer, GLsizeiptr size, const void *data, GLenum usage );
-        void       (WINE_GLAPI *p_glNamedBufferDataEXT)( GLuint buffer, GLsizeiptr size, const void *data, GLenum usage );
-        void       (WINE_GLAPI *p_glNamedBufferPageCommitmentARB)( GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit );
-        void       (WINE_GLAPI *p_glNamedBufferPageCommitmentEXT)( GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit );
-        void       (WINE_GLAPI *p_glNamedBufferStorage)( GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags );
-        void       (WINE_GLAPI *p_glNamedBufferStorageEXT)( GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags );
-        void       (WINE_GLAPI *p_glNamedBufferStorageExternalEXT)( GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags );
-        void       (WINE_GLAPI *p_glNamedBufferStorageMemEXT)( GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glNamedBufferSubData)( GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data );
-        void       (WINE_GLAPI *p_glNamedBufferSubDataEXT)( GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data );
-        void       (WINE_GLAPI *p_glNamedCopyBufferSubDataEXT)( GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glNamedFramebufferDrawBuffer)( GLuint framebuffer, GLenum buf );
-        void       (WINE_GLAPI *p_glNamedFramebufferDrawBuffers)( GLuint framebuffer, GLsizei n, const GLenum *bufs );
-        void       (WINE_GLAPI *p_glNamedFramebufferParameteri)( GLuint framebuffer, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glNamedFramebufferParameteriEXT)( GLuint framebuffer, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glNamedFramebufferReadBuffer)( GLuint framebuffer, GLenum src );
-        void       (WINE_GLAPI *p_glNamedFramebufferRenderbuffer)( GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer );
-        void       (WINE_GLAPI *p_glNamedFramebufferRenderbufferEXT)( GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer );
-        void       (WINE_GLAPI *p_glNamedFramebufferSampleLocationsfvARB)( GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glNamedFramebufferSampleLocationsfvNV)( GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glNamedFramebufferSamplePositionsfvAMD)( GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values );
-        void       (WINE_GLAPI *p_glNamedFramebufferTexture)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glNamedFramebufferTexture1DEXT)( GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glNamedFramebufferTexture2DEXT)( GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glNamedFramebufferTexture3DEXT)( GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset );
-        void       (WINE_GLAPI *p_glNamedFramebufferTextureEXT)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glNamedFramebufferTextureFaceEXT)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face );
-        void       (WINE_GLAPI *p_glNamedFramebufferTextureLayer)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer );
-        void       (WINE_GLAPI *p_glNamedFramebufferTextureLayerEXT)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParameter4dEXT)( GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParameter4dvEXT)( GLuint program, GLenum target, GLuint index, const GLdouble *params );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParameter4fEXT)( GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParameter4fvEXT)( GLuint program, GLenum target, GLuint index, const GLfloat *params );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParameterI4iEXT)( GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParameterI4ivEXT)( GLuint program, GLenum target, GLuint index, const GLint *params );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParameterI4uiEXT)( GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParameterI4uivEXT)( GLuint program, GLenum target, GLuint index, const GLuint *params );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParameters4fvEXT)( GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParametersI4ivEXT)( GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params );
-        void       (WINE_GLAPI *p_glNamedProgramLocalParametersI4uivEXT)( GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params );
-        void       (WINE_GLAPI *p_glNamedProgramStringEXT)( GLuint program, GLenum target, GLenum format, GLsizei len, const void *string );
-        void       (WINE_GLAPI *p_glNamedRenderbufferStorage)( GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glNamedRenderbufferStorageEXT)( GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glNamedRenderbufferStorageMultisample)( GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glNamedRenderbufferStorageMultisampleAdvancedAMD)( GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glNamedRenderbufferStorageMultisampleCoverageEXT)( GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glNamedRenderbufferStorageMultisampleEXT)( GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glNamedStringARB)( GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string );
-        GLuint     (WINE_GLAPI *p_glNewBufferRegion)( GLenum type );
-        GLuint     (WINE_GLAPI *p_glNewObjectBufferATI)( GLsizei size, const void *pointer, GLenum usage );
-        void       (WINE_GLAPI *p_glNormal3fVertex3fSUN)( GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glNormal3fVertex3fvSUN)( const GLfloat *n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glNormal3hNV)( GLhalfNV nx, GLhalfNV ny, GLhalfNV nz );
-        void       (WINE_GLAPI *p_glNormal3hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glNormal3xOES)( GLfixed nx, GLfixed ny, GLfixed nz );
-        void       (WINE_GLAPI *p_glNormal3xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glNormalFormatNV)( GLenum type, GLsizei stride );
-        void       (WINE_GLAPI *p_glNormalP3ui)( GLenum type, GLuint coords );
-        void       (WINE_GLAPI *p_glNormalP3uiv)( GLenum type, const GLuint *coords );
-        void       (WINE_GLAPI *p_glNormalPointerEXT)( GLenum type, GLsizei stride, GLsizei count, const void *pointer );
-        void       (WINE_GLAPI *p_glNormalPointerListIBM)( GLenum type, GLint stride, const void **pointer, GLint ptrstride );
-        void       (WINE_GLAPI *p_glNormalPointervINTEL)( GLenum type, const void **pointer );
-        void       (WINE_GLAPI *p_glNormalStream3bATI)( GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz );
-        void       (WINE_GLAPI *p_glNormalStream3bvATI)( GLenum stream, const GLbyte *coords );
-        void       (WINE_GLAPI *p_glNormalStream3dATI)( GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz );
-        void       (WINE_GLAPI *p_glNormalStream3dvATI)( GLenum stream, const GLdouble *coords );
-        void       (WINE_GLAPI *p_glNormalStream3fATI)( GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz );
-        void       (WINE_GLAPI *p_glNormalStream3fvATI)( GLenum stream, const GLfloat *coords );
-        void       (WINE_GLAPI *p_glNormalStream3iATI)( GLenum stream, GLint nx, GLint ny, GLint nz );
-        void       (WINE_GLAPI *p_glNormalStream3ivATI)( GLenum stream, const GLint *coords );
-        void       (WINE_GLAPI *p_glNormalStream3sATI)( GLenum stream, GLshort nx, GLshort ny, GLshort nz );
-        void       (WINE_GLAPI *p_glNormalStream3svATI)( GLenum stream, const GLshort *coords );
-        void       (WINE_GLAPI *p_glObjectLabel)( GLenum identifier, GLuint name, GLsizei length, const GLchar *label );
-        void       (WINE_GLAPI *p_glObjectPtrLabel)( const void *ptr, GLsizei length, const GLchar *label );
-        GLenum     (WINE_GLAPI *p_glObjectPurgeableAPPLE)( GLenum objectType, GLuint name, GLenum option );
-        GLenum     (WINE_GLAPI *p_glObjectUnpurgeableAPPLE)( GLenum objectType, GLuint name, GLenum option );
-        void       (WINE_GLAPI *p_glOrthofOES)( GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f );
-        void       (WINE_GLAPI *p_glOrthoxOES)( GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f );
-        void       (WINE_GLAPI *p_glPNTrianglesfATI)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glPNTrianglesiATI)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glPassTexCoordATI)( GLuint dst, GLuint coord, GLenum swizzle );
-        void       (WINE_GLAPI *p_glPassThroughxOES)( GLfixed token );
-        void       (WINE_GLAPI *p_glPatchParameterfv)( GLenum pname, const GLfloat *values );
-        void       (WINE_GLAPI *p_glPatchParameteri)( GLenum pname, GLint value );
-        void       (WINE_GLAPI *p_glPathColorGenNV)( GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs );
-        void       (WINE_GLAPI *p_glPathCommandsNV)( GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords );
-        void       (WINE_GLAPI *p_glPathCoordsNV)( GLuint path, GLsizei numCoords, GLenum coordType, const void *coords );
-        void       (WINE_GLAPI *p_glPathCoverDepthFuncNV)( GLenum func );
-        void       (WINE_GLAPI *p_glPathDashArrayNV)( GLuint path, GLsizei dashCount, const GLfloat *dashArray );
-        void       (WINE_GLAPI *p_glPathFogGenNV)( GLenum genMode );
-        GLenum     (WINE_GLAPI *p_glPathGlyphIndexArrayNV)( GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale );
-        GLenum     (WINE_GLAPI *p_glPathGlyphIndexRangeNV)( GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2] );
-        void       (WINE_GLAPI *p_glPathGlyphRangeNV)( GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale );
-        void       (WINE_GLAPI *p_glPathGlyphsNV)( GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale );
-        GLenum     (WINE_GLAPI *p_glPathMemoryGlyphIndexArrayNV)( GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale );
-        void       (WINE_GLAPI *p_glPathParameterfNV)( GLuint path, GLenum pname, GLfloat value );
-        void       (WINE_GLAPI *p_glPathParameterfvNV)( GLuint path, GLenum pname, const GLfloat *value );
-        void       (WINE_GLAPI *p_glPathParameteriNV)( GLuint path, GLenum pname, GLint value );
-        void       (WINE_GLAPI *p_glPathParameterivNV)( GLuint path, GLenum pname, const GLint *value );
-        void       (WINE_GLAPI *p_glPathStencilDepthOffsetNV)( GLfloat factor, GLfloat units );
-        void       (WINE_GLAPI *p_glPathStencilFuncNV)( GLenum func, GLint ref, GLuint mask );
-        void       (WINE_GLAPI *p_glPathStringNV)( GLuint path, GLenum format, GLsizei length, const void *pathString );
-        void       (WINE_GLAPI *p_glPathSubCommandsNV)( GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords );
-        void       (WINE_GLAPI *p_glPathSubCoordsNV)( GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords );
-        void       (WINE_GLAPI *p_glPathTexGenNV)( GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs );
-        void       (WINE_GLAPI *p_glPauseTransformFeedback)(void);
-        void       (WINE_GLAPI *p_glPauseTransformFeedbackNV)(void);
-        void       (WINE_GLAPI *p_glPixelDataRangeNV)( GLenum target, GLsizei length, const void *pointer );
-        void       (WINE_GLAPI *p_glPixelMapx)( GLenum map, GLint size, const GLfixed *values );
-        void       (WINE_GLAPI *p_glPixelStorex)( GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glPixelTexGenParameterfSGIS)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glPixelTexGenParameterfvSGIS)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glPixelTexGenParameteriSGIS)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glPixelTexGenParameterivSGIS)( GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glPixelTexGenSGIX)( GLenum mode );
-        void       (WINE_GLAPI *p_glPixelTransferxOES)( GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glPixelTransformParameterfEXT)( GLenum target, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glPixelTransformParameterfvEXT)( GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glPixelTransformParameteriEXT)( GLenum target, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glPixelTransformParameterivEXT)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glPixelZoomxOES)( GLfixed xfactor, GLfixed yfactor );
-        GLboolean  (WINE_GLAPI *p_glPointAlongPathNV)( GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY );
-        void       (WINE_GLAPI *p_glPointParameterf)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glPointParameterfARB)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glPointParameterfEXT)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glPointParameterfSGIS)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glPointParameterfv)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glPointParameterfvARB)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glPointParameterfvEXT)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glPointParameterfvSGIS)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glPointParameteri)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glPointParameteriNV)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glPointParameteriv)( GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glPointParameterivNV)( GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glPointParameterxvOES)( GLenum pname, const GLfixed *params );
-        void       (WINE_GLAPI *p_glPointSizexOES)( GLfixed size );
-        GLint      (WINE_GLAPI *p_glPollAsyncSGIX)( GLuint *markerp );
-        GLint      (WINE_GLAPI *p_glPollInstrumentsSGIX)( GLint *marker_p );
-        void       (WINE_GLAPI *p_glPolygonOffsetClamp)( GLfloat factor, GLfloat units, GLfloat clamp );
-        void       (WINE_GLAPI *p_glPolygonOffsetClampEXT)( GLfloat factor, GLfloat units, GLfloat clamp );
-        void       (WINE_GLAPI *p_glPolygonOffsetEXT)( GLfloat factor, GLfloat bias );
-        void       (WINE_GLAPI *p_glPolygonOffsetxOES)( GLfixed factor, GLfixed units );
-        void       (WINE_GLAPI *p_glPopDebugGroup)(void);
-        void       (WINE_GLAPI *p_glPopGroupMarkerEXT)(void);
-        void       (WINE_GLAPI *p_glPresentFrameDualFillNV)( GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3 );
-        void       (WINE_GLAPI *p_glPresentFrameKeyedNV)( GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1 );
-        void       (WINE_GLAPI *p_glPrimitiveBoundingBoxARB)( GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW );
-        void       (WINE_GLAPI *p_glPrimitiveRestartIndex)( GLuint index );
-        void       (WINE_GLAPI *p_glPrimitiveRestartIndexNV)( GLuint index );
-        void       (WINE_GLAPI *p_glPrimitiveRestartNV)(void);
-        void       (WINE_GLAPI *p_glPrioritizeTexturesEXT)( GLsizei n, const GLuint *textures, const GLclampf *priorities );
-        void       (WINE_GLAPI *p_glPrioritizeTexturesxOES)( GLsizei n, const GLuint *textures, const GLfixed *priorities );
-        void       (WINE_GLAPI *p_glProgramBinary)( GLuint program, GLenum binaryFormat, const void *binary, GLsizei length );
-        void       (WINE_GLAPI *p_glProgramBufferParametersIivNV)( GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params );
-        void       (WINE_GLAPI *p_glProgramBufferParametersIuivNV)( GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params );
-        void       (WINE_GLAPI *p_glProgramBufferParametersfvNV)( GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params );
-        void       (WINE_GLAPI *p_glProgramEnvParameter4dARB)( GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glProgramEnvParameter4dvARB)( GLenum target, GLuint index, const GLdouble *params );
-        void       (WINE_GLAPI *p_glProgramEnvParameter4fARB)( GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glProgramEnvParameter4fvARB)( GLenum target, GLuint index, const GLfloat *params );
-        void       (WINE_GLAPI *p_glProgramEnvParameterI4iNV)( GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w );
-        void       (WINE_GLAPI *p_glProgramEnvParameterI4ivNV)( GLenum target, GLuint index, const GLint *params );
-        void       (WINE_GLAPI *p_glProgramEnvParameterI4uiNV)( GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
-        void       (WINE_GLAPI *p_glProgramEnvParameterI4uivNV)( GLenum target, GLuint index, const GLuint *params );
-        void       (WINE_GLAPI *p_glProgramEnvParameters4fvEXT)( GLenum target, GLuint index, GLsizei count, const GLfloat *params );
-        void       (WINE_GLAPI *p_glProgramEnvParametersI4ivNV)( GLenum target, GLuint index, GLsizei count, const GLint *params );
-        void       (WINE_GLAPI *p_glProgramEnvParametersI4uivNV)( GLenum target, GLuint index, GLsizei count, const GLuint *params );
-        void       (WINE_GLAPI *p_glProgramLocalParameter4dARB)( GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glProgramLocalParameter4dvARB)( GLenum target, GLuint index, const GLdouble *params );
-        void       (WINE_GLAPI *p_glProgramLocalParameter4fARB)( GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glProgramLocalParameter4fvARB)( GLenum target, GLuint index, const GLfloat *params );
-        void       (WINE_GLAPI *p_glProgramLocalParameterI4iNV)( GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w );
-        void       (WINE_GLAPI *p_glProgramLocalParameterI4ivNV)( GLenum target, GLuint index, const GLint *params );
-        void       (WINE_GLAPI *p_glProgramLocalParameterI4uiNV)( GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
-        void       (WINE_GLAPI *p_glProgramLocalParameterI4uivNV)( GLenum target, GLuint index, const GLuint *params );
-        void       (WINE_GLAPI *p_glProgramLocalParameters4fvEXT)( GLenum target, GLuint index, GLsizei count, const GLfloat *params );
-        void       (WINE_GLAPI *p_glProgramLocalParametersI4ivNV)( GLenum target, GLuint index, GLsizei count, const GLint *params );
-        void       (WINE_GLAPI *p_glProgramLocalParametersI4uivNV)( GLenum target, GLuint index, GLsizei count, const GLuint *params );
-        void       (WINE_GLAPI *p_glProgramNamedParameter4dNV)( GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glProgramNamedParameter4dvNV)( GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v );
-        void       (WINE_GLAPI *p_glProgramNamedParameter4fNV)( GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glProgramNamedParameter4fvNV)( GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v );
-        void       (WINE_GLAPI *p_glProgramParameter4dNV)( GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glProgramParameter4dvNV)( GLenum target, GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glProgramParameter4fNV)( GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glProgramParameter4fvNV)( GLenum target, GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glProgramParameteri)( GLuint program, GLenum pname, GLint value );
-        void       (WINE_GLAPI *p_glProgramParameteriARB)( GLuint program, GLenum pname, GLint value );
-        void       (WINE_GLAPI *p_glProgramParameteriEXT)( GLuint program, GLenum pname, GLint value );
-        void       (WINE_GLAPI *p_glProgramParameters4dvNV)( GLenum target, GLuint index, GLsizei count, const GLdouble *v );
-        void       (WINE_GLAPI *p_glProgramParameters4fvNV)( GLenum target, GLuint index, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glProgramPathFragmentInputGenNV)( GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs );
-        void       (WINE_GLAPI *p_glProgramStringARB)( GLenum target, GLenum format, GLsizei len, const void *string );
-        void       (WINE_GLAPI *p_glProgramSubroutineParametersuivNV)( GLenum target, GLsizei count, const GLuint *params );
-        void       (WINE_GLAPI *p_glProgramUniform1d)( GLuint program, GLint location, GLdouble v0 );
-        void       (WINE_GLAPI *p_glProgramUniform1dEXT)( GLuint program, GLint location, GLdouble x );
-        void       (WINE_GLAPI *p_glProgramUniform1dv)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniform1dvEXT)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniform1f)( GLuint program, GLint location, GLfloat v0 );
-        void       (WINE_GLAPI *p_glProgramUniform1fEXT)( GLuint program, GLint location, GLfloat v0 );
-        void       (WINE_GLAPI *p_glProgramUniform1fv)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniform1fvEXT)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniform1i)( GLuint program, GLint location, GLint v0 );
-        void       (WINE_GLAPI *p_glProgramUniform1i64ARB)( GLuint program, GLint location, GLint64 x );
-        void       (WINE_GLAPI *p_glProgramUniform1i64NV)( GLuint program, GLint location, GLint64EXT x );
-        void       (WINE_GLAPI *p_glProgramUniform1i64vARB)( GLuint program, GLint location, GLsizei count, const GLint64 *value );
-        void       (WINE_GLAPI *p_glProgramUniform1i64vNV)( GLuint program, GLint location, GLsizei count, const GLint64EXT *value );
-        void       (WINE_GLAPI *p_glProgramUniform1iEXT)( GLuint program, GLint location, GLint v0 );
-        void       (WINE_GLAPI *p_glProgramUniform1iv)( GLuint program, GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glProgramUniform1ivEXT)( GLuint program, GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glProgramUniform1ui)( GLuint program, GLint location, GLuint v0 );
-        void       (WINE_GLAPI *p_glProgramUniform1ui64ARB)( GLuint program, GLint location, GLuint64 x );
-        void       (WINE_GLAPI *p_glProgramUniform1ui64NV)( GLuint program, GLint location, GLuint64EXT x );
-        void       (WINE_GLAPI *p_glProgramUniform1ui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glProgramUniform1ui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glProgramUniform1uiEXT)( GLuint program, GLint location, GLuint v0 );
-        void       (WINE_GLAPI *p_glProgramUniform1uiv)( GLuint program, GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glProgramUniform1uivEXT)( GLuint program, GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glProgramUniform2d)( GLuint program, GLint location, GLdouble v0, GLdouble v1 );
-        void       (WINE_GLAPI *p_glProgramUniform2dEXT)( GLuint program, GLint location, GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glProgramUniform2dv)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniform2dvEXT)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniform2f)( GLuint program, GLint location, GLfloat v0, GLfloat v1 );
-        void       (WINE_GLAPI *p_glProgramUniform2fEXT)( GLuint program, GLint location, GLfloat v0, GLfloat v1 );
-        void       (WINE_GLAPI *p_glProgramUniform2fv)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniform2fvEXT)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniform2i)( GLuint program, GLint location, GLint v0, GLint v1 );
-        void       (WINE_GLAPI *p_glProgramUniform2i64ARB)( GLuint program, GLint location, GLint64 x, GLint64 y );
-        void       (WINE_GLAPI *p_glProgramUniform2i64NV)( GLuint program, GLint location, GLint64EXT x, GLint64EXT y );
-        void       (WINE_GLAPI *p_glProgramUniform2i64vARB)( GLuint program, GLint location, GLsizei count, const GLint64 *value );
-        void       (WINE_GLAPI *p_glProgramUniform2i64vNV)( GLuint program, GLint location, GLsizei count, const GLint64EXT *value );
-        void       (WINE_GLAPI *p_glProgramUniform2iEXT)( GLuint program, GLint location, GLint v0, GLint v1 );
-        void       (WINE_GLAPI *p_glProgramUniform2iv)( GLuint program, GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glProgramUniform2ivEXT)( GLuint program, GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glProgramUniform2ui)( GLuint program, GLint location, GLuint v0, GLuint v1 );
-        void       (WINE_GLAPI *p_glProgramUniform2ui64ARB)( GLuint program, GLint location, GLuint64 x, GLuint64 y );
-        void       (WINE_GLAPI *p_glProgramUniform2ui64NV)( GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y );
-        void       (WINE_GLAPI *p_glProgramUniform2ui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glProgramUniform2ui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glProgramUniform2uiEXT)( GLuint program, GLint location, GLuint v0, GLuint v1 );
-        void       (WINE_GLAPI *p_glProgramUniform2uiv)( GLuint program, GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glProgramUniform2uivEXT)( GLuint program, GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glProgramUniform3d)( GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2 );
-        void       (WINE_GLAPI *p_glProgramUniform3dEXT)( GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glProgramUniform3dv)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniform3dvEXT)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniform3f)( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2 );
-        void       (WINE_GLAPI *p_glProgramUniform3fEXT)( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2 );
-        void       (WINE_GLAPI *p_glProgramUniform3fv)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniform3fvEXT)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniform3i)( GLuint program, GLint location, GLint v0, GLint v1, GLint v2 );
-        void       (WINE_GLAPI *p_glProgramUniform3i64ARB)( GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z );
-        void       (WINE_GLAPI *p_glProgramUniform3i64NV)( GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z );
-        void       (WINE_GLAPI *p_glProgramUniform3i64vARB)( GLuint program, GLint location, GLsizei count, const GLint64 *value );
-        void       (WINE_GLAPI *p_glProgramUniform3i64vNV)( GLuint program, GLint location, GLsizei count, const GLint64EXT *value );
-        void       (WINE_GLAPI *p_glProgramUniform3iEXT)( GLuint program, GLint location, GLint v0, GLint v1, GLint v2 );
-        void       (WINE_GLAPI *p_glProgramUniform3iv)( GLuint program, GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glProgramUniform3ivEXT)( GLuint program, GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glProgramUniform3ui)( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2 );
-        void       (WINE_GLAPI *p_glProgramUniform3ui64ARB)( GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z );
-        void       (WINE_GLAPI *p_glProgramUniform3ui64NV)( GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z );
-        void       (WINE_GLAPI *p_glProgramUniform3ui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glProgramUniform3ui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glProgramUniform3uiEXT)( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2 );
-        void       (WINE_GLAPI *p_glProgramUniform3uiv)( GLuint program, GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glProgramUniform3uivEXT)( GLuint program, GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glProgramUniform4d)( GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3 );
-        void       (WINE_GLAPI *p_glProgramUniform4dEXT)( GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glProgramUniform4dv)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniform4dvEXT)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniform4f)( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 );
-        void       (WINE_GLAPI *p_glProgramUniform4fEXT)( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 );
-        void       (WINE_GLAPI *p_glProgramUniform4fv)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniform4fvEXT)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniform4i)( GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3 );
-        void       (WINE_GLAPI *p_glProgramUniform4i64ARB)( GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w );
-        void       (WINE_GLAPI *p_glProgramUniform4i64NV)( GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w );
-        void       (WINE_GLAPI *p_glProgramUniform4i64vARB)( GLuint program, GLint location, GLsizei count, const GLint64 *value );
-        void       (WINE_GLAPI *p_glProgramUniform4i64vNV)( GLuint program, GLint location, GLsizei count, const GLint64EXT *value );
-        void       (WINE_GLAPI *p_glProgramUniform4iEXT)( GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3 );
-        void       (WINE_GLAPI *p_glProgramUniform4iv)( GLuint program, GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glProgramUniform4ivEXT)( GLuint program, GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glProgramUniform4ui)( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 );
-        void       (WINE_GLAPI *p_glProgramUniform4ui64ARB)( GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w );
-        void       (WINE_GLAPI *p_glProgramUniform4ui64NV)( GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w );
-        void       (WINE_GLAPI *p_glProgramUniform4ui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glProgramUniform4ui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glProgramUniform4uiEXT)( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 );
-        void       (WINE_GLAPI *p_glProgramUniform4uiv)( GLuint program, GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glProgramUniform4uivEXT)( GLuint program, GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glProgramUniformHandleui64ARB)( GLuint program, GLint location, GLuint64 value );
-        void       (WINE_GLAPI *p_glProgramUniformHandleui64NV)( GLuint program, GLint location, GLuint64 value );
-        void       (WINE_GLAPI *p_glProgramUniformHandleui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *values );
-        void       (WINE_GLAPI *p_glProgramUniformHandleui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64 *values );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2x3dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2x3dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2x3fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2x3fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2x4dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2x4dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2x4fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix2x4fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3x2dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3x2dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3x2fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3x2fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3x4dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3x4dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3x4fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix3x4fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4x2dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4x2dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4x2fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4x2fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4x3dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4x3dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4x3fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformMatrix4x3fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glProgramUniformui64NV)( GLuint program, GLint location, GLuint64EXT value );
-        void       (WINE_GLAPI *p_glProgramUniformui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glProgramVertexLimitNV)( GLenum target, GLint limit );
-        void       (WINE_GLAPI *p_glProvokingVertex)( GLenum mode );
-        void       (WINE_GLAPI *p_glProvokingVertexEXT)( GLenum mode );
-        void       (WINE_GLAPI *p_glPushClientAttribDefaultEXT)( GLbitfield mask );
-        void       (WINE_GLAPI *p_glPushDebugGroup)( GLenum source, GLuint id, GLsizei length, const GLchar *message );
-        void       (WINE_GLAPI *p_glPushGroupMarkerEXT)( GLsizei length, const GLchar *marker );
-        void       (WINE_GLAPI *p_glQueryCounter)( GLuint id, GLenum target );
-        GLbitfield (WINE_GLAPI *p_glQueryMatrixxOES)( GLfixed *mantissa, GLint *exponent );
-        void       (WINE_GLAPI *p_glQueryObjectParameteruiAMD)( GLenum target, GLuint id, GLenum pname, GLuint param );
-        GLint      (WINE_GLAPI *p_glQueryResourceNV)( GLenum queryType, GLint tagId, GLuint count, GLint *buffer );
-        void       (WINE_GLAPI *p_glQueryResourceTagNV)( GLint tagId, const GLchar *tagString );
-        void       (WINE_GLAPI *p_glRasterPos2xOES)( GLfixed x, GLfixed y );
-        void       (WINE_GLAPI *p_glRasterPos2xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glRasterPos3xOES)( GLfixed x, GLfixed y, GLfixed z );
-        void       (WINE_GLAPI *p_glRasterPos3xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glRasterPos4xOES)( GLfixed x, GLfixed y, GLfixed z, GLfixed w );
-        void       (WINE_GLAPI *p_glRasterPos4xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glRasterSamplesEXT)( GLuint samples, GLboolean fixedsamplelocations );
-        void       (WINE_GLAPI *p_glReadBufferRegion)( GLenum region, GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glReadInstrumentsSGIX)( GLint marker );
-        void       (WINE_GLAPI *p_glReadnPixels)( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data );
-        void       (WINE_GLAPI *p_glReadnPixelsARB)( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data );
-        void       (WINE_GLAPI *p_glRectxOES)( GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2 );
-        void       (WINE_GLAPI *p_glRectxvOES)( const GLfixed *v1, const GLfixed *v2 );
-        void       (WINE_GLAPI *p_glReferencePlaneSGIX)( const GLdouble *equation );
-        GLboolean  (WINE_GLAPI *p_glReleaseKeyedMutexWin32EXT)( GLuint memory, GLuint64 key );
-        void       (WINE_GLAPI *p_glReleaseShaderCompiler)(void);
-        void       (WINE_GLAPI *p_glRenderGpuMaskNV)( GLbitfield mask );
-        void       (WINE_GLAPI *p_glRenderbufferStorage)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glRenderbufferStorageEXT)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glRenderbufferStorageMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glRenderbufferStorageMultisampleAdvancedAMD)( GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glRenderbufferStorageMultisampleCoverageNV)( GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glRenderbufferStorageMultisampleEXT)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glReplacementCodePointerSUN)( GLenum type, GLsizei stride, const void **pointer );
-        void       (WINE_GLAPI *p_glReplacementCodeubSUN)( GLubyte code );
-        void       (WINE_GLAPI *p_glReplacementCodeubvSUN)( const GLubyte *code );
-        void       (WINE_GLAPI *p_glReplacementCodeuiColor3fVertex3fSUN)( GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glReplacementCodeuiColor3fVertex3fvSUN)( const GLuint *rc, const GLfloat *c, const GLfloat *v );
-        void       (WINE_GLAPI *p_glReplacementCodeuiColor4fNormal3fVertex3fSUN)( GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glReplacementCodeuiColor4fNormal3fVertex3fvSUN)( const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glReplacementCodeuiColor4ubVertex3fSUN)( GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glReplacementCodeuiColor4ubVertex3fvSUN)( const GLuint *rc, const GLubyte *c, const GLfloat *v );
-        void       (WINE_GLAPI *p_glReplacementCodeuiNormal3fVertex3fSUN)( GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glReplacementCodeuiNormal3fVertex3fvSUN)( const GLuint *rc, const GLfloat *n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glReplacementCodeuiSUN)( GLuint code );
-        void       (WINE_GLAPI *p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)( GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)( const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)( GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)( const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glReplacementCodeuiTexCoord2fVertex3fSUN)( GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glReplacementCodeuiTexCoord2fVertex3fvSUN)( const GLuint *rc, const GLfloat *tc, const GLfloat *v );
-        void       (WINE_GLAPI *p_glReplacementCodeuiVertex3fSUN)( GLuint rc, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glReplacementCodeuiVertex3fvSUN)( const GLuint *rc, const GLfloat *v );
-        void       (WINE_GLAPI *p_glReplacementCodeuivSUN)( const GLuint *code );
-        void       (WINE_GLAPI *p_glReplacementCodeusSUN)( GLushort code );
-        void       (WINE_GLAPI *p_glReplacementCodeusvSUN)( const GLushort *code );
-        void       (WINE_GLAPI *p_glRequestResidentProgramsNV)( GLsizei n, const GLuint *programs );
-        void       (WINE_GLAPI *p_glResetHistogram)( GLenum target );
-        void       (WINE_GLAPI *p_glResetHistogramEXT)( GLenum target );
-        void       (WINE_GLAPI *p_glResetMemoryObjectParameterNV)( GLuint memory, GLenum pname );
-        void       (WINE_GLAPI *p_glResetMinmax)( GLenum target );
-        void       (WINE_GLAPI *p_glResetMinmaxEXT)( GLenum target );
-        void       (WINE_GLAPI *p_glResizeBuffersMESA)(void);
-        void       (WINE_GLAPI *p_glResolveDepthValuesNV)(void);
-        void       (WINE_GLAPI *p_glResumeTransformFeedback)(void);
-        void       (WINE_GLAPI *p_glResumeTransformFeedbackNV)(void);
-        void       (WINE_GLAPI *p_glRotatexOES)( GLfixed angle, GLfixed x, GLfixed y, GLfixed z );
-        void       (WINE_GLAPI *p_glSampleCoverage)( GLfloat value, GLboolean invert );
-        void       (WINE_GLAPI *p_glSampleCoverageARB)( GLfloat value, GLboolean invert );
-        void       (WINE_GLAPI *p_glSampleMapATI)( GLuint dst, GLuint interp, GLenum swizzle );
-        void       (WINE_GLAPI *p_glSampleMaskEXT)( GLclampf value, GLboolean invert );
-        void       (WINE_GLAPI *p_glSampleMaskIndexedNV)( GLuint index, GLbitfield mask );
-        void       (WINE_GLAPI *p_glSampleMaskSGIS)( GLclampf value, GLboolean invert );
-        void       (WINE_GLAPI *p_glSampleMaski)( GLuint maskNumber, GLbitfield mask );
-        void       (WINE_GLAPI *p_glSamplePatternEXT)( GLenum pattern );
-        void       (WINE_GLAPI *p_glSamplePatternSGIS)( GLenum pattern );
-        void       (WINE_GLAPI *p_glSamplerParameterIiv)( GLuint sampler, GLenum pname, const GLint *param );
-        void       (WINE_GLAPI *p_glSamplerParameterIuiv)( GLuint sampler, GLenum pname, const GLuint *param );
-        void       (WINE_GLAPI *p_glSamplerParameterf)( GLuint sampler, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glSamplerParameterfv)( GLuint sampler, GLenum pname, const GLfloat *param );
-        void       (WINE_GLAPI *p_glSamplerParameteri)( GLuint sampler, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glSamplerParameteriv)( GLuint sampler, GLenum pname, const GLint *param );
-        void       (WINE_GLAPI *p_glScalexOES)( GLfixed x, GLfixed y, GLfixed z );
-        void       (WINE_GLAPI *p_glScissorArrayv)( GLuint first, GLsizei count, const GLint *v );
-        void       (WINE_GLAPI *p_glScissorExclusiveArrayvNV)( GLuint first, GLsizei count, const GLint *v );
-        void       (WINE_GLAPI *p_glScissorExclusiveNV)( GLint x, GLint y, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glScissorIndexed)( GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glScissorIndexedv)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3b)( GLbyte red, GLbyte green, GLbyte blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3bEXT)( GLbyte red, GLbyte green, GLbyte blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3bv)( const GLbyte *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3bvEXT)( const GLbyte *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3d)( GLdouble red, GLdouble green, GLdouble blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3dEXT)( GLdouble red, GLdouble green, GLdouble blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3dvEXT)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3f)( GLfloat red, GLfloat green, GLfloat blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3fEXT)( GLfloat red, GLfloat green, GLfloat blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3fvEXT)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3hNV)( GLhalfNV red, GLhalfNV green, GLhalfNV blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3i)( GLint red, GLint green, GLint blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3iEXT)( GLint red, GLint green, GLint blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3ivEXT)( const GLint *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3s)( GLshort red, GLshort green, GLshort blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3sEXT)( GLshort red, GLshort green, GLshort blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3svEXT)( const GLshort *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3ub)( GLubyte red, GLubyte green, GLubyte blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3ubEXT)( GLubyte red, GLubyte green, GLubyte blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3ubv)( const GLubyte *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3ubvEXT)( const GLubyte *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3ui)( GLuint red, GLuint green, GLuint blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3uiEXT)( GLuint red, GLuint green, GLuint blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3uiv)( const GLuint *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3uivEXT)( const GLuint *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3us)( GLushort red, GLushort green, GLushort blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3usEXT)( GLushort red, GLushort green, GLushort blue );
-        void       (WINE_GLAPI *p_glSecondaryColor3usv)( const GLushort *v );
-        void       (WINE_GLAPI *p_glSecondaryColor3usvEXT)( const GLushort *v );
-        void       (WINE_GLAPI *p_glSecondaryColorFormatNV)( GLint size, GLenum type, GLsizei stride );
-        void       (WINE_GLAPI *p_glSecondaryColorP3ui)( GLenum type, GLuint color );
-        void       (WINE_GLAPI *p_glSecondaryColorP3uiv)( GLenum type, const GLuint *color );
-        void       (WINE_GLAPI *p_glSecondaryColorPointer)( GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glSecondaryColorPointerEXT)( GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glSecondaryColorPointerListIBM)( GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride );
-        void       (WINE_GLAPI *p_glSelectPerfMonitorCountersAMD)( GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList );
-        void       (WINE_GLAPI *p_glSelectTextureCoordSetSGIS)( GLenum target );
-        void       (WINE_GLAPI *p_glSelectTextureSGIS)( GLenum target );
-        void       (WINE_GLAPI *p_glSemaphoreParameterui64vEXT)( GLuint semaphore, GLenum pname, const GLuint64 *params );
-        void       (WINE_GLAPI *p_glSeparableFilter2D)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column );
-        void       (WINE_GLAPI *p_glSeparableFilter2DEXT)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column );
-        void       (WINE_GLAPI *p_glSetFenceAPPLE)( GLuint fence );
-        void       (WINE_GLAPI *p_glSetFenceNV)( GLuint fence, GLenum condition );
-        void       (WINE_GLAPI *p_glSetFragmentShaderConstantATI)( GLuint dst, const GLfloat *value );
-        void       (WINE_GLAPI *p_glSetInvariantEXT)( GLuint id, GLenum type, const void *addr );
-        void       (WINE_GLAPI *p_glSetLocalConstantEXT)( GLuint id, GLenum type, const void *addr );
-        void       (WINE_GLAPI *p_glSetMultisamplefvAMD)( GLenum pname, GLuint index, const GLfloat *val );
-        void       (WINE_GLAPI *p_glShaderBinary)( GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length );
-        void       (WINE_GLAPI *p_glShaderOp1EXT)( GLenum op, GLuint res, GLuint arg1 );
-        void       (WINE_GLAPI *p_glShaderOp2EXT)( GLenum op, GLuint res, GLuint arg1, GLuint arg2 );
-        void       (WINE_GLAPI *p_glShaderOp3EXT)( GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3 );
-        void       (WINE_GLAPI *p_glShaderSource)( GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length );
-        void       (WINE_GLAPI *p_glShaderSourceARB)( GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length );
-        void       (WINE_GLAPI *p_glShaderStorageBlockBinding)( GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding );
-        void       (WINE_GLAPI *p_glShadingRateImageBarrierNV)( GLboolean synchronize );
-        void       (WINE_GLAPI *p_glShadingRateImagePaletteNV)( GLuint viewport, GLuint first, GLsizei count, const GLenum *rates );
-        void       (WINE_GLAPI *p_glShadingRateSampleOrderCustomNV)( GLenum rate, GLuint samples, const GLint *locations );
-        void       (WINE_GLAPI *p_glShadingRateSampleOrderNV)( GLenum order );
-        void       (WINE_GLAPI *p_glSharpenTexFuncSGIS)( GLenum target, GLsizei n, const GLfloat *points );
-        void       (WINE_GLAPI *p_glSignalSemaphoreEXT)( GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts );
-        void       (WINE_GLAPI *p_glSignalSemaphoreui64NVX)( GLuint signalGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray );
-        void       (WINE_GLAPI *p_glSignalVkFenceNV)( GLuint64 vkFence );
-        void       (WINE_GLAPI *p_glSignalVkSemaphoreNV)( GLuint64 vkSemaphore );
-        void       (WINE_GLAPI *p_glSpecializeShader)( GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue );
-        void       (WINE_GLAPI *p_glSpecializeShaderARB)( GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue );
-        void       (WINE_GLAPI *p_glSpriteParameterfSGIX)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glSpriteParameterfvSGIX)( GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glSpriteParameteriSGIX)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glSpriteParameterivSGIX)( GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glStartInstrumentsSGIX)(void);
-        void       (WINE_GLAPI *p_glStateCaptureNV)( GLuint state, GLenum mode );
-        void       (WINE_GLAPI *p_glStencilClearTagEXT)( GLsizei stencilTagBits, GLuint stencilClearTag );
-        void       (WINE_GLAPI *p_glStencilFillPathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues );
-        void       (WINE_GLAPI *p_glStencilFillPathNV)( GLuint path, GLenum fillMode, GLuint mask );
-        void       (WINE_GLAPI *p_glStencilFuncSeparate)( GLenum face, GLenum func, GLint ref, GLuint mask );
-        void       (WINE_GLAPI *p_glStencilFuncSeparateATI)( GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask );
-        void       (WINE_GLAPI *p_glStencilMaskSeparate)( GLenum face, GLuint mask );
-        void       (WINE_GLAPI *p_glStencilOpSeparate)( GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass );
-        void       (WINE_GLAPI *p_glStencilOpSeparateATI)( GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass );
-        void       (WINE_GLAPI *p_glStencilOpValueAMD)( GLenum face, GLuint value );
-        void       (WINE_GLAPI *p_glStencilStrokePathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues );
-        void       (WINE_GLAPI *p_glStencilStrokePathNV)( GLuint path, GLint reference, GLuint mask );
-        void       (WINE_GLAPI *p_glStencilThenCoverFillPathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues );
-        void       (WINE_GLAPI *p_glStencilThenCoverFillPathNV)( GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode );
-        void       (WINE_GLAPI *p_glStencilThenCoverStrokePathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues );
-        void       (WINE_GLAPI *p_glStencilThenCoverStrokePathNV)( GLuint path, GLint reference, GLuint mask, GLenum coverMode );
-        void       (WINE_GLAPI *p_glStopInstrumentsSGIX)( GLint marker );
-        void       (WINE_GLAPI *p_glStringMarkerGREMEDY)( GLsizei len, const void *string );
-        void       (WINE_GLAPI *p_glSubpixelPrecisionBiasNV)( GLuint xbits, GLuint ybits );
-        void       (WINE_GLAPI *p_glSwizzleEXT)( GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW );
-        void       (WINE_GLAPI *p_glSyncTextureINTEL)( GLuint texture );
-        void       (WINE_GLAPI *p_glTagSampleBufferSGIX)(void);
-        void       (WINE_GLAPI *p_glTangent3bEXT)( GLbyte tx, GLbyte ty, GLbyte tz );
-        void       (WINE_GLAPI *p_glTangent3bvEXT)( const GLbyte *v );
-        void       (WINE_GLAPI *p_glTangent3dEXT)( GLdouble tx, GLdouble ty, GLdouble tz );
-        void       (WINE_GLAPI *p_glTangent3dvEXT)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glTangent3fEXT)( GLfloat tx, GLfloat ty, GLfloat tz );
-        void       (WINE_GLAPI *p_glTangent3fvEXT)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glTangent3iEXT)( GLint tx, GLint ty, GLint tz );
-        void       (WINE_GLAPI *p_glTangent3ivEXT)( const GLint *v );
-        void       (WINE_GLAPI *p_glTangent3sEXT)( GLshort tx, GLshort ty, GLshort tz );
-        void       (WINE_GLAPI *p_glTangent3svEXT)( const GLshort *v );
-        void       (WINE_GLAPI *p_glTangentPointerEXT)( GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glTbufferMask3DFX)( GLuint mask );
-        void       (WINE_GLAPI *p_glTessellationFactorAMD)( GLfloat factor );
-        void       (WINE_GLAPI *p_glTessellationModeAMD)( GLenum mode );
-        GLboolean  (WINE_GLAPI *p_glTestFenceAPPLE)( GLuint fence );
-        GLboolean  (WINE_GLAPI *p_glTestFenceNV)( GLuint fence );
-        GLboolean  (WINE_GLAPI *p_glTestObjectAPPLE)( GLenum object, GLuint name );
-        void       (WINE_GLAPI *p_glTexAttachMemoryNV)( GLenum target, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTexBuffer)( GLenum target, GLenum internalformat, GLuint buffer );
-        void       (WINE_GLAPI *p_glTexBufferARB)( GLenum target, GLenum internalformat, GLuint buffer );
-        void       (WINE_GLAPI *p_glTexBufferEXT)( GLenum target, GLenum internalformat, GLuint buffer );
-        void       (WINE_GLAPI *p_glTexBufferRange)( GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glTexBumpParameterfvATI)( GLenum pname, const GLfloat *param );
-        void       (WINE_GLAPI *p_glTexBumpParameterivATI)( GLenum pname, const GLint *param );
-        void       (WINE_GLAPI *p_glTexCoord1bOES)( GLbyte s );
-        void       (WINE_GLAPI *p_glTexCoord1bvOES)( const GLbyte *coords );
-        void       (WINE_GLAPI *p_glTexCoord1hNV)( GLhalfNV s );
-        void       (WINE_GLAPI *p_glTexCoord1hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glTexCoord1xOES)( GLfixed s );
-        void       (WINE_GLAPI *p_glTexCoord1xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glTexCoord2bOES)( GLbyte s, GLbyte t );
-        void       (WINE_GLAPI *p_glTexCoord2bvOES)( const GLbyte *coords );
-        void       (WINE_GLAPI *p_glTexCoord2fColor3fVertex3fSUN)( GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glTexCoord2fColor3fVertex3fvSUN)( const GLfloat *tc, const GLfloat *c, const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord2fColor4fNormal3fVertex3fSUN)( GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glTexCoord2fColor4fNormal3fVertex3fvSUN)( const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord2fColor4ubVertex3fSUN)( GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glTexCoord2fColor4ubVertex3fvSUN)( const GLfloat *tc, const GLubyte *c, const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord2fNormal3fVertex3fSUN)( GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glTexCoord2fNormal3fVertex3fvSUN)( const GLfloat *tc, const GLfloat *n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord2fVertex3fSUN)( GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glTexCoord2fVertex3fvSUN)( const GLfloat *tc, const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord2hNV)( GLhalfNV s, GLhalfNV t );
-        void       (WINE_GLAPI *p_glTexCoord2hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glTexCoord2xOES)( GLfixed s, GLfixed t );
-        void       (WINE_GLAPI *p_glTexCoord2xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glTexCoord3bOES)( GLbyte s, GLbyte t, GLbyte r );
-        void       (WINE_GLAPI *p_glTexCoord3bvOES)( const GLbyte *coords );
-        void       (WINE_GLAPI *p_glTexCoord3hNV)( GLhalfNV s, GLhalfNV t, GLhalfNV r );
-        void       (WINE_GLAPI *p_glTexCoord3hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glTexCoord3xOES)( GLfixed s, GLfixed t, GLfixed r );
-        void       (WINE_GLAPI *p_glTexCoord3xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glTexCoord4bOES)( GLbyte s, GLbyte t, GLbyte r, GLbyte q );
-        void       (WINE_GLAPI *p_glTexCoord4bvOES)( const GLbyte *coords );
-        void       (WINE_GLAPI *p_glTexCoord4fColor4fNormal3fVertex4fSUN)( GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glTexCoord4fColor4fNormal3fVertex4fvSUN)( const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord4fVertex4fSUN)( GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glTexCoord4fVertex4fvSUN)( const GLfloat *tc, const GLfloat *v );
-        void       (WINE_GLAPI *p_glTexCoord4hNV)( GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q );
-        void       (WINE_GLAPI *p_glTexCoord4hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glTexCoord4xOES)( GLfixed s, GLfixed t, GLfixed r, GLfixed q );
-        void       (WINE_GLAPI *p_glTexCoord4xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glTexCoordFormatNV)( GLint size, GLenum type, GLsizei stride );
-        void       (WINE_GLAPI *p_glTexCoordP1ui)( GLenum type, GLuint coords );
-        void       (WINE_GLAPI *p_glTexCoordP1uiv)( GLenum type, const GLuint *coords );
-        void       (WINE_GLAPI *p_glTexCoordP2ui)( GLenum type, GLuint coords );
-        void       (WINE_GLAPI *p_glTexCoordP2uiv)( GLenum type, const GLuint *coords );
-        void       (WINE_GLAPI *p_glTexCoordP3ui)( GLenum type, GLuint coords );
-        void       (WINE_GLAPI *p_glTexCoordP3uiv)( GLenum type, const GLuint *coords );
-        void       (WINE_GLAPI *p_glTexCoordP4ui)( GLenum type, GLuint coords );
-        void       (WINE_GLAPI *p_glTexCoordP4uiv)( GLenum type, const GLuint *coords );
-        void       (WINE_GLAPI *p_glTexCoordPointerEXT)( GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer );
-        void       (WINE_GLAPI *p_glTexCoordPointerListIBM)( GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride );
-        void       (WINE_GLAPI *p_glTexCoordPointervINTEL)( GLint size, GLenum type, const void **pointer );
-        void       (WINE_GLAPI *p_glTexEnvxOES)( GLenum target, GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glTexEnvxvOES)( GLenum target, GLenum pname, const GLfixed *params );
-        void       (WINE_GLAPI *p_glTexFilterFuncSGIS)( GLenum target, GLenum filter, GLsizei n, const GLfloat *weights );
-        void       (WINE_GLAPI *p_glTexGenxOES)( GLenum coord, GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glTexGenxvOES)( GLenum coord, GLenum pname, const GLfixed *params );
-        void       (WINE_GLAPI *p_glTexImage2DMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations );
-        void       (WINE_GLAPI *p_glTexImage2DMultisampleCoverageNV)( GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations );
-        void       (WINE_GLAPI *p_glTexImage3D)( GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexImage3DEXT)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexImage3DMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations );
-        void       (WINE_GLAPI *p_glTexImage3DMultisampleCoverageNV)( GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations );
-        void       (WINE_GLAPI *p_glTexImage4DSGIS)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexPageCommitmentARB)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit );
-        void       (WINE_GLAPI *p_glTexParameterIiv)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glTexParameterIivEXT)( GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glTexParameterIuiv)( GLenum target, GLenum pname, const GLuint *params );
-        void       (WINE_GLAPI *p_glTexParameterIuivEXT)( GLenum target, GLenum pname, const GLuint *params );
-        void       (WINE_GLAPI *p_glTexParameterxOES)( GLenum target, GLenum pname, GLfixed param );
-        void       (WINE_GLAPI *p_glTexParameterxvOES)( GLenum target, GLenum pname, const GLfixed *params );
-        void       (WINE_GLAPI *p_glTexRenderbufferNV)( GLenum target, GLuint renderbuffer );
-        void       (WINE_GLAPI *p_glTexStorage1D)( GLenum target, GLsizei levels, GLenum internalformat, GLsizei width );
-        void       (WINE_GLAPI *p_glTexStorage2D)( GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glTexStorage2DMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations );
-        void       (WINE_GLAPI *p_glTexStorage3D)( GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth );
-        void       (WINE_GLAPI *p_glTexStorage3DMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations );
-        void       (WINE_GLAPI *p_glTexStorageMem1DEXT)( GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTexStorageMem2DEXT)( GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTexStorageMem2DMultisampleEXT)( GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTexStorageMem3DEXT)( GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTexStorageMem3DMultisampleEXT)( GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTexStorageSparseAMD)( GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags );
-        void       (WINE_GLAPI *p_glTexSubImage1DEXT)( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexSubImage2DEXT)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexSubImage3D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexSubImage3DEXT)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTexSubImage4DSGIS)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureAttachMemoryNV)( GLuint texture, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTextureBarrier)(void);
-        void       (WINE_GLAPI *p_glTextureBarrierNV)(void);
-        void       (WINE_GLAPI *p_glTextureBuffer)( GLuint texture, GLenum internalformat, GLuint buffer );
-        void       (WINE_GLAPI *p_glTextureBufferEXT)( GLuint texture, GLenum target, GLenum internalformat, GLuint buffer );
-        void       (WINE_GLAPI *p_glTextureBufferRange)( GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glTextureBufferRangeEXT)( GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glTextureColorMaskSGIS)( GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha );
-        void       (WINE_GLAPI *p_glTextureImage1DEXT)( GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureImage2DEXT)( GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureImage2DMultisampleCoverageNV)( GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations );
-        void       (WINE_GLAPI *p_glTextureImage2DMultisampleNV)( GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations );
-        void       (WINE_GLAPI *p_glTextureImage3DEXT)( GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureImage3DMultisampleCoverageNV)( GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations );
-        void       (WINE_GLAPI *p_glTextureImage3DMultisampleNV)( GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations );
-        void       (WINE_GLAPI *p_glTextureLightEXT)( GLenum pname );
-        void       (WINE_GLAPI *p_glTextureMaterialEXT)( GLenum face, GLenum mode );
-        void       (WINE_GLAPI *p_glTextureNormalEXT)( GLenum mode );
-        void       (WINE_GLAPI *p_glTexturePageCommitmentEXT)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit );
-        void       (WINE_GLAPI *p_glTextureParameterIiv)( GLuint texture, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glTextureParameterIivEXT)( GLuint texture, GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glTextureParameterIuiv)( GLuint texture, GLenum pname, const GLuint *params );
-        void       (WINE_GLAPI *p_glTextureParameterIuivEXT)( GLuint texture, GLenum target, GLenum pname, const GLuint *params );
-        void       (WINE_GLAPI *p_glTextureParameterf)( GLuint texture, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glTextureParameterfEXT)( GLuint texture, GLenum target, GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glTextureParameterfv)( GLuint texture, GLenum pname, const GLfloat *param );
-        void       (WINE_GLAPI *p_glTextureParameterfvEXT)( GLuint texture, GLenum target, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glTextureParameteri)( GLuint texture, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glTextureParameteriEXT)( GLuint texture, GLenum target, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glTextureParameteriv)( GLuint texture, GLenum pname, const GLint *param );
-        void       (WINE_GLAPI *p_glTextureParameterivEXT)( GLuint texture, GLenum target, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glTextureRangeAPPLE)( GLenum target, GLsizei length, const void *pointer );
-        void       (WINE_GLAPI *p_glTextureRenderbufferEXT)( GLuint texture, GLenum target, GLuint renderbuffer );
-        void       (WINE_GLAPI *p_glTextureStorage1D)( GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width );
-        void       (WINE_GLAPI *p_glTextureStorage1DEXT)( GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width );
-        void       (WINE_GLAPI *p_glTextureStorage2D)( GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glTextureStorage2DEXT)( GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height );
-        void       (WINE_GLAPI *p_glTextureStorage2DMultisample)( GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations );
-        void       (WINE_GLAPI *p_glTextureStorage2DMultisampleEXT)( GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations );
-        void       (WINE_GLAPI *p_glTextureStorage3D)( GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth );
-        void       (WINE_GLAPI *p_glTextureStorage3DEXT)( GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth );
-        void       (WINE_GLAPI *p_glTextureStorage3DMultisample)( GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations );
-        void       (WINE_GLAPI *p_glTextureStorage3DMultisampleEXT)( GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations );
-        void       (WINE_GLAPI *p_glTextureStorageMem1DEXT)( GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTextureStorageMem2DEXT)( GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTextureStorageMem2DMultisampleEXT)( GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTextureStorageMem3DEXT)( GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTextureStorageMem3DMultisampleEXT)( GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset );
-        void       (WINE_GLAPI *p_glTextureStorageSparseAMD)( GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags );
-        void       (WINE_GLAPI *p_glTextureSubImage1D)( GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureSubImage1DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureSubImage2D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureSubImage2DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureSubImage3D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureSubImage3DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
-        void       (WINE_GLAPI *p_glTextureView)( GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers );
-        void       (WINE_GLAPI *p_glTrackMatrixNV)( GLenum target, GLuint address, GLenum matrix, GLenum transform );
-        void       (WINE_GLAPI *p_glTransformFeedbackAttribsNV)( GLsizei count, const GLint *attribs, GLenum bufferMode );
-        void       (WINE_GLAPI *p_glTransformFeedbackBufferBase)( GLuint xfb, GLuint index, GLuint buffer );
-        void       (WINE_GLAPI *p_glTransformFeedbackBufferRange)( GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size );
-        void       (WINE_GLAPI *p_glTransformFeedbackStreamAttribsNV)( GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode );
-        void       (WINE_GLAPI *p_glTransformFeedbackVaryings)( GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode );
-        void       (WINE_GLAPI *p_glTransformFeedbackVaryingsEXT)( GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode );
-        void       (WINE_GLAPI *p_glTransformFeedbackVaryingsNV)( GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode );
-        void       (WINE_GLAPI *p_glTransformPathNV)( GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues );
-        void       (WINE_GLAPI *p_glTranslatexOES)( GLfixed x, GLfixed y, GLfixed z );
-        void       (WINE_GLAPI *p_glUniform1d)( GLint location, GLdouble x );
-        void       (WINE_GLAPI *p_glUniform1dv)( GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniform1f)( GLint location, GLfloat v0 );
-        void       (WINE_GLAPI *p_glUniform1fARB)( GLint location, GLfloat v0 );
-        void       (WINE_GLAPI *p_glUniform1fv)( GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniform1fvARB)( GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniform1i)( GLint location, GLint v0 );
-        void       (WINE_GLAPI *p_glUniform1i64ARB)( GLint location, GLint64 x );
-        void       (WINE_GLAPI *p_glUniform1i64NV)( GLint location, GLint64EXT x );
-        void       (WINE_GLAPI *p_glUniform1i64vARB)( GLint location, GLsizei count, const GLint64 *value );
-        void       (WINE_GLAPI *p_glUniform1i64vNV)( GLint location, GLsizei count, const GLint64EXT *value );
-        void       (WINE_GLAPI *p_glUniform1iARB)( GLint location, GLint v0 );
-        void       (WINE_GLAPI *p_glUniform1iv)( GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glUniform1ivARB)( GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glUniform1ui)( GLint location, GLuint v0 );
-        void       (WINE_GLAPI *p_glUniform1ui64ARB)( GLint location, GLuint64 x );
-        void       (WINE_GLAPI *p_glUniform1ui64NV)( GLint location, GLuint64EXT x );
-        void       (WINE_GLAPI *p_glUniform1ui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glUniform1ui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glUniform1uiEXT)( GLint location, GLuint v0 );
-        void       (WINE_GLAPI *p_glUniform1uiv)( GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glUniform1uivEXT)( GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glUniform2d)( GLint location, GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glUniform2dv)( GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniform2f)( GLint location, GLfloat v0, GLfloat v1 );
-        void       (WINE_GLAPI *p_glUniform2fARB)( GLint location, GLfloat v0, GLfloat v1 );
-        void       (WINE_GLAPI *p_glUniform2fv)( GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniform2fvARB)( GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniform2i)( GLint location, GLint v0, GLint v1 );
-        void       (WINE_GLAPI *p_glUniform2i64ARB)( GLint location, GLint64 x, GLint64 y );
-        void       (WINE_GLAPI *p_glUniform2i64NV)( GLint location, GLint64EXT x, GLint64EXT y );
-        void       (WINE_GLAPI *p_glUniform2i64vARB)( GLint location, GLsizei count, const GLint64 *value );
-        void       (WINE_GLAPI *p_glUniform2i64vNV)( GLint location, GLsizei count, const GLint64EXT *value );
-        void       (WINE_GLAPI *p_glUniform2iARB)( GLint location, GLint v0, GLint v1 );
-        void       (WINE_GLAPI *p_glUniform2iv)( GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glUniform2ivARB)( GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glUniform2ui)( GLint location, GLuint v0, GLuint v1 );
-        void       (WINE_GLAPI *p_glUniform2ui64ARB)( GLint location, GLuint64 x, GLuint64 y );
-        void       (WINE_GLAPI *p_glUniform2ui64NV)( GLint location, GLuint64EXT x, GLuint64EXT y );
-        void       (WINE_GLAPI *p_glUniform2ui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glUniform2ui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glUniform2uiEXT)( GLint location, GLuint v0, GLuint v1 );
-        void       (WINE_GLAPI *p_glUniform2uiv)( GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glUniform2uivEXT)( GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glUniform3d)( GLint location, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glUniform3dv)( GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniform3f)( GLint location, GLfloat v0, GLfloat v1, GLfloat v2 );
-        void       (WINE_GLAPI *p_glUniform3fARB)( GLint location, GLfloat v0, GLfloat v1, GLfloat v2 );
-        void       (WINE_GLAPI *p_glUniform3fv)( GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniform3fvARB)( GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniform3i)( GLint location, GLint v0, GLint v1, GLint v2 );
-        void       (WINE_GLAPI *p_glUniform3i64ARB)( GLint location, GLint64 x, GLint64 y, GLint64 z );
-        void       (WINE_GLAPI *p_glUniform3i64NV)( GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z );
-        void       (WINE_GLAPI *p_glUniform3i64vARB)( GLint location, GLsizei count, const GLint64 *value );
-        void       (WINE_GLAPI *p_glUniform3i64vNV)( GLint location, GLsizei count, const GLint64EXT *value );
-        void       (WINE_GLAPI *p_glUniform3iARB)( GLint location, GLint v0, GLint v1, GLint v2 );
-        void       (WINE_GLAPI *p_glUniform3iv)( GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glUniform3ivARB)( GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glUniform3ui)( GLint location, GLuint v0, GLuint v1, GLuint v2 );
-        void       (WINE_GLAPI *p_glUniform3ui64ARB)( GLint location, GLuint64 x, GLuint64 y, GLuint64 z );
-        void       (WINE_GLAPI *p_glUniform3ui64NV)( GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z );
-        void       (WINE_GLAPI *p_glUniform3ui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glUniform3ui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glUniform3uiEXT)( GLint location, GLuint v0, GLuint v1, GLuint v2 );
-        void       (WINE_GLAPI *p_glUniform3uiv)( GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glUniform3uivEXT)( GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glUniform4d)( GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glUniform4dv)( GLint location, GLsizei count, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniform4f)( GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 );
-        void       (WINE_GLAPI *p_glUniform4fARB)( GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 );
-        void       (WINE_GLAPI *p_glUniform4fv)( GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniform4fvARB)( GLint location, GLsizei count, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniform4i)( GLint location, GLint v0, GLint v1, GLint v2, GLint v3 );
-        void       (WINE_GLAPI *p_glUniform4i64ARB)( GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w );
-        void       (WINE_GLAPI *p_glUniform4i64NV)( GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w );
-        void       (WINE_GLAPI *p_glUniform4i64vARB)( GLint location, GLsizei count, const GLint64 *value );
-        void       (WINE_GLAPI *p_glUniform4i64vNV)( GLint location, GLsizei count, const GLint64EXT *value );
-        void       (WINE_GLAPI *p_glUniform4iARB)( GLint location, GLint v0, GLint v1, GLint v2, GLint v3 );
-        void       (WINE_GLAPI *p_glUniform4iv)( GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glUniform4ivARB)( GLint location, GLsizei count, const GLint *value );
-        void       (WINE_GLAPI *p_glUniform4ui)( GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 );
-        void       (WINE_GLAPI *p_glUniform4ui64ARB)( GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w );
-        void       (WINE_GLAPI *p_glUniform4ui64NV)( GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w );
-        void       (WINE_GLAPI *p_glUniform4ui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glUniform4ui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glUniform4uiEXT)( GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 );
-        void       (WINE_GLAPI *p_glUniform4uiv)( GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glUniform4uivEXT)( GLint location, GLsizei count, const GLuint *value );
-        void       (WINE_GLAPI *p_glUniformBlockBinding)( GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding );
-        void       (WINE_GLAPI *p_glUniformBufferEXT)( GLuint program, GLint location, GLuint buffer );
-        void       (WINE_GLAPI *p_glUniformHandleui64ARB)( GLint location, GLuint64 value );
-        void       (WINE_GLAPI *p_glUniformHandleui64NV)( GLint location, GLuint64 value );
-        void       (WINE_GLAPI *p_glUniformHandleui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glUniformHandleui64vNV)( GLint location, GLsizei count, const GLuint64 *value );
-        void       (WINE_GLAPI *p_glUniformMatrix2dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniformMatrix2fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix2fvARB)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix2x3dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniformMatrix2x3fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix2x4dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniformMatrix2x4fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix3dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniformMatrix3fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix3fvARB)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix3x2dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniformMatrix3x2fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix3x4dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniformMatrix3x4fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix4dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniformMatrix4fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix4fvARB)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix4x2dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniformMatrix4x2fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformMatrix4x3dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
-        void       (WINE_GLAPI *p_glUniformMatrix4x3fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
-        void       (WINE_GLAPI *p_glUniformSubroutinesuiv)( GLenum shadertype, GLsizei count, const GLuint *indices );
-        void       (WINE_GLAPI *p_glUniformui64NV)( GLint location, GLuint64EXT value );
-        void       (WINE_GLAPI *p_glUniformui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
-        void       (WINE_GLAPI *p_glUnlockArraysEXT)(void);
-        GLboolean  (WINE_GLAPI *p_glUnmapBuffer)( GLenum target );
-        GLboolean  (WINE_GLAPI *p_glUnmapBufferARB)( GLenum target );
-        GLboolean  (WINE_GLAPI *p_glUnmapNamedBuffer)( GLuint buffer );
-        GLboolean  (WINE_GLAPI *p_glUnmapNamedBufferEXT)( GLuint buffer );
-        void       (WINE_GLAPI *p_glUnmapObjectBufferATI)( GLuint buffer );
-        void       (WINE_GLAPI *p_glUnmapTexture2DINTEL)( GLuint texture, GLint level );
-        void       (WINE_GLAPI *p_glUpdateObjectBufferATI)( GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve );
-        void       (WINE_GLAPI *p_glUploadGpuMaskNVX)( GLbitfield mask );
-        void       (WINE_GLAPI *p_glUseProgram)( GLuint program );
-        void       (WINE_GLAPI *p_glUseProgramObjectARB)( GLhandleARB programObj );
-        void       (WINE_GLAPI *p_glUseProgramStages)( GLuint pipeline, GLbitfield stages, GLuint program );
-        void       (WINE_GLAPI *p_glUseShaderProgramEXT)( GLenum type, GLuint program );
-        void       (WINE_GLAPI *p_glVDPAUFiniNV)(void);
-        void       (WINE_GLAPI *p_glVDPAUGetSurfaceivNV)( GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei *length, GLint *values );
-        void       (WINE_GLAPI *p_glVDPAUInitNV)( const void *vdpDevice, const void *getProcAddress );
-        GLboolean  (WINE_GLAPI *p_glVDPAUIsSurfaceNV)( GLvdpauSurfaceNV surface );
-        void       (WINE_GLAPI *p_glVDPAUMapSurfacesNV)( GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces );
-        GLvdpauSurfaceNV (WINE_GLAPI *p_glVDPAURegisterOutputSurfaceNV)( const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames );
-        GLvdpauSurfaceNV (WINE_GLAPI *p_glVDPAURegisterVideoSurfaceNV)( const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames );
-        GLvdpauSurfaceNV (WINE_GLAPI *p_glVDPAURegisterVideoSurfaceWithPictureStructureNV)( const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames, GLboolean isFrameStructure );
-        void       (WINE_GLAPI *p_glVDPAUSurfaceAccessNV)( GLvdpauSurfaceNV surface, GLenum access );
-        void       (WINE_GLAPI *p_glVDPAUUnmapSurfacesNV)( GLsizei numSurface, const GLvdpauSurfaceNV *surfaces );
-        void       (WINE_GLAPI *p_glVDPAUUnregisterSurfaceNV)( GLvdpauSurfaceNV surface );
-        void       (WINE_GLAPI *p_glValidateProgram)( GLuint program );
-        void       (WINE_GLAPI *p_glValidateProgramARB)( GLhandleARB programObj );
-        void       (WINE_GLAPI *p_glValidateProgramPipeline)( GLuint pipeline );
-        void       (WINE_GLAPI *p_glVariantArrayObjectATI)( GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset );
-        void       (WINE_GLAPI *p_glVariantPointerEXT)( GLuint id, GLenum type, GLuint stride, const void *addr );
-        void       (WINE_GLAPI *p_glVariantbvEXT)( GLuint id, const GLbyte *addr );
-        void       (WINE_GLAPI *p_glVariantdvEXT)( GLuint id, const GLdouble *addr );
-        void       (WINE_GLAPI *p_glVariantfvEXT)( GLuint id, const GLfloat *addr );
-        void       (WINE_GLAPI *p_glVariantivEXT)( GLuint id, const GLint *addr );
-        void       (WINE_GLAPI *p_glVariantsvEXT)( GLuint id, const GLshort *addr );
-        void       (WINE_GLAPI *p_glVariantubvEXT)( GLuint id, const GLubyte *addr );
-        void       (WINE_GLAPI *p_glVariantuivEXT)( GLuint id, const GLuint *addr );
-        void       (WINE_GLAPI *p_glVariantusvEXT)( GLuint id, const GLushort *addr );
-        void       (WINE_GLAPI *p_glVertex2bOES)( GLbyte x, GLbyte y );
-        void       (WINE_GLAPI *p_glVertex2bvOES)( const GLbyte *coords );
-        void       (WINE_GLAPI *p_glVertex2hNV)( GLhalfNV x, GLhalfNV y );
-        void       (WINE_GLAPI *p_glVertex2hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertex2xOES)( GLfixed x );
-        void       (WINE_GLAPI *p_glVertex2xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glVertex3bOES)( GLbyte x, GLbyte y, GLbyte z );
-        void       (WINE_GLAPI *p_glVertex3bvOES)( const GLbyte *coords );
-        void       (WINE_GLAPI *p_glVertex3hNV)( GLhalfNV x, GLhalfNV y, GLhalfNV z );
-        void       (WINE_GLAPI *p_glVertex3hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertex3xOES)( GLfixed x, GLfixed y );
-        void       (WINE_GLAPI *p_glVertex3xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glVertex4bOES)( GLbyte x, GLbyte y, GLbyte z, GLbyte w );
-        void       (WINE_GLAPI *p_glVertex4bvOES)( const GLbyte *coords );
-        void       (WINE_GLAPI *p_glVertex4hNV)( GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w );
-        void       (WINE_GLAPI *p_glVertex4hvNV)( const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertex4xOES)( GLfixed x, GLfixed y, GLfixed z );
-        void       (WINE_GLAPI *p_glVertex4xvOES)( const GLfixed *coords );
-        void       (WINE_GLAPI *p_glVertexArrayAttribBinding)( GLuint vaobj, GLuint attribindex, GLuint bindingindex );
-        void       (WINE_GLAPI *p_glVertexArrayAttribFormat)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset );
-        void       (WINE_GLAPI *p_glVertexArrayAttribIFormat)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
-        void       (WINE_GLAPI *p_glVertexArrayAttribLFormat)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
-        void       (WINE_GLAPI *p_glVertexArrayBindVertexBufferEXT)( GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride );
-        void       (WINE_GLAPI *p_glVertexArrayBindingDivisor)( GLuint vaobj, GLuint bindingindex, GLuint divisor );
-        void       (WINE_GLAPI *p_glVertexArrayColorOffsetEXT)( GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayEdgeFlagOffsetEXT)( GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayElementBuffer)( GLuint vaobj, GLuint buffer );
-        void       (WINE_GLAPI *p_glVertexArrayFogCoordOffsetEXT)( GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayIndexOffsetEXT)( GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayMultiTexCoordOffsetEXT)( GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayNormalOffsetEXT)( GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayParameteriAPPLE)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glVertexArrayRangeAPPLE)( GLsizei length, void *pointer );
-        void       (WINE_GLAPI *p_glVertexArrayRangeNV)( GLsizei length, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexArraySecondaryColorOffsetEXT)( GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayTexCoordOffsetEXT)( GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayVertexAttribBindingEXT)( GLuint vaobj, GLuint attribindex, GLuint bindingindex );
-        void       (WINE_GLAPI *p_glVertexArrayVertexAttribDivisorEXT)( GLuint vaobj, GLuint index, GLuint divisor );
-        void       (WINE_GLAPI *p_glVertexArrayVertexAttribFormatEXT)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset );
-        void       (WINE_GLAPI *p_glVertexArrayVertexAttribIFormatEXT)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
-        void       (WINE_GLAPI *p_glVertexArrayVertexAttribIOffsetEXT)( GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayVertexAttribLFormatEXT)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
-        void       (WINE_GLAPI *p_glVertexArrayVertexAttribLOffsetEXT)( GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayVertexAttribOffsetEXT)( GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexArrayVertexBindingDivisorEXT)( GLuint vaobj, GLuint bindingindex, GLuint divisor );
-        void       (WINE_GLAPI *p_glVertexArrayVertexBuffer)( GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride );
-        void       (WINE_GLAPI *p_glVertexArrayVertexBuffers)( GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides );
-        void       (WINE_GLAPI *p_glVertexArrayVertexOffsetEXT)( GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset );
-        void       (WINE_GLAPI *p_glVertexAttrib1d)( GLuint index, GLdouble x );
-        void       (WINE_GLAPI *p_glVertexAttrib1dARB)( GLuint index, GLdouble x );
-        void       (WINE_GLAPI *p_glVertexAttrib1dNV)( GLuint index, GLdouble x );
-        void       (WINE_GLAPI *p_glVertexAttrib1dv)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib1dvARB)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib1dvNV)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib1f)( GLuint index, GLfloat x );
-        void       (WINE_GLAPI *p_glVertexAttrib1fARB)( GLuint index, GLfloat x );
-        void       (WINE_GLAPI *p_glVertexAttrib1fNV)( GLuint index, GLfloat x );
-        void       (WINE_GLAPI *p_glVertexAttrib1fv)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib1fvARB)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib1fvNV)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib1hNV)( GLuint index, GLhalfNV x );
-        void       (WINE_GLAPI *p_glVertexAttrib1hvNV)( GLuint index, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertexAttrib1s)( GLuint index, GLshort x );
-        void       (WINE_GLAPI *p_glVertexAttrib1sARB)( GLuint index, GLshort x );
-        void       (WINE_GLAPI *p_glVertexAttrib1sNV)( GLuint index, GLshort x );
-        void       (WINE_GLAPI *p_glVertexAttrib1sv)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib1svARB)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib1svNV)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2d)( GLuint index, GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glVertexAttrib2dARB)( GLuint index, GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glVertexAttrib2dNV)( GLuint index, GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glVertexAttrib2dv)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2dvARB)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2dvNV)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2f)( GLuint index, GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glVertexAttrib2fARB)( GLuint index, GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glVertexAttrib2fNV)( GLuint index, GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glVertexAttrib2fv)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2fvARB)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2fvNV)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2hNV)( GLuint index, GLhalfNV x, GLhalfNV y );
-        void       (WINE_GLAPI *p_glVertexAttrib2hvNV)( GLuint index, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2s)( GLuint index, GLshort x, GLshort y );
-        void       (WINE_GLAPI *p_glVertexAttrib2sARB)( GLuint index, GLshort x, GLshort y );
-        void       (WINE_GLAPI *p_glVertexAttrib2sNV)( GLuint index, GLshort x, GLshort y );
-        void       (WINE_GLAPI *p_glVertexAttrib2sv)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2svARB)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib2svNV)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3d)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glVertexAttrib3dARB)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glVertexAttrib3dNV)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glVertexAttrib3dv)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3dvARB)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3dvNV)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3f)( GLuint index, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glVertexAttrib3fARB)( GLuint index, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glVertexAttrib3fNV)( GLuint index, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glVertexAttrib3fv)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3fvARB)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3fvNV)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3hNV)( GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z );
-        void       (WINE_GLAPI *p_glVertexAttrib3hvNV)( GLuint index, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3s)( GLuint index, GLshort x, GLshort y, GLshort z );
-        void       (WINE_GLAPI *p_glVertexAttrib3sARB)( GLuint index, GLshort x, GLshort y, GLshort z );
-        void       (WINE_GLAPI *p_glVertexAttrib3sNV)( GLuint index, GLshort x, GLshort y, GLshort z );
-        void       (WINE_GLAPI *p_glVertexAttrib3sv)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3svARB)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib3svNV)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4Nbv)( GLuint index, const GLbyte *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4NbvARB)( GLuint index, const GLbyte *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4Niv)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4NivARB)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4Nsv)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4NsvARB)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4Nub)( GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w );
-        void       (WINE_GLAPI *p_glVertexAttrib4NubARB)( GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w );
-        void       (WINE_GLAPI *p_glVertexAttrib4Nubv)( GLuint index, const GLubyte *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4NubvARB)( GLuint index, const GLubyte *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4Nuiv)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4NuivARB)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4Nusv)( GLuint index, const GLushort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4NusvARB)( GLuint index, const GLushort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4bv)( GLuint index, const GLbyte *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4bvARB)( GLuint index, const GLbyte *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4d)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glVertexAttrib4dARB)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glVertexAttrib4dNV)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glVertexAttrib4dv)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4dvARB)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4dvNV)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4f)( GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glVertexAttrib4fARB)( GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glVertexAttrib4fNV)( GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glVertexAttrib4fv)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4fvARB)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4fvNV)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4hNV)( GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w );
-        void       (WINE_GLAPI *p_glVertexAttrib4hvNV)( GLuint index, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4iv)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4ivARB)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4s)( GLuint index, GLshort x, GLshort y, GLshort z, GLshort w );
-        void       (WINE_GLAPI *p_glVertexAttrib4sARB)( GLuint index, GLshort x, GLshort y, GLshort z, GLshort w );
-        void       (WINE_GLAPI *p_glVertexAttrib4sNV)( GLuint index, GLshort x, GLshort y, GLshort z, GLshort w );
-        void       (WINE_GLAPI *p_glVertexAttrib4sv)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4svARB)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4svNV)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4ubNV)( GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w );
-        void       (WINE_GLAPI *p_glVertexAttrib4ubv)( GLuint index, const GLubyte *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4ubvARB)( GLuint index, const GLubyte *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4ubvNV)( GLuint index, const GLubyte *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4uiv)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4uivARB)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4usv)( GLuint index, const GLushort *v );
-        void       (WINE_GLAPI *p_glVertexAttrib4usvARB)( GLuint index, const GLushort *v );
-        void       (WINE_GLAPI *p_glVertexAttribArrayObjectATI)( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset );
-        void       (WINE_GLAPI *p_glVertexAttribBinding)( GLuint attribindex, GLuint bindingindex );
-        void       (WINE_GLAPI *p_glVertexAttribDivisor)( GLuint index, GLuint divisor );
-        void       (WINE_GLAPI *p_glVertexAttribDivisorARB)( GLuint index, GLuint divisor );
-        void       (WINE_GLAPI *p_glVertexAttribFormat)( GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset );
-        void       (WINE_GLAPI *p_glVertexAttribFormatNV)( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride );
-        void       (WINE_GLAPI *p_glVertexAttribI1i)( GLuint index, GLint x );
-        void       (WINE_GLAPI *p_glVertexAttribI1iEXT)( GLuint index, GLint x );
-        void       (WINE_GLAPI *p_glVertexAttribI1iv)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI1ivEXT)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI1ui)( GLuint index, GLuint x );
-        void       (WINE_GLAPI *p_glVertexAttribI1uiEXT)( GLuint index, GLuint x );
-        void       (WINE_GLAPI *p_glVertexAttribI1uiv)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI1uivEXT)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI2i)( GLuint index, GLint x, GLint y );
-        void       (WINE_GLAPI *p_glVertexAttribI2iEXT)( GLuint index, GLint x, GLint y );
-        void       (WINE_GLAPI *p_glVertexAttribI2iv)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI2ivEXT)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI2ui)( GLuint index, GLuint x, GLuint y );
-        void       (WINE_GLAPI *p_glVertexAttribI2uiEXT)( GLuint index, GLuint x, GLuint y );
-        void       (WINE_GLAPI *p_glVertexAttribI2uiv)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI2uivEXT)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI3i)( GLuint index, GLint x, GLint y, GLint z );
-        void       (WINE_GLAPI *p_glVertexAttribI3iEXT)( GLuint index, GLint x, GLint y, GLint z );
-        void       (WINE_GLAPI *p_glVertexAttribI3iv)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI3ivEXT)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI3ui)( GLuint index, GLuint x, GLuint y, GLuint z );
-        void       (WINE_GLAPI *p_glVertexAttribI3uiEXT)( GLuint index, GLuint x, GLuint y, GLuint z );
-        void       (WINE_GLAPI *p_glVertexAttribI3uiv)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI3uivEXT)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4bv)( GLuint index, const GLbyte *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4bvEXT)( GLuint index, const GLbyte *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4i)( GLuint index, GLint x, GLint y, GLint z, GLint w );
-        void       (WINE_GLAPI *p_glVertexAttribI4iEXT)( GLuint index, GLint x, GLint y, GLint z, GLint w );
-        void       (WINE_GLAPI *p_glVertexAttribI4iv)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4ivEXT)( GLuint index, const GLint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4sv)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4svEXT)( GLuint index, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4ubv)( GLuint index, const GLubyte *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4ubvEXT)( GLuint index, const GLubyte *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4ui)( GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
-        void       (WINE_GLAPI *p_glVertexAttribI4uiEXT)( GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
-        void       (WINE_GLAPI *p_glVertexAttribI4uiv)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4uivEXT)( GLuint index, const GLuint *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4usv)( GLuint index, const GLushort *v );
-        void       (WINE_GLAPI *p_glVertexAttribI4usvEXT)( GLuint index, const GLushort *v );
-        void       (WINE_GLAPI *p_glVertexAttribIFormat)( GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
-        void       (WINE_GLAPI *p_glVertexAttribIFormatNV)( GLuint index, GLint size, GLenum type, GLsizei stride );
-        void       (WINE_GLAPI *p_glVertexAttribIPointer)( GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexAttribIPointerEXT)( GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexAttribL1d)( GLuint index, GLdouble x );
-        void       (WINE_GLAPI *p_glVertexAttribL1dEXT)( GLuint index, GLdouble x );
-        void       (WINE_GLAPI *p_glVertexAttribL1dv)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribL1dvEXT)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribL1i64NV)( GLuint index, GLint64EXT x );
-        void       (WINE_GLAPI *p_glVertexAttribL1i64vNV)( GLuint index, const GLint64EXT *v );
-        void       (WINE_GLAPI *p_glVertexAttribL1ui64ARB)( GLuint index, GLuint64EXT x );
-        void       (WINE_GLAPI *p_glVertexAttribL1ui64NV)( GLuint index, GLuint64EXT x );
-        void       (WINE_GLAPI *p_glVertexAttribL1ui64vARB)( GLuint index, const GLuint64EXT *v );
-        void       (WINE_GLAPI *p_glVertexAttribL1ui64vNV)( GLuint index, const GLuint64EXT *v );
-        void       (WINE_GLAPI *p_glVertexAttribL2d)( GLuint index, GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glVertexAttribL2dEXT)( GLuint index, GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glVertexAttribL2dv)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribL2dvEXT)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribL2i64NV)( GLuint index, GLint64EXT x, GLint64EXT y );
-        void       (WINE_GLAPI *p_glVertexAttribL2i64vNV)( GLuint index, const GLint64EXT *v );
-        void       (WINE_GLAPI *p_glVertexAttribL2ui64NV)( GLuint index, GLuint64EXT x, GLuint64EXT y );
-        void       (WINE_GLAPI *p_glVertexAttribL2ui64vNV)( GLuint index, const GLuint64EXT *v );
-        void       (WINE_GLAPI *p_glVertexAttribL3d)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glVertexAttribL3dEXT)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glVertexAttribL3dv)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribL3dvEXT)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribL3i64NV)( GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z );
-        void       (WINE_GLAPI *p_glVertexAttribL3i64vNV)( GLuint index, const GLint64EXT *v );
-        void       (WINE_GLAPI *p_glVertexAttribL3ui64NV)( GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z );
-        void       (WINE_GLAPI *p_glVertexAttribL3ui64vNV)( GLuint index, const GLuint64EXT *v );
-        void       (WINE_GLAPI *p_glVertexAttribL4d)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glVertexAttribL4dEXT)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glVertexAttribL4dv)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribL4dvEXT)( GLuint index, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribL4i64NV)( GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w );
-        void       (WINE_GLAPI *p_glVertexAttribL4i64vNV)( GLuint index, const GLint64EXT *v );
-        void       (WINE_GLAPI *p_glVertexAttribL4ui64NV)( GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w );
-        void       (WINE_GLAPI *p_glVertexAttribL4ui64vNV)( GLuint index, const GLuint64EXT *v );
-        void       (WINE_GLAPI *p_glVertexAttribLFormat)( GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
-        void       (WINE_GLAPI *p_glVertexAttribLFormatNV)( GLuint index, GLint size, GLenum type, GLsizei stride );
-        void       (WINE_GLAPI *p_glVertexAttribLPointer)( GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexAttribLPointerEXT)( GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexAttribP1ui)( GLuint index, GLenum type, GLboolean normalized, GLuint value );
-        void       (WINE_GLAPI *p_glVertexAttribP1uiv)( GLuint index, GLenum type, GLboolean normalized, const GLuint *value );
-        void       (WINE_GLAPI *p_glVertexAttribP2ui)( GLuint index, GLenum type, GLboolean normalized, GLuint value );
-        void       (WINE_GLAPI *p_glVertexAttribP2uiv)( GLuint index, GLenum type, GLboolean normalized, const GLuint *value );
-        void       (WINE_GLAPI *p_glVertexAttribP3ui)( GLuint index, GLenum type, GLboolean normalized, GLuint value );
-        void       (WINE_GLAPI *p_glVertexAttribP3uiv)( GLuint index, GLenum type, GLboolean normalized, const GLuint *value );
-        void       (WINE_GLAPI *p_glVertexAttribP4ui)( GLuint index, GLenum type, GLboolean normalized, GLuint value );
-        void       (WINE_GLAPI *p_glVertexAttribP4uiv)( GLuint index, GLenum type, GLboolean normalized, const GLuint *value );
-        void       (WINE_GLAPI *p_glVertexAttribParameteriAMD)( GLuint index, GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glVertexAttribPointer)( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexAttribPointerARB)( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexAttribPointerNV)( GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexAttribs1dvNV)( GLuint index, GLsizei count, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribs1fvNV)( GLuint index, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttribs1hvNV)( GLuint index, GLsizei n, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertexAttribs1svNV)( GLuint index, GLsizei count, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttribs2dvNV)( GLuint index, GLsizei count, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribs2fvNV)( GLuint index, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttribs2hvNV)( GLuint index, GLsizei n, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertexAttribs2svNV)( GLuint index, GLsizei count, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttribs3dvNV)( GLuint index, GLsizei count, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribs3fvNV)( GLuint index, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttribs3hvNV)( GLuint index, GLsizei n, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertexAttribs3svNV)( GLuint index, GLsizei count, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttribs4dvNV)( GLuint index, GLsizei count, const GLdouble *v );
-        void       (WINE_GLAPI *p_glVertexAttribs4fvNV)( GLuint index, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glVertexAttribs4hvNV)( GLuint index, GLsizei n, const GLhalfNV *v );
-        void       (WINE_GLAPI *p_glVertexAttribs4svNV)( GLuint index, GLsizei count, const GLshort *v );
-        void       (WINE_GLAPI *p_glVertexAttribs4ubvNV)( GLuint index, GLsizei count, const GLubyte *v );
-        void       (WINE_GLAPI *p_glVertexBindingDivisor)( GLuint bindingindex, GLuint divisor );
-        void       (WINE_GLAPI *p_glVertexBlendARB)( GLint count );
-        void       (WINE_GLAPI *p_glVertexBlendEnvfATI)( GLenum pname, GLfloat param );
-        void       (WINE_GLAPI *p_glVertexBlendEnviATI)( GLenum pname, GLint param );
-        void       (WINE_GLAPI *p_glVertexFormatNV)( GLint size, GLenum type, GLsizei stride );
-        void       (WINE_GLAPI *p_glVertexP2ui)( GLenum type, GLuint value );
-        void       (WINE_GLAPI *p_glVertexP2uiv)( GLenum type, const GLuint *value );
-        void       (WINE_GLAPI *p_glVertexP3ui)( GLenum type, GLuint value );
-        void       (WINE_GLAPI *p_glVertexP3uiv)( GLenum type, const GLuint *value );
-        void       (WINE_GLAPI *p_glVertexP4ui)( GLenum type, GLuint value );
-        void       (WINE_GLAPI *p_glVertexP4uiv)( GLenum type, const GLuint *value );
-        void       (WINE_GLAPI *p_glVertexPointerEXT)( GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexPointerListIBM)( GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride );
-        void       (WINE_GLAPI *p_glVertexPointervINTEL)( GLint size, GLenum type, const void **pointer );
-        void       (WINE_GLAPI *p_glVertexStream1dATI)( GLenum stream, GLdouble x );
-        void       (WINE_GLAPI *p_glVertexStream1dvATI)( GLenum stream, const GLdouble *coords );
-        void       (WINE_GLAPI *p_glVertexStream1fATI)( GLenum stream, GLfloat x );
-        void       (WINE_GLAPI *p_glVertexStream1fvATI)( GLenum stream, const GLfloat *coords );
-        void       (WINE_GLAPI *p_glVertexStream1iATI)( GLenum stream, GLint x );
-        void       (WINE_GLAPI *p_glVertexStream1ivATI)( GLenum stream, const GLint *coords );
-        void       (WINE_GLAPI *p_glVertexStream1sATI)( GLenum stream, GLshort x );
-        void       (WINE_GLAPI *p_glVertexStream1svATI)( GLenum stream, const GLshort *coords );
-        void       (WINE_GLAPI *p_glVertexStream2dATI)( GLenum stream, GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glVertexStream2dvATI)( GLenum stream, const GLdouble *coords );
-        void       (WINE_GLAPI *p_glVertexStream2fATI)( GLenum stream, GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glVertexStream2fvATI)( GLenum stream, const GLfloat *coords );
-        void       (WINE_GLAPI *p_glVertexStream2iATI)( GLenum stream, GLint x, GLint y );
-        void       (WINE_GLAPI *p_glVertexStream2ivATI)( GLenum stream, const GLint *coords );
-        void       (WINE_GLAPI *p_glVertexStream2sATI)( GLenum stream, GLshort x, GLshort y );
-        void       (WINE_GLAPI *p_glVertexStream2svATI)( GLenum stream, const GLshort *coords );
-        void       (WINE_GLAPI *p_glVertexStream3dATI)( GLenum stream, GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glVertexStream3dvATI)( GLenum stream, const GLdouble *coords );
-        void       (WINE_GLAPI *p_glVertexStream3fATI)( GLenum stream, GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glVertexStream3fvATI)( GLenum stream, const GLfloat *coords );
-        void       (WINE_GLAPI *p_glVertexStream3iATI)( GLenum stream, GLint x, GLint y, GLint z );
-        void       (WINE_GLAPI *p_glVertexStream3ivATI)( GLenum stream, const GLint *coords );
-        void       (WINE_GLAPI *p_glVertexStream3sATI)( GLenum stream, GLshort x, GLshort y, GLshort z );
-        void       (WINE_GLAPI *p_glVertexStream3svATI)( GLenum stream, const GLshort *coords );
-        void       (WINE_GLAPI *p_glVertexStream4dATI)( GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glVertexStream4dvATI)( GLenum stream, const GLdouble *coords );
-        void       (WINE_GLAPI *p_glVertexStream4fATI)( GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glVertexStream4fvATI)( GLenum stream, const GLfloat *coords );
-        void       (WINE_GLAPI *p_glVertexStream4iATI)( GLenum stream, GLint x, GLint y, GLint z, GLint w );
-        void       (WINE_GLAPI *p_glVertexStream4ivATI)( GLenum stream, const GLint *coords );
-        void       (WINE_GLAPI *p_glVertexStream4sATI)( GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w );
-        void       (WINE_GLAPI *p_glVertexStream4svATI)( GLenum stream, const GLshort *coords );
-        void       (WINE_GLAPI *p_glVertexWeightPointerEXT)( GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glVertexWeightfEXT)( GLfloat weight );
-        void       (WINE_GLAPI *p_glVertexWeightfvEXT)( const GLfloat *weight );
-        void       (WINE_GLAPI *p_glVertexWeighthNV)( GLhalfNV weight );
-        void       (WINE_GLAPI *p_glVertexWeighthvNV)( const GLhalfNV *weight );
-        GLenum     (WINE_GLAPI *p_glVideoCaptureNV)( GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time );
-        void       (WINE_GLAPI *p_glVideoCaptureStreamParameterdvNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params );
-        void       (WINE_GLAPI *p_glVideoCaptureStreamParameterfvNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params );
-        void       (WINE_GLAPI *p_glVideoCaptureStreamParameterivNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params );
-        void       (WINE_GLAPI *p_glViewportArrayv)( GLuint first, GLsizei count, const GLfloat *v );
-        void       (WINE_GLAPI *p_glViewportIndexedf)( GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h );
-        void       (WINE_GLAPI *p_glViewportIndexedfv)( GLuint index, const GLfloat *v );
-        void       (WINE_GLAPI *p_glViewportPositionWScaleNV)( GLuint index, GLfloat xcoeff, GLfloat ycoeff );
-        void       (WINE_GLAPI *p_glViewportSwizzleNV)( GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew );
-        void       (WINE_GLAPI *p_glWaitSemaphoreEXT)( GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts );
-        void       (WINE_GLAPI *p_glWaitSemaphoreui64NVX)( GLuint waitGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray );
-        void       (WINE_GLAPI *p_glWaitSync)( GLsync sync, GLbitfield flags, GLuint64 timeout );
-        void       (WINE_GLAPI *p_glWaitVkSemaphoreNV)( GLuint64 vkSemaphore );
-        void       (WINE_GLAPI *p_glWeightPathsNV)( GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights );
-        void       (WINE_GLAPI *p_glWeightPointerARB)( GLint size, GLenum type, GLsizei stride, const void *pointer );
-        void       (WINE_GLAPI *p_glWeightbvARB)( GLint size, const GLbyte *weights );
-        void       (WINE_GLAPI *p_glWeightdvARB)( GLint size, const GLdouble *weights );
-        void       (WINE_GLAPI *p_glWeightfvARB)( GLint size, const GLfloat *weights );
-        void       (WINE_GLAPI *p_glWeightivARB)( GLint size, const GLint *weights );
-        void       (WINE_GLAPI *p_glWeightsvARB)( GLint size, const GLshort *weights );
-        void       (WINE_GLAPI *p_glWeightubvARB)( GLint size, const GLubyte *weights );
-        void       (WINE_GLAPI *p_glWeightuivARB)( GLint size, const GLuint *weights );
-        void       (WINE_GLAPI *p_glWeightusvARB)( GLint size, const GLushort *weights );
-        void       (WINE_GLAPI *p_glWindowPos2d)( GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glWindowPos2dARB)( GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glWindowPos2dMESA)( GLdouble x, GLdouble y );
-        void       (WINE_GLAPI *p_glWindowPos2dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glWindowPos2dvARB)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glWindowPos2dvMESA)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glWindowPos2f)( GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glWindowPos2fARB)( GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glWindowPos2fMESA)( GLfloat x, GLfloat y );
-        void       (WINE_GLAPI *p_glWindowPos2fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glWindowPos2fvARB)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glWindowPos2fvMESA)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glWindowPos2i)( GLint x, GLint y );
-        void       (WINE_GLAPI *p_glWindowPos2iARB)( GLint x, GLint y );
-        void       (WINE_GLAPI *p_glWindowPos2iMESA)( GLint x, GLint y );
-        void       (WINE_GLAPI *p_glWindowPos2iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glWindowPos2ivARB)( const GLint *v );
-        void       (WINE_GLAPI *p_glWindowPos2ivMESA)( const GLint *v );
-        void       (WINE_GLAPI *p_glWindowPos2s)( GLshort x, GLshort y );
-        void       (WINE_GLAPI *p_glWindowPos2sARB)( GLshort x, GLshort y );
-        void       (WINE_GLAPI *p_glWindowPos2sMESA)( GLshort x, GLshort y );
-        void       (WINE_GLAPI *p_glWindowPos2sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glWindowPos2svARB)( const GLshort *v );
-        void       (WINE_GLAPI *p_glWindowPos2svMESA)( const GLshort *v );
-        void       (WINE_GLAPI *p_glWindowPos3d)( GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glWindowPos3dARB)( GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glWindowPos3dMESA)( GLdouble x, GLdouble y, GLdouble z );
-        void       (WINE_GLAPI *p_glWindowPos3dv)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glWindowPos3dvARB)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glWindowPos3dvMESA)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glWindowPos3f)( GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glWindowPos3fARB)( GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glWindowPos3fMESA)( GLfloat x, GLfloat y, GLfloat z );
-        void       (WINE_GLAPI *p_glWindowPos3fv)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glWindowPos3fvARB)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glWindowPos3fvMESA)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glWindowPos3i)( GLint x, GLint y, GLint z );
-        void       (WINE_GLAPI *p_glWindowPos3iARB)( GLint x, GLint y, GLint z );
-        void       (WINE_GLAPI *p_glWindowPos3iMESA)( GLint x, GLint y, GLint z );
-        void       (WINE_GLAPI *p_glWindowPos3iv)( const GLint *v );
-        void       (WINE_GLAPI *p_glWindowPos3ivARB)( const GLint *v );
-        void       (WINE_GLAPI *p_glWindowPos3ivMESA)( const GLint *v );
-        void       (WINE_GLAPI *p_glWindowPos3s)( GLshort x, GLshort y, GLshort z );
-        void       (WINE_GLAPI *p_glWindowPos3sARB)( GLshort x, GLshort y, GLshort z );
-        void       (WINE_GLAPI *p_glWindowPos3sMESA)( GLshort x, GLshort y, GLshort z );
-        void       (WINE_GLAPI *p_glWindowPos3sv)( const GLshort *v );
-        void       (WINE_GLAPI *p_glWindowPos3svARB)( const GLshort *v );
-        void       (WINE_GLAPI *p_glWindowPos3svMESA)( const GLshort *v );
-        void       (WINE_GLAPI *p_glWindowPos4dMESA)( GLdouble x, GLdouble y, GLdouble z, GLdouble w );
-        void       (WINE_GLAPI *p_glWindowPos4dvMESA)( const GLdouble *v );
-        void       (WINE_GLAPI *p_glWindowPos4fMESA)( GLfloat x, GLfloat y, GLfloat z, GLfloat w );
-        void       (WINE_GLAPI *p_glWindowPos4fvMESA)( const GLfloat *v );
-        void       (WINE_GLAPI *p_glWindowPos4iMESA)( GLint x, GLint y, GLint z, GLint w );
-        void       (WINE_GLAPI *p_glWindowPos4ivMESA)( const GLint *v );
-        void       (WINE_GLAPI *p_glWindowPos4sMESA)( GLshort x, GLshort y, GLshort z, GLshort w );
-        void       (WINE_GLAPI *p_glWindowPos4svMESA)( const GLshort *v );
-        void       (WINE_GLAPI *p_glWindowRectanglesEXT)( GLenum mode, GLsizei count, const GLint *box );
-        void       (WINE_GLAPI *p_glWriteMaskEXT)( GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW );
-        void *     (WINE_GLAPI *p_wglAllocateMemoryNV)( GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority );
-        BOOL       (WINE_GLAPI *p_wglBindTexImageARB)( struct wgl_pbuffer * hPbuffer, int iBuffer );
-        BOOL       (WINE_GLAPI *p_wglChoosePixelFormatARB)( HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats );
-        struct wgl_context * (WINE_GLAPI *p_wglCreateContextAttribsARB)( HDC hDC, struct wgl_context * hShareContext, const int *attribList );
-        struct wgl_pbuffer * (WINE_GLAPI *p_wglCreatePbufferARB)( HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList );
-        BOOL       (WINE_GLAPI *p_wglDestroyPbufferARB)( struct wgl_pbuffer * hPbuffer );
-        void       (WINE_GLAPI *p_wglFreeMemoryNV)( void *pointer );
-        HDC        (WINE_GLAPI *p_wglGetCurrentReadDCARB)(void);
-        const char * (WINE_GLAPI *p_wglGetExtensionsStringARB)( HDC hdc );
-        const char * (WINE_GLAPI *p_wglGetExtensionsStringEXT)(void);
-        HDC        (WINE_GLAPI *p_wglGetPbufferDCARB)( struct wgl_pbuffer * hPbuffer );
-        BOOL       (WINE_GLAPI *p_wglGetPixelFormatAttribfvARB)( HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues );
-        BOOL       (WINE_GLAPI *p_wglGetPixelFormatAttribivARB)( HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues );
-        int        (WINE_GLAPI *p_wglGetSwapIntervalEXT)(void);
-        BOOL       (WINE_GLAPI *p_wglMakeContextCurrentARB)( HDC hDrawDC, HDC hReadDC, struct wgl_context * hglrc );
-        BOOL       (WINE_GLAPI *p_wglQueryCurrentRendererIntegerWINE)( GLenum attribute, GLuint *value );
-        const GLchar * (WINE_GLAPI *p_wglQueryCurrentRendererStringWINE)( GLenum attribute );
-        BOOL       (WINE_GLAPI *p_wglQueryPbufferARB)( struct wgl_pbuffer * hPbuffer, int iAttribute, int *piValue );
-        BOOL       (WINE_GLAPI *p_wglQueryRendererIntegerWINE)( HDC dc, GLint renderer, GLenum attribute, GLuint *value );
-        const GLchar * (WINE_GLAPI *p_wglQueryRendererStringWINE)( HDC dc, GLint renderer, GLenum attribute );
-        int        (WINE_GLAPI *p_wglReleasePbufferDCARB)( struct wgl_pbuffer * hPbuffer, HDC hDC );
-        BOOL       (WINE_GLAPI *p_wglReleaseTexImageARB)( struct wgl_pbuffer * hPbuffer, int iBuffer );
-        BOOL       (WINE_GLAPI *p_wglSetPbufferAttribARB)( struct wgl_pbuffer * hPbuffer, const int *piAttribList );
-        BOOL       (WINE_GLAPI *p_wglSetPixelFormatWINE)( HDC hdc, int format );
-        BOOL       (WINE_GLAPI *p_wglSwapIntervalEXT)( int interval );
-    } ext;
+    BOOL       (*p_wglCopyContext)( struct wgl_context * hglrcSrc, struct wgl_context * hglrcDst, UINT mask );
+    struct wgl_context * (*p_wglCreateContext)( HDC hDc );
+    BOOL       (*p_wglDeleteContext)( struct wgl_context * oldContext );
+    int        (*p_wglGetPixelFormat)( HDC hdc );
+    PROC       (*p_wglGetProcAddress)( LPCSTR lpszProc );
+    BOOL       (*p_wglMakeCurrent)( HDC hDc, struct wgl_context * newContext );
+    BOOL       (*p_wglSetPixelFormat)( HDC hdc, int ipfd, const PIXELFORMATDESCRIPTOR *ppfd );
+    BOOL       (*p_wglShareLists)( struct wgl_context * hrcSrvShare, struct wgl_context * hrcSrvSource );
+    BOOL       (*p_wglSwapBuffers)( HDC hdc );
+    void       (*p_get_pixel_formats)( struct wgl_pixel_format *formats, UINT max_formats, UINT *num_formats, UINT *num_onscreen_formats );
+    void       (*p_glAccum)( GLenum op, GLfloat value );
+    void       (*p_glAlphaFunc)( GLenum func, GLfloat ref );
+    GLboolean  (*p_glAreTexturesResident)( GLsizei n, const GLuint *textures, GLboolean *residences );
+    void       (*p_glArrayElement)( GLint i );
+    void       (*p_glBegin)( GLenum mode );
+    void       (*p_glBindTexture)( GLenum target, GLuint texture );
+    void       (*p_glBitmap)( GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap );
+    void       (*p_glBlendFunc)( GLenum sfactor, GLenum dfactor );
+    void       (*p_glCallList)( GLuint list );
+    void       (*p_glCallLists)( GLsizei n, GLenum type, const void *lists );
+    void       (*p_glClear)( GLbitfield mask );
+    void       (*p_glClearAccum)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
+    void       (*p_glClearColor)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
+    void       (*p_glClearDepth)( GLdouble depth );
+    void       (*p_glClearIndex)( GLfloat c );
+    void       (*p_glClearStencil)( GLint s );
+    void       (*p_glClipPlane)( GLenum plane, const GLdouble *equation );
+    void       (*p_glColor3b)( GLbyte red, GLbyte green, GLbyte blue );
+    void       (*p_glColor3bv)( const GLbyte *v );
+    void       (*p_glColor3d)( GLdouble red, GLdouble green, GLdouble blue );
+    void       (*p_glColor3dv)( const GLdouble *v );
+    void       (*p_glColor3f)( GLfloat red, GLfloat green, GLfloat blue );
+    void       (*p_glColor3fv)( const GLfloat *v );
+    void       (*p_glColor3i)( GLint red, GLint green, GLint blue );
+    void       (*p_glColor3iv)( const GLint *v );
+    void       (*p_glColor3s)( GLshort red, GLshort green, GLshort blue );
+    void       (*p_glColor3sv)( const GLshort *v );
+    void       (*p_glColor3ub)( GLubyte red, GLubyte green, GLubyte blue );
+    void       (*p_glColor3ubv)( const GLubyte *v );
+    void       (*p_glColor3ui)( GLuint red, GLuint green, GLuint blue );
+    void       (*p_glColor3uiv)( const GLuint *v );
+    void       (*p_glColor3us)( GLushort red, GLushort green, GLushort blue );
+    void       (*p_glColor3usv)( const GLushort *v );
+    void       (*p_glColor4b)( GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha );
+    void       (*p_glColor4bv)( const GLbyte *v );
+    void       (*p_glColor4d)( GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha );
+    void       (*p_glColor4dv)( const GLdouble *v );
+    void       (*p_glColor4f)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
+    void       (*p_glColor4fv)( const GLfloat *v );
+    void       (*p_glColor4i)( GLint red, GLint green, GLint blue, GLint alpha );
+    void       (*p_glColor4iv)( const GLint *v );
+    void       (*p_glColor4s)( GLshort red, GLshort green, GLshort blue, GLshort alpha );
+    void       (*p_glColor4sv)( const GLshort *v );
+    void       (*p_glColor4ub)( GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha );
+    void       (*p_glColor4ubv)( const GLubyte *v );
+    void       (*p_glColor4ui)( GLuint red, GLuint green, GLuint blue, GLuint alpha );
+    void       (*p_glColor4uiv)( const GLuint *v );
+    void       (*p_glColor4us)( GLushort red, GLushort green, GLushort blue, GLushort alpha );
+    void       (*p_glColor4usv)( const GLushort *v );
+    void       (*p_glColorMask)( GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha );
+    void       (*p_glColorMaterial)( GLenum face, GLenum mode );
+    void       (*p_glColorPointer)( GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glCopyPixels)( GLint x, GLint y, GLsizei width, GLsizei height, GLenum type );
+    void       (*p_glCopyTexImage1D)( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
+    void       (*p_glCopyTexImage2D)( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );
+    void       (*p_glCopyTexSubImage1D)( GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyTexSubImage2D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCullFace)( GLenum mode );
+    void       (*p_glDeleteLists)( GLuint list, GLsizei range );
+    void       (*p_glDeleteTextures)( GLsizei n, const GLuint *textures );
+    void       (*p_glDepthFunc)( GLenum func );
+    void       (*p_glDepthMask)( GLboolean flag );
+    void       (*p_glDepthRange)( GLdouble n, GLdouble f );
+    void       (*p_glDisable)( GLenum cap );
+    void       (*p_glDisableClientState)( GLenum array );
+    void       (*p_glDrawArrays)( GLenum mode, GLint first, GLsizei count );
+    void       (*p_glDrawBuffer)( GLenum buf );
+    void       (*p_glDrawElements)( GLenum mode, GLsizei count, GLenum type, const void *indices );
+    void       (*p_glDrawPixels)( GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glEdgeFlag)( GLboolean flag );
+    void       (*p_glEdgeFlagPointer)( GLsizei stride, const void *pointer );
+    void       (*p_glEdgeFlagv)( const GLboolean *flag );
+    void       (*p_glEnable)( GLenum cap );
+    void       (*p_glEnableClientState)( GLenum array );
+    void       (*p_glEnd)(void);
+    void       (*p_glEndList)(void);
+    void       (*p_glEvalCoord1d)( GLdouble u );
+    void       (*p_glEvalCoord1dv)( const GLdouble *u );
+    void       (*p_glEvalCoord1f)( GLfloat u );
+    void       (*p_glEvalCoord1fv)( const GLfloat *u );
+    void       (*p_glEvalCoord2d)( GLdouble u, GLdouble v );
+    void       (*p_glEvalCoord2dv)( const GLdouble *u );
+    void       (*p_glEvalCoord2f)( GLfloat u, GLfloat v );
+    void       (*p_glEvalCoord2fv)( const GLfloat *u );
+    void       (*p_glEvalMesh1)( GLenum mode, GLint i1, GLint i2 );
+    void       (*p_glEvalMesh2)( GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2 );
+    void       (*p_glEvalPoint1)( GLint i );
+    void       (*p_glEvalPoint2)( GLint i, GLint j );
+    void       (*p_glFeedbackBuffer)( GLsizei size, GLenum type, GLfloat *buffer );
+    void       (*p_glFinish)(void);
+    void       (*p_glFlush)(void);
+    void       (*p_glFogf)( GLenum pname, GLfloat param );
+    void       (*p_glFogfv)( GLenum pname, const GLfloat *params );
+    void       (*p_glFogi)( GLenum pname, GLint param );
+    void       (*p_glFogiv)( GLenum pname, const GLint *params );
+    void       (*p_glFrontFace)( GLenum mode );
+    void       (*p_glFrustum)( GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar );
+    GLuint     (*p_glGenLists)( GLsizei range );
+    void       (*p_glGenTextures)( GLsizei n, GLuint *textures );
+    void       (*p_glGetBooleanv)( GLenum pname, GLboolean *data );
+    void       (*p_glGetClipPlane)( GLenum plane, GLdouble *equation );
+    void       (*p_glGetDoublev)( GLenum pname, GLdouble *data );
+    GLenum     (*p_glGetError)(void);
+    void       (*p_glGetFloatv)( GLenum pname, GLfloat *data );
+    void       (*p_glGetIntegerv)( GLenum pname, GLint *data );
+    void       (*p_glGetLightfv)( GLenum light, GLenum pname, GLfloat *params );
+    void       (*p_glGetLightiv)( GLenum light, GLenum pname, GLint *params );
+    void       (*p_glGetMapdv)( GLenum target, GLenum query, GLdouble *v );
+    void       (*p_glGetMapfv)( GLenum target, GLenum query, GLfloat *v );
+    void       (*p_glGetMapiv)( GLenum target, GLenum query, GLint *v );
+    void       (*p_glGetMaterialfv)( GLenum face, GLenum pname, GLfloat *params );
+    void       (*p_glGetMaterialiv)( GLenum face, GLenum pname, GLint *params );
+    void       (*p_glGetPixelMapfv)( GLenum map, GLfloat *values );
+    void       (*p_glGetPixelMapuiv)( GLenum map, GLuint *values );
+    void       (*p_glGetPixelMapusv)( GLenum map, GLushort *values );
+    void       (*p_glGetPointerv)( GLenum pname, void **params );
+    void       (*p_glGetPolygonStipple)( GLubyte *mask );
+    const GLubyte * (*p_glGetString)( GLenum name );
+    void       (*p_glGetTexEnvfv)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetTexEnviv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetTexGendv)( GLenum coord, GLenum pname, GLdouble *params );
+    void       (*p_glGetTexGenfv)( GLenum coord, GLenum pname, GLfloat *params );
+    void       (*p_glGetTexGeniv)( GLenum coord, GLenum pname, GLint *params );
+    void       (*p_glGetTexImage)( GLenum target, GLint level, GLenum format, GLenum type, void *pixels );
+    void       (*p_glGetTexLevelParameterfv)( GLenum target, GLint level, GLenum pname, GLfloat *params );
+    void       (*p_glGetTexLevelParameteriv)( GLenum target, GLint level, GLenum pname, GLint *params );
+    void       (*p_glGetTexParameterfv)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetTexParameteriv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glHint)( GLenum target, GLenum mode );
+    void       (*p_glIndexMask)( GLuint mask );
+    void       (*p_glIndexPointer)( GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glIndexd)( GLdouble c );
+    void       (*p_glIndexdv)( const GLdouble *c );
+    void       (*p_glIndexf)( GLfloat c );
+    void       (*p_glIndexfv)( const GLfloat *c );
+    void       (*p_glIndexi)( GLint c );
+    void       (*p_glIndexiv)( const GLint *c );
+    void       (*p_glIndexs)( GLshort c );
+    void       (*p_glIndexsv)( const GLshort *c );
+    void       (*p_glIndexub)( GLubyte c );
+    void       (*p_glIndexubv)( const GLubyte *c );
+    void       (*p_glInitNames)(void);
+    void       (*p_glInterleavedArrays)( GLenum format, GLsizei stride, const void *pointer );
+    GLboolean  (*p_glIsEnabled)( GLenum cap );
+    GLboolean  (*p_glIsList)( GLuint list );
+    GLboolean  (*p_glIsTexture)( GLuint texture );
+    void       (*p_glLightModelf)( GLenum pname, GLfloat param );
+    void       (*p_glLightModelfv)( GLenum pname, const GLfloat *params );
+    void       (*p_glLightModeli)( GLenum pname, GLint param );
+    void       (*p_glLightModeliv)( GLenum pname, const GLint *params );
+    void       (*p_glLightf)( GLenum light, GLenum pname, GLfloat param );
+    void       (*p_glLightfv)( GLenum light, GLenum pname, const GLfloat *params );
+    void       (*p_glLighti)( GLenum light, GLenum pname, GLint param );
+    void       (*p_glLightiv)( GLenum light, GLenum pname, const GLint *params );
+    void       (*p_glLineStipple)( GLint factor, GLushort pattern );
+    void       (*p_glLineWidth)( GLfloat width );
+    void       (*p_glListBase)( GLuint base );
+    void       (*p_glLoadIdentity)(void);
+    void       (*p_glLoadMatrixd)( const GLdouble *m );
+    void       (*p_glLoadMatrixf)( const GLfloat *m );
+    void       (*p_glLoadName)( GLuint name );
+    void       (*p_glLogicOp)( GLenum opcode );
+    void       (*p_glMap1d)( GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points );
+    void       (*p_glMap1f)( GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points );
+    void       (*p_glMap2d)( GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points );
+    void       (*p_glMap2f)( GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points );
+    void       (*p_glMapGrid1d)( GLint un, GLdouble u1, GLdouble u2 );
+    void       (*p_glMapGrid1f)( GLint un, GLfloat u1, GLfloat u2 );
+    void       (*p_glMapGrid2d)( GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2 );
+    void       (*p_glMapGrid2f)( GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2 );
+    void       (*p_glMaterialf)( GLenum face, GLenum pname, GLfloat param );
+    void       (*p_glMaterialfv)( GLenum face, GLenum pname, const GLfloat *params );
+    void       (*p_glMateriali)( GLenum face, GLenum pname, GLint param );
+    void       (*p_glMaterialiv)( GLenum face, GLenum pname, const GLint *params );
+    void       (*p_glMatrixMode)( GLenum mode );
+    void       (*p_glMultMatrixd)( const GLdouble *m );
+    void       (*p_glMultMatrixf)( const GLfloat *m );
+    void       (*p_glNewList)( GLuint list, GLenum mode );
+    void       (*p_glNormal3b)( GLbyte nx, GLbyte ny, GLbyte nz );
+    void       (*p_glNormal3bv)( const GLbyte *v );
+    void       (*p_glNormal3d)( GLdouble nx, GLdouble ny, GLdouble nz );
+    void       (*p_glNormal3dv)( const GLdouble *v );
+    void       (*p_glNormal3f)( GLfloat nx, GLfloat ny, GLfloat nz );
+    void       (*p_glNormal3fv)( const GLfloat *v );
+    void       (*p_glNormal3i)( GLint nx, GLint ny, GLint nz );
+    void       (*p_glNormal3iv)( const GLint *v );
+    void       (*p_glNormal3s)( GLshort nx, GLshort ny, GLshort nz );
+    void       (*p_glNormal3sv)( const GLshort *v );
+    void       (*p_glNormalPointer)( GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glOrtho)( GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar );
+    void       (*p_glPassThrough)( GLfloat token );
+    void       (*p_glPixelMapfv)( GLenum map, GLsizei mapsize, const GLfloat *values );
+    void       (*p_glPixelMapuiv)( GLenum map, GLsizei mapsize, const GLuint *values );
+    void       (*p_glPixelMapusv)( GLenum map, GLsizei mapsize, const GLushort *values );
+    void       (*p_glPixelStoref)( GLenum pname, GLfloat param );
+    void       (*p_glPixelStorei)( GLenum pname, GLint param );
+    void       (*p_glPixelTransferf)( GLenum pname, GLfloat param );
+    void       (*p_glPixelTransferi)( GLenum pname, GLint param );
+    void       (*p_glPixelZoom)( GLfloat xfactor, GLfloat yfactor );
+    void       (*p_glPointSize)( GLfloat size );
+    void       (*p_glPolygonMode)( GLenum face, GLenum mode );
+    void       (*p_glPolygonOffset)( GLfloat factor, GLfloat units );
+    void       (*p_glPolygonStipple)( const GLubyte *mask );
+    void       (*p_glPopAttrib)(void);
+    void       (*p_glPopClientAttrib)(void);
+    void       (*p_glPopMatrix)(void);
+    void       (*p_glPopName)(void);
+    void       (*p_glPrioritizeTextures)( GLsizei n, const GLuint *textures, const GLfloat *priorities );
+    void       (*p_glPushAttrib)( GLbitfield mask );
+    void       (*p_glPushClientAttrib)( GLbitfield mask );
+    void       (*p_glPushMatrix)(void);
+    void       (*p_glPushName)( GLuint name );
+    void       (*p_glRasterPos2d)( GLdouble x, GLdouble y );
+    void       (*p_glRasterPos2dv)( const GLdouble *v );
+    void       (*p_glRasterPos2f)( GLfloat x, GLfloat y );
+    void       (*p_glRasterPos2fv)( const GLfloat *v );
+    void       (*p_glRasterPos2i)( GLint x, GLint y );
+    void       (*p_glRasterPos2iv)( const GLint *v );
+    void       (*p_glRasterPos2s)( GLshort x, GLshort y );
+    void       (*p_glRasterPos2sv)( const GLshort *v );
+    void       (*p_glRasterPos3d)( GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glRasterPos3dv)( const GLdouble *v );
+    void       (*p_glRasterPos3f)( GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glRasterPos3fv)( const GLfloat *v );
+    void       (*p_glRasterPos3i)( GLint x, GLint y, GLint z );
+    void       (*p_glRasterPos3iv)( const GLint *v );
+    void       (*p_glRasterPos3s)( GLshort x, GLshort y, GLshort z );
+    void       (*p_glRasterPos3sv)( const GLshort *v );
+    void       (*p_glRasterPos4d)( GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glRasterPos4dv)( const GLdouble *v );
+    void       (*p_glRasterPos4f)( GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glRasterPos4fv)( const GLfloat *v );
+    void       (*p_glRasterPos4i)( GLint x, GLint y, GLint z, GLint w );
+    void       (*p_glRasterPos4iv)( const GLint *v );
+    void       (*p_glRasterPos4s)( GLshort x, GLshort y, GLshort z, GLshort w );
+    void       (*p_glRasterPos4sv)( const GLshort *v );
+    void       (*p_glReadBuffer)( GLenum src );
+    void       (*p_glReadPixels)( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels );
+    void       (*p_glRectd)( GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2 );
+    void       (*p_glRectdv)( const GLdouble *v1, const GLdouble *v2 );
+    void       (*p_glRectf)( GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2 );
+    void       (*p_glRectfv)( const GLfloat *v1, const GLfloat *v2 );
+    void       (*p_glRecti)( GLint x1, GLint y1, GLint x2, GLint y2 );
+    void       (*p_glRectiv)( const GLint *v1, const GLint *v2 );
+    void       (*p_glRects)( GLshort x1, GLshort y1, GLshort x2, GLshort y2 );
+    void       (*p_glRectsv)( const GLshort *v1, const GLshort *v2 );
+    GLint      (*p_glRenderMode)( GLenum mode );
+    void       (*p_glRotated)( GLdouble angle, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glRotatef)( GLfloat angle, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glScaled)( GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glScalef)( GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glScissor)( GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glSelectBuffer)( GLsizei size, GLuint *buffer );
+    void       (*p_glShadeModel)( GLenum mode );
+    void       (*p_glStencilFunc)( GLenum func, GLint ref, GLuint mask );
+    void       (*p_glStencilMask)( GLuint mask );
+    void       (*p_glStencilOp)( GLenum fail, GLenum zfail, GLenum zpass );
+    void       (*p_glTexCoord1d)( GLdouble s );
+    void       (*p_glTexCoord1dv)( const GLdouble *v );
+    void       (*p_glTexCoord1f)( GLfloat s );
+    void       (*p_glTexCoord1fv)( const GLfloat *v );
+    void       (*p_glTexCoord1i)( GLint s );
+    void       (*p_glTexCoord1iv)( const GLint *v );
+    void       (*p_glTexCoord1s)( GLshort s );
+    void       (*p_glTexCoord1sv)( const GLshort *v );
+    void       (*p_glTexCoord2d)( GLdouble s, GLdouble t );
+    void       (*p_glTexCoord2dv)( const GLdouble *v );
+    void       (*p_glTexCoord2f)( GLfloat s, GLfloat t );
+    void       (*p_glTexCoord2fv)( const GLfloat *v );
+    void       (*p_glTexCoord2i)( GLint s, GLint t );
+    void       (*p_glTexCoord2iv)( const GLint *v );
+    void       (*p_glTexCoord2s)( GLshort s, GLshort t );
+    void       (*p_glTexCoord2sv)( const GLshort *v );
+    void       (*p_glTexCoord3d)( GLdouble s, GLdouble t, GLdouble r );
+    void       (*p_glTexCoord3dv)( const GLdouble *v );
+    void       (*p_glTexCoord3f)( GLfloat s, GLfloat t, GLfloat r );
+    void       (*p_glTexCoord3fv)( const GLfloat *v );
+    void       (*p_glTexCoord3i)( GLint s, GLint t, GLint r );
+    void       (*p_glTexCoord3iv)( const GLint *v );
+    void       (*p_glTexCoord3s)( GLshort s, GLshort t, GLshort r );
+    void       (*p_glTexCoord3sv)( const GLshort *v );
+    void       (*p_glTexCoord4d)( GLdouble s, GLdouble t, GLdouble r, GLdouble q );
+    void       (*p_glTexCoord4dv)( const GLdouble *v );
+    void       (*p_glTexCoord4f)( GLfloat s, GLfloat t, GLfloat r, GLfloat q );
+    void       (*p_glTexCoord4fv)( const GLfloat *v );
+    void       (*p_glTexCoord4i)( GLint s, GLint t, GLint r, GLint q );
+    void       (*p_glTexCoord4iv)( const GLint *v );
+    void       (*p_glTexCoord4s)( GLshort s, GLshort t, GLshort r, GLshort q );
+    void       (*p_glTexCoord4sv)( const GLshort *v );
+    void       (*p_glTexCoordPointer)( GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glTexEnvf)( GLenum target, GLenum pname, GLfloat param );
+    void       (*p_glTexEnvfv)( GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glTexEnvi)( GLenum target, GLenum pname, GLint param );
+    void       (*p_glTexEnviv)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glTexGend)( GLenum coord, GLenum pname, GLdouble param );
+    void       (*p_glTexGendv)( GLenum coord, GLenum pname, const GLdouble *params );
+    void       (*p_glTexGenf)( GLenum coord, GLenum pname, GLfloat param );
+    void       (*p_glTexGenfv)( GLenum coord, GLenum pname, const GLfloat *params );
+    void       (*p_glTexGeni)( GLenum coord, GLenum pname, GLint param );
+    void       (*p_glTexGeniv)( GLenum coord, GLenum pname, const GLint *params );
+    void       (*p_glTexImage1D)( GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexImage2D)( GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexParameterf)( GLenum target, GLenum pname, GLfloat param );
+    void       (*p_glTexParameterfv)( GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glTexParameteri)( GLenum target, GLenum pname, GLint param );
+    void       (*p_glTexParameteriv)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glTexSubImage1D)( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexSubImage2D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTranslated)( GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glTranslatef)( GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glVertex2d)( GLdouble x, GLdouble y );
+    void       (*p_glVertex2dv)( const GLdouble *v );
+    void       (*p_glVertex2f)( GLfloat x, GLfloat y );
+    void       (*p_glVertex2fv)( const GLfloat *v );
+    void       (*p_glVertex2i)( GLint x, GLint y );
+    void       (*p_glVertex2iv)( const GLint *v );
+    void       (*p_glVertex2s)( GLshort x, GLshort y );
+    void       (*p_glVertex2sv)( const GLshort *v );
+    void       (*p_glVertex3d)( GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glVertex3dv)( const GLdouble *v );
+    void       (*p_glVertex3f)( GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glVertex3fv)( const GLfloat *v );
+    void       (*p_glVertex3i)( GLint x, GLint y, GLint z );
+    void       (*p_glVertex3iv)( const GLint *v );
+    void       (*p_glVertex3s)( GLshort x, GLshort y, GLshort z );
+    void       (*p_glVertex3sv)( const GLshort *v );
+    void       (*p_glVertex4d)( GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glVertex4dv)( const GLdouble *v );
+    void       (*p_glVertex4f)( GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glVertex4fv)( const GLfloat *v );
+    void       (*p_glVertex4i)( GLint x, GLint y, GLint z, GLint w );
+    void       (*p_glVertex4iv)( const GLint *v );
+    void       (*p_glVertex4s)( GLshort x, GLshort y, GLshort z, GLshort w );
+    void       (*p_glVertex4sv)( const GLshort *v );
+    void       (*p_glVertexPointer)( GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glViewport)( GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glAccumxOES)( GLenum op, GLfixed value );
+    GLboolean  (*p_glAcquireKeyedMutexWin32EXT)( GLuint memory, GLuint64 key, GLuint timeout );
+    void       (*p_glActiveProgramEXT)( GLuint program );
+    void       (*p_glActiveShaderProgram)( GLuint pipeline, GLuint program );
+    void       (*p_glActiveStencilFaceEXT)( GLenum face );
+    void       (*p_glActiveTexture)( GLenum texture );
+    void       (*p_glActiveTextureARB)( GLenum texture );
+    void       (*p_glActiveVaryingNV)( GLuint program, const GLchar *name );
+    void       (*p_glAlphaFragmentOp1ATI)( GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod );
+    void       (*p_glAlphaFragmentOp2ATI)( GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod );
+    void       (*p_glAlphaFragmentOp3ATI)( GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod );
+    void       (*p_glAlphaFuncxOES)( GLenum func, GLfixed ref );
+    void       (*p_glAlphaToCoverageDitherControlNV)( GLenum mode );
+    void       (*p_glApplyFramebufferAttachmentCMAAINTEL)(void);
+    void       (*p_glApplyTextureEXT)( GLenum mode );
+    GLboolean  (*p_glAreProgramsResidentNV)( GLsizei n, const GLuint *programs, GLboolean *residences );
+    GLboolean  (*p_glAreTexturesResidentEXT)( GLsizei n, const GLuint *textures, GLboolean *residences );
+    void       (*p_glArrayElementEXT)( GLint i );
+    void       (*p_glArrayObjectATI)( GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset );
+    GLuint     (*p_glAsyncCopyBufferSubDataNVX)( GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *fenceValueArray, GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray );
+    GLuint     (*p_glAsyncCopyImageSubDataNVX)( GLsizei waitSemaphoreCount, const GLuint *waitSemaphoreArray, const GLuint64 *waitValueArray, GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsizei signalSemaphoreCount, const GLuint *signalSemaphoreArray, const GLuint64 *signalValueArray );
+    void       (*p_glAsyncMarkerSGIX)( GLuint marker );
+    void       (*p_glAttachObjectARB)( GLhandleARB containerObj, GLhandleARB obj );
+    void       (*p_glAttachShader)( GLuint program, GLuint shader );
+    void       (*p_glBeginConditionalRender)( GLuint id, GLenum mode );
+    void       (*p_glBeginConditionalRenderNV)( GLuint id, GLenum mode );
+    void       (*p_glBeginConditionalRenderNVX)( GLuint id );
+    void       (*p_glBeginFragmentShaderATI)(void);
+    void       (*p_glBeginOcclusionQueryNV)( GLuint id );
+    void       (*p_glBeginPerfMonitorAMD)( GLuint monitor );
+    void       (*p_glBeginPerfQueryINTEL)( GLuint queryHandle );
+    void       (*p_glBeginQuery)( GLenum target, GLuint id );
+    void       (*p_glBeginQueryARB)( GLenum target, GLuint id );
+    void       (*p_glBeginQueryIndexed)( GLenum target, GLuint index, GLuint id );
+    void       (*p_glBeginTransformFeedback)( GLenum primitiveMode );
+    void       (*p_glBeginTransformFeedbackEXT)( GLenum primitiveMode );
+    void       (*p_glBeginTransformFeedbackNV)( GLenum primitiveMode );
+    void       (*p_glBeginVertexShaderEXT)(void);
+    void       (*p_glBeginVideoCaptureNV)( GLuint video_capture_slot );
+    void       (*p_glBindAttribLocation)( GLuint program, GLuint index, const GLchar *name );
+    void       (*p_glBindAttribLocationARB)( GLhandleARB programObj, GLuint index, const GLcharARB *name );
+    void       (*p_glBindBuffer)( GLenum target, GLuint buffer );
+    void       (*p_glBindBufferARB)( GLenum target, GLuint buffer );
+    void       (*p_glBindBufferBase)( GLenum target, GLuint index, GLuint buffer );
+    void       (*p_glBindBufferBaseEXT)( GLenum target, GLuint index, GLuint buffer );
+    void       (*p_glBindBufferBaseNV)( GLenum target, GLuint index, GLuint buffer );
+    void       (*p_glBindBufferOffsetEXT)( GLenum target, GLuint index, GLuint buffer, GLintptr offset );
+    void       (*p_glBindBufferOffsetNV)( GLenum target, GLuint index, GLuint buffer, GLintptr offset );
+    void       (*p_glBindBufferRange)( GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size );
+    void       (*p_glBindBufferRangeEXT)( GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size );
+    void       (*p_glBindBufferRangeNV)( GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size );
+    void       (*p_glBindBuffersBase)( GLenum target, GLuint first, GLsizei count, const GLuint *buffers );
+    void       (*p_glBindBuffersRange)( GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes );
+    void       (*p_glBindFragDataLocation)( GLuint program, GLuint color, const GLchar *name );
+    void       (*p_glBindFragDataLocationEXT)( GLuint program, GLuint color, const GLchar *name );
+    void       (*p_glBindFragDataLocationIndexed)( GLuint program, GLuint colorNumber, GLuint index, const GLchar *name );
+    void       (*p_glBindFragmentShaderATI)( GLuint id );
+    void       (*p_glBindFramebuffer)( GLenum target, GLuint framebuffer );
+    void       (*p_glBindFramebufferEXT)( GLenum target, GLuint framebuffer );
+    void       (*p_glBindImageTexture)( GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format );
+    void       (*p_glBindImageTextureEXT)( GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format );
+    void       (*p_glBindImageTextures)( GLuint first, GLsizei count, const GLuint *textures );
+    GLuint     (*p_glBindLightParameterEXT)( GLenum light, GLenum value );
+    GLuint     (*p_glBindMaterialParameterEXT)( GLenum face, GLenum value );
+    void       (*p_glBindMultiTextureEXT)( GLenum texunit, GLenum target, GLuint texture );
+    GLuint     (*p_glBindParameterEXT)( GLenum value );
+    void       (*p_glBindProgramARB)( GLenum target, GLuint program );
+    void       (*p_glBindProgramNV)( GLenum target, GLuint id );
+    void       (*p_glBindProgramPipeline)( GLuint pipeline );
+    void       (*p_glBindRenderbuffer)( GLenum target, GLuint renderbuffer );
+    void       (*p_glBindRenderbufferEXT)( GLenum target, GLuint renderbuffer );
+    void       (*p_glBindSampler)( GLuint unit, GLuint sampler );
+    void       (*p_glBindSamplers)( GLuint first, GLsizei count, const GLuint *samplers );
+    void       (*p_glBindShadingRateImageNV)( GLuint texture );
+    GLuint     (*p_glBindTexGenParameterEXT)( GLenum unit, GLenum coord, GLenum value );
+    void       (*p_glBindTextureEXT)( GLenum target, GLuint texture );
+    void       (*p_glBindTextureUnit)( GLuint unit, GLuint texture );
+    GLuint     (*p_glBindTextureUnitParameterEXT)( GLenum unit, GLenum value );
+    void       (*p_glBindTextures)( GLuint first, GLsizei count, const GLuint *textures );
+    void       (*p_glBindTransformFeedback)( GLenum target, GLuint id );
+    void       (*p_glBindTransformFeedbackNV)( GLenum target, GLuint id );
+    void       (*p_glBindVertexArray)( GLuint array );
+    void       (*p_glBindVertexArrayAPPLE)( GLuint array );
+    void       (*p_glBindVertexBuffer)( GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride );
+    void       (*p_glBindVertexBuffers)( GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides );
+    void       (*p_glBindVertexShaderEXT)( GLuint id );
+    void       (*p_glBindVideoCaptureStreamBufferNV)( GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset );
+    void       (*p_glBindVideoCaptureStreamTextureNV)( GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture );
+    void       (*p_glBinormal3bEXT)( GLbyte bx, GLbyte by, GLbyte bz );
+    void       (*p_glBinormal3bvEXT)( const GLbyte *v );
+    void       (*p_glBinormal3dEXT)( GLdouble bx, GLdouble by, GLdouble bz );
+    void       (*p_glBinormal3dvEXT)( const GLdouble *v );
+    void       (*p_glBinormal3fEXT)( GLfloat bx, GLfloat by, GLfloat bz );
+    void       (*p_glBinormal3fvEXT)( const GLfloat *v );
+    void       (*p_glBinormal3iEXT)( GLint bx, GLint by, GLint bz );
+    void       (*p_glBinormal3ivEXT)( const GLint *v );
+    void       (*p_glBinormal3sEXT)( GLshort bx, GLshort by, GLshort bz );
+    void       (*p_glBinormal3svEXT)( const GLshort *v );
+    void       (*p_glBinormalPointerEXT)( GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glBitmapxOES)( GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap );
+    void       (*p_glBlendBarrierKHR)(void);
+    void       (*p_glBlendBarrierNV)(void);
+    void       (*p_glBlendColor)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
+    void       (*p_glBlendColorEXT)( GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha );
+    void       (*p_glBlendColorxOES)( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha );
+    void       (*p_glBlendEquation)( GLenum mode );
+    void       (*p_glBlendEquationEXT)( GLenum mode );
+    void       (*p_glBlendEquationIndexedAMD)( GLuint buf, GLenum mode );
+    void       (*p_glBlendEquationSeparate)( GLenum modeRGB, GLenum modeAlpha );
+    void       (*p_glBlendEquationSeparateEXT)( GLenum modeRGB, GLenum modeAlpha );
+    void       (*p_glBlendEquationSeparateIndexedAMD)( GLuint buf, GLenum modeRGB, GLenum modeAlpha );
+    void       (*p_glBlendEquationSeparatei)( GLuint buf, GLenum modeRGB, GLenum modeAlpha );
+    void       (*p_glBlendEquationSeparateiARB)( GLuint buf, GLenum modeRGB, GLenum modeAlpha );
+    void       (*p_glBlendEquationi)( GLuint buf, GLenum mode );
+    void       (*p_glBlendEquationiARB)( GLuint buf, GLenum mode );
+    void       (*p_glBlendFuncIndexedAMD)( GLuint buf, GLenum src, GLenum dst );
+    void       (*p_glBlendFuncSeparate)( GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha );
+    void       (*p_glBlendFuncSeparateEXT)( GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha );
+    void       (*p_glBlendFuncSeparateINGR)( GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha );
+    void       (*p_glBlendFuncSeparateIndexedAMD)( GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha );
+    void       (*p_glBlendFuncSeparatei)( GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha );
+    void       (*p_glBlendFuncSeparateiARB)( GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha );
+    void       (*p_glBlendFunci)( GLuint buf, GLenum src, GLenum dst );
+    void       (*p_glBlendFunciARB)( GLuint buf, GLenum src, GLenum dst );
+    void       (*p_glBlendParameteriNV)( GLenum pname, GLint value );
+    void       (*p_glBlitFramebuffer)( GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter );
+    void       (*p_glBlitFramebufferEXT)( GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter );
+    void       (*p_glBlitNamedFramebuffer)( GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter );
+    void       (*p_glBufferAddressRangeNV)( GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length );
+    void       (*p_glBufferAttachMemoryNV)( GLenum target, GLuint memory, GLuint64 offset );
+    void       (*p_glBufferData)( GLenum target, GLsizeiptr size, const void *data, GLenum usage );
+    void       (*p_glBufferDataARB)( GLenum target, GLsizeiptrARB size, const void *data, GLenum usage );
+    void       (*p_glBufferPageCommitmentARB)( GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit );
+    void       (*p_glBufferParameteriAPPLE)( GLenum target, GLenum pname, GLint param );
+    GLuint     (*p_glBufferRegionEnabled)(void);
+    void       (*p_glBufferStorage)( GLenum target, GLsizeiptr size, const void *data, GLbitfield flags );
+    void       (*p_glBufferStorageExternalEXT)( GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags );
+    void       (*p_glBufferStorageMemEXT)( GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset );
+    void       (*p_glBufferSubData)( GLenum target, GLintptr offset, GLsizeiptr size, const void *data );
+    void       (*p_glBufferSubDataARB)( GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data );
+    void       (*p_glCallCommandListNV)( GLuint list );
+    GLenum     (*p_glCheckFramebufferStatus)( GLenum target );
+    GLenum     (*p_glCheckFramebufferStatusEXT)( GLenum target );
+    GLenum     (*p_glCheckNamedFramebufferStatus)( GLuint framebuffer, GLenum target );
+    GLenum     (*p_glCheckNamedFramebufferStatusEXT)( GLuint framebuffer, GLenum target );
+    void       (*p_glClampColor)( GLenum target, GLenum clamp );
+    void       (*p_glClampColorARB)( GLenum target, GLenum clamp );
+    void       (*p_glClearAccumxOES)( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha );
+    void       (*p_glClearBufferData)( GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data );
+    void       (*p_glClearBufferSubData)( GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data );
+    void       (*p_glClearBufferfi)( GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil );
+    void       (*p_glClearBufferfv)( GLenum buffer, GLint drawbuffer, const GLfloat *value );
+    void       (*p_glClearBufferiv)( GLenum buffer, GLint drawbuffer, const GLint *value );
+    void       (*p_glClearBufferuiv)( GLenum buffer, GLint drawbuffer, const GLuint *value );
+    void       (*p_glClearColorIiEXT)( GLint red, GLint green, GLint blue, GLint alpha );
+    void       (*p_glClearColorIuiEXT)( GLuint red, GLuint green, GLuint blue, GLuint alpha );
+    void       (*p_glClearColorxOES)( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha );
+    void       (*p_glClearDepthdNV)( GLdouble depth );
+    void       (*p_glClearDepthf)( GLfloat d );
+    void       (*p_glClearDepthfOES)( GLclampf depth );
+    void       (*p_glClearDepthxOES)( GLfixed depth );
+    void       (*p_glClearNamedBufferData)( GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data );
+    void       (*p_glClearNamedBufferDataEXT)( GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data );
+    void       (*p_glClearNamedBufferSubData)( GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data );
+    void       (*p_glClearNamedBufferSubDataEXT)( GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data );
+    void       (*p_glClearNamedFramebufferfi)( GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil );
+    void       (*p_glClearNamedFramebufferfv)( GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value );
+    void       (*p_glClearNamedFramebufferiv)( GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value );
+    void       (*p_glClearNamedFramebufferuiv)( GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value );
+    void       (*p_glClearTexImage)( GLuint texture, GLint level, GLenum format, GLenum type, const void *data );
+    void       (*p_glClearTexSubImage)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data );
+    void       (*p_glClientActiveTexture)( GLenum texture );
+    void       (*p_glClientActiveTextureARB)( GLenum texture );
+    void       (*p_glClientActiveVertexStreamATI)( GLenum stream );
+    void       (*p_glClientAttribDefaultEXT)( GLbitfield mask );
+    void       (*p_glClientWaitSemaphoreui64NVX)( GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray );
+    GLenum     (*p_glClientWaitSync)( GLsync sync, GLbitfield flags, GLuint64 timeout );
+    void       (*p_glClipControl)( GLenum origin, GLenum depth );
+    void       (*p_glClipPlanefOES)( GLenum plane, const GLfloat *equation );
+    void       (*p_glClipPlanexOES)( GLenum plane, const GLfixed *equation );
+    void       (*p_glColor3fVertex3fSUN)( GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glColor3fVertex3fvSUN)( const GLfloat *c, const GLfloat *v );
+    void       (*p_glColor3hNV)( GLhalfNV red, GLhalfNV green, GLhalfNV blue );
+    void       (*p_glColor3hvNV)( const GLhalfNV *v );
+    void       (*p_glColor3xOES)( GLfixed red, GLfixed green, GLfixed blue );
+    void       (*p_glColor3xvOES)( const GLfixed *components );
+    void       (*p_glColor4fNormal3fVertex3fSUN)( GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glColor4fNormal3fVertex3fvSUN)( const GLfloat *c, const GLfloat *n, const GLfloat *v );
+    void       (*p_glColor4hNV)( GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha );
+    void       (*p_glColor4hvNV)( const GLhalfNV *v );
+    void       (*p_glColor4ubVertex2fSUN)( GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y );
+    void       (*p_glColor4ubVertex2fvSUN)( const GLubyte *c, const GLfloat *v );
+    void       (*p_glColor4ubVertex3fSUN)( GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glColor4ubVertex3fvSUN)( const GLubyte *c, const GLfloat *v );
+    void       (*p_glColor4xOES)( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha );
+    void       (*p_glColor4xvOES)( const GLfixed *components );
+    void       (*p_glColorFormatNV)( GLint size, GLenum type, GLsizei stride );
+    void       (*p_glColorFragmentOp1ATI)( GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod );
+    void       (*p_glColorFragmentOp2ATI)( GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod );
+    void       (*p_glColorFragmentOp3ATI)( GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod );
+    void       (*p_glColorMaskIndexedEXT)( GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a );
+    void       (*p_glColorMaski)( GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a );
+    void       (*p_glColorP3ui)( GLenum type, GLuint color );
+    void       (*p_glColorP3uiv)( GLenum type, const GLuint *color );
+    void       (*p_glColorP4ui)( GLenum type, GLuint color );
+    void       (*p_glColorP4uiv)( GLenum type, const GLuint *color );
+    void       (*p_glColorPointerEXT)( GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer );
+    void       (*p_glColorPointerListIBM)( GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride );
+    void       (*p_glColorPointervINTEL)( GLint size, GLenum type, const void **pointer );
+    void       (*p_glColorSubTable)( GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data );
+    void       (*p_glColorSubTableEXT)( GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data );
+    void       (*p_glColorTable)( GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table );
+    void       (*p_glColorTableEXT)( GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table );
+    void       (*p_glColorTableParameterfv)( GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glColorTableParameterfvSGI)( GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glColorTableParameteriv)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glColorTableParameterivSGI)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glColorTableSGI)( GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table );
+    void       (*p_glCombinerInputNV)( GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage );
+    void       (*p_glCombinerOutputNV)( GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum );
+    void       (*p_glCombinerParameterfNV)( GLenum pname, GLfloat param );
+    void       (*p_glCombinerParameterfvNV)( GLenum pname, const GLfloat *params );
+    void       (*p_glCombinerParameteriNV)( GLenum pname, GLint param );
+    void       (*p_glCombinerParameterivNV)( GLenum pname, const GLint *params );
+    void       (*p_glCombinerStageParameterfvNV)( GLenum stage, GLenum pname, const GLfloat *params );
+    void       (*p_glCommandListSegmentsNV)( GLuint list, GLuint segments );
+    void       (*p_glCompileCommandListNV)( GLuint list );
+    void       (*p_glCompileShader)( GLuint shader );
+    void       (*p_glCompileShaderARB)( GLhandleARB shaderObj );
+    void       (*p_glCompileShaderIncludeARB)( GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length );
+    void       (*p_glCompressedMultiTexImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedMultiTexImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedMultiTexImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedMultiTexSubImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedMultiTexSubImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedMultiTexSubImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedTexImage1D)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexImage1DARB)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexImage2D)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexImage2DARB)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexImage3D)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexImage3DARB)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexSubImage1D)( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexSubImage1DARB)( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexSubImage2D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexSubImage2DARB)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexSubImage3D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTexSubImage3DARB)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTextureImage1DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedTextureImage2DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedTextureImage3DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedTextureSubImage1D)( GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTextureSubImage1DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedTextureSubImage2D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTextureSubImage2DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits );
+    void       (*p_glCompressedTextureSubImage3D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data );
+    void       (*p_glCompressedTextureSubImage3DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits );
+    void       (*p_glConservativeRasterParameterfNV)( GLenum pname, GLfloat value );
+    void       (*p_glConservativeRasterParameteriNV)( GLenum pname, GLint param );
+    void       (*p_glConvolutionFilter1D)( GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image );
+    void       (*p_glConvolutionFilter1DEXT)( GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image );
+    void       (*p_glConvolutionFilter2D)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image );
+    void       (*p_glConvolutionFilter2DEXT)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image );
+    void       (*p_glConvolutionParameterf)( GLenum target, GLenum pname, GLfloat params );
+    void       (*p_glConvolutionParameterfEXT)( GLenum target, GLenum pname, GLfloat params );
+    void       (*p_glConvolutionParameterfv)( GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glConvolutionParameterfvEXT)( GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glConvolutionParameteri)( GLenum target, GLenum pname, GLint params );
+    void       (*p_glConvolutionParameteriEXT)( GLenum target, GLenum pname, GLint params );
+    void       (*p_glConvolutionParameteriv)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glConvolutionParameterivEXT)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glConvolutionParameterxOES)( GLenum target, GLenum pname, GLfixed param );
+    void       (*p_glConvolutionParameterxvOES)( GLenum target, GLenum pname, const GLfixed *params );
+    void       (*p_glCopyBufferSubData)( GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size );
+    void       (*p_glCopyColorSubTable)( GLenum target, GLsizei start, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyColorSubTableEXT)( GLenum target, GLsizei start, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyColorTable)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyColorTableSGI)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyConvolutionFilter1D)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyConvolutionFilter1DEXT)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyConvolutionFilter2D)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyConvolutionFilter2DEXT)( GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyImageSubData)( GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth );
+    void       (*p_glCopyImageSubDataNV)( GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth );
+    void       (*p_glCopyMultiTexImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
+    void       (*p_glCopyMultiTexImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );
+    void       (*p_glCopyMultiTexSubImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyMultiTexSubImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyMultiTexSubImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyNamedBufferSubData)( GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size );
+    void       (*p_glCopyPathNV)( GLuint resultPath, GLuint srcPath );
+    void       (*p_glCopyTexImage1DEXT)( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
+    void       (*p_glCopyTexImage2DEXT)( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );
+    void       (*p_glCopyTexSubImage1DEXT)( GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyTexSubImage2DEXT)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyTexSubImage3D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyTexSubImage3DEXT)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyTextureImage1DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border );
+    void       (*p_glCopyTextureImage2DEXT)( GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );
+    void       (*p_glCopyTextureSubImage1D)( GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyTextureSubImage1DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width );
+    void       (*p_glCopyTextureSubImage2D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyTextureSubImage2DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyTextureSubImage3D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCopyTextureSubImage3DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glCoverFillPathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues );
+    void       (*p_glCoverFillPathNV)( GLuint path, GLenum coverMode );
+    void       (*p_glCoverStrokePathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues );
+    void       (*p_glCoverStrokePathNV)( GLuint path, GLenum coverMode );
+    void       (*p_glCoverageModulationNV)( GLenum components );
+    void       (*p_glCoverageModulationTableNV)( GLsizei n, const GLfloat *v );
+    void       (*p_glCreateBuffers)( GLsizei n, GLuint *buffers );
+    void       (*p_glCreateCommandListsNV)( GLsizei n, GLuint *lists );
+    void       (*p_glCreateFramebuffers)( GLsizei n, GLuint *framebuffers );
+    void       (*p_glCreateMemoryObjectsEXT)( GLsizei n, GLuint *memoryObjects );
+    void       (*p_glCreatePerfQueryINTEL)( GLuint queryId, GLuint *queryHandle );
+    GLuint     (*p_glCreateProgram)(void);
+    GLhandleARB (*p_glCreateProgramObjectARB)(void);
+    void       (*p_glCreateProgramPipelines)( GLsizei n, GLuint *pipelines );
+    GLuint     (*p_glCreateProgressFenceNVX)(void);
+    void       (*p_glCreateQueries)( GLenum target, GLsizei n, GLuint *ids );
+    void       (*p_glCreateRenderbuffers)( GLsizei n, GLuint *renderbuffers );
+    void       (*p_glCreateSamplers)( GLsizei n, GLuint *samplers );
+    GLuint     (*p_glCreateShader)( GLenum type );
+    GLhandleARB (*p_glCreateShaderObjectARB)( GLenum shaderType );
+    GLuint     (*p_glCreateShaderProgramEXT)( GLenum type, const GLchar *string );
+    GLuint     (*p_glCreateShaderProgramv)( GLenum type, GLsizei count, const GLchar *const*strings );
+    void       (*p_glCreateStatesNV)( GLsizei n, GLuint *states );
+    GLsync     (*p_glCreateSyncFromCLeventARB)( struct _cl_context *context, struct _cl_event *event, GLbitfield flags );
+    void       (*p_glCreateTextures)( GLenum target, GLsizei n, GLuint *textures );
+    void       (*p_glCreateTransformFeedbacks)( GLsizei n, GLuint *ids );
+    void       (*p_glCreateVertexArrays)( GLsizei n, GLuint *arrays );
+    void       (*p_glCullParameterdvEXT)( GLenum pname, GLdouble *params );
+    void       (*p_glCullParameterfvEXT)( GLenum pname, GLfloat *params );
+    void       (*p_glCurrentPaletteMatrixARB)( GLint index );
+    void       (*p_glDebugMessageCallback)( GLDEBUGPROC callback, const void *userParam );
+    void       (*p_glDebugMessageCallbackAMD)( GLDEBUGPROCAMD callback, void *userParam );
+    void       (*p_glDebugMessageCallbackARB)( GLDEBUGPROCARB callback, const void *userParam );
+    void       (*p_glDebugMessageControl)( GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled );
+    void       (*p_glDebugMessageControlARB)( GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled );
+    void       (*p_glDebugMessageEnableAMD)( GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled );
+    void       (*p_glDebugMessageInsert)( GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf );
+    void       (*p_glDebugMessageInsertAMD)( GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf );
+    void       (*p_glDebugMessageInsertARB)( GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf );
+    void       (*p_glDeformSGIX)( GLbitfield mask );
+    void       (*p_glDeformationMap3dSGIX)( GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points );
+    void       (*p_glDeformationMap3fSGIX)( GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points );
+    void       (*p_glDeleteAsyncMarkersSGIX)( GLuint marker, GLsizei range );
+    void       (*p_glDeleteBufferRegion)( GLenum region );
+    void       (*p_glDeleteBuffers)( GLsizei n, const GLuint *buffers );
+    void       (*p_glDeleteBuffersARB)( GLsizei n, const GLuint *buffers );
+    void       (*p_glDeleteCommandListsNV)( GLsizei n, const GLuint *lists );
+    void       (*p_glDeleteFencesAPPLE)( GLsizei n, const GLuint *fences );
+    void       (*p_glDeleteFencesNV)( GLsizei n, const GLuint *fences );
+    void       (*p_glDeleteFragmentShaderATI)( GLuint id );
+    void       (*p_glDeleteFramebuffers)( GLsizei n, const GLuint *framebuffers );
+    void       (*p_glDeleteFramebuffersEXT)( GLsizei n, const GLuint *framebuffers );
+    void       (*p_glDeleteMemoryObjectsEXT)( GLsizei n, const GLuint *memoryObjects );
+    void       (*p_glDeleteNamedStringARB)( GLint namelen, const GLchar *name );
+    void       (*p_glDeleteNamesAMD)( GLenum identifier, GLuint num, const GLuint *names );
+    void       (*p_glDeleteObjectARB)( GLhandleARB obj );
+    void       (*p_glDeleteObjectBufferATI)( GLuint buffer );
+    void       (*p_glDeleteOcclusionQueriesNV)( GLsizei n, const GLuint *ids );
+    void       (*p_glDeletePathsNV)( GLuint path, GLsizei range );
+    void       (*p_glDeletePerfMonitorsAMD)( GLsizei n, GLuint *monitors );
+    void       (*p_glDeletePerfQueryINTEL)( GLuint queryHandle );
+    void       (*p_glDeleteProgram)( GLuint program );
+    void       (*p_glDeleteProgramPipelines)( GLsizei n, const GLuint *pipelines );
+    void       (*p_glDeleteProgramsARB)( GLsizei n, const GLuint *programs );
+    void       (*p_glDeleteProgramsNV)( GLsizei n, const GLuint *programs );
+    void       (*p_glDeleteQueries)( GLsizei n, const GLuint *ids );
+    void       (*p_glDeleteQueriesARB)( GLsizei n, const GLuint *ids );
+    void       (*p_glDeleteQueryResourceTagNV)( GLsizei n, const GLint *tagIds );
+    void       (*p_glDeleteRenderbuffers)( GLsizei n, const GLuint *renderbuffers );
+    void       (*p_glDeleteRenderbuffersEXT)( GLsizei n, const GLuint *renderbuffers );
+    void       (*p_glDeleteSamplers)( GLsizei count, const GLuint *samplers );
+    void       (*p_glDeleteSemaphoresEXT)( GLsizei n, const GLuint *semaphores );
+    void       (*p_glDeleteShader)( GLuint shader );
+    void       (*p_glDeleteStatesNV)( GLsizei n, const GLuint *states );
+    void       (*p_glDeleteSync)( GLsync sync );
+    void       (*p_glDeleteTexturesEXT)( GLsizei n, const GLuint *textures );
+    void       (*p_glDeleteTransformFeedbacks)( GLsizei n, const GLuint *ids );
+    void       (*p_glDeleteTransformFeedbacksNV)( GLsizei n, const GLuint *ids );
+    void       (*p_glDeleteVertexArrays)( GLsizei n, const GLuint *arrays );
+    void       (*p_glDeleteVertexArraysAPPLE)( GLsizei n, const GLuint *arrays );
+    void       (*p_glDeleteVertexShaderEXT)( GLuint id );
+    void       (*p_glDepthBoundsEXT)( GLclampd zmin, GLclampd zmax );
+    void       (*p_glDepthBoundsdNV)( GLdouble zmin, GLdouble zmax );
+    void       (*p_glDepthRangeArraydvNV)( GLuint first, GLsizei count, const GLdouble *v );
+    void       (*p_glDepthRangeArrayv)( GLuint first, GLsizei count, const GLdouble *v );
+    void       (*p_glDepthRangeIndexed)( GLuint index, GLdouble n, GLdouble f );
+    void       (*p_glDepthRangeIndexeddNV)( GLuint index, GLdouble n, GLdouble f );
+    void       (*p_glDepthRangedNV)( GLdouble zNear, GLdouble zFar );
+    void       (*p_glDepthRangef)( GLfloat n, GLfloat f );
+    void       (*p_glDepthRangefOES)( GLclampf n, GLclampf f );
+    void       (*p_glDepthRangexOES)( GLfixed n, GLfixed f );
+    void       (*p_glDetachObjectARB)( GLhandleARB containerObj, GLhandleARB attachedObj );
+    void       (*p_glDetachShader)( GLuint program, GLuint shader );
+    void       (*p_glDetailTexFuncSGIS)( GLenum target, GLsizei n, const GLfloat *points );
+    void       (*p_glDisableClientStateIndexedEXT)( GLenum array, GLuint index );
+    void       (*p_glDisableClientStateiEXT)( GLenum array, GLuint index );
+    void       (*p_glDisableIndexedEXT)( GLenum target, GLuint index );
+    void       (*p_glDisableVariantClientStateEXT)( GLuint id );
+    void       (*p_glDisableVertexArrayAttrib)( GLuint vaobj, GLuint index );
+    void       (*p_glDisableVertexArrayAttribEXT)( GLuint vaobj, GLuint index );
+    void       (*p_glDisableVertexArrayEXT)( GLuint vaobj, GLenum array );
+    void       (*p_glDisableVertexAttribAPPLE)( GLuint index, GLenum pname );
+    void       (*p_glDisableVertexAttribArray)( GLuint index );
+    void       (*p_glDisableVertexAttribArrayARB)( GLuint index );
+    void       (*p_glDisablei)( GLenum target, GLuint index );
+    void       (*p_glDispatchCompute)( GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z );
+    void       (*p_glDispatchComputeGroupSizeARB)( GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z );
+    void       (*p_glDispatchComputeIndirect)( GLintptr indirect );
+    void       (*p_glDrawArraysEXT)( GLenum mode, GLint first, GLsizei count );
+    void       (*p_glDrawArraysIndirect)( GLenum mode, const void *indirect );
+    void       (*p_glDrawArraysInstanced)( GLenum mode, GLint first, GLsizei count, GLsizei instancecount );
+    void       (*p_glDrawArraysInstancedARB)( GLenum mode, GLint first, GLsizei count, GLsizei primcount );
+    void       (*p_glDrawArraysInstancedBaseInstance)( GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance );
+    void       (*p_glDrawArraysInstancedEXT)( GLenum mode, GLint start, GLsizei count, GLsizei primcount );
+    void       (*p_glDrawBufferRegion)( GLenum region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest );
+    void       (*p_glDrawBuffers)( GLsizei n, const GLenum *bufs );
+    void       (*p_glDrawBuffersARB)( GLsizei n, const GLenum *bufs );
+    void       (*p_glDrawBuffersATI)( GLsizei n, const GLenum *bufs );
+    void       (*p_glDrawCommandsAddressNV)( GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count );
+    void       (*p_glDrawCommandsNV)( GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count );
+    void       (*p_glDrawCommandsStatesAddressNV)( const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count );
+    void       (*p_glDrawCommandsStatesNV)( GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count );
+    void       (*p_glDrawElementArrayAPPLE)( GLenum mode, GLint first, GLsizei count );
+    void       (*p_glDrawElementArrayATI)( GLenum mode, GLsizei count );
+    void       (*p_glDrawElementsBaseVertex)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex );
+    void       (*p_glDrawElementsIndirect)( GLenum mode, GLenum type, const void *indirect );
+    void       (*p_glDrawElementsInstanced)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount );
+    void       (*p_glDrawElementsInstancedARB)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount );
+    void       (*p_glDrawElementsInstancedBaseInstance)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance );
+    void       (*p_glDrawElementsInstancedBaseVertex)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex );
+    void       (*p_glDrawElementsInstancedBaseVertexBaseInstance)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance );
+    void       (*p_glDrawElementsInstancedEXT)( GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount );
+    void       (*p_glDrawMeshArraysSUN)( GLenum mode, GLint first, GLsizei count, GLsizei width );
+    void       (*p_glDrawMeshTasksIndirectNV)( GLintptr indirect );
+    void       (*p_glDrawMeshTasksNV)( GLuint first, GLuint count );
+    void       (*p_glDrawRangeElementArrayAPPLE)( GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count );
+    void       (*p_glDrawRangeElementArrayATI)( GLenum mode, GLuint start, GLuint end, GLsizei count );
+    void       (*p_glDrawRangeElements)( GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices );
+    void       (*p_glDrawRangeElementsBaseVertex)( GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex );
+    void       (*p_glDrawRangeElementsEXT)( GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices );
+    void       (*p_glDrawTextureNV)( GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1 );
+    void       (*p_glDrawTransformFeedback)( GLenum mode, GLuint id );
+    void       (*p_glDrawTransformFeedbackInstanced)( GLenum mode, GLuint id, GLsizei instancecount );
+    void       (*p_glDrawTransformFeedbackNV)( GLenum mode, GLuint id );
+    void       (*p_glDrawTransformFeedbackStream)( GLenum mode, GLuint id, GLuint stream );
+    void       (*p_glDrawTransformFeedbackStreamInstanced)( GLenum mode, GLuint id, GLuint stream, GLsizei instancecount );
+    void       (*p_glDrawVkImageNV)( GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1 );
+    void       (*p_glEGLImageTargetTexStorageEXT)( GLenum target, GLeglImageOES image, const GLint* attrib_list );
+    void       (*p_glEGLImageTargetTextureStorageEXT)( GLuint texture, GLeglImageOES image, const GLint* attrib_list );
+    void       (*p_glEdgeFlagFormatNV)( GLsizei stride );
+    void       (*p_glEdgeFlagPointerEXT)( GLsizei stride, GLsizei count, const GLboolean *pointer );
+    void       (*p_glEdgeFlagPointerListIBM)( GLint stride, const GLboolean **pointer, GLint ptrstride );
+    void       (*p_glElementPointerAPPLE)( GLenum type, const void *pointer );
+    void       (*p_glElementPointerATI)( GLenum type, const void *pointer );
+    void       (*p_glEnableClientStateIndexedEXT)( GLenum array, GLuint index );
+    void       (*p_glEnableClientStateiEXT)( GLenum array, GLuint index );
+    void       (*p_glEnableIndexedEXT)( GLenum target, GLuint index );
+    void       (*p_glEnableVariantClientStateEXT)( GLuint id );
+    void       (*p_glEnableVertexArrayAttrib)( GLuint vaobj, GLuint index );
+    void       (*p_glEnableVertexArrayAttribEXT)( GLuint vaobj, GLuint index );
+    void       (*p_glEnableVertexArrayEXT)( GLuint vaobj, GLenum array );
+    void       (*p_glEnableVertexAttribAPPLE)( GLuint index, GLenum pname );
+    void       (*p_glEnableVertexAttribArray)( GLuint index );
+    void       (*p_glEnableVertexAttribArrayARB)( GLuint index );
+    void       (*p_glEnablei)( GLenum target, GLuint index );
+    void       (*p_glEndConditionalRender)(void);
+    void       (*p_glEndConditionalRenderNV)(void);
+    void       (*p_glEndConditionalRenderNVX)(void);
+    void       (*p_glEndFragmentShaderATI)(void);
+    void       (*p_glEndOcclusionQueryNV)(void);
+    void       (*p_glEndPerfMonitorAMD)( GLuint monitor );
+    void       (*p_glEndPerfQueryINTEL)( GLuint queryHandle );
+    void       (*p_glEndQuery)( GLenum target );
+    void       (*p_glEndQueryARB)( GLenum target );
+    void       (*p_glEndQueryIndexed)( GLenum target, GLuint index );
+    void       (*p_glEndTransformFeedback)(void);
+    void       (*p_glEndTransformFeedbackEXT)(void);
+    void       (*p_glEndTransformFeedbackNV)(void);
+    void       (*p_glEndVertexShaderEXT)(void);
+    void       (*p_glEndVideoCaptureNV)( GLuint video_capture_slot );
+    void       (*p_glEvalCoord1xOES)( GLfixed u );
+    void       (*p_glEvalCoord1xvOES)( const GLfixed *coords );
+    void       (*p_glEvalCoord2xOES)( GLfixed u, GLfixed v );
+    void       (*p_glEvalCoord2xvOES)( const GLfixed *coords );
+    void       (*p_glEvalMapsNV)( GLenum target, GLenum mode );
+    void       (*p_glEvaluateDepthValuesARB)(void);
+    void       (*p_glExecuteProgramNV)( GLenum target, GLuint id, const GLfloat *params );
+    void       (*p_glExtractComponentEXT)( GLuint res, GLuint src, GLuint num );
+    void       (*p_glFeedbackBufferxOES)( GLsizei n, GLenum type, const GLfixed *buffer );
+    GLsync     (*p_glFenceSync)( GLenum condition, GLbitfield flags );
+    void       (*p_glFinalCombinerInputNV)( GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage );
+    GLint      (*p_glFinishAsyncSGIX)( GLuint *markerp );
+    void       (*p_glFinishFenceAPPLE)( GLuint fence );
+    void       (*p_glFinishFenceNV)( GLuint fence );
+    void       (*p_glFinishObjectAPPLE)( GLenum object, GLint name );
+    void       (*p_glFinishTextureSUNX)(void);
+    void       (*p_glFlushMappedBufferRange)( GLenum target, GLintptr offset, GLsizeiptr length );
+    void       (*p_glFlushMappedBufferRangeAPPLE)( GLenum target, GLintptr offset, GLsizeiptr size );
+    void       (*p_glFlushMappedNamedBufferRange)( GLuint buffer, GLintptr offset, GLsizeiptr length );
+    void       (*p_glFlushMappedNamedBufferRangeEXT)( GLuint buffer, GLintptr offset, GLsizeiptr length );
+    void       (*p_glFlushPixelDataRangeNV)( GLenum target );
+    void       (*p_glFlushRasterSGIX)(void);
+    void       (*p_glFlushStaticDataIBM)( GLenum target );
+    void       (*p_glFlushVertexArrayRangeAPPLE)( GLsizei length, void *pointer );
+    void       (*p_glFlushVertexArrayRangeNV)(void);
+    void       (*p_glFogCoordFormatNV)( GLenum type, GLsizei stride );
+    void       (*p_glFogCoordPointer)( GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glFogCoordPointerEXT)( GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glFogCoordPointerListIBM)( GLenum type, GLint stride, const void **pointer, GLint ptrstride );
+    void       (*p_glFogCoordd)( GLdouble coord );
+    void       (*p_glFogCoorddEXT)( GLdouble coord );
+    void       (*p_glFogCoorddv)( const GLdouble *coord );
+    void       (*p_glFogCoorddvEXT)( const GLdouble *coord );
+    void       (*p_glFogCoordf)( GLfloat coord );
+    void       (*p_glFogCoordfEXT)( GLfloat coord );
+    void       (*p_glFogCoordfv)( const GLfloat *coord );
+    void       (*p_glFogCoordfvEXT)( const GLfloat *coord );
+    void       (*p_glFogCoordhNV)( GLhalfNV fog );
+    void       (*p_glFogCoordhvNV)( const GLhalfNV *fog );
+    void       (*p_glFogFuncSGIS)( GLsizei n, const GLfloat *points );
+    void       (*p_glFogxOES)( GLenum pname, GLfixed param );
+    void       (*p_glFogxvOES)( GLenum pname, const GLfixed *param );
+    void       (*p_glFragmentColorMaterialSGIX)( GLenum face, GLenum mode );
+    void       (*p_glFragmentCoverageColorNV)( GLuint color );
+    void       (*p_glFragmentLightModelfSGIX)( GLenum pname, GLfloat param );
+    void       (*p_glFragmentLightModelfvSGIX)( GLenum pname, const GLfloat *params );
+    void       (*p_glFragmentLightModeliSGIX)( GLenum pname, GLint param );
+    void       (*p_glFragmentLightModelivSGIX)( GLenum pname, const GLint *params );
+    void       (*p_glFragmentLightfSGIX)( GLenum light, GLenum pname, GLfloat param );
+    void       (*p_glFragmentLightfvSGIX)( GLenum light, GLenum pname, const GLfloat *params );
+    void       (*p_glFragmentLightiSGIX)( GLenum light, GLenum pname, GLint param );
+    void       (*p_glFragmentLightivSGIX)( GLenum light, GLenum pname, const GLint *params );
+    void       (*p_glFragmentMaterialfSGIX)( GLenum face, GLenum pname, GLfloat param );
+    void       (*p_glFragmentMaterialfvSGIX)( GLenum face, GLenum pname, const GLfloat *params );
+    void       (*p_glFragmentMaterialiSGIX)( GLenum face, GLenum pname, GLint param );
+    void       (*p_glFragmentMaterialivSGIX)( GLenum face, GLenum pname, const GLint *params );
+    void       (*p_glFrameTerminatorGREMEDY)(void);
+    void       (*p_glFrameZoomSGIX)( GLint factor );
+    void       (*p_glFramebufferDrawBufferEXT)( GLuint framebuffer, GLenum mode );
+    void       (*p_glFramebufferDrawBuffersEXT)( GLuint framebuffer, GLsizei n, const GLenum *bufs );
+    void       (*p_glFramebufferFetchBarrierEXT)(void);
+    void       (*p_glFramebufferParameteri)( GLenum target, GLenum pname, GLint param );
+    void       (*p_glFramebufferParameteriMESA)( GLenum target, GLenum pname, GLint param );
+    void       (*p_glFramebufferReadBufferEXT)( GLuint framebuffer, GLenum mode );
+    void       (*p_glFramebufferRenderbuffer)( GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer );
+    void       (*p_glFramebufferRenderbufferEXT)( GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer );
+    void       (*p_glFramebufferSampleLocationsfvARB)( GLenum target, GLuint start, GLsizei count, const GLfloat *v );
+    void       (*p_glFramebufferSampleLocationsfvNV)( GLenum target, GLuint start, GLsizei count, const GLfloat *v );
+    void       (*p_glFramebufferSamplePositionsfvAMD)( GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values );
+    void       (*p_glFramebufferTexture)( GLenum target, GLenum attachment, GLuint texture, GLint level );
+    void       (*p_glFramebufferTexture1D)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
+    void       (*p_glFramebufferTexture1DEXT)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
+    void       (*p_glFramebufferTexture2D)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
+    void       (*p_glFramebufferTexture2DEXT)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
+    void       (*p_glFramebufferTexture3D)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset );
+    void       (*p_glFramebufferTexture3DEXT)( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset );
+    void       (*p_glFramebufferTextureARB)( GLenum target, GLenum attachment, GLuint texture, GLint level );
+    void       (*p_glFramebufferTextureEXT)( GLenum target, GLenum attachment, GLuint texture, GLint level );
+    void       (*p_glFramebufferTextureFaceARB)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face );
+    void       (*p_glFramebufferTextureFaceEXT)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face );
+    void       (*p_glFramebufferTextureLayer)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer );
+    void       (*p_glFramebufferTextureLayerARB)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer );
+    void       (*p_glFramebufferTextureLayerEXT)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer );
+    void       (*p_glFramebufferTextureMultiviewOVR)( GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews );
+    void       (*p_glFreeObjectBufferATI)( GLuint buffer );
+    void       (*p_glFrustumfOES)( GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f );
+    void       (*p_glFrustumxOES)( GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f );
+    GLuint     (*p_glGenAsyncMarkersSGIX)( GLsizei range );
+    void       (*p_glGenBuffers)( GLsizei n, GLuint *buffers );
+    void       (*p_glGenBuffersARB)( GLsizei n, GLuint *buffers );
+    void       (*p_glGenFencesAPPLE)( GLsizei n, GLuint *fences );
+    void       (*p_glGenFencesNV)( GLsizei n, GLuint *fences );
+    GLuint     (*p_glGenFragmentShadersATI)( GLuint range );
+    void       (*p_glGenFramebuffers)( GLsizei n, GLuint *framebuffers );
+    void       (*p_glGenFramebuffersEXT)( GLsizei n, GLuint *framebuffers );
+    void       (*p_glGenNamesAMD)( GLenum identifier, GLuint num, GLuint *names );
+    void       (*p_glGenOcclusionQueriesNV)( GLsizei n, GLuint *ids );
+    GLuint     (*p_glGenPathsNV)( GLsizei range );
+    void       (*p_glGenPerfMonitorsAMD)( GLsizei n, GLuint *monitors );
+    void       (*p_glGenProgramPipelines)( GLsizei n, GLuint *pipelines );
+    void       (*p_glGenProgramsARB)( GLsizei n, GLuint *programs );
+    void       (*p_glGenProgramsNV)( GLsizei n, GLuint *programs );
+    void       (*p_glGenQueries)( GLsizei n, GLuint *ids );
+    void       (*p_glGenQueriesARB)( GLsizei n, GLuint *ids );
+    void       (*p_glGenQueryResourceTagNV)( GLsizei n, GLint *tagIds );
+    void       (*p_glGenRenderbuffers)( GLsizei n, GLuint *renderbuffers );
+    void       (*p_glGenRenderbuffersEXT)( GLsizei n, GLuint *renderbuffers );
+    void       (*p_glGenSamplers)( GLsizei count, GLuint *samplers );
+    void       (*p_glGenSemaphoresEXT)( GLsizei n, GLuint *semaphores );
+    GLuint     (*p_glGenSymbolsEXT)( GLenum datatype, GLenum storagetype, GLenum range, GLuint components );
+    void       (*p_glGenTexturesEXT)( GLsizei n, GLuint *textures );
+    void       (*p_glGenTransformFeedbacks)( GLsizei n, GLuint *ids );
+    void       (*p_glGenTransformFeedbacksNV)( GLsizei n, GLuint *ids );
+    void       (*p_glGenVertexArrays)( GLsizei n, GLuint *arrays );
+    void       (*p_glGenVertexArraysAPPLE)( GLsizei n, GLuint *arrays );
+    GLuint     (*p_glGenVertexShadersEXT)( GLuint range );
+    void       (*p_glGenerateMipmap)( GLenum target );
+    void       (*p_glGenerateMipmapEXT)( GLenum target );
+    void       (*p_glGenerateMultiTexMipmapEXT)( GLenum texunit, GLenum target );
+    void       (*p_glGenerateTextureMipmap)( GLuint texture );
+    void       (*p_glGenerateTextureMipmapEXT)( GLuint texture, GLenum target );
+    void       (*p_glGetActiveAtomicCounterBufferiv)( GLuint program, GLuint bufferIndex, GLenum pname, GLint *params );
+    void       (*p_glGetActiveAttrib)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name );
+    void       (*p_glGetActiveAttribARB)( GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name );
+    void       (*p_glGetActiveSubroutineName)( GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name );
+    void       (*p_glGetActiveSubroutineUniformName)( GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name );
+    void       (*p_glGetActiveSubroutineUniformiv)( GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values );
+    void       (*p_glGetActiveUniform)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name );
+    void       (*p_glGetActiveUniformARB)( GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name );
+    void       (*p_glGetActiveUniformBlockName)( GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName );
+    void       (*p_glGetActiveUniformBlockiv)( GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params );
+    void       (*p_glGetActiveUniformName)( GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName );
+    void       (*p_glGetActiveUniformsiv)( GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params );
+    void       (*p_glGetActiveVaryingNV)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name );
+    void       (*p_glGetArrayObjectfvATI)( GLenum array, GLenum pname, GLfloat *params );
+    void       (*p_glGetArrayObjectivATI)( GLenum array, GLenum pname, GLint *params );
+    void       (*p_glGetAttachedObjectsARB)( GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj );
+    void       (*p_glGetAttachedShaders)( GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders );
+    GLint      (*p_glGetAttribLocation)( GLuint program, const GLchar *name );
+    GLint      (*p_glGetAttribLocationARB)( GLhandleARB programObj, const GLcharARB *name );
+    void       (*p_glGetBooleanIndexedvEXT)( GLenum target, GLuint index, GLboolean *data );
+    void       (*p_glGetBooleani_v)( GLenum target, GLuint index, GLboolean *data );
+    void       (*p_glGetBufferParameteri64v)( GLenum target, GLenum pname, GLint64 *params );
+    void       (*p_glGetBufferParameteriv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetBufferParameterivARB)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetBufferParameterui64vNV)( GLenum target, GLenum pname, GLuint64EXT *params );
+    void       (*p_glGetBufferPointerv)( GLenum target, GLenum pname, void **params );
+    void       (*p_glGetBufferPointervARB)( GLenum target, GLenum pname, void **params );
+    void       (*p_glGetBufferSubData)( GLenum target, GLintptr offset, GLsizeiptr size, void *data );
+    void       (*p_glGetBufferSubDataARB)( GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data );
+    void       (*p_glGetClipPlanefOES)( GLenum plane, GLfloat *equation );
+    void       (*p_glGetClipPlanexOES)( GLenum plane, GLfixed *equation );
+    void       (*p_glGetColorTable)( GLenum target, GLenum format, GLenum type, void *table );
+    void       (*p_glGetColorTableEXT)( GLenum target, GLenum format, GLenum type, void *data );
+    void       (*p_glGetColorTableParameterfv)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetColorTableParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetColorTableParameterfvSGI)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetColorTableParameteriv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetColorTableParameterivEXT)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetColorTableParameterivSGI)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetColorTableSGI)( GLenum target, GLenum format, GLenum type, void *table );
+    void       (*p_glGetCombinerInputParameterfvNV)( GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params );
+    void       (*p_glGetCombinerInputParameterivNV)( GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params );
+    void       (*p_glGetCombinerOutputParameterfvNV)( GLenum stage, GLenum portion, GLenum pname, GLfloat *params );
+    void       (*p_glGetCombinerOutputParameterivNV)( GLenum stage, GLenum portion, GLenum pname, GLint *params );
+    void       (*p_glGetCombinerStageParameterfvNV)( GLenum stage, GLenum pname, GLfloat *params );
+    GLuint     (*p_glGetCommandHeaderNV)( GLenum tokenID, GLuint size );
+    void       (*p_glGetCompressedMultiTexImageEXT)( GLenum texunit, GLenum target, GLint lod, void *img );
+    void       (*p_glGetCompressedTexImage)( GLenum target, GLint level, void *img );
+    void       (*p_glGetCompressedTexImageARB)( GLenum target, GLint level, void *img );
+    void       (*p_glGetCompressedTextureImage)( GLuint texture, GLint level, GLsizei bufSize, void *pixels );
+    void       (*p_glGetCompressedTextureImageEXT)( GLuint texture, GLenum target, GLint lod, void *img );
+    void       (*p_glGetCompressedTextureSubImage)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels );
+    void       (*p_glGetConvolutionFilter)( GLenum target, GLenum format, GLenum type, void *image );
+    void       (*p_glGetConvolutionFilterEXT)( GLenum target, GLenum format, GLenum type, void *image );
+    void       (*p_glGetConvolutionParameterfv)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetConvolutionParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetConvolutionParameteriv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetConvolutionParameterivEXT)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetConvolutionParameterxvOES)( GLenum target, GLenum pname, GLfixed *params );
+    void       (*p_glGetCoverageModulationTableNV)( GLsizei bufSize, GLfloat *v );
+    GLuint     (*p_glGetDebugMessageLog)( GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog );
+    GLuint     (*p_glGetDebugMessageLogAMD)( GLuint count, GLsizei bufSize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message );
+    GLuint     (*p_glGetDebugMessageLogARB)( GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog );
+    void       (*p_glGetDetailTexFuncSGIS)( GLenum target, GLfloat *points );
+    void       (*p_glGetDoubleIndexedvEXT)( GLenum target, GLuint index, GLdouble *data );
+    void       (*p_glGetDoublei_v)( GLenum target, GLuint index, GLdouble *data );
+    void       (*p_glGetDoublei_vEXT)( GLenum pname, GLuint index, GLdouble *params );
+    void       (*p_glGetFenceivNV)( GLuint fence, GLenum pname, GLint *params );
+    void       (*p_glGetFinalCombinerInputParameterfvNV)( GLenum variable, GLenum pname, GLfloat *params );
+    void       (*p_glGetFinalCombinerInputParameterivNV)( GLenum variable, GLenum pname, GLint *params );
+    void       (*p_glGetFirstPerfQueryIdINTEL)( GLuint *queryId );
+    void       (*p_glGetFixedvOES)( GLenum pname, GLfixed *params );
+    void       (*p_glGetFloatIndexedvEXT)( GLenum target, GLuint index, GLfloat *data );
+    void       (*p_glGetFloati_v)( GLenum target, GLuint index, GLfloat *data );
+    void       (*p_glGetFloati_vEXT)( GLenum pname, GLuint index, GLfloat *params );
+    void       (*p_glGetFogFuncSGIS)( GLfloat *points );
+    GLint      (*p_glGetFragDataIndex)( GLuint program, const GLchar *name );
+    GLint      (*p_glGetFragDataLocation)( GLuint program, const GLchar *name );
+    GLint      (*p_glGetFragDataLocationEXT)( GLuint program, const GLchar *name );
+    void       (*p_glGetFragmentLightfvSGIX)( GLenum light, GLenum pname, GLfloat *params );
+    void       (*p_glGetFragmentLightivSGIX)( GLenum light, GLenum pname, GLint *params );
+    void       (*p_glGetFragmentMaterialfvSGIX)( GLenum face, GLenum pname, GLfloat *params );
+    void       (*p_glGetFragmentMaterialivSGIX)( GLenum face, GLenum pname, GLint *params );
+    void       (*p_glGetFramebufferAttachmentParameteriv)( GLenum target, GLenum attachment, GLenum pname, GLint *params );
+    void       (*p_glGetFramebufferAttachmentParameterivEXT)( GLenum target, GLenum attachment, GLenum pname, GLint *params );
+    void       (*p_glGetFramebufferParameterfvAMD)( GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values );
+    void       (*p_glGetFramebufferParameteriv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetFramebufferParameterivEXT)( GLuint framebuffer, GLenum pname, GLint *params );
+    void       (*p_glGetFramebufferParameterivMESA)( GLenum target, GLenum pname, GLint *params );
+    GLenum     (*p_glGetGraphicsResetStatus)(void);
+    GLenum     (*p_glGetGraphicsResetStatusARB)(void);
+    GLhandleARB (*p_glGetHandleARB)( GLenum pname );
+    void       (*p_glGetHistogram)( GLenum target, GLboolean reset, GLenum format, GLenum type, void *values );
+    void       (*p_glGetHistogramEXT)( GLenum target, GLboolean reset, GLenum format, GLenum type, void *values );
+    void       (*p_glGetHistogramParameterfv)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetHistogramParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetHistogramParameteriv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetHistogramParameterivEXT)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetHistogramParameterxvOES)( GLenum target, GLenum pname, GLfixed *params );
+    GLuint64   (*p_glGetImageHandleARB)( GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format );
+    GLuint64   (*p_glGetImageHandleNV)( GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format );
+    void       (*p_glGetImageTransformParameterfvHP)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetImageTransformParameterivHP)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetInfoLogARB)( GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog );
+    GLint      (*p_glGetInstrumentsSGIX)(void);
+    void       (*p_glGetInteger64i_v)( GLenum target, GLuint index, GLint64 *data );
+    void       (*p_glGetInteger64v)( GLenum pname, GLint64 *data );
+    void       (*p_glGetIntegerIndexedvEXT)( GLenum target, GLuint index, GLint *data );
+    void       (*p_glGetIntegeri_v)( GLenum target, GLuint index, GLint *data );
+    void       (*p_glGetIntegerui64i_vNV)( GLenum value, GLuint index, GLuint64EXT *result );
+    void       (*p_glGetIntegerui64vNV)( GLenum value, GLuint64EXT *result );
+    void       (*p_glGetInternalformatSampleivNV)( GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params );
+    void       (*p_glGetInternalformati64v)( GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params );
+    void       (*p_glGetInternalformativ)( GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params );
+    void       (*p_glGetInvariantBooleanvEXT)( GLuint id, GLenum value, GLboolean *data );
+    void       (*p_glGetInvariantFloatvEXT)( GLuint id, GLenum value, GLfloat *data );
+    void       (*p_glGetInvariantIntegervEXT)( GLuint id, GLenum value, GLint *data );
+    void       (*p_glGetLightxOES)( GLenum light, GLenum pname, GLfixed *params );
+    void       (*p_glGetListParameterfvSGIX)( GLuint list, GLenum pname, GLfloat *params );
+    void       (*p_glGetListParameterivSGIX)( GLuint list, GLenum pname, GLint *params );
+    void       (*p_glGetLocalConstantBooleanvEXT)( GLuint id, GLenum value, GLboolean *data );
+    void       (*p_glGetLocalConstantFloatvEXT)( GLuint id, GLenum value, GLfloat *data );
+    void       (*p_glGetLocalConstantIntegervEXT)( GLuint id, GLenum value, GLint *data );
+    void       (*p_glGetMapAttribParameterfvNV)( GLenum target, GLuint index, GLenum pname, GLfloat *params );
+    void       (*p_glGetMapAttribParameterivNV)( GLenum target, GLuint index, GLenum pname, GLint *params );
+    void       (*p_glGetMapControlPointsNV)( GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points );
+    void       (*p_glGetMapParameterfvNV)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetMapParameterivNV)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetMapxvOES)( GLenum target, GLenum query, GLfixed *v );
+    void       (*p_glGetMaterialxOES)( GLenum face, GLenum pname, GLfixed param );
+    void       (*p_glGetMemoryObjectDetachedResourcesuivNV)( GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params );
+    void       (*p_glGetMemoryObjectParameterivEXT)( GLuint memoryObject, GLenum pname, GLint *params );
+    void       (*p_glGetMinmax)( GLenum target, GLboolean reset, GLenum format, GLenum type, void *values );
+    void       (*p_glGetMinmaxEXT)( GLenum target, GLboolean reset, GLenum format, GLenum type, void *values );
+    void       (*p_glGetMinmaxParameterfv)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetMinmaxParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetMinmaxParameteriv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetMinmaxParameterivEXT)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetMultiTexEnvfvEXT)( GLenum texunit, GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetMultiTexEnvivEXT)( GLenum texunit, GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetMultiTexGendvEXT)( GLenum texunit, GLenum coord, GLenum pname, GLdouble *params );
+    void       (*p_glGetMultiTexGenfvEXT)( GLenum texunit, GLenum coord, GLenum pname, GLfloat *params );
+    void       (*p_glGetMultiTexGenivEXT)( GLenum texunit, GLenum coord, GLenum pname, GLint *params );
+    void       (*p_glGetMultiTexImageEXT)( GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels );
+    void       (*p_glGetMultiTexLevelParameterfvEXT)( GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params );
+    void       (*p_glGetMultiTexLevelParameterivEXT)( GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params );
+    void       (*p_glGetMultiTexParameterIivEXT)( GLenum texunit, GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetMultiTexParameterIuivEXT)( GLenum texunit, GLenum target, GLenum pname, GLuint *params );
+    void       (*p_glGetMultiTexParameterfvEXT)( GLenum texunit, GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetMultiTexParameterivEXT)( GLenum texunit, GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetMultisamplefv)( GLenum pname, GLuint index, GLfloat *val );
+    void       (*p_glGetMultisamplefvNV)( GLenum pname, GLuint index, GLfloat *val );
+    void       (*p_glGetNamedBufferParameteri64v)( GLuint buffer, GLenum pname, GLint64 *params );
+    void       (*p_glGetNamedBufferParameteriv)( GLuint buffer, GLenum pname, GLint *params );
+    void       (*p_glGetNamedBufferParameterivEXT)( GLuint buffer, GLenum pname, GLint *params );
+    void       (*p_glGetNamedBufferParameterui64vNV)( GLuint buffer, GLenum pname, GLuint64EXT *params );
+    void       (*p_glGetNamedBufferPointerv)( GLuint buffer, GLenum pname, void **params );
+    void       (*p_glGetNamedBufferPointervEXT)( GLuint buffer, GLenum pname, void **params );
+    void       (*p_glGetNamedBufferSubData)( GLuint buffer, GLintptr offset, GLsizeiptr size, void *data );
+    void       (*p_glGetNamedBufferSubDataEXT)( GLuint buffer, GLintptr offset, GLsizeiptr size, void *data );
+    void       (*p_glGetNamedFramebufferAttachmentParameteriv)( GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params );
+    void       (*p_glGetNamedFramebufferAttachmentParameterivEXT)( GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params );
+    void       (*p_glGetNamedFramebufferParameterfvAMD)( GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values );
+    void       (*p_glGetNamedFramebufferParameteriv)( GLuint framebuffer, GLenum pname, GLint *param );
+    void       (*p_glGetNamedFramebufferParameterivEXT)( GLuint framebuffer, GLenum pname, GLint *params );
+    void       (*p_glGetNamedProgramLocalParameterIivEXT)( GLuint program, GLenum target, GLuint index, GLint *params );
+    void       (*p_glGetNamedProgramLocalParameterIuivEXT)( GLuint program, GLenum target, GLuint index, GLuint *params );
+    void       (*p_glGetNamedProgramLocalParameterdvEXT)( GLuint program, GLenum target, GLuint index, GLdouble *params );
+    void       (*p_glGetNamedProgramLocalParameterfvEXT)( GLuint program, GLenum target, GLuint index, GLfloat *params );
+    void       (*p_glGetNamedProgramStringEXT)( GLuint program, GLenum target, GLenum pname, void *string );
+    void       (*p_glGetNamedProgramivEXT)( GLuint program, GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetNamedRenderbufferParameteriv)( GLuint renderbuffer, GLenum pname, GLint *params );
+    void       (*p_glGetNamedRenderbufferParameterivEXT)( GLuint renderbuffer, GLenum pname, GLint *params );
+    void       (*p_glGetNamedStringARB)( GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string );
+    void       (*p_glGetNamedStringivARB)( GLint namelen, const GLchar *name, GLenum pname, GLint *params );
+    void       (*p_glGetNextPerfQueryIdINTEL)( GLuint queryId, GLuint *nextQueryId );
+    void       (*p_glGetObjectBufferfvATI)( GLuint buffer, GLenum pname, GLfloat *params );
+    void       (*p_glGetObjectBufferivATI)( GLuint buffer, GLenum pname, GLint *params );
+    void       (*p_glGetObjectLabel)( GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label );
+    void       (*p_glGetObjectLabelEXT)( GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label );
+    void       (*p_glGetObjectParameterfvARB)( GLhandleARB obj, GLenum pname, GLfloat *params );
+    void       (*p_glGetObjectParameterivAPPLE)( GLenum objectType, GLuint name, GLenum pname, GLint *params );
+    void       (*p_glGetObjectParameterivARB)( GLhandleARB obj, GLenum pname, GLint *params );
+    void       (*p_glGetObjectPtrLabel)( const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label );
+    void       (*p_glGetOcclusionQueryivNV)( GLuint id, GLenum pname, GLint *params );
+    void       (*p_glGetOcclusionQueryuivNV)( GLuint id, GLenum pname, GLuint *params );
+    void       (*p_glGetPathColorGenfvNV)( GLenum color, GLenum pname, GLfloat *value );
+    void       (*p_glGetPathColorGenivNV)( GLenum color, GLenum pname, GLint *value );
+    void       (*p_glGetPathCommandsNV)( GLuint path, GLubyte *commands );
+    void       (*p_glGetPathCoordsNV)( GLuint path, GLfloat *coords );
+    void       (*p_glGetPathDashArrayNV)( GLuint path, GLfloat *dashArray );
+    GLfloat    (*p_glGetPathLengthNV)( GLuint path, GLsizei startSegment, GLsizei numSegments );
+    void       (*p_glGetPathMetricRangeNV)( GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics );
+    void       (*p_glGetPathMetricsNV)( GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics );
+    void       (*p_glGetPathParameterfvNV)( GLuint path, GLenum pname, GLfloat *value );
+    void       (*p_glGetPathParameterivNV)( GLuint path, GLenum pname, GLint *value );
+    void       (*p_glGetPathSpacingNV)( GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing );
+    void       (*p_glGetPathTexGenfvNV)( GLenum texCoordSet, GLenum pname, GLfloat *value );
+    void       (*p_glGetPathTexGenivNV)( GLenum texCoordSet, GLenum pname, GLint *value );
+    void       (*p_glGetPerfCounterInfoINTEL)( GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue );
+    void       (*p_glGetPerfMonitorCounterDataAMD)( GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten );
+    void       (*p_glGetPerfMonitorCounterInfoAMD)( GLuint group, GLuint counter, GLenum pname, void *data );
+    void       (*p_glGetPerfMonitorCounterStringAMD)( GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString );
+    void       (*p_glGetPerfMonitorCountersAMD)( GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters );
+    void       (*p_glGetPerfMonitorGroupStringAMD)( GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString );
+    void       (*p_glGetPerfMonitorGroupsAMD)( GLint *numGroups, GLsizei groupsSize, GLuint *groups );
+    void       (*p_glGetPerfQueryDataINTEL)( GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten );
+    void       (*p_glGetPerfQueryIdByNameINTEL)( GLchar *queryName, GLuint *queryId );
+    void       (*p_glGetPerfQueryInfoINTEL)( GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask );
+    void       (*p_glGetPixelMapxv)( GLenum map, GLint size, GLfixed *values );
+    void       (*p_glGetPixelTexGenParameterfvSGIS)( GLenum pname, GLfloat *params );
+    void       (*p_glGetPixelTexGenParameterivSGIS)( GLenum pname, GLint *params );
+    void       (*p_glGetPixelTransformParameterfvEXT)( GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetPixelTransformParameterivEXT)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetPointerIndexedvEXT)( GLenum target, GLuint index, void **data );
+    void       (*p_glGetPointeri_vEXT)( GLenum pname, GLuint index, void **params );
+    void       (*p_glGetPointervEXT)( GLenum pname, void **params );
+    void       (*p_glGetProgramBinary)( GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary );
+    void       (*p_glGetProgramEnvParameterIivNV)( GLenum target, GLuint index, GLint *params );
+    void       (*p_glGetProgramEnvParameterIuivNV)( GLenum target, GLuint index, GLuint *params );
+    void       (*p_glGetProgramEnvParameterdvARB)( GLenum target, GLuint index, GLdouble *params );
+    void       (*p_glGetProgramEnvParameterfvARB)( GLenum target, GLuint index, GLfloat *params );
+    void       (*p_glGetProgramInfoLog)( GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog );
+    void       (*p_glGetProgramInterfaceiv)( GLuint program, GLenum programInterface, GLenum pname, GLint *params );
+    void       (*p_glGetProgramLocalParameterIivNV)( GLenum target, GLuint index, GLint *params );
+    void       (*p_glGetProgramLocalParameterIuivNV)( GLenum target, GLuint index, GLuint *params );
+    void       (*p_glGetProgramLocalParameterdvARB)( GLenum target, GLuint index, GLdouble *params );
+    void       (*p_glGetProgramLocalParameterfvARB)( GLenum target, GLuint index, GLfloat *params );
+    void       (*p_glGetProgramNamedParameterdvNV)( GLuint id, GLsizei len, const GLubyte *name, GLdouble *params );
+    void       (*p_glGetProgramNamedParameterfvNV)( GLuint id, GLsizei len, const GLubyte *name, GLfloat *params );
+    void       (*p_glGetProgramParameterdvNV)( GLenum target, GLuint index, GLenum pname, GLdouble *params );
+    void       (*p_glGetProgramParameterfvNV)( GLenum target, GLuint index, GLenum pname, GLfloat *params );
+    void       (*p_glGetProgramPipelineInfoLog)( GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog );
+    void       (*p_glGetProgramPipelineiv)( GLuint pipeline, GLenum pname, GLint *params );
+    GLuint     (*p_glGetProgramResourceIndex)( GLuint program, GLenum programInterface, const GLchar *name );
+    GLint      (*p_glGetProgramResourceLocation)( GLuint program, GLenum programInterface, const GLchar *name );
+    GLint      (*p_glGetProgramResourceLocationIndex)( GLuint program, GLenum programInterface, const GLchar *name );
+    void       (*p_glGetProgramResourceName)( GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name );
+    void       (*p_glGetProgramResourcefvNV)( GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params );
+    void       (*p_glGetProgramResourceiv)( GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params );
+    void       (*p_glGetProgramStageiv)( GLuint program, GLenum shadertype, GLenum pname, GLint *values );
+    void       (*p_glGetProgramStringARB)( GLenum target, GLenum pname, void *string );
+    void       (*p_glGetProgramStringNV)( GLuint id, GLenum pname, GLubyte *program );
+    void       (*p_glGetProgramSubroutineParameteruivNV)( GLenum target, GLuint index, GLuint *param );
+    void       (*p_glGetProgramiv)( GLuint program, GLenum pname, GLint *params );
+    void       (*p_glGetProgramivARB)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetProgramivNV)( GLuint id, GLenum pname, GLint *params );
+    void       (*p_glGetQueryBufferObjecti64v)( GLuint id, GLuint buffer, GLenum pname, GLintptr offset );
+    void       (*p_glGetQueryBufferObjectiv)( GLuint id, GLuint buffer, GLenum pname, GLintptr offset );
+    void       (*p_glGetQueryBufferObjectui64v)( GLuint id, GLuint buffer, GLenum pname, GLintptr offset );
+    void       (*p_glGetQueryBufferObjectuiv)( GLuint id, GLuint buffer, GLenum pname, GLintptr offset );
+    void       (*p_glGetQueryIndexediv)( GLenum target, GLuint index, GLenum pname, GLint *params );
+    void       (*p_glGetQueryObjecti64v)( GLuint id, GLenum pname, GLint64 *params );
+    void       (*p_glGetQueryObjecti64vEXT)( GLuint id, GLenum pname, GLint64 *params );
+    void       (*p_glGetQueryObjectiv)( GLuint id, GLenum pname, GLint *params );
+    void       (*p_glGetQueryObjectivARB)( GLuint id, GLenum pname, GLint *params );
+    void       (*p_glGetQueryObjectui64v)( GLuint id, GLenum pname, GLuint64 *params );
+    void       (*p_glGetQueryObjectui64vEXT)( GLuint id, GLenum pname, GLuint64 *params );
+    void       (*p_glGetQueryObjectuiv)( GLuint id, GLenum pname, GLuint *params );
+    void       (*p_glGetQueryObjectuivARB)( GLuint id, GLenum pname, GLuint *params );
+    void       (*p_glGetQueryiv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetQueryivARB)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetRenderbufferParameteriv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetRenderbufferParameterivEXT)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetSamplerParameterIiv)( GLuint sampler, GLenum pname, GLint *params );
+    void       (*p_glGetSamplerParameterIuiv)( GLuint sampler, GLenum pname, GLuint *params );
+    void       (*p_glGetSamplerParameterfv)( GLuint sampler, GLenum pname, GLfloat *params );
+    void       (*p_glGetSamplerParameteriv)( GLuint sampler, GLenum pname, GLint *params );
+    void       (*p_glGetSemaphoreParameterui64vEXT)( GLuint semaphore, GLenum pname, GLuint64 *params );
+    void       (*p_glGetSeparableFilter)( GLenum target, GLenum format, GLenum type, void *row, void *column, void *span );
+    void       (*p_glGetSeparableFilterEXT)( GLenum target, GLenum format, GLenum type, void *row, void *column, void *span );
+    void       (*p_glGetShaderInfoLog)( GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog );
+    void       (*p_glGetShaderPrecisionFormat)( GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision );
+    void       (*p_glGetShaderSource)( GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source );
+    void       (*p_glGetShaderSourceARB)( GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source );
+    void       (*p_glGetShaderiv)( GLuint shader, GLenum pname, GLint *params );
+    void       (*p_glGetShadingRateImagePaletteNV)( GLuint viewport, GLuint entry, GLenum *rate );
+    void       (*p_glGetShadingRateSampleLocationivNV)( GLenum rate, GLuint samples, GLuint index, GLint *location );
+    void       (*p_glGetSharpenTexFuncSGIS)( GLenum target, GLfloat *points );
+    GLushort   (*p_glGetStageIndexNV)( GLenum shadertype );
+    const GLubyte * (*p_glGetStringi)( GLenum name, GLuint index );
+    GLuint     (*p_glGetSubroutineIndex)( GLuint program, GLenum shadertype, const GLchar *name );
+    GLint      (*p_glGetSubroutineUniformLocation)( GLuint program, GLenum shadertype, const GLchar *name );
+    void       (*p_glGetSynciv)( GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values );
+    void       (*p_glGetTexBumpParameterfvATI)( GLenum pname, GLfloat *param );
+    void       (*p_glGetTexBumpParameterivATI)( GLenum pname, GLint *param );
+    void       (*p_glGetTexEnvxvOES)( GLenum target, GLenum pname, GLfixed *params );
+    void       (*p_glGetTexFilterFuncSGIS)( GLenum target, GLenum filter, GLfloat *weights );
+    void       (*p_glGetTexGenxvOES)( GLenum coord, GLenum pname, GLfixed *params );
+    void       (*p_glGetTexLevelParameterxvOES)( GLenum target, GLint level, GLenum pname, GLfixed *params );
+    void       (*p_glGetTexParameterIiv)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetTexParameterIivEXT)( GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetTexParameterIuiv)( GLenum target, GLenum pname, GLuint *params );
+    void       (*p_glGetTexParameterIuivEXT)( GLenum target, GLenum pname, GLuint *params );
+    void       (*p_glGetTexParameterPointervAPPLE)( GLenum target, GLenum pname, void **params );
+    void       (*p_glGetTexParameterxvOES)( GLenum target, GLenum pname, GLfixed *params );
+    GLuint64   (*p_glGetTextureHandleARB)( GLuint texture );
+    GLuint64   (*p_glGetTextureHandleNV)( GLuint texture );
+    void       (*p_glGetTextureImage)( GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels );
+    void       (*p_glGetTextureImageEXT)( GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels );
+    void       (*p_glGetTextureLevelParameterfv)( GLuint texture, GLint level, GLenum pname, GLfloat *params );
+    void       (*p_glGetTextureLevelParameterfvEXT)( GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params );
+    void       (*p_glGetTextureLevelParameteriv)( GLuint texture, GLint level, GLenum pname, GLint *params );
+    void       (*p_glGetTextureLevelParameterivEXT)( GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params );
+    void       (*p_glGetTextureParameterIiv)( GLuint texture, GLenum pname, GLint *params );
+    void       (*p_glGetTextureParameterIivEXT)( GLuint texture, GLenum target, GLenum pname, GLint *params );
+    void       (*p_glGetTextureParameterIuiv)( GLuint texture, GLenum pname, GLuint *params );
+    void       (*p_glGetTextureParameterIuivEXT)( GLuint texture, GLenum target, GLenum pname, GLuint *params );
+    void       (*p_glGetTextureParameterfv)( GLuint texture, GLenum pname, GLfloat *params );
+    void       (*p_glGetTextureParameterfvEXT)( GLuint texture, GLenum target, GLenum pname, GLfloat *params );
+    void       (*p_glGetTextureParameteriv)( GLuint texture, GLenum pname, GLint *params );
+    void       (*p_glGetTextureParameterivEXT)( GLuint texture, GLenum target, GLenum pname, GLint *params );
+    GLuint64   (*p_glGetTextureSamplerHandleARB)( GLuint texture, GLuint sampler );
+    GLuint64   (*p_glGetTextureSamplerHandleNV)( GLuint texture, GLuint sampler );
+    void       (*p_glGetTextureSubImage)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels );
+    void       (*p_glGetTrackMatrixivNV)( GLenum target, GLuint address, GLenum pname, GLint *params );
+    void       (*p_glGetTransformFeedbackVarying)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name );
+    void       (*p_glGetTransformFeedbackVaryingEXT)( GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name );
+    void       (*p_glGetTransformFeedbackVaryingNV)( GLuint program, GLuint index, GLint *location );
+    void       (*p_glGetTransformFeedbacki64_v)( GLuint xfb, GLenum pname, GLuint index, GLint64 *param );
+    void       (*p_glGetTransformFeedbacki_v)( GLuint xfb, GLenum pname, GLuint index, GLint *param );
+    void       (*p_glGetTransformFeedbackiv)( GLuint xfb, GLenum pname, GLint *param );
+    GLuint     (*p_glGetUniformBlockIndex)( GLuint program, const GLchar *uniformBlockName );
+    GLint      (*p_glGetUniformBufferSizeEXT)( GLuint program, GLint location );
+    void       (*p_glGetUniformIndices)( GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices );
+    GLint      (*p_glGetUniformLocation)( GLuint program, const GLchar *name );
+    GLint      (*p_glGetUniformLocationARB)( GLhandleARB programObj, const GLcharARB *name );
+    GLintptr   (*p_glGetUniformOffsetEXT)( GLuint program, GLint location );
+    void       (*p_glGetUniformSubroutineuiv)( GLenum shadertype, GLint location, GLuint *params );
+    void       (*p_glGetUniformdv)( GLuint program, GLint location, GLdouble *params );
+    void       (*p_glGetUniformfv)( GLuint program, GLint location, GLfloat *params );
+    void       (*p_glGetUniformfvARB)( GLhandleARB programObj, GLint location, GLfloat *params );
+    void       (*p_glGetUniformi64vARB)( GLuint program, GLint location, GLint64 *params );
+    void       (*p_glGetUniformi64vNV)( GLuint program, GLint location, GLint64EXT *params );
+    void       (*p_glGetUniformiv)( GLuint program, GLint location, GLint *params );
+    void       (*p_glGetUniformivARB)( GLhandleARB programObj, GLint location, GLint *params );
+    void       (*p_glGetUniformui64vARB)( GLuint program, GLint location, GLuint64 *params );
+    void       (*p_glGetUniformui64vNV)( GLuint program, GLint location, GLuint64EXT *params );
+    void       (*p_glGetUniformuiv)( GLuint program, GLint location, GLuint *params );
+    void       (*p_glGetUniformuivEXT)( GLuint program, GLint location, GLuint *params );
+    void       (*p_glGetUnsignedBytei_vEXT)( GLenum target, GLuint index, GLubyte *data );
+    void       (*p_glGetUnsignedBytevEXT)( GLenum pname, GLubyte *data );
+    void       (*p_glGetVariantArrayObjectfvATI)( GLuint id, GLenum pname, GLfloat *params );
+    void       (*p_glGetVariantArrayObjectivATI)( GLuint id, GLenum pname, GLint *params );
+    void       (*p_glGetVariantBooleanvEXT)( GLuint id, GLenum value, GLboolean *data );
+    void       (*p_glGetVariantFloatvEXT)( GLuint id, GLenum value, GLfloat *data );
+    void       (*p_glGetVariantIntegervEXT)( GLuint id, GLenum value, GLint *data );
+    void       (*p_glGetVariantPointervEXT)( GLuint id, GLenum value, void **data );
+    GLint      (*p_glGetVaryingLocationNV)( GLuint program, const GLchar *name );
+    void       (*p_glGetVertexArrayIndexed64iv)( GLuint vaobj, GLuint index, GLenum pname, GLint64 *param );
+    void       (*p_glGetVertexArrayIndexediv)( GLuint vaobj, GLuint index, GLenum pname, GLint *param );
+    void       (*p_glGetVertexArrayIntegeri_vEXT)( GLuint vaobj, GLuint index, GLenum pname, GLint *param );
+    void       (*p_glGetVertexArrayIntegervEXT)( GLuint vaobj, GLenum pname, GLint *param );
+    void       (*p_glGetVertexArrayPointeri_vEXT)( GLuint vaobj, GLuint index, GLenum pname, void **param );
+    void       (*p_glGetVertexArrayPointervEXT)( GLuint vaobj, GLenum pname, void **param );
+    void       (*p_glGetVertexArrayiv)( GLuint vaobj, GLenum pname, GLint *param );
+    void       (*p_glGetVertexAttribArrayObjectfvATI)( GLuint index, GLenum pname, GLfloat *params );
+    void       (*p_glGetVertexAttribArrayObjectivATI)( GLuint index, GLenum pname, GLint *params );
+    void       (*p_glGetVertexAttribIiv)( GLuint index, GLenum pname, GLint *params );
+    void       (*p_glGetVertexAttribIivEXT)( GLuint index, GLenum pname, GLint *params );
+    void       (*p_glGetVertexAttribIuiv)( GLuint index, GLenum pname, GLuint *params );
+    void       (*p_glGetVertexAttribIuivEXT)( GLuint index, GLenum pname, GLuint *params );
+    void       (*p_glGetVertexAttribLdv)( GLuint index, GLenum pname, GLdouble *params );
+    void       (*p_glGetVertexAttribLdvEXT)( GLuint index, GLenum pname, GLdouble *params );
+    void       (*p_glGetVertexAttribLi64vNV)( GLuint index, GLenum pname, GLint64EXT *params );
+    void       (*p_glGetVertexAttribLui64vARB)( GLuint index, GLenum pname, GLuint64EXT *params );
+    void       (*p_glGetVertexAttribLui64vNV)( GLuint index, GLenum pname, GLuint64EXT *params );
+    void       (*p_glGetVertexAttribPointerv)( GLuint index, GLenum pname, void **pointer );
+    void       (*p_glGetVertexAttribPointervARB)( GLuint index, GLenum pname, void **pointer );
+    void       (*p_glGetVertexAttribPointervNV)( GLuint index, GLenum pname, void **pointer );
+    void       (*p_glGetVertexAttribdv)( GLuint index, GLenum pname, GLdouble *params );
+    void       (*p_glGetVertexAttribdvARB)( GLuint index, GLenum pname, GLdouble *params );
+    void       (*p_glGetVertexAttribdvNV)( GLuint index, GLenum pname, GLdouble *params );
+    void       (*p_glGetVertexAttribfv)( GLuint index, GLenum pname, GLfloat *params );
+    void       (*p_glGetVertexAttribfvARB)( GLuint index, GLenum pname, GLfloat *params );
+    void       (*p_glGetVertexAttribfvNV)( GLuint index, GLenum pname, GLfloat *params );
+    void       (*p_glGetVertexAttribiv)( GLuint index, GLenum pname, GLint *params );
+    void       (*p_glGetVertexAttribivARB)( GLuint index, GLenum pname, GLint *params );
+    void       (*p_glGetVertexAttribivNV)( GLuint index, GLenum pname, GLint *params );
+    void       (*p_glGetVideoCaptureStreamdvNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params );
+    void       (*p_glGetVideoCaptureStreamfvNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params );
+    void       (*p_glGetVideoCaptureStreamivNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params );
+    void       (*p_glGetVideoCaptureivNV)( GLuint video_capture_slot, GLenum pname, GLint *params );
+    void       (*p_glGetVideoi64vNV)( GLuint video_slot, GLenum pname, GLint64EXT *params );
+    void       (*p_glGetVideoivNV)( GLuint video_slot, GLenum pname, GLint *params );
+    void       (*p_glGetVideoui64vNV)( GLuint video_slot, GLenum pname, GLuint64EXT *params );
+    void       (*p_glGetVideouivNV)( GLuint video_slot, GLenum pname, GLuint *params );
+    GLVULKANPROCNV (*p_glGetVkProcAddrNV)( const GLchar *name );
+    void       (*p_glGetnColorTable)( GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table );
+    void       (*p_glGetnColorTableARB)( GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table );
+    void       (*p_glGetnCompressedTexImage)( GLenum target, GLint lod, GLsizei bufSize, void *pixels );
+    void       (*p_glGetnCompressedTexImageARB)( GLenum target, GLint lod, GLsizei bufSize, void *img );
+    void       (*p_glGetnConvolutionFilter)( GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image );
+    void       (*p_glGetnConvolutionFilterARB)( GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image );
+    void       (*p_glGetnHistogram)( GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values );
+    void       (*p_glGetnHistogramARB)( GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values );
+    void       (*p_glGetnMapdv)( GLenum target, GLenum query, GLsizei bufSize, GLdouble *v );
+    void       (*p_glGetnMapdvARB)( GLenum target, GLenum query, GLsizei bufSize, GLdouble *v );
+    void       (*p_glGetnMapfv)( GLenum target, GLenum query, GLsizei bufSize, GLfloat *v );
+    void       (*p_glGetnMapfvARB)( GLenum target, GLenum query, GLsizei bufSize, GLfloat *v );
+    void       (*p_glGetnMapiv)( GLenum target, GLenum query, GLsizei bufSize, GLint *v );
+    void       (*p_glGetnMapivARB)( GLenum target, GLenum query, GLsizei bufSize, GLint *v );
+    void       (*p_glGetnMinmax)( GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values );
+    void       (*p_glGetnMinmaxARB)( GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values );
+    void       (*p_glGetnPixelMapfv)( GLenum map, GLsizei bufSize, GLfloat *values );
+    void       (*p_glGetnPixelMapfvARB)( GLenum map, GLsizei bufSize, GLfloat *values );
+    void       (*p_glGetnPixelMapuiv)( GLenum map, GLsizei bufSize, GLuint *values );
+    void       (*p_glGetnPixelMapuivARB)( GLenum map, GLsizei bufSize, GLuint *values );
+    void       (*p_glGetnPixelMapusv)( GLenum map, GLsizei bufSize, GLushort *values );
+    void       (*p_glGetnPixelMapusvARB)( GLenum map, GLsizei bufSize, GLushort *values );
+    void       (*p_glGetnPolygonStipple)( GLsizei bufSize, GLubyte *pattern );
+    void       (*p_glGetnPolygonStippleARB)( GLsizei bufSize, GLubyte *pattern );
+    void       (*p_glGetnSeparableFilter)( GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span );
+    void       (*p_glGetnSeparableFilterARB)( GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span );
+    void       (*p_glGetnTexImage)( GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels );
+    void       (*p_glGetnTexImageARB)( GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img );
+    void       (*p_glGetnUniformdv)( GLuint program, GLint location, GLsizei bufSize, GLdouble *params );
+    void       (*p_glGetnUniformdvARB)( GLuint program, GLint location, GLsizei bufSize, GLdouble *params );
+    void       (*p_glGetnUniformfv)( GLuint program, GLint location, GLsizei bufSize, GLfloat *params );
+    void       (*p_glGetnUniformfvARB)( GLuint program, GLint location, GLsizei bufSize, GLfloat *params );
+    void       (*p_glGetnUniformi64vARB)( GLuint program, GLint location, GLsizei bufSize, GLint64 *params );
+    void       (*p_glGetnUniformiv)( GLuint program, GLint location, GLsizei bufSize, GLint *params );
+    void       (*p_glGetnUniformivARB)( GLuint program, GLint location, GLsizei bufSize, GLint *params );
+    void       (*p_glGetnUniformui64vARB)( GLuint program, GLint location, GLsizei bufSize, GLuint64 *params );
+    void       (*p_glGetnUniformuiv)( GLuint program, GLint location, GLsizei bufSize, GLuint *params );
+    void       (*p_glGetnUniformuivARB)( GLuint program, GLint location, GLsizei bufSize, GLuint *params );
+    void       (*p_glGlobalAlphaFactorbSUN)( GLbyte factor );
+    void       (*p_glGlobalAlphaFactordSUN)( GLdouble factor );
+    void       (*p_glGlobalAlphaFactorfSUN)( GLfloat factor );
+    void       (*p_glGlobalAlphaFactoriSUN)( GLint factor );
+    void       (*p_glGlobalAlphaFactorsSUN)( GLshort factor );
+    void       (*p_glGlobalAlphaFactorubSUN)( GLubyte factor );
+    void       (*p_glGlobalAlphaFactoruiSUN)( GLuint factor );
+    void       (*p_glGlobalAlphaFactorusSUN)( GLushort factor );
+    void       (*p_glHintPGI)( GLenum target, GLint mode );
+    void       (*p_glHistogram)( GLenum target, GLsizei width, GLenum internalformat, GLboolean sink );
+    void       (*p_glHistogramEXT)( GLenum target, GLsizei width, GLenum internalformat, GLboolean sink );
+    void       (*p_glIglooInterfaceSGIX)( GLenum pname, const void *params );
+    void       (*p_glImageTransformParameterfHP)( GLenum target, GLenum pname, GLfloat param );
+    void       (*p_glImageTransformParameterfvHP)( GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glImageTransformParameteriHP)( GLenum target, GLenum pname, GLint param );
+    void       (*p_glImageTransformParameterivHP)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glImportMemoryFdEXT)( GLuint memory, GLuint64 size, GLenum handleType, GLint fd );
+    void       (*p_glImportMemoryWin32HandleEXT)( GLuint memory, GLuint64 size, GLenum handleType, void *handle );
+    void       (*p_glImportMemoryWin32NameEXT)( GLuint memory, GLuint64 size, GLenum handleType, const void *name );
+    void       (*p_glImportSemaphoreFdEXT)( GLuint semaphore, GLenum handleType, GLint fd );
+    void       (*p_glImportSemaphoreWin32HandleEXT)( GLuint semaphore, GLenum handleType, void *handle );
+    void       (*p_glImportSemaphoreWin32NameEXT)( GLuint semaphore, GLenum handleType, const void *name );
+    GLsync     (*p_glImportSyncEXT)( GLenum external_sync_type, GLintptr external_sync, GLbitfield flags );
+    void       (*p_glIndexFormatNV)( GLenum type, GLsizei stride );
+    void       (*p_glIndexFuncEXT)( GLenum func, GLclampf ref );
+    void       (*p_glIndexMaterialEXT)( GLenum face, GLenum mode );
+    void       (*p_glIndexPointerEXT)( GLenum type, GLsizei stride, GLsizei count, const void *pointer );
+    void       (*p_glIndexPointerListIBM)( GLenum type, GLint stride, const void **pointer, GLint ptrstride );
+    void       (*p_glIndexxOES)( GLfixed component );
+    void       (*p_glIndexxvOES)( const GLfixed *component );
+    void       (*p_glInsertComponentEXT)( GLuint res, GLuint src, GLuint num );
+    void       (*p_glInsertEventMarkerEXT)( GLsizei length, const GLchar *marker );
+    void       (*p_glInstrumentsBufferSGIX)( GLsizei size, GLint *buffer );
+    void       (*p_glInterpolatePathsNV)( GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight );
+    void       (*p_glInvalidateBufferData)( GLuint buffer );
+    void       (*p_glInvalidateBufferSubData)( GLuint buffer, GLintptr offset, GLsizeiptr length );
+    void       (*p_glInvalidateFramebuffer)( GLenum target, GLsizei numAttachments, const GLenum *attachments );
+    void       (*p_glInvalidateNamedFramebufferData)( GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments );
+    void       (*p_glInvalidateNamedFramebufferSubData)( GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glInvalidateSubFramebuffer)( GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glInvalidateTexImage)( GLuint texture, GLint level );
+    void       (*p_glInvalidateTexSubImage)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth );
+    GLboolean  (*p_glIsAsyncMarkerSGIX)( GLuint marker );
+    GLboolean  (*p_glIsBuffer)( GLuint buffer );
+    GLboolean  (*p_glIsBufferARB)( GLuint buffer );
+    GLboolean  (*p_glIsBufferResidentNV)( GLenum target );
+    GLboolean  (*p_glIsCommandListNV)( GLuint list );
+    GLboolean  (*p_glIsEnabledIndexedEXT)( GLenum target, GLuint index );
+    GLboolean  (*p_glIsEnabledi)( GLenum target, GLuint index );
+    GLboolean  (*p_glIsFenceAPPLE)( GLuint fence );
+    GLboolean  (*p_glIsFenceNV)( GLuint fence );
+    GLboolean  (*p_glIsFramebuffer)( GLuint framebuffer );
+    GLboolean  (*p_glIsFramebufferEXT)( GLuint framebuffer );
+    GLboolean  (*p_glIsImageHandleResidentARB)( GLuint64 handle );
+    GLboolean  (*p_glIsImageHandleResidentNV)( GLuint64 handle );
+    GLboolean  (*p_glIsMemoryObjectEXT)( GLuint memoryObject );
+    GLboolean  (*p_glIsNameAMD)( GLenum identifier, GLuint name );
+    GLboolean  (*p_glIsNamedBufferResidentNV)( GLuint buffer );
+    GLboolean  (*p_glIsNamedStringARB)( GLint namelen, const GLchar *name );
+    GLboolean  (*p_glIsObjectBufferATI)( GLuint buffer );
+    GLboolean  (*p_glIsOcclusionQueryNV)( GLuint id );
+    GLboolean  (*p_glIsPathNV)( GLuint path );
+    GLboolean  (*p_glIsPointInFillPathNV)( GLuint path, GLuint mask, GLfloat x, GLfloat y );
+    GLboolean  (*p_glIsPointInStrokePathNV)( GLuint path, GLfloat x, GLfloat y );
+    GLboolean  (*p_glIsProgram)( GLuint program );
+    GLboolean  (*p_glIsProgramARB)( GLuint program );
+    GLboolean  (*p_glIsProgramNV)( GLuint id );
+    GLboolean  (*p_glIsProgramPipeline)( GLuint pipeline );
+    GLboolean  (*p_glIsQuery)( GLuint id );
+    GLboolean  (*p_glIsQueryARB)( GLuint id );
+    GLboolean  (*p_glIsRenderbuffer)( GLuint renderbuffer );
+    GLboolean  (*p_glIsRenderbufferEXT)( GLuint renderbuffer );
+    GLboolean  (*p_glIsSampler)( GLuint sampler );
+    GLboolean  (*p_glIsSemaphoreEXT)( GLuint semaphore );
+    GLboolean  (*p_glIsShader)( GLuint shader );
+    GLboolean  (*p_glIsStateNV)( GLuint state );
+    GLboolean  (*p_glIsSync)( GLsync sync );
+    GLboolean  (*p_glIsTextureEXT)( GLuint texture );
+    GLboolean  (*p_glIsTextureHandleResidentARB)( GLuint64 handle );
+    GLboolean  (*p_glIsTextureHandleResidentNV)( GLuint64 handle );
+    GLboolean  (*p_glIsTransformFeedback)( GLuint id );
+    GLboolean  (*p_glIsTransformFeedbackNV)( GLuint id );
+    GLboolean  (*p_glIsVariantEnabledEXT)( GLuint id, GLenum cap );
+    GLboolean  (*p_glIsVertexArray)( GLuint array );
+    GLboolean  (*p_glIsVertexArrayAPPLE)( GLuint array );
+    GLboolean  (*p_glIsVertexAttribEnabledAPPLE)( GLuint index, GLenum pname );
+    void       (*p_glLGPUCopyImageSubDataNVX)( GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth );
+    void       (*p_glLGPUInterlockNVX)(void);
+    void       (*p_glLGPUNamedBufferSubDataNVX)( GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data );
+    void       (*p_glLabelObjectEXT)( GLenum type, GLuint object, GLsizei length, const GLchar *label );
+    void       (*p_glLightEnviSGIX)( GLenum pname, GLint param );
+    void       (*p_glLightModelxOES)( GLenum pname, GLfixed param );
+    void       (*p_glLightModelxvOES)( GLenum pname, const GLfixed *param );
+    void       (*p_glLightxOES)( GLenum light, GLenum pname, GLfixed param );
+    void       (*p_glLightxvOES)( GLenum light, GLenum pname, const GLfixed *params );
+    void       (*p_glLineWidthxOES)( GLfixed width );
+    void       (*p_glLinkProgram)( GLuint program );
+    void       (*p_glLinkProgramARB)( GLhandleARB programObj );
+    void       (*p_glListDrawCommandsStatesClientNV)( GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count );
+    void       (*p_glListParameterfSGIX)( GLuint list, GLenum pname, GLfloat param );
+    void       (*p_glListParameterfvSGIX)( GLuint list, GLenum pname, const GLfloat *params );
+    void       (*p_glListParameteriSGIX)( GLuint list, GLenum pname, GLint param );
+    void       (*p_glListParameterivSGIX)( GLuint list, GLenum pname, const GLint *params );
+    void       (*p_glLoadIdentityDeformationMapSGIX)( GLbitfield mask );
+    void       (*p_glLoadMatrixxOES)( const GLfixed *m );
+    void       (*p_glLoadProgramNV)( GLenum target, GLuint id, GLsizei len, const GLubyte *program );
+    void       (*p_glLoadTransposeMatrixd)( const GLdouble *m );
+    void       (*p_glLoadTransposeMatrixdARB)( const GLdouble *m );
+    void       (*p_glLoadTransposeMatrixf)( const GLfloat *m );
+    void       (*p_glLoadTransposeMatrixfARB)( const GLfloat *m );
+    void       (*p_glLoadTransposeMatrixxOES)( const GLfixed *m );
+    void       (*p_glLockArraysEXT)( GLint first, GLsizei count );
+    void       (*p_glMTexCoord2fSGIS)( GLenum target, GLfloat s, GLfloat t );
+    void       (*p_glMTexCoord2fvSGIS)( GLenum target, GLfloat * v );
+    void       (*p_glMakeBufferNonResidentNV)( GLenum target );
+    void       (*p_glMakeBufferResidentNV)( GLenum target, GLenum access );
+    void       (*p_glMakeImageHandleNonResidentARB)( GLuint64 handle );
+    void       (*p_glMakeImageHandleNonResidentNV)( GLuint64 handle );
+    void       (*p_glMakeImageHandleResidentARB)( GLuint64 handle, GLenum access );
+    void       (*p_glMakeImageHandleResidentNV)( GLuint64 handle, GLenum access );
+    void       (*p_glMakeNamedBufferNonResidentNV)( GLuint buffer );
+    void       (*p_glMakeNamedBufferResidentNV)( GLuint buffer, GLenum access );
+    void       (*p_glMakeTextureHandleNonResidentARB)( GLuint64 handle );
+    void       (*p_glMakeTextureHandleNonResidentNV)( GLuint64 handle );
+    void       (*p_glMakeTextureHandleResidentARB)( GLuint64 handle );
+    void       (*p_glMakeTextureHandleResidentNV)( GLuint64 handle );
+    void       (*p_glMap1xOES)( GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points );
+    void       (*p_glMap2xOES)( GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points );
+    void *     (*p_glMapBuffer)( GLenum target, GLenum access );
+    void *     (*p_glMapBufferARB)( GLenum target, GLenum access );
+    void *     (*p_glMapBufferRange)( GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access );
+    void       (*p_glMapControlPointsNV)( GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points );
+    void       (*p_glMapGrid1xOES)( GLint n, GLfixed u1, GLfixed u2 );
+    void       (*p_glMapGrid2xOES)( GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2 );
+    void *     (*p_glMapNamedBuffer)( GLuint buffer, GLenum access );
+    void *     (*p_glMapNamedBufferEXT)( GLuint buffer, GLenum access );
+    void *     (*p_glMapNamedBufferRange)( GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access );
+    void *     (*p_glMapNamedBufferRangeEXT)( GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access );
+    void *     (*p_glMapObjectBufferATI)( GLuint buffer );
+    void       (*p_glMapParameterfvNV)( GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glMapParameterivNV)( GLenum target, GLenum pname, const GLint *params );
+    void *     (*p_glMapTexture2DINTEL)( GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout );
+    void       (*p_glMapVertexAttrib1dAPPLE)( GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points );
+    void       (*p_glMapVertexAttrib1fAPPLE)( GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points );
+    void       (*p_glMapVertexAttrib2dAPPLE)( GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points );
+    void       (*p_glMapVertexAttrib2fAPPLE)( GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points );
+    void       (*p_glMaterialxOES)( GLenum face, GLenum pname, GLfixed param );
+    void       (*p_glMaterialxvOES)( GLenum face, GLenum pname, const GLfixed *param );
+    void       (*p_glMatrixFrustumEXT)( GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar );
+    void       (*p_glMatrixIndexPointerARB)( GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glMatrixIndexubvARB)( GLint size, const GLubyte *indices );
+    void       (*p_glMatrixIndexuivARB)( GLint size, const GLuint *indices );
+    void       (*p_glMatrixIndexusvARB)( GLint size, const GLushort *indices );
+    void       (*p_glMatrixLoad3x2fNV)( GLenum matrixMode, const GLfloat *m );
+    void       (*p_glMatrixLoad3x3fNV)( GLenum matrixMode, const GLfloat *m );
+    void       (*p_glMatrixLoadIdentityEXT)( GLenum mode );
+    void       (*p_glMatrixLoadTranspose3x3fNV)( GLenum matrixMode, const GLfloat *m );
+    void       (*p_glMatrixLoadTransposedEXT)( GLenum mode, const GLdouble *m );
+    void       (*p_glMatrixLoadTransposefEXT)( GLenum mode, const GLfloat *m );
+    void       (*p_glMatrixLoaddEXT)( GLenum mode, const GLdouble *m );
+    void       (*p_glMatrixLoadfEXT)( GLenum mode, const GLfloat *m );
+    void       (*p_glMatrixMult3x2fNV)( GLenum matrixMode, const GLfloat *m );
+    void       (*p_glMatrixMult3x3fNV)( GLenum matrixMode, const GLfloat *m );
+    void       (*p_glMatrixMultTranspose3x3fNV)( GLenum matrixMode, const GLfloat *m );
+    void       (*p_glMatrixMultTransposedEXT)( GLenum mode, const GLdouble *m );
+    void       (*p_glMatrixMultTransposefEXT)( GLenum mode, const GLfloat *m );
+    void       (*p_glMatrixMultdEXT)( GLenum mode, const GLdouble *m );
+    void       (*p_glMatrixMultfEXT)( GLenum mode, const GLfloat *m );
+    void       (*p_glMatrixOrthoEXT)( GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar );
+    void       (*p_glMatrixPopEXT)( GLenum mode );
+    void       (*p_glMatrixPushEXT)( GLenum mode );
+    void       (*p_glMatrixRotatedEXT)( GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glMatrixRotatefEXT)( GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glMatrixScaledEXT)( GLenum mode, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glMatrixScalefEXT)( GLenum mode, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glMatrixTranslatedEXT)( GLenum mode, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glMatrixTranslatefEXT)( GLenum mode, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glMaxShaderCompilerThreadsARB)( GLuint count );
+    void       (*p_glMaxShaderCompilerThreadsKHR)( GLuint count );
+    void       (*p_glMemoryBarrier)( GLbitfield barriers );
+    void       (*p_glMemoryBarrierByRegion)( GLbitfield barriers );
+    void       (*p_glMemoryBarrierEXT)( GLbitfield barriers );
+    void       (*p_glMemoryObjectParameterivEXT)( GLuint memoryObject, GLenum pname, const GLint *params );
+    void       (*p_glMinSampleShading)( GLfloat value );
+    void       (*p_glMinSampleShadingARB)( GLfloat value );
+    void       (*p_glMinmax)( GLenum target, GLenum internalformat, GLboolean sink );
+    void       (*p_glMinmaxEXT)( GLenum target, GLenum internalformat, GLboolean sink );
+    void       (*p_glMultMatrixxOES)( const GLfixed *m );
+    void       (*p_glMultTransposeMatrixd)( const GLdouble *m );
+    void       (*p_glMultTransposeMatrixdARB)( const GLdouble *m );
+    void       (*p_glMultTransposeMatrixf)( const GLfloat *m );
+    void       (*p_glMultTransposeMatrixfARB)( const GLfloat *m );
+    void       (*p_glMultTransposeMatrixxOES)( const GLfixed *m );
+    void       (*p_glMultiDrawArrays)( GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount );
+    void       (*p_glMultiDrawArraysEXT)( GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount );
+    void       (*p_glMultiDrawArraysIndirect)( GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride );
+    void       (*p_glMultiDrawArraysIndirectAMD)( GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride );
+    void       (*p_glMultiDrawArraysIndirectBindlessCountNV)( GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount );
+    void       (*p_glMultiDrawArraysIndirectBindlessNV)( GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount );
+    void       (*p_glMultiDrawArraysIndirectCount)( GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
+    void       (*p_glMultiDrawArraysIndirectCountARB)( GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
+    void       (*p_glMultiDrawElementArrayAPPLE)( GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount );
+    void       (*p_glMultiDrawElements)( GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount );
+    void       (*p_glMultiDrawElementsBaseVertex)( GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex );
+    void       (*p_glMultiDrawElementsEXT)( GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount );
+    void       (*p_glMultiDrawElementsIndirect)( GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride );
+    void       (*p_glMultiDrawElementsIndirectAMD)( GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride );
+    void       (*p_glMultiDrawElementsIndirectBindlessCountNV)( GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount );
+    void       (*p_glMultiDrawElementsIndirectBindlessNV)( GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount );
+    void       (*p_glMultiDrawElementsIndirectCount)( GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
+    void       (*p_glMultiDrawElementsIndirectCountARB)( GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
+    void       (*p_glMultiDrawMeshTasksIndirectCountNV)( GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride );
+    void       (*p_glMultiDrawMeshTasksIndirectNV)( GLintptr indirect, GLsizei drawcount, GLsizei stride );
+    void       (*p_glMultiDrawRangeElementArrayAPPLE)( GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount );
+    void       (*p_glMultiModeDrawArraysIBM)( const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride );
+    void       (*p_glMultiModeDrawElementsIBM)( const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride );
+    void       (*p_glMultiTexBufferEXT)( GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer );
+    void       (*p_glMultiTexCoord1bOES)( GLenum texture, GLbyte s );
+    void       (*p_glMultiTexCoord1bvOES)( GLenum texture, const GLbyte *coords );
+    void       (*p_glMultiTexCoord1d)( GLenum target, GLdouble s );
+    void       (*p_glMultiTexCoord1dARB)( GLenum target, GLdouble s );
+    void       (*p_glMultiTexCoord1dSGIS)( GLenum target, GLdouble s );
+    void       (*p_glMultiTexCoord1dv)( GLenum target, const GLdouble *v );
+    void       (*p_glMultiTexCoord1dvARB)( GLenum target, const GLdouble *v );
+    void       (*p_glMultiTexCoord1dvSGIS)( GLenum target, GLdouble * v );
+    void       (*p_glMultiTexCoord1f)( GLenum target, GLfloat s );
+    void       (*p_glMultiTexCoord1fARB)( GLenum target, GLfloat s );
+    void       (*p_glMultiTexCoord1fSGIS)( GLenum target, GLfloat s );
+    void       (*p_glMultiTexCoord1fv)( GLenum target, const GLfloat *v );
+    void       (*p_glMultiTexCoord1fvARB)( GLenum target, const GLfloat *v );
+    void       (*p_glMultiTexCoord1fvSGIS)( GLenum target, const GLfloat * v );
+    void       (*p_glMultiTexCoord1hNV)( GLenum target, GLhalfNV s );
+    void       (*p_glMultiTexCoord1hvNV)( GLenum target, const GLhalfNV *v );
+    void       (*p_glMultiTexCoord1i)( GLenum target, GLint s );
+    void       (*p_glMultiTexCoord1iARB)( GLenum target, GLint s );
+    void       (*p_glMultiTexCoord1iSGIS)( GLenum target, GLint s );
+    void       (*p_glMultiTexCoord1iv)( GLenum target, const GLint *v );
+    void       (*p_glMultiTexCoord1ivARB)( GLenum target, const GLint *v );
+    void       (*p_glMultiTexCoord1ivSGIS)( GLenum target, GLint * v );
+    void       (*p_glMultiTexCoord1s)( GLenum target, GLshort s );
+    void       (*p_glMultiTexCoord1sARB)( GLenum target, GLshort s );
+    void       (*p_glMultiTexCoord1sSGIS)( GLenum target, GLshort s );
+    void       (*p_glMultiTexCoord1sv)( GLenum target, const GLshort *v );
+    void       (*p_glMultiTexCoord1svARB)( GLenum target, const GLshort *v );
+    void       (*p_glMultiTexCoord1svSGIS)( GLenum target, GLshort * v );
+    void       (*p_glMultiTexCoord1xOES)( GLenum texture, GLfixed s );
+    void       (*p_glMultiTexCoord1xvOES)( GLenum texture, const GLfixed *coords );
+    void       (*p_glMultiTexCoord2bOES)( GLenum texture, GLbyte s, GLbyte t );
+    void       (*p_glMultiTexCoord2bvOES)( GLenum texture, const GLbyte *coords );
+    void       (*p_glMultiTexCoord2d)( GLenum target, GLdouble s, GLdouble t );
+    void       (*p_glMultiTexCoord2dARB)( GLenum target, GLdouble s, GLdouble t );
+    void       (*p_glMultiTexCoord2dSGIS)( GLenum target, GLdouble s, GLdouble t );
+    void       (*p_glMultiTexCoord2dv)( GLenum target, const GLdouble *v );
+    void       (*p_glMultiTexCoord2dvARB)( GLenum target, const GLdouble *v );
+    void       (*p_glMultiTexCoord2dvSGIS)( GLenum target, GLdouble * v );
+    void       (*p_glMultiTexCoord2f)( GLenum target, GLfloat s, GLfloat t );
+    void       (*p_glMultiTexCoord2fARB)( GLenum target, GLfloat s, GLfloat t );
+    void       (*p_glMultiTexCoord2fSGIS)( GLenum target, GLfloat s, GLfloat t );
+    void       (*p_glMultiTexCoord2fv)( GLenum target, const GLfloat *v );
+    void       (*p_glMultiTexCoord2fvARB)( GLenum target, const GLfloat *v );
+    void       (*p_glMultiTexCoord2fvSGIS)( GLenum target, GLfloat * v );
+    void       (*p_glMultiTexCoord2hNV)( GLenum target, GLhalfNV s, GLhalfNV t );
+    void       (*p_glMultiTexCoord2hvNV)( GLenum target, const GLhalfNV *v );
+    void       (*p_glMultiTexCoord2i)( GLenum target, GLint s, GLint t );
+    void       (*p_glMultiTexCoord2iARB)( GLenum target, GLint s, GLint t );
+    void       (*p_glMultiTexCoord2iSGIS)( GLenum target, GLint s, GLint t );
+    void       (*p_glMultiTexCoord2iv)( GLenum target, const GLint *v );
+    void       (*p_glMultiTexCoord2ivARB)( GLenum target, const GLint *v );
+    void       (*p_glMultiTexCoord2ivSGIS)( GLenum target, GLint * v );
+    void       (*p_glMultiTexCoord2s)( GLenum target, GLshort s, GLshort t );
+    void       (*p_glMultiTexCoord2sARB)( GLenum target, GLshort s, GLshort t );
+    void       (*p_glMultiTexCoord2sSGIS)( GLenum target, GLshort s, GLshort t );
+    void       (*p_glMultiTexCoord2sv)( GLenum target, const GLshort *v );
+    void       (*p_glMultiTexCoord2svARB)( GLenum target, const GLshort *v );
+    void       (*p_glMultiTexCoord2svSGIS)( GLenum target, GLshort * v );
+    void       (*p_glMultiTexCoord2xOES)( GLenum texture, GLfixed s, GLfixed t );
+    void       (*p_glMultiTexCoord2xvOES)( GLenum texture, const GLfixed *coords );
+    void       (*p_glMultiTexCoord3bOES)( GLenum texture, GLbyte s, GLbyte t, GLbyte r );
+    void       (*p_glMultiTexCoord3bvOES)( GLenum texture, const GLbyte *coords );
+    void       (*p_glMultiTexCoord3d)( GLenum target, GLdouble s, GLdouble t, GLdouble r );
+    void       (*p_glMultiTexCoord3dARB)( GLenum target, GLdouble s, GLdouble t, GLdouble r );
+    void       (*p_glMultiTexCoord3dSGIS)( GLenum target, GLdouble s, GLdouble t, GLdouble r );
+    void       (*p_glMultiTexCoord3dv)( GLenum target, const GLdouble *v );
+    void       (*p_glMultiTexCoord3dvARB)( GLenum target, const GLdouble *v );
+    void       (*p_glMultiTexCoord3dvSGIS)( GLenum target, GLdouble * v );
+    void       (*p_glMultiTexCoord3f)( GLenum target, GLfloat s, GLfloat t, GLfloat r );
+    void       (*p_glMultiTexCoord3fARB)( GLenum target, GLfloat s, GLfloat t, GLfloat r );
+    void       (*p_glMultiTexCoord3fSGIS)( GLenum target, GLfloat s, GLfloat t, GLfloat r );
+    void       (*p_glMultiTexCoord3fv)( GLenum target, const GLfloat *v );
+    void       (*p_glMultiTexCoord3fvARB)( GLenum target, const GLfloat *v );
+    void       (*p_glMultiTexCoord3fvSGIS)( GLenum target, GLfloat * v );
+    void       (*p_glMultiTexCoord3hNV)( GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r );
+    void       (*p_glMultiTexCoord3hvNV)( GLenum target, const GLhalfNV *v );
+    void       (*p_glMultiTexCoord3i)( GLenum target, GLint s, GLint t, GLint r );
+    void       (*p_glMultiTexCoord3iARB)( GLenum target, GLint s, GLint t, GLint r );
+    void       (*p_glMultiTexCoord3iSGIS)( GLenum target, GLint s, GLint t, GLint r );
+    void       (*p_glMultiTexCoord3iv)( GLenum target, const GLint *v );
+    void       (*p_glMultiTexCoord3ivARB)( GLenum target, const GLint *v );
+    void       (*p_glMultiTexCoord3ivSGIS)( GLenum target, GLint * v );
+    void       (*p_glMultiTexCoord3s)( GLenum target, GLshort s, GLshort t, GLshort r );
+    void       (*p_glMultiTexCoord3sARB)( GLenum target, GLshort s, GLshort t, GLshort r );
+    void       (*p_glMultiTexCoord3sSGIS)( GLenum target, GLshort s, GLshort t, GLshort r );
+    void       (*p_glMultiTexCoord3sv)( GLenum target, const GLshort *v );
+    void       (*p_glMultiTexCoord3svARB)( GLenum target, const GLshort *v );
+    void       (*p_glMultiTexCoord3svSGIS)( GLenum target, GLshort * v );
+    void       (*p_glMultiTexCoord3xOES)( GLenum texture, GLfixed s, GLfixed t, GLfixed r );
+    void       (*p_glMultiTexCoord3xvOES)( GLenum texture, const GLfixed *coords );
+    void       (*p_glMultiTexCoord4bOES)( GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q );
+    void       (*p_glMultiTexCoord4bvOES)( GLenum texture, const GLbyte *coords );
+    void       (*p_glMultiTexCoord4d)( GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q );
+    void       (*p_glMultiTexCoord4dARB)( GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q );
+    void       (*p_glMultiTexCoord4dSGIS)( GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q );
+    void       (*p_glMultiTexCoord4dv)( GLenum target, const GLdouble *v );
+    void       (*p_glMultiTexCoord4dvARB)( GLenum target, const GLdouble *v );
+    void       (*p_glMultiTexCoord4dvSGIS)( GLenum target, GLdouble * v );
+    void       (*p_glMultiTexCoord4f)( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q );
+    void       (*p_glMultiTexCoord4fARB)( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q );
+    void       (*p_glMultiTexCoord4fSGIS)( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q );
+    void       (*p_glMultiTexCoord4fv)( GLenum target, const GLfloat *v );
+    void       (*p_glMultiTexCoord4fvARB)( GLenum target, const GLfloat *v );
+    void       (*p_glMultiTexCoord4fvSGIS)( GLenum target, GLfloat * v );
+    void       (*p_glMultiTexCoord4hNV)( GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q );
+    void       (*p_glMultiTexCoord4hvNV)( GLenum target, const GLhalfNV *v );
+    void       (*p_glMultiTexCoord4i)( GLenum target, GLint s, GLint t, GLint r, GLint q );
+    void       (*p_glMultiTexCoord4iARB)( GLenum target, GLint s, GLint t, GLint r, GLint q );
+    void       (*p_glMultiTexCoord4iSGIS)( GLenum target, GLint s, GLint t, GLint r, GLint q );
+    void       (*p_glMultiTexCoord4iv)( GLenum target, const GLint *v );
+    void       (*p_glMultiTexCoord4ivARB)( GLenum target, const GLint *v );
+    void       (*p_glMultiTexCoord4ivSGIS)( GLenum target, GLint * v );
+    void       (*p_glMultiTexCoord4s)( GLenum target, GLshort s, GLshort t, GLshort r, GLshort q );
+    void       (*p_glMultiTexCoord4sARB)( GLenum target, GLshort s, GLshort t, GLshort r, GLshort q );
+    void       (*p_glMultiTexCoord4sSGIS)( GLenum target, GLshort s, GLshort t, GLshort r, GLshort q );
+    void       (*p_glMultiTexCoord4sv)( GLenum target, const GLshort *v );
+    void       (*p_glMultiTexCoord4svARB)( GLenum target, const GLshort *v );
+    void       (*p_glMultiTexCoord4svSGIS)( GLenum target, GLshort * v );
+    void       (*p_glMultiTexCoord4xOES)( GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q );
+    void       (*p_glMultiTexCoord4xvOES)( GLenum texture, const GLfixed *coords );
+    void       (*p_glMultiTexCoordP1ui)( GLenum texture, GLenum type, GLuint coords );
+    void       (*p_glMultiTexCoordP1uiv)( GLenum texture, GLenum type, const GLuint *coords );
+    void       (*p_glMultiTexCoordP2ui)( GLenum texture, GLenum type, GLuint coords );
+    void       (*p_glMultiTexCoordP2uiv)( GLenum texture, GLenum type, const GLuint *coords );
+    void       (*p_glMultiTexCoordP3ui)( GLenum texture, GLenum type, GLuint coords );
+    void       (*p_glMultiTexCoordP3uiv)( GLenum texture, GLenum type, const GLuint *coords );
+    void       (*p_glMultiTexCoordP4ui)( GLenum texture, GLenum type, GLuint coords );
+    void       (*p_glMultiTexCoordP4uiv)( GLenum texture, GLenum type, const GLuint *coords );
+    void       (*p_glMultiTexCoordPointerEXT)( GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glMultiTexCoordPointerSGIS)( GLenum target, GLint size, GLenum type, GLsizei stride, GLvoid * pointer );
+    void       (*p_glMultiTexEnvfEXT)( GLenum texunit, GLenum target, GLenum pname, GLfloat param );
+    void       (*p_glMultiTexEnvfvEXT)( GLenum texunit, GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glMultiTexEnviEXT)( GLenum texunit, GLenum target, GLenum pname, GLint param );
+    void       (*p_glMultiTexEnvivEXT)( GLenum texunit, GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glMultiTexGendEXT)( GLenum texunit, GLenum coord, GLenum pname, GLdouble param );
+    void       (*p_glMultiTexGendvEXT)( GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params );
+    void       (*p_glMultiTexGenfEXT)( GLenum texunit, GLenum coord, GLenum pname, GLfloat param );
+    void       (*p_glMultiTexGenfvEXT)( GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params );
+    void       (*p_glMultiTexGeniEXT)( GLenum texunit, GLenum coord, GLenum pname, GLint param );
+    void       (*p_glMultiTexGenivEXT)( GLenum texunit, GLenum coord, GLenum pname, const GLint *params );
+    void       (*p_glMultiTexImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glMultiTexImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glMultiTexImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glMultiTexParameterIivEXT)( GLenum texunit, GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glMultiTexParameterIuivEXT)( GLenum texunit, GLenum target, GLenum pname, const GLuint *params );
+    void       (*p_glMultiTexParameterfEXT)( GLenum texunit, GLenum target, GLenum pname, GLfloat param );
+    void       (*p_glMultiTexParameterfvEXT)( GLenum texunit, GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glMultiTexParameteriEXT)( GLenum texunit, GLenum target, GLenum pname, GLint param );
+    void       (*p_glMultiTexParameterivEXT)( GLenum texunit, GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glMultiTexRenderbufferEXT)( GLenum texunit, GLenum target, GLuint renderbuffer );
+    void       (*p_glMultiTexSubImage1DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glMultiTexSubImage2DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glMultiTexSubImage3DEXT)( GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glMulticastBarrierNV)(void);
+    void       (*p_glMulticastBlitFramebufferNV)( GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter );
+    void       (*p_glMulticastBufferSubDataNV)( GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data );
+    void       (*p_glMulticastCopyBufferSubDataNV)( GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size );
+    void       (*p_glMulticastCopyImageSubDataNV)( GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth );
+    void       (*p_glMulticastFramebufferSampleLocationsfvNV)( GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v );
+    void       (*p_glMulticastGetQueryObjecti64vNV)( GLuint gpu, GLuint id, GLenum pname, GLint64 *params );
+    void       (*p_glMulticastGetQueryObjectivNV)( GLuint gpu, GLuint id, GLenum pname, GLint *params );
+    void       (*p_glMulticastGetQueryObjectui64vNV)( GLuint gpu, GLuint id, GLenum pname, GLuint64 *params );
+    void       (*p_glMulticastGetQueryObjectuivNV)( GLuint gpu, GLuint id, GLenum pname, GLuint *params );
+    void       (*p_glMulticastScissorArrayvNVX)( GLuint gpu, GLuint first, GLsizei count, const GLint *v );
+    void       (*p_glMulticastViewportArrayvNVX)( GLuint gpu, GLuint first, GLsizei count, const GLfloat *v );
+    void       (*p_glMulticastViewportPositionWScaleNVX)( GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff );
+    void       (*p_glMulticastWaitSyncNV)( GLuint signalGpu, GLbitfield waitGpuMask );
+    void       (*p_glNamedBufferAttachMemoryNV)( GLuint buffer, GLuint memory, GLuint64 offset );
+    void       (*p_glNamedBufferData)( GLuint buffer, GLsizeiptr size, const void *data, GLenum usage );
+    void       (*p_glNamedBufferDataEXT)( GLuint buffer, GLsizeiptr size, const void *data, GLenum usage );
+    void       (*p_glNamedBufferPageCommitmentARB)( GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit );
+    void       (*p_glNamedBufferPageCommitmentEXT)( GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit );
+    void       (*p_glNamedBufferStorage)( GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags );
+    void       (*p_glNamedBufferStorageEXT)( GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags );
+    void       (*p_glNamedBufferStorageExternalEXT)( GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags );
+    void       (*p_glNamedBufferStorageMemEXT)( GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset );
+    void       (*p_glNamedBufferSubData)( GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data );
+    void       (*p_glNamedBufferSubDataEXT)( GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data );
+    void       (*p_glNamedCopyBufferSubDataEXT)( GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size );
+    void       (*p_glNamedFramebufferDrawBuffer)( GLuint framebuffer, GLenum buf );
+    void       (*p_glNamedFramebufferDrawBuffers)( GLuint framebuffer, GLsizei n, const GLenum *bufs );
+    void       (*p_glNamedFramebufferParameteri)( GLuint framebuffer, GLenum pname, GLint param );
+    void       (*p_glNamedFramebufferParameteriEXT)( GLuint framebuffer, GLenum pname, GLint param );
+    void       (*p_glNamedFramebufferReadBuffer)( GLuint framebuffer, GLenum src );
+    void       (*p_glNamedFramebufferRenderbuffer)( GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer );
+    void       (*p_glNamedFramebufferRenderbufferEXT)( GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer );
+    void       (*p_glNamedFramebufferSampleLocationsfvARB)( GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v );
+    void       (*p_glNamedFramebufferSampleLocationsfvNV)( GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v );
+    void       (*p_glNamedFramebufferSamplePositionsfvAMD)( GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values );
+    void       (*p_glNamedFramebufferTexture)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level );
+    void       (*p_glNamedFramebufferTexture1DEXT)( GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
+    void       (*p_glNamedFramebufferTexture2DEXT)( GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level );
+    void       (*p_glNamedFramebufferTexture3DEXT)( GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset );
+    void       (*p_glNamedFramebufferTextureEXT)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level );
+    void       (*p_glNamedFramebufferTextureFaceEXT)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face );
+    void       (*p_glNamedFramebufferTextureLayer)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer );
+    void       (*p_glNamedFramebufferTextureLayerEXT)( GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer );
+    void       (*p_glNamedProgramLocalParameter4dEXT)( GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glNamedProgramLocalParameter4dvEXT)( GLuint program, GLenum target, GLuint index, const GLdouble *params );
+    void       (*p_glNamedProgramLocalParameter4fEXT)( GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glNamedProgramLocalParameter4fvEXT)( GLuint program, GLenum target, GLuint index, const GLfloat *params );
+    void       (*p_glNamedProgramLocalParameterI4iEXT)( GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w );
+    void       (*p_glNamedProgramLocalParameterI4ivEXT)( GLuint program, GLenum target, GLuint index, const GLint *params );
+    void       (*p_glNamedProgramLocalParameterI4uiEXT)( GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
+    void       (*p_glNamedProgramLocalParameterI4uivEXT)( GLuint program, GLenum target, GLuint index, const GLuint *params );
+    void       (*p_glNamedProgramLocalParameters4fvEXT)( GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params );
+    void       (*p_glNamedProgramLocalParametersI4ivEXT)( GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params );
+    void       (*p_glNamedProgramLocalParametersI4uivEXT)( GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params );
+    void       (*p_glNamedProgramStringEXT)( GLuint program, GLenum target, GLenum format, GLsizei len, const void *string );
+    void       (*p_glNamedRenderbufferStorage)( GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glNamedRenderbufferStorageEXT)( GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glNamedRenderbufferStorageMultisample)( GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glNamedRenderbufferStorageMultisampleAdvancedAMD)( GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glNamedRenderbufferStorageMultisampleCoverageEXT)( GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glNamedRenderbufferStorageMultisampleEXT)( GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glNamedStringARB)( GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string );
+    GLuint     (*p_glNewBufferRegion)( GLenum type );
+    GLuint     (*p_glNewObjectBufferATI)( GLsizei size, const void *pointer, GLenum usage );
+    void       (*p_glNormal3fVertex3fSUN)( GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glNormal3fVertex3fvSUN)( const GLfloat *n, const GLfloat *v );
+    void       (*p_glNormal3hNV)( GLhalfNV nx, GLhalfNV ny, GLhalfNV nz );
+    void       (*p_glNormal3hvNV)( const GLhalfNV *v );
+    void       (*p_glNormal3xOES)( GLfixed nx, GLfixed ny, GLfixed nz );
+    void       (*p_glNormal3xvOES)( const GLfixed *coords );
+    void       (*p_glNormalFormatNV)( GLenum type, GLsizei stride );
+    void       (*p_glNormalP3ui)( GLenum type, GLuint coords );
+    void       (*p_glNormalP3uiv)( GLenum type, const GLuint *coords );
+    void       (*p_glNormalPointerEXT)( GLenum type, GLsizei stride, GLsizei count, const void *pointer );
+    void       (*p_glNormalPointerListIBM)( GLenum type, GLint stride, const void **pointer, GLint ptrstride );
+    void       (*p_glNormalPointervINTEL)( GLenum type, const void **pointer );
+    void       (*p_glNormalStream3bATI)( GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz );
+    void       (*p_glNormalStream3bvATI)( GLenum stream, const GLbyte *coords );
+    void       (*p_glNormalStream3dATI)( GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz );
+    void       (*p_glNormalStream3dvATI)( GLenum stream, const GLdouble *coords );
+    void       (*p_glNormalStream3fATI)( GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz );
+    void       (*p_glNormalStream3fvATI)( GLenum stream, const GLfloat *coords );
+    void       (*p_glNormalStream3iATI)( GLenum stream, GLint nx, GLint ny, GLint nz );
+    void       (*p_glNormalStream3ivATI)( GLenum stream, const GLint *coords );
+    void       (*p_glNormalStream3sATI)( GLenum stream, GLshort nx, GLshort ny, GLshort nz );
+    void       (*p_glNormalStream3svATI)( GLenum stream, const GLshort *coords );
+    void       (*p_glObjectLabel)( GLenum identifier, GLuint name, GLsizei length, const GLchar *label );
+    void       (*p_glObjectPtrLabel)( const void *ptr, GLsizei length, const GLchar *label );
+    GLenum     (*p_glObjectPurgeableAPPLE)( GLenum objectType, GLuint name, GLenum option );
+    GLenum     (*p_glObjectUnpurgeableAPPLE)( GLenum objectType, GLuint name, GLenum option );
+    void       (*p_glOrthofOES)( GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f );
+    void       (*p_glOrthoxOES)( GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f );
+    void       (*p_glPNTrianglesfATI)( GLenum pname, GLfloat param );
+    void       (*p_glPNTrianglesiATI)( GLenum pname, GLint param );
+    void       (*p_glPassTexCoordATI)( GLuint dst, GLuint coord, GLenum swizzle );
+    void       (*p_glPassThroughxOES)( GLfixed token );
+    void       (*p_glPatchParameterfv)( GLenum pname, const GLfloat *values );
+    void       (*p_glPatchParameteri)( GLenum pname, GLint value );
+    void       (*p_glPathColorGenNV)( GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs );
+    void       (*p_glPathCommandsNV)( GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords );
+    void       (*p_glPathCoordsNV)( GLuint path, GLsizei numCoords, GLenum coordType, const void *coords );
+    void       (*p_glPathCoverDepthFuncNV)( GLenum func );
+    void       (*p_glPathDashArrayNV)( GLuint path, GLsizei dashCount, const GLfloat *dashArray );
+    void       (*p_glPathFogGenNV)( GLenum genMode );
+    GLenum     (*p_glPathGlyphIndexArrayNV)( GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale );
+    GLenum     (*p_glPathGlyphIndexRangeNV)( GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2] );
+    void       (*p_glPathGlyphRangeNV)( GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale );
+    void       (*p_glPathGlyphsNV)( GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale );
+    GLenum     (*p_glPathMemoryGlyphIndexArrayNV)( GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale );
+    void       (*p_glPathParameterfNV)( GLuint path, GLenum pname, GLfloat value );
+    void       (*p_glPathParameterfvNV)( GLuint path, GLenum pname, const GLfloat *value );
+    void       (*p_glPathParameteriNV)( GLuint path, GLenum pname, GLint value );
+    void       (*p_glPathParameterivNV)( GLuint path, GLenum pname, const GLint *value );
+    void       (*p_glPathStencilDepthOffsetNV)( GLfloat factor, GLfloat units );
+    void       (*p_glPathStencilFuncNV)( GLenum func, GLint ref, GLuint mask );
+    void       (*p_glPathStringNV)( GLuint path, GLenum format, GLsizei length, const void *pathString );
+    void       (*p_glPathSubCommandsNV)( GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords );
+    void       (*p_glPathSubCoordsNV)( GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords );
+    void       (*p_glPathTexGenNV)( GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs );
+    void       (*p_glPauseTransformFeedback)(void);
+    void       (*p_glPauseTransformFeedbackNV)(void);
+    void       (*p_glPixelDataRangeNV)( GLenum target, GLsizei length, const void *pointer );
+    void       (*p_glPixelMapx)( GLenum map, GLint size, const GLfixed *values );
+    void       (*p_glPixelStorex)( GLenum pname, GLfixed param );
+    void       (*p_glPixelTexGenParameterfSGIS)( GLenum pname, GLfloat param );
+    void       (*p_glPixelTexGenParameterfvSGIS)( GLenum pname, const GLfloat *params );
+    void       (*p_glPixelTexGenParameteriSGIS)( GLenum pname, GLint param );
+    void       (*p_glPixelTexGenParameterivSGIS)( GLenum pname, const GLint *params );
+    void       (*p_glPixelTexGenSGIX)( GLenum mode );
+    void       (*p_glPixelTransferxOES)( GLenum pname, GLfixed param );
+    void       (*p_glPixelTransformParameterfEXT)( GLenum target, GLenum pname, GLfloat param );
+    void       (*p_glPixelTransformParameterfvEXT)( GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glPixelTransformParameteriEXT)( GLenum target, GLenum pname, GLint param );
+    void       (*p_glPixelTransformParameterivEXT)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glPixelZoomxOES)( GLfixed xfactor, GLfixed yfactor );
+    GLboolean  (*p_glPointAlongPathNV)( GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY );
+    void       (*p_glPointParameterf)( GLenum pname, GLfloat param );
+    void       (*p_glPointParameterfARB)( GLenum pname, GLfloat param );
+    void       (*p_glPointParameterfEXT)( GLenum pname, GLfloat param );
+    void       (*p_glPointParameterfSGIS)( GLenum pname, GLfloat param );
+    void       (*p_glPointParameterfv)( GLenum pname, const GLfloat *params );
+    void       (*p_glPointParameterfvARB)( GLenum pname, const GLfloat *params );
+    void       (*p_glPointParameterfvEXT)( GLenum pname, const GLfloat *params );
+    void       (*p_glPointParameterfvSGIS)( GLenum pname, const GLfloat *params );
+    void       (*p_glPointParameteri)( GLenum pname, GLint param );
+    void       (*p_glPointParameteriNV)( GLenum pname, GLint param );
+    void       (*p_glPointParameteriv)( GLenum pname, const GLint *params );
+    void       (*p_glPointParameterivNV)( GLenum pname, const GLint *params );
+    void       (*p_glPointParameterxvOES)( GLenum pname, const GLfixed *params );
+    void       (*p_glPointSizexOES)( GLfixed size );
+    GLint      (*p_glPollAsyncSGIX)( GLuint *markerp );
+    GLint      (*p_glPollInstrumentsSGIX)( GLint *marker_p );
+    void       (*p_glPolygonOffsetClamp)( GLfloat factor, GLfloat units, GLfloat clamp );
+    void       (*p_glPolygonOffsetClampEXT)( GLfloat factor, GLfloat units, GLfloat clamp );
+    void       (*p_glPolygonOffsetEXT)( GLfloat factor, GLfloat bias );
+    void       (*p_glPolygonOffsetxOES)( GLfixed factor, GLfixed units );
+    void       (*p_glPopDebugGroup)(void);
+    void       (*p_glPopGroupMarkerEXT)(void);
+    void       (*p_glPresentFrameDualFillNV)( GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3 );
+    void       (*p_glPresentFrameKeyedNV)( GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1 );
+    void       (*p_glPrimitiveBoundingBoxARB)( GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW );
+    void       (*p_glPrimitiveRestartIndex)( GLuint index );
+    void       (*p_glPrimitiveRestartIndexNV)( GLuint index );
+    void       (*p_glPrimitiveRestartNV)(void);
+    void       (*p_glPrioritizeTexturesEXT)( GLsizei n, const GLuint *textures, const GLclampf *priorities );
+    void       (*p_glPrioritizeTexturesxOES)( GLsizei n, const GLuint *textures, const GLfixed *priorities );
+    void       (*p_glProgramBinary)( GLuint program, GLenum binaryFormat, const void *binary, GLsizei length );
+    void       (*p_glProgramBufferParametersIivNV)( GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params );
+    void       (*p_glProgramBufferParametersIuivNV)( GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params );
+    void       (*p_glProgramBufferParametersfvNV)( GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params );
+    void       (*p_glProgramEnvParameter4dARB)( GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glProgramEnvParameter4dvARB)( GLenum target, GLuint index, const GLdouble *params );
+    void       (*p_glProgramEnvParameter4fARB)( GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glProgramEnvParameter4fvARB)( GLenum target, GLuint index, const GLfloat *params );
+    void       (*p_glProgramEnvParameterI4iNV)( GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w );
+    void       (*p_glProgramEnvParameterI4ivNV)( GLenum target, GLuint index, const GLint *params );
+    void       (*p_glProgramEnvParameterI4uiNV)( GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
+    void       (*p_glProgramEnvParameterI4uivNV)( GLenum target, GLuint index, const GLuint *params );
+    void       (*p_glProgramEnvParameters4fvEXT)( GLenum target, GLuint index, GLsizei count, const GLfloat *params );
+    void       (*p_glProgramEnvParametersI4ivNV)( GLenum target, GLuint index, GLsizei count, const GLint *params );
+    void       (*p_glProgramEnvParametersI4uivNV)( GLenum target, GLuint index, GLsizei count, const GLuint *params );
+    void       (*p_glProgramLocalParameter4dARB)( GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glProgramLocalParameter4dvARB)( GLenum target, GLuint index, const GLdouble *params );
+    void       (*p_glProgramLocalParameter4fARB)( GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glProgramLocalParameter4fvARB)( GLenum target, GLuint index, const GLfloat *params );
+    void       (*p_glProgramLocalParameterI4iNV)( GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w );
+    void       (*p_glProgramLocalParameterI4ivNV)( GLenum target, GLuint index, const GLint *params );
+    void       (*p_glProgramLocalParameterI4uiNV)( GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
+    void       (*p_glProgramLocalParameterI4uivNV)( GLenum target, GLuint index, const GLuint *params );
+    void       (*p_glProgramLocalParameters4fvEXT)( GLenum target, GLuint index, GLsizei count, const GLfloat *params );
+    void       (*p_glProgramLocalParametersI4ivNV)( GLenum target, GLuint index, GLsizei count, const GLint *params );
+    void       (*p_glProgramLocalParametersI4uivNV)( GLenum target, GLuint index, GLsizei count, const GLuint *params );
+    void       (*p_glProgramNamedParameter4dNV)( GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glProgramNamedParameter4dvNV)( GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v );
+    void       (*p_glProgramNamedParameter4fNV)( GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glProgramNamedParameter4fvNV)( GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v );
+    void       (*p_glProgramParameter4dNV)( GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glProgramParameter4dvNV)( GLenum target, GLuint index, const GLdouble *v );
+    void       (*p_glProgramParameter4fNV)( GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glProgramParameter4fvNV)( GLenum target, GLuint index, const GLfloat *v );
+    void       (*p_glProgramParameteri)( GLuint program, GLenum pname, GLint value );
+    void       (*p_glProgramParameteriARB)( GLuint program, GLenum pname, GLint value );
+    void       (*p_glProgramParameteriEXT)( GLuint program, GLenum pname, GLint value );
+    void       (*p_glProgramParameters4dvNV)( GLenum target, GLuint index, GLsizei count, const GLdouble *v );
+    void       (*p_glProgramParameters4fvNV)( GLenum target, GLuint index, GLsizei count, const GLfloat *v );
+    void       (*p_glProgramPathFragmentInputGenNV)( GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs );
+    void       (*p_glProgramStringARB)( GLenum target, GLenum format, GLsizei len, const void *string );
+    void       (*p_glProgramSubroutineParametersuivNV)( GLenum target, GLsizei count, const GLuint *params );
+    void       (*p_glProgramUniform1d)( GLuint program, GLint location, GLdouble v0 );
+    void       (*p_glProgramUniform1dEXT)( GLuint program, GLint location, GLdouble x );
+    void       (*p_glProgramUniform1dv)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glProgramUniform1dvEXT)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glProgramUniform1f)( GLuint program, GLint location, GLfloat v0 );
+    void       (*p_glProgramUniform1fEXT)( GLuint program, GLint location, GLfloat v0 );
+    void       (*p_glProgramUniform1fv)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glProgramUniform1fvEXT)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glProgramUniform1i)( GLuint program, GLint location, GLint v0 );
+    void       (*p_glProgramUniform1i64ARB)( GLuint program, GLint location, GLint64 x );
+    void       (*p_glProgramUniform1i64NV)( GLuint program, GLint location, GLint64EXT x );
+    void       (*p_glProgramUniform1i64vARB)( GLuint program, GLint location, GLsizei count, const GLint64 *value );
+    void       (*p_glProgramUniform1i64vNV)( GLuint program, GLint location, GLsizei count, const GLint64EXT *value );
+    void       (*p_glProgramUniform1iEXT)( GLuint program, GLint location, GLint v0 );
+    void       (*p_glProgramUniform1iv)( GLuint program, GLint location, GLsizei count, const GLint *value );
+    void       (*p_glProgramUniform1ivEXT)( GLuint program, GLint location, GLsizei count, const GLint *value );
+    void       (*p_glProgramUniform1ui)( GLuint program, GLint location, GLuint v0 );
+    void       (*p_glProgramUniform1ui64ARB)( GLuint program, GLint location, GLuint64 x );
+    void       (*p_glProgramUniform1ui64NV)( GLuint program, GLint location, GLuint64EXT x );
+    void       (*p_glProgramUniform1ui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glProgramUniform1ui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glProgramUniform1uiEXT)( GLuint program, GLint location, GLuint v0 );
+    void       (*p_glProgramUniform1uiv)( GLuint program, GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glProgramUniform1uivEXT)( GLuint program, GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glProgramUniform2d)( GLuint program, GLint location, GLdouble v0, GLdouble v1 );
+    void       (*p_glProgramUniform2dEXT)( GLuint program, GLint location, GLdouble x, GLdouble y );
+    void       (*p_glProgramUniform2dv)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glProgramUniform2dvEXT)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glProgramUniform2f)( GLuint program, GLint location, GLfloat v0, GLfloat v1 );
+    void       (*p_glProgramUniform2fEXT)( GLuint program, GLint location, GLfloat v0, GLfloat v1 );
+    void       (*p_glProgramUniform2fv)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glProgramUniform2fvEXT)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glProgramUniform2i)( GLuint program, GLint location, GLint v0, GLint v1 );
+    void       (*p_glProgramUniform2i64ARB)( GLuint program, GLint location, GLint64 x, GLint64 y );
+    void       (*p_glProgramUniform2i64NV)( GLuint program, GLint location, GLint64EXT x, GLint64EXT y );
+    void       (*p_glProgramUniform2i64vARB)( GLuint program, GLint location, GLsizei count, const GLint64 *value );
+    void       (*p_glProgramUniform2i64vNV)( GLuint program, GLint location, GLsizei count, const GLint64EXT *value );
+    void       (*p_glProgramUniform2iEXT)( GLuint program, GLint location, GLint v0, GLint v1 );
+    void       (*p_glProgramUniform2iv)( GLuint program, GLint location, GLsizei count, const GLint *value );
+    void       (*p_glProgramUniform2ivEXT)( GLuint program, GLint location, GLsizei count, const GLint *value );
+    void       (*p_glProgramUniform2ui)( GLuint program, GLint location, GLuint v0, GLuint v1 );
+    void       (*p_glProgramUniform2ui64ARB)( GLuint program, GLint location, GLuint64 x, GLuint64 y );
+    void       (*p_glProgramUniform2ui64NV)( GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y );
+    void       (*p_glProgramUniform2ui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glProgramUniform2ui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glProgramUniform2uiEXT)( GLuint program, GLint location, GLuint v0, GLuint v1 );
+    void       (*p_glProgramUniform2uiv)( GLuint program, GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glProgramUniform2uivEXT)( GLuint program, GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glProgramUniform3d)( GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2 );
+    void       (*p_glProgramUniform3dEXT)( GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glProgramUniform3dv)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glProgramUniform3dvEXT)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glProgramUniform3f)( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2 );
+    void       (*p_glProgramUniform3fEXT)( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2 );
+    void       (*p_glProgramUniform3fv)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glProgramUniform3fvEXT)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glProgramUniform3i)( GLuint program, GLint location, GLint v0, GLint v1, GLint v2 );
+    void       (*p_glProgramUniform3i64ARB)( GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z );
+    void       (*p_glProgramUniform3i64NV)( GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z );
+    void       (*p_glProgramUniform3i64vARB)( GLuint program, GLint location, GLsizei count, const GLint64 *value );
+    void       (*p_glProgramUniform3i64vNV)( GLuint program, GLint location, GLsizei count, const GLint64EXT *value );
+    void       (*p_glProgramUniform3iEXT)( GLuint program, GLint location, GLint v0, GLint v1, GLint v2 );
+    void       (*p_glProgramUniform3iv)( GLuint program, GLint location, GLsizei count, const GLint *value );
+    void       (*p_glProgramUniform3ivEXT)( GLuint program, GLint location, GLsizei count, const GLint *value );
+    void       (*p_glProgramUniform3ui)( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2 );
+    void       (*p_glProgramUniform3ui64ARB)( GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z );
+    void       (*p_glProgramUniform3ui64NV)( GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z );
+    void       (*p_glProgramUniform3ui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glProgramUniform3ui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glProgramUniform3uiEXT)( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2 );
+    void       (*p_glProgramUniform3uiv)( GLuint program, GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glProgramUniform3uivEXT)( GLuint program, GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glProgramUniform4d)( GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3 );
+    void       (*p_glProgramUniform4dEXT)( GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glProgramUniform4dv)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glProgramUniform4dvEXT)( GLuint program, GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glProgramUniform4f)( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 );
+    void       (*p_glProgramUniform4fEXT)( GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 );
+    void       (*p_glProgramUniform4fv)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glProgramUniform4fvEXT)( GLuint program, GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glProgramUniform4i)( GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3 );
+    void       (*p_glProgramUniform4i64ARB)( GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w );
+    void       (*p_glProgramUniform4i64NV)( GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w );
+    void       (*p_glProgramUniform4i64vARB)( GLuint program, GLint location, GLsizei count, const GLint64 *value );
+    void       (*p_glProgramUniform4i64vNV)( GLuint program, GLint location, GLsizei count, const GLint64EXT *value );
+    void       (*p_glProgramUniform4iEXT)( GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3 );
+    void       (*p_glProgramUniform4iv)( GLuint program, GLint location, GLsizei count, const GLint *value );
+    void       (*p_glProgramUniform4ivEXT)( GLuint program, GLint location, GLsizei count, const GLint *value );
+    void       (*p_glProgramUniform4ui)( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 );
+    void       (*p_glProgramUniform4ui64ARB)( GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w );
+    void       (*p_glProgramUniform4ui64NV)( GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w );
+    void       (*p_glProgramUniform4ui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glProgramUniform4ui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glProgramUniform4uiEXT)( GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 );
+    void       (*p_glProgramUniform4uiv)( GLuint program, GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glProgramUniform4uivEXT)( GLuint program, GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glProgramUniformHandleui64ARB)( GLuint program, GLint location, GLuint64 value );
+    void       (*p_glProgramUniformHandleui64NV)( GLuint program, GLint location, GLuint64 value );
+    void       (*p_glProgramUniformHandleui64vARB)( GLuint program, GLint location, GLsizei count, const GLuint64 *values );
+    void       (*p_glProgramUniformHandleui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64 *values );
+    void       (*p_glProgramUniformMatrix2dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix2dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix2fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix2fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix2x3dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix2x3dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix2x3fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix2x3fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix2x4dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix2x4dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix2x4fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix2x4fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix3dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix3dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix3fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix3fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix3x2dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix3x2dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix3x2fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix3x2fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix3x4dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix3x4dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix3x4fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix3x4fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix4dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix4dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix4fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix4fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix4x2dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix4x2dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix4x2fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix4x2fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix4x3dv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix4x3dvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glProgramUniformMatrix4x3fv)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformMatrix4x3fvEXT)( GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glProgramUniformui64NV)( GLuint program, GLint location, GLuint64EXT value );
+    void       (*p_glProgramUniformui64vNV)( GLuint program, GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glProgramVertexLimitNV)( GLenum target, GLint limit );
+    void       (*p_glProvokingVertex)( GLenum mode );
+    void       (*p_glProvokingVertexEXT)( GLenum mode );
+    void       (*p_glPushClientAttribDefaultEXT)( GLbitfield mask );
+    void       (*p_glPushDebugGroup)( GLenum source, GLuint id, GLsizei length, const GLchar *message );
+    void       (*p_glPushGroupMarkerEXT)( GLsizei length, const GLchar *marker );
+    void       (*p_glQueryCounter)( GLuint id, GLenum target );
+    GLbitfield (*p_glQueryMatrixxOES)( GLfixed *mantissa, GLint *exponent );
+    void       (*p_glQueryObjectParameteruiAMD)( GLenum target, GLuint id, GLenum pname, GLuint param );
+    GLint      (*p_glQueryResourceNV)( GLenum queryType, GLint tagId, GLuint count, GLint *buffer );
+    void       (*p_glQueryResourceTagNV)( GLint tagId, const GLchar *tagString );
+    void       (*p_glRasterPos2xOES)( GLfixed x, GLfixed y );
+    void       (*p_glRasterPos2xvOES)( const GLfixed *coords );
+    void       (*p_glRasterPos3xOES)( GLfixed x, GLfixed y, GLfixed z );
+    void       (*p_glRasterPos3xvOES)( const GLfixed *coords );
+    void       (*p_glRasterPos4xOES)( GLfixed x, GLfixed y, GLfixed z, GLfixed w );
+    void       (*p_glRasterPos4xvOES)( const GLfixed *coords );
+    void       (*p_glRasterSamplesEXT)( GLuint samples, GLboolean fixedsamplelocations );
+    void       (*p_glReadBufferRegion)( GLenum region, GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glReadInstrumentsSGIX)( GLint marker );
+    void       (*p_glReadnPixels)( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data );
+    void       (*p_glReadnPixelsARB)( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data );
+    void       (*p_glRectxOES)( GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2 );
+    void       (*p_glRectxvOES)( const GLfixed *v1, const GLfixed *v2 );
+    void       (*p_glReferencePlaneSGIX)( const GLdouble *equation );
+    GLboolean  (*p_glReleaseKeyedMutexWin32EXT)( GLuint memory, GLuint64 key );
+    void       (*p_glReleaseShaderCompiler)(void);
+    void       (*p_glRenderGpuMaskNV)( GLbitfield mask );
+    void       (*p_glRenderbufferStorage)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glRenderbufferStorageEXT)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glRenderbufferStorageMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glRenderbufferStorageMultisampleAdvancedAMD)( GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glRenderbufferStorageMultisampleCoverageNV)( GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glRenderbufferStorageMultisampleEXT)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glReplacementCodePointerSUN)( GLenum type, GLsizei stride, const void **pointer );
+    void       (*p_glReplacementCodeubSUN)( GLubyte code );
+    void       (*p_glReplacementCodeubvSUN)( const GLubyte *code );
+    void       (*p_glReplacementCodeuiColor3fVertex3fSUN)( GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glReplacementCodeuiColor3fVertex3fvSUN)( const GLuint *rc, const GLfloat *c, const GLfloat *v );
+    void       (*p_glReplacementCodeuiColor4fNormal3fVertex3fSUN)( GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glReplacementCodeuiColor4fNormal3fVertex3fvSUN)( const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v );
+    void       (*p_glReplacementCodeuiColor4ubVertex3fSUN)( GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glReplacementCodeuiColor4ubVertex3fvSUN)( const GLuint *rc, const GLubyte *c, const GLfloat *v );
+    void       (*p_glReplacementCodeuiNormal3fVertex3fSUN)( GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glReplacementCodeuiNormal3fVertex3fvSUN)( const GLuint *rc, const GLfloat *n, const GLfloat *v );
+    void       (*p_glReplacementCodeuiSUN)( GLuint code );
+    void       (*p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)( GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)( const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v );
+    void       (*p_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)( GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)( const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v );
+    void       (*p_glReplacementCodeuiTexCoord2fVertex3fSUN)( GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glReplacementCodeuiTexCoord2fVertex3fvSUN)( const GLuint *rc, const GLfloat *tc, const GLfloat *v );
+    void       (*p_glReplacementCodeuiVertex3fSUN)( GLuint rc, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glReplacementCodeuiVertex3fvSUN)( const GLuint *rc, const GLfloat *v );
+    void       (*p_glReplacementCodeuivSUN)( const GLuint *code );
+    void       (*p_glReplacementCodeusSUN)( GLushort code );
+    void       (*p_glReplacementCodeusvSUN)( const GLushort *code );
+    void       (*p_glRequestResidentProgramsNV)( GLsizei n, const GLuint *programs );
+    void       (*p_glResetHistogram)( GLenum target );
+    void       (*p_glResetHistogramEXT)( GLenum target );
+    void       (*p_glResetMemoryObjectParameterNV)( GLuint memory, GLenum pname );
+    void       (*p_glResetMinmax)( GLenum target );
+    void       (*p_glResetMinmaxEXT)( GLenum target );
+    void       (*p_glResizeBuffersMESA)(void);
+    void       (*p_glResolveDepthValuesNV)(void);
+    void       (*p_glResumeTransformFeedback)(void);
+    void       (*p_glResumeTransformFeedbackNV)(void);
+    void       (*p_glRotatexOES)( GLfixed angle, GLfixed x, GLfixed y, GLfixed z );
+    void       (*p_glSampleCoverage)( GLfloat value, GLboolean invert );
+    void       (*p_glSampleCoverageARB)( GLfloat value, GLboolean invert );
+    void       (*p_glSampleMapATI)( GLuint dst, GLuint interp, GLenum swizzle );
+    void       (*p_glSampleMaskEXT)( GLclampf value, GLboolean invert );
+    void       (*p_glSampleMaskIndexedNV)( GLuint index, GLbitfield mask );
+    void       (*p_glSampleMaskSGIS)( GLclampf value, GLboolean invert );
+    void       (*p_glSampleMaski)( GLuint maskNumber, GLbitfield mask );
+    void       (*p_glSamplePatternEXT)( GLenum pattern );
+    void       (*p_glSamplePatternSGIS)( GLenum pattern );
+    void       (*p_glSamplerParameterIiv)( GLuint sampler, GLenum pname, const GLint *param );
+    void       (*p_glSamplerParameterIuiv)( GLuint sampler, GLenum pname, const GLuint *param );
+    void       (*p_glSamplerParameterf)( GLuint sampler, GLenum pname, GLfloat param );
+    void       (*p_glSamplerParameterfv)( GLuint sampler, GLenum pname, const GLfloat *param );
+    void       (*p_glSamplerParameteri)( GLuint sampler, GLenum pname, GLint param );
+    void       (*p_glSamplerParameteriv)( GLuint sampler, GLenum pname, const GLint *param );
+    void       (*p_glScalexOES)( GLfixed x, GLfixed y, GLfixed z );
+    void       (*p_glScissorArrayv)( GLuint first, GLsizei count, const GLint *v );
+    void       (*p_glScissorExclusiveArrayvNV)( GLuint first, GLsizei count, const GLint *v );
+    void       (*p_glScissorExclusiveNV)( GLint x, GLint y, GLsizei width, GLsizei height );
+    void       (*p_glScissorIndexed)( GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height );
+    void       (*p_glScissorIndexedv)( GLuint index, const GLint *v );
+    void       (*p_glSecondaryColor3b)( GLbyte red, GLbyte green, GLbyte blue );
+    void       (*p_glSecondaryColor3bEXT)( GLbyte red, GLbyte green, GLbyte blue );
+    void       (*p_glSecondaryColor3bv)( const GLbyte *v );
+    void       (*p_glSecondaryColor3bvEXT)( const GLbyte *v );
+    void       (*p_glSecondaryColor3d)( GLdouble red, GLdouble green, GLdouble blue );
+    void       (*p_glSecondaryColor3dEXT)( GLdouble red, GLdouble green, GLdouble blue );
+    void       (*p_glSecondaryColor3dv)( const GLdouble *v );
+    void       (*p_glSecondaryColor3dvEXT)( const GLdouble *v );
+    void       (*p_glSecondaryColor3f)( GLfloat red, GLfloat green, GLfloat blue );
+    void       (*p_glSecondaryColor3fEXT)( GLfloat red, GLfloat green, GLfloat blue );
+    void       (*p_glSecondaryColor3fv)( const GLfloat *v );
+    void       (*p_glSecondaryColor3fvEXT)( const GLfloat *v );
+    void       (*p_glSecondaryColor3hNV)( GLhalfNV red, GLhalfNV green, GLhalfNV blue );
+    void       (*p_glSecondaryColor3hvNV)( const GLhalfNV *v );
+    void       (*p_glSecondaryColor3i)( GLint red, GLint green, GLint blue );
+    void       (*p_glSecondaryColor3iEXT)( GLint red, GLint green, GLint blue );
+    void       (*p_glSecondaryColor3iv)( const GLint *v );
+    void       (*p_glSecondaryColor3ivEXT)( const GLint *v );
+    void       (*p_glSecondaryColor3s)( GLshort red, GLshort green, GLshort blue );
+    void       (*p_glSecondaryColor3sEXT)( GLshort red, GLshort green, GLshort blue );
+    void       (*p_glSecondaryColor3sv)( const GLshort *v );
+    void       (*p_glSecondaryColor3svEXT)( const GLshort *v );
+    void       (*p_glSecondaryColor3ub)( GLubyte red, GLubyte green, GLubyte blue );
+    void       (*p_glSecondaryColor3ubEXT)( GLubyte red, GLubyte green, GLubyte blue );
+    void       (*p_glSecondaryColor3ubv)( const GLubyte *v );
+    void       (*p_glSecondaryColor3ubvEXT)( const GLubyte *v );
+    void       (*p_glSecondaryColor3ui)( GLuint red, GLuint green, GLuint blue );
+    void       (*p_glSecondaryColor3uiEXT)( GLuint red, GLuint green, GLuint blue );
+    void       (*p_glSecondaryColor3uiv)( const GLuint *v );
+    void       (*p_glSecondaryColor3uivEXT)( const GLuint *v );
+    void       (*p_glSecondaryColor3us)( GLushort red, GLushort green, GLushort blue );
+    void       (*p_glSecondaryColor3usEXT)( GLushort red, GLushort green, GLushort blue );
+    void       (*p_glSecondaryColor3usv)( const GLushort *v );
+    void       (*p_glSecondaryColor3usvEXT)( const GLushort *v );
+    void       (*p_glSecondaryColorFormatNV)( GLint size, GLenum type, GLsizei stride );
+    void       (*p_glSecondaryColorP3ui)( GLenum type, GLuint color );
+    void       (*p_glSecondaryColorP3uiv)( GLenum type, const GLuint *color );
+    void       (*p_glSecondaryColorPointer)( GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glSecondaryColorPointerEXT)( GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glSecondaryColorPointerListIBM)( GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride );
+    void       (*p_glSelectPerfMonitorCountersAMD)( GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList );
+    void       (*p_glSelectTextureCoordSetSGIS)( GLenum target );
+    void       (*p_glSelectTextureSGIS)( GLenum target );
+    void       (*p_glSemaphoreParameterui64vEXT)( GLuint semaphore, GLenum pname, const GLuint64 *params );
+    void       (*p_glSeparableFilter2D)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column );
+    void       (*p_glSeparableFilter2DEXT)( GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column );
+    void       (*p_glSetFenceAPPLE)( GLuint fence );
+    void       (*p_glSetFenceNV)( GLuint fence, GLenum condition );
+    void       (*p_glSetFragmentShaderConstantATI)( GLuint dst, const GLfloat *value );
+    void       (*p_glSetInvariantEXT)( GLuint id, GLenum type, const void *addr );
+    void       (*p_glSetLocalConstantEXT)( GLuint id, GLenum type, const void *addr );
+    void       (*p_glSetMultisamplefvAMD)( GLenum pname, GLuint index, const GLfloat *val );
+    void       (*p_glShaderBinary)( GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length );
+    void       (*p_glShaderOp1EXT)( GLenum op, GLuint res, GLuint arg1 );
+    void       (*p_glShaderOp2EXT)( GLenum op, GLuint res, GLuint arg1, GLuint arg2 );
+    void       (*p_glShaderOp3EXT)( GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3 );
+    void       (*p_glShaderSource)( GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length );
+    void       (*p_glShaderSourceARB)( GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length );
+    void       (*p_glShaderStorageBlockBinding)( GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding );
+    void       (*p_glShadingRateImageBarrierNV)( GLboolean synchronize );
+    void       (*p_glShadingRateImagePaletteNV)( GLuint viewport, GLuint first, GLsizei count, const GLenum *rates );
+    void       (*p_glShadingRateSampleOrderCustomNV)( GLenum rate, GLuint samples, const GLint *locations );
+    void       (*p_glShadingRateSampleOrderNV)( GLenum order );
+    void       (*p_glSharpenTexFuncSGIS)( GLenum target, GLsizei n, const GLfloat *points );
+    void       (*p_glSignalSemaphoreEXT)( GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts );
+    void       (*p_glSignalSemaphoreui64NVX)( GLuint signalGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray );
+    void       (*p_glSignalVkFenceNV)( GLuint64 vkFence );
+    void       (*p_glSignalVkSemaphoreNV)( GLuint64 vkSemaphore );
+    void       (*p_glSpecializeShader)( GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue );
+    void       (*p_glSpecializeShaderARB)( GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue );
+    void       (*p_glSpriteParameterfSGIX)( GLenum pname, GLfloat param );
+    void       (*p_glSpriteParameterfvSGIX)( GLenum pname, const GLfloat *params );
+    void       (*p_glSpriteParameteriSGIX)( GLenum pname, GLint param );
+    void       (*p_glSpriteParameterivSGIX)( GLenum pname, const GLint *params );
+    void       (*p_glStartInstrumentsSGIX)(void);
+    void       (*p_glStateCaptureNV)( GLuint state, GLenum mode );
+    void       (*p_glStencilClearTagEXT)( GLsizei stencilTagBits, GLuint stencilClearTag );
+    void       (*p_glStencilFillPathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues );
+    void       (*p_glStencilFillPathNV)( GLuint path, GLenum fillMode, GLuint mask );
+    void       (*p_glStencilFuncSeparate)( GLenum face, GLenum func, GLint ref, GLuint mask );
+    void       (*p_glStencilFuncSeparateATI)( GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask );
+    void       (*p_glStencilMaskSeparate)( GLenum face, GLuint mask );
+    void       (*p_glStencilOpSeparate)( GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass );
+    void       (*p_glStencilOpSeparateATI)( GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass );
+    void       (*p_glStencilOpValueAMD)( GLenum face, GLuint value );
+    void       (*p_glStencilStrokePathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues );
+    void       (*p_glStencilStrokePathNV)( GLuint path, GLint reference, GLuint mask );
+    void       (*p_glStencilThenCoverFillPathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues );
+    void       (*p_glStencilThenCoverFillPathNV)( GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode );
+    void       (*p_glStencilThenCoverStrokePathInstancedNV)( GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues );
+    void       (*p_glStencilThenCoverStrokePathNV)( GLuint path, GLint reference, GLuint mask, GLenum coverMode );
+    void       (*p_glStopInstrumentsSGIX)( GLint marker );
+    void       (*p_glStringMarkerGREMEDY)( GLsizei len, const void *string );
+    void       (*p_glSubpixelPrecisionBiasNV)( GLuint xbits, GLuint ybits );
+    void       (*p_glSwizzleEXT)( GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW );
+    void       (*p_glSyncTextureINTEL)( GLuint texture );
+    void       (*p_glTagSampleBufferSGIX)(void);
+    void       (*p_glTangent3bEXT)( GLbyte tx, GLbyte ty, GLbyte tz );
+    void       (*p_glTangent3bvEXT)( const GLbyte *v );
+    void       (*p_glTangent3dEXT)( GLdouble tx, GLdouble ty, GLdouble tz );
+    void       (*p_glTangent3dvEXT)( const GLdouble *v );
+    void       (*p_glTangent3fEXT)( GLfloat tx, GLfloat ty, GLfloat tz );
+    void       (*p_glTangent3fvEXT)( const GLfloat *v );
+    void       (*p_glTangent3iEXT)( GLint tx, GLint ty, GLint tz );
+    void       (*p_glTangent3ivEXT)( const GLint *v );
+    void       (*p_glTangent3sEXT)( GLshort tx, GLshort ty, GLshort tz );
+    void       (*p_glTangent3svEXT)( const GLshort *v );
+    void       (*p_glTangentPointerEXT)( GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glTbufferMask3DFX)( GLuint mask );
+    void       (*p_glTessellationFactorAMD)( GLfloat factor );
+    void       (*p_glTessellationModeAMD)( GLenum mode );
+    GLboolean  (*p_glTestFenceAPPLE)( GLuint fence );
+    GLboolean  (*p_glTestFenceNV)( GLuint fence );
+    GLboolean  (*p_glTestObjectAPPLE)( GLenum object, GLuint name );
+    void       (*p_glTexAttachMemoryNV)( GLenum target, GLuint memory, GLuint64 offset );
+    void       (*p_glTexBuffer)( GLenum target, GLenum internalformat, GLuint buffer );
+    void       (*p_glTexBufferARB)( GLenum target, GLenum internalformat, GLuint buffer );
+    void       (*p_glTexBufferEXT)( GLenum target, GLenum internalformat, GLuint buffer );
+    void       (*p_glTexBufferRange)( GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size );
+    void       (*p_glTexBumpParameterfvATI)( GLenum pname, const GLfloat *param );
+    void       (*p_glTexBumpParameterivATI)( GLenum pname, const GLint *param );
+    void       (*p_glTexCoord1bOES)( GLbyte s );
+    void       (*p_glTexCoord1bvOES)( const GLbyte *coords );
+    void       (*p_glTexCoord1hNV)( GLhalfNV s );
+    void       (*p_glTexCoord1hvNV)( const GLhalfNV *v );
+    void       (*p_glTexCoord1xOES)( GLfixed s );
+    void       (*p_glTexCoord1xvOES)( const GLfixed *coords );
+    void       (*p_glTexCoord2bOES)( GLbyte s, GLbyte t );
+    void       (*p_glTexCoord2bvOES)( const GLbyte *coords );
+    void       (*p_glTexCoord2fColor3fVertex3fSUN)( GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glTexCoord2fColor3fVertex3fvSUN)( const GLfloat *tc, const GLfloat *c, const GLfloat *v );
+    void       (*p_glTexCoord2fColor4fNormal3fVertex3fSUN)( GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glTexCoord2fColor4fNormal3fVertex3fvSUN)( const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v );
+    void       (*p_glTexCoord2fColor4ubVertex3fSUN)( GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glTexCoord2fColor4ubVertex3fvSUN)( const GLfloat *tc, const GLubyte *c, const GLfloat *v );
+    void       (*p_glTexCoord2fNormal3fVertex3fSUN)( GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glTexCoord2fNormal3fVertex3fvSUN)( const GLfloat *tc, const GLfloat *n, const GLfloat *v );
+    void       (*p_glTexCoord2fVertex3fSUN)( GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glTexCoord2fVertex3fvSUN)( const GLfloat *tc, const GLfloat *v );
+    void       (*p_glTexCoord2hNV)( GLhalfNV s, GLhalfNV t );
+    void       (*p_glTexCoord2hvNV)( const GLhalfNV *v );
+    void       (*p_glTexCoord2xOES)( GLfixed s, GLfixed t );
+    void       (*p_glTexCoord2xvOES)( const GLfixed *coords );
+    void       (*p_glTexCoord3bOES)( GLbyte s, GLbyte t, GLbyte r );
+    void       (*p_glTexCoord3bvOES)( const GLbyte *coords );
+    void       (*p_glTexCoord3hNV)( GLhalfNV s, GLhalfNV t, GLhalfNV r );
+    void       (*p_glTexCoord3hvNV)( const GLhalfNV *v );
+    void       (*p_glTexCoord3xOES)( GLfixed s, GLfixed t, GLfixed r );
+    void       (*p_glTexCoord3xvOES)( const GLfixed *coords );
+    void       (*p_glTexCoord4bOES)( GLbyte s, GLbyte t, GLbyte r, GLbyte q );
+    void       (*p_glTexCoord4bvOES)( const GLbyte *coords );
+    void       (*p_glTexCoord4fColor4fNormal3fVertex4fSUN)( GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glTexCoord4fColor4fNormal3fVertex4fvSUN)( const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v );
+    void       (*p_glTexCoord4fVertex4fSUN)( GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glTexCoord4fVertex4fvSUN)( const GLfloat *tc, const GLfloat *v );
+    void       (*p_glTexCoord4hNV)( GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q );
+    void       (*p_glTexCoord4hvNV)( const GLhalfNV *v );
+    void       (*p_glTexCoord4xOES)( GLfixed s, GLfixed t, GLfixed r, GLfixed q );
+    void       (*p_glTexCoord4xvOES)( const GLfixed *coords );
+    void       (*p_glTexCoordFormatNV)( GLint size, GLenum type, GLsizei stride );
+    void       (*p_glTexCoordP1ui)( GLenum type, GLuint coords );
+    void       (*p_glTexCoordP1uiv)( GLenum type, const GLuint *coords );
+    void       (*p_glTexCoordP2ui)( GLenum type, GLuint coords );
+    void       (*p_glTexCoordP2uiv)( GLenum type, const GLuint *coords );
+    void       (*p_glTexCoordP3ui)( GLenum type, GLuint coords );
+    void       (*p_glTexCoordP3uiv)( GLenum type, const GLuint *coords );
+    void       (*p_glTexCoordP4ui)( GLenum type, GLuint coords );
+    void       (*p_glTexCoordP4uiv)( GLenum type, const GLuint *coords );
+    void       (*p_glTexCoordPointerEXT)( GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer );
+    void       (*p_glTexCoordPointerListIBM)( GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride );
+    void       (*p_glTexCoordPointervINTEL)( GLint size, GLenum type, const void **pointer );
+    void       (*p_glTexEnvxOES)( GLenum target, GLenum pname, GLfixed param );
+    void       (*p_glTexEnvxvOES)( GLenum target, GLenum pname, const GLfixed *params );
+    void       (*p_glTexFilterFuncSGIS)( GLenum target, GLenum filter, GLsizei n, const GLfloat *weights );
+    void       (*p_glTexGenxOES)( GLenum coord, GLenum pname, GLfixed param );
+    void       (*p_glTexGenxvOES)( GLenum coord, GLenum pname, const GLfixed *params );
+    void       (*p_glTexImage2DMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations );
+    void       (*p_glTexImage2DMultisampleCoverageNV)( GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations );
+    void       (*p_glTexImage3D)( GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexImage3DEXT)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexImage3DMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations );
+    void       (*p_glTexImage3DMultisampleCoverageNV)( GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations );
+    void       (*p_glTexImage4DSGIS)( GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexPageCommitmentARB)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit );
+    void       (*p_glTexParameterIiv)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glTexParameterIivEXT)( GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glTexParameterIuiv)( GLenum target, GLenum pname, const GLuint *params );
+    void       (*p_glTexParameterIuivEXT)( GLenum target, GLenum pname, const GLuint *params );
+    void       (*p_glTexParameterxOES)( GLenum target, GLenum pname, GLfixed param );
+    void       (*p_glTexParameterxvOES)( GLenum target, GLenum pname, const GLfixed *params );
+    void       (*p_glTexRenderbufferNV)( GLenum target, GLuint renderbuffer );
+    void       (*p_glTexStorage1D)( GLenum target, GLsizei levels, GLenum internalformat, GLsizei width );
+    void       (*p_glTexStorage2D)( GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glTexStorage2DMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations );
+    void       (*p_glTexStorage3D)( GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth );
+    void       (*p_glTexStorage3DMultisample)( GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations );
+    void       (*p_glTexStorageMem1DEXT)( GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset );
+    void       (*p_glTexStorageMem2DEXT)( GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset );
+    void       (*p_glTexStorageMem2DMultisampleEXT)( GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset );
+    void       (*p_glTexStorageMem3DEXT)( GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset );
+    void       (*p_glTexStorageMem3DMultisampleEXT)( GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset );
+    void       (*p_glTexStorageSparseAMD)( GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags );
+    void       (*p_glTexSubImage1DEXT)( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexSubImage2DEXT)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexSubImage3D)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexSubImage3DEXT)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTexSubImage4DSGIS)( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureAttachMemoryNV)( GLuint texture, GLuint memory, GLuint64 offset );
+    void       (*p_glTextureBarrier)(void);
+    void       (*p_glTextureBarrierNV)(void);
+    void       (*p_glTextureBuffer)( GLuint texture, GLenum internalformat, GLuint buffer );
+    void       (*p_glTextureBufferEXT)( GLuint texture, GLenum target, GLenum internalformat, GLuint buffer );
+    void       (*p_glTextureBufferRange)( GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size );
+    void       (*p_glTextureBufferRangeEXT)( GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size );
+    void       (*p_glTextureColorMaskSGIS)( GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha );
+    void       (*p_glTextureImage1DEXT)( GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureImage2DEXT)( GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureImage2DMultisampleCoverageNV)( GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations );
+    void       (*p_glTextureImage2DMultisampleNV)( GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations );
+    void       (*p_glTextureImage3DEXT)( GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureImage3DMultisampleCoverageNV)( GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations );
+    void       (*p_glTextureImage3DMultisampleNV)( GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations );
+    void       (*p_glTextureLightEXT)( GLenum pname );
+    void       (*p_glTextureMaterialEXT)( GLenum face, GLenum mode );
+    void       (*p_glTextureNormalEXT)( GLenum mode );
+    void       (*p_glTexturePageCommitmentEXT)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit );
+    void       (*p_glTextureParameterIiv)( GLuint texture, GLenum pname, const GLint *params );
+    void       (*p_glTextureParameterIivEXT)( GLuint texture, GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glTextureParameterIuiv)( GLuint texture, GLenum pname, const GLuint *params );
+    void       (*p_glTextureParameterIuivEXT)( GLuint texture, GLenum target, GLenum pname, const GLuint *params );
+    void       (*p_glTextureParameterf)( GLuint texture, GLenum pname, GLfloat param );
+    void       (*p_glTextureParameterfEXT)( GLuint texture, GLenum target, GLenum pname, GLfloat param );
+    void       (*p_glTextureParameterfv)( GLuint texture, GLenum pname, const GLfloat *param );
+    void       (*p_glTextureParameterfvEXT)( GLuint texture, GLenum target, GLenum pname, const GLfloat *params );
+    void       (*p_glTextureParameteri)( GLuint texture, GLenum pname, GLint param );
+    void       (*p_glTextureParameteriEXT)( GLuint texture, GLenum target, GLenum pname, GLint param );
+    void       (*p_glTextureParameteriv)( GLuint texture, GLenum pname, const GLint *param );
+    void       (*p_glTextureParameterivEXT)( GLuint texture, GLenum target, GLenum pname, const GLint *params );
+    void       (*p_glTextureRangeAPPLE)( GLenum target, GLsizei length, const void *pointer );
+    void       (*p_glTextureRenderbufferEXT)( GLuint texture, GLenum target, GLuint renderbuffer );
+    void       (*p_glTextureStorage1D)( GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width );
+    void       (*p_glTextureStorage1DEXT)( GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width );
+    void       (*p_glTextureStorage2D)( GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glTextureStorage2DEXT)( GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height );
+    void       (*p_glTextureStorage2DMultisample)( GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations );
+    void       (*p_glTextureStorage2DMultisampleEXT)( GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations );
+    void       (*p_glTextureStorage3D)( GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth );
+    void       (*p_glTextureStorage3DEXT)( GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth );
+    void       (*p_glTextureStorage3DMultisample)( GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations );
+    void       (*p_glTextureStorage3DMultisampleEXT)( GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations );
+    void       (*p_glTextureStorageMem1DEXT)( GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset );
+    void       (*p_glTextureStorageMem2DEXT)( GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset );
+    void       (*p_glTextureStorageMem2DMultisampleEXT)( GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset );
+    void       (*p_glTextureStorageMem3DEXT)( GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset );
+    void       (*p_glTextureStorageMem3DMultisampleEXT)( GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset );
+    void       (*p_glTextureStorageSparseAMD)( GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags );
+    void       (*p_glTextureSubImage1D)( GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureSubImage1DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureSubImage2D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureSubImage2DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureSubImage3D)( GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureSubImage3DEXT)( GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels );
+    void       (*p_glTextureView)( GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers );
+    void       (*p_glTrackMatrixNV)( GLenum target, GLuint address, GLenum matrix, GLenum transform );
+    void       (*p_glTransformFeedbackAttribsNV)( GLsizei count, const GLint *attribs, GLenum bufferMode );
+    void       (*p_glTransformFeedbackBufferBase)( GLuint xfb, GLuint index, GLuint buffer );
+    void       (*p_glTransformFeedbackBufferRange)( GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size );
+    void       (*p_glTransformFeedbackStreamAttribsNV)( GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode );
+    void       (*p_glTransformFeedbackVaryings)( GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode );
+    void       (*p_glTransformFeedbackVaryingsEXT)( GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode );
+    void       (*p_glTransformFeedbackVaryingsNV)( GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode );
+    void       (*p_glTransformPathNV)( GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues );
+    void       (*p_glTranslatexOES)( GLfixed x, GLfixed y, GLfixed z );
+    void       (*p_glUniform1d)( GLint location, GLdouble x );
+    void       (*p_glUniform1dv)( GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glUniform1f)( GLint location, GLfloat v0 );
+    void       (*p_glUniform1fARB)( GLint location, GLfloat v0 );
+    void       (*p_glUniform1fv)( GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glUniform1fvARB)( GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glUniform1i)( GLint location, GLint v0 );
+    void       (*p_glUniform1i64ARB)( GLint location, GLint64 x );
+    void       (*p_glUniform1i64NV)( GLint location, GLint64EXT x );
+    void       (*p_glUniform1i64vARB)( GLint location, GLsizei count, const GLint64 *value );
+    void       (*p_glUniform1i64vNV)( GLint location, GLsizei count, const GLint64EXT *value );
+    void       (*p_glUniform1iARB)( GLint location, GLint v0 );
+    void       (*p_glUniform1iv)( GLint location, GLsizei count, const GLint *value );
+    void       (*p_glUniform1ivARB)( GLint location, GLsizei count, const GLint *value );
+    void       (*p_glUniform1ui)( GLint location, GLuint v0 );
+    void       (*p_glUniform1ui64ARB)( GLint location, GLuint64 x );
+    void       (*p_glUniform1ui64NV)( GLint location, GLuint64EXT x );
+    void       (*p_glUniform1ui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glUniform1ui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glUniform1uiEXT)( GLint location, GLuint v0 );
+    void       (*p_glUniform1uiv)( GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glUniform1uivEXT)( GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glUniform2d)( GLint location, GLdouble x, GLdouble y );
+    void       (*p_glUniform2dv)( GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glUniform2f)( GLint location, GLfloat v0, GLfloat v1 );
+    void       (*p_glUniform2fARB)( GLint location, GLfloat v0, GLfloat v1 );
+    void       (*p_glUniform2fv)( GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glUniform2fvARB)( GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glUniform2i)( GLint location, GLint v0, GLint v1 );
+    void       (*p_glUniform2i64ARB)( GLint location, GLint64 x, GLint64 y );
+    void       (*p_glUniform2i64NV)( GLint location, GLint64EXT x, GLint64EXT y );
+    void       (*p_glUniform2i64vARB)( GLint location, GLsizei count, const GLint64 *value );
+    void       (*p_glUniform2i64vNV)( GLint location, GLsizei count, const GLint64EXT *value );
+    void       (*p_glUniform2iARB)( GLint location, GLint v0, GLint v1 );
+    void       (*p_glUniform2iv)( GLint location, GLsizei count, const GLint *value );
+    void       (*p_glUniform2ivARB)( GLint location, GLsizei count, const GLint *value );
+    void       (*p_glUniform2ui)( GLint location, GLuint v0, GLuint v1 );
+    void       (*p_glUniform2ui64ARB)( GLint location, GLuint64 x, GLuint64 y );
+    void       (*p_glUniform2ui64NV)( GLint location, GLuint64EXT x, GLuint64EXT y );
+    void       (*p_glUniform2ui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glUniform2ui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glUniform2uiEXT)( GLint location, GLuint v0, GLuint v1 );
+    void       (*p_glUniform2uiv)( GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glUniform2uivEXT)( GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glUniform3d)( GLint location, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glUniform3dv)( GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glUniform3f)( GLint location, GLfloat v0, GLfloat v1, GLfloat v2 );
+    void       (*p_glUniform3fARB)( GLint location, GLfloat v0, GLfloat v1, GLfloat v2 );
+    void       (*p_glUniform3fv)( GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glUniform3fvARB)( GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glUniform3i)( GLint location, GLint v0, GLint v1, GLint v2 );
+    void       (*p_glUniform3i64ARB)( GLint location, GLint64 x, GLint64 y, GLint64 z );
+    void       (*p_glUniform3i64NV)( GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z );
+    void       (*p_glUniform3i64vARB)( GLint location, GLsizei count, const GLint64 *value );
+    void       (*p_glUniform3i64vNV)( GLint location, GLsizei count, const GLint64EXT *value );
+    void       (*p_glUniform3iARB)( GLint location, GLint v0, GLint v1, GLint v2 );
+    void       (*p_glUniform3iv)( GLint location, GLsizei count, const GLint *value );
+    void       (*p_glUniform3ivARB)( GLint location, GLsizei count, const GLint *value );
+    void       (*p_glUniform3ui)( GLint location, GLuint v0, GLuint v1, GLuint v2 );
+    void       (*p_glUniform3ui64ARB)( GLint location, GLuint64 x, GLuint64 y, GLuint64 z );
+    void       (*p_glUniform3ui64NV)( GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z );
+    void       (*p_glUniform3ui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glUniform3ui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glUniform3uiEXT)( GLint location, GLuint v0, GLuint v1, GLuint v2 );
+    void       (*p_glUniform3uiv)( GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glUniform3uivEXT)( GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glUniform4d)( GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glUniform4dv)( GLint location, GLsizei count, const GLdouble *value );
+    void       (*p_glUniform4f)( GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 );
+    void       (*p_glUniform4fARB)( GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3 );
+    void       (*p_glUniform4fv)( GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glUniform4fvARB)( GLint location, GLsizei count, const GLfloat *value );
+    void       (*p_glUniform4i)( GLint location, GLint v0, GLint v1, GLint v2, GLint v3 );
+    void       (*p_glUniform4i64ARB)( GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w );
+    void       (*p_glUniform4i64NV)( GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w );
+    void       (*p_glUniform4i64vARB)( GLint location, GLsizei count, const GLint64 *value );
+    void       (*p_glUniform4i64vNV)( GLint location, GLsizei count, const GLint64EXT *value );
+    void       (*p_glUniform4iARB)( GLint location, GLint v0, GLint v1, GLint v2, GLint v3 );
+    void       (*p_glUniform4iv)( GLint location, GLsizei count, const GLint *value );
+    void       (*p_glUniform4ivARB)( GLint location, GLsizei count, const GLint *value );
+    void       (*p_glUniform4ui)( GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 );
+    void       (*p_glUniform4ui64ARB)( GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w );
+    void       (*p_glUniform4ui64NV)( GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w );
+    void       (*p_glUniform4ui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glUniform4ui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glUniform4uiEXT)( GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3 );
+    void       (*p_glUniform4uiv)( GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glUniform4uivEXT)( GLint location, GLsizei count, const GLuint *value );
+    void       (*p_glUniformBlockBinding)( GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding );
+    void       (*p_glUniformBufferEXT)( GLuint program, GLint location, GLuint buffer );
+    void       (*p_glUniformHandleui64ARB)( GLint location, GLuint64 value );
+    void       (*p_glUniformHandleui64NV)( GLint location, GLuint64 value );
+    void       (*p_glUniformHandleui64vARB)( GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glUniformHandleui64vNV)( GLint location, GLsizei count, const GLuint64 *value );
+    void       (*p_glUniformMatrix2dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glUniformMatrix2fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix2fvARB)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix2x3dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glUniformMatrix2x3fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix2x4dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glUniformMatrix2x4fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix3dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glUniformMatrix3fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix3fvARB)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix3x2dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glUniformMatrix3x2fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix3x4dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glUniformMatrix3x4fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix4dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glUniformMatrix4fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix4fvARB)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix4x2dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glUniformMatrix4x2fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformMatrix4x3dv)( GLint location, GLsizei count, GLboolean transpose, const GLdouble *value );
+    void       (*p_glUniformMatrix4x3fv)( GLint location, GLsizei count, GLboolean transpose, const GLfloat *value );
+    void       (*p_glUniformSubroutinesuiv)( GLenum shadertype, GLsizei count, const GLuint *indices );
+    void       (*p_glUniformui64NV)( GLint location, GLuint64EXT value );
+    void       (*p_glUniformui64vNV)( GLint location, GLsizei count, const GLuint64EXT *value );
+    void       (*p_glUnlockArraysEXT)(void);
+    GLboolean  (*p_glUnmapBuffer)( GLenum target );
+    GLboolean  (*p_glUnmapBufferARB)( GLenum target );
+    GLboolean  (*p_glUnmapNamedBuffer)( GLuint buffer );
+    GLboolean  (*p_glUnmapNamedBufferEXT)( GLuint buffer );
+    void       (*p_glUnmapObjectBufferATI)( GLuint buffer );
+    void       (*p_glUnmapTexture2DINTEL)( GLuint texture, GLint level );
+    void       (*p_glUpdateObjectBufferATI)( GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve );
+    void       (*p_glUploadGpuMaskNVX)( GLbitfield mask );
+    void       (*p_glUseProgram)( GLuint program );
+    void       (*p_glUseProgramObjectARB)( GLhandleARB programObj );
+    void       (*p_glUseProgramStages)( GLuint pipeline, GLbitfield stages, GLuint program );
+    void       (*p_glUseShaderProgramEXT)( GLenum type, GLuint program );
+    void       (*p_glVDPAUFiniNV)(void);
+    void       (*p_glVDPAUGetSurfaceivNV)( GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei *length, GLint *values );
+    void       (*p_glVDPAUInitNV)( const void *vdpDevice, const void *getProcAddress );
+    GLboolean  (*p_glVDPAUIsSurfaceNV)( GLvdpauSurfaceNV surface );
+    void       (*p_glVDPAUMapSurfacesNV)( GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces );
+    GLvdpauSurfaceNV (*p_glVDPAURegisterOutputSurfaceNV)( const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames );
+    GLvdpauSurfaceNV (*p_glVDPAURegisterVideoSurfaceNV)( const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames );
+    GLvdpauSurfaceNV (*p_glVDPAURegisterVideoSurfaceWithPictureStructureNV)( const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames, GLboolean isFrameStructure );
+    void       (*p_glVDPAUSurfaceAccessNV)( GLvdpauSurfaceNV surface, GLenum access );
+    void       (*p_glVDPAUUnmapSurfacesNV)( GLsizei numSurface, const GLvdpauSurfaceNV *surfaces );
+    void       (*p_glVDPAUUnregisterSurfaceNV)( GLvdpauSurfaceNV surface );
+    void       (*p_glValidateProgram)( GLuint program );
+    void       (*p_glValidateProgramARB)( GLhandleARB programObj );
+    void       (*p_glValidateProgramPipeline)( GLuint pipeline );
+    void       (*p_glVariantArrayObjectATI)( GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset );
+    void       (*p_glVariantPointerEXT)( GLuint id, GLenum type, GLuint stride, const void *addr );
+    void       (*p_glVariantbvEXT)( GLuint id, const GLbyte *addr );
+    void       (*p_glVariantdvEXT)( GLuint id, const GLdouble *addr );
+    void       (*p_glVariantfvEXT)( GLuint id, const GLfloat *addr );
+    void       (*p_glVariantivEXT)( GLuint id, const GLint *addr );
+    void       (*p_glVariantsvEXT)( GLuint id, const GLshort *addr );
+    void       (*p_glVariantubvEXT)( GLuint id, const GLubyte *addr );
+    void       (*p_glVariantuivEXT)( GLuint id, const GLuint *addr );
+    void       (*p_glVariantusvEXT)( GLuint id, const GLushort *addr );
+    void       (*p_glVertex2bOES)( GLbyte x, GLbyte y );
+    void       (*p_glVertex2bvOES)( const GLbyte *coords );
+    void       (*p_glVertex2hNV)( GLhalfNV x, GLhalfNV y );
+    void       (*p_glVertex2hvNV)( const GLhalfNV *v );
+    void       (*p_glVertex2xOES)( GLfixed x );
+    void       (*p_glVertex2xvOES)( const GLfixed *coords );
+    void       (*p_glVertex3bOES)( GLbyte x, GLbyte y, GLbyte z );
+    void       (*p_glVertex3bvOES)( const GLbyte *coords );
+    void       (*p_glVertex3hNV)( GLhalfNV x, GLhalfNV y, GLhalfNV z );
+    void       (*p_glVertex3hvNV)( const GLhalfNV *v );
+    void       (*p_glVertex3xOES)( GLfixed x, GLfixed y );
+    void       (*p_glVertex3xvOES)( const GLfixed *coords );
+    void       (*p_glVertex4bOES)( GLbyte x, GLbyte y, GLbyte z, GLbyte w );
+    void       (*p_glVertex4bvOES)( const GLbyte *coords );
+    void       (*p_glVertex4hNV)( GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w );
+    void       (*p_glVertex4hvNV)( const GLhalfNV *v );
+    void       (*p_glVertex4xOES)( GLfixed x, GLfixed y, GLfixed z );
+    void       (*p_glVertex4xvOES)( const GLfixed *coords );
+    void       (*p_glVertexArrayAttribBinding)( GLuint vaobj, GLuint attribindex, GLuint bindingindex );
+    void       (*p_glVertexArrayAttribFormat)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset );
+    void       (*p_glVertexArrayAttribIFormat)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
+    void       (*p_glVertexArrayAttribLFormat)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
+    void       (*p_glVertexArrayBindVertexBufferEXT)( GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride );
+    void       (*p_glVertexArrayBindingDivisor)( GLuint vaobj, GLuint bindingindex, GLuint divisor );
+    void       (*p_glVertexArrayColorOffsetEXT)( GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayEdgeFlagOffsetEXT)( GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayElementBuffer)( GLuint vaobj, GLuint buffer );
+    void       (*p_glVertexArrayFogCoordOffsetEXT)( GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayIndexOffsetEXT)( GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayMultiTexCoordOffsetEXT)( GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayNormalOffsetEXT)( GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayParameteriAPPLE)( GLenum pname, GLint param );
+    void       (*p_glVertexArrayRangeAPPLE)( GLsizei length, void *pointer );
+    void       (*p_glVertexArrayRangeNV)( GLsizei length, const void *pointer );
+    void       (*p_glVertexArraySecondaryColorOffsetEXT)( GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayTexCoordOffsetEXT)( GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayVertexAttribBindingEXT)( GLuint vaobj, GLuint attribindex, GLuint bindingindex );
+    void       (*p_glVertexArrayVertexAttribDivisorEXT)( GLuint vaobj, GLuint index, GLuint divisor );
+    void       (*p_glVertexArrayVertexAttribFormatEXT)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset );
+    void       (*p_glVertexArrayVertexAttribIFormatEXT)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
+    void       (*p_glVertexArrayVertexAttribIOffsetEXT)( GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayVertexAttribLFormatEXT)( GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
+    void       (*p_glVertexArrayVertexAttribLOffsetEXT)( GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayVertexAttribOffsetEXT)( GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexArrayVertexBindingDivisorEXT)( GLuint vaobj, GLuint bindingindex, GLuint divisor );
+    void       (*p_glVertexArrayVertexBuffer)( GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride );
+    void       (*p_glVertexArrayVertexBuffers)( GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides );
+    void       (*p_glVertexArrayVertexOffsetEXT)( GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset );
+    void       (*p_glVertexAttrib1d)( GLuint index, GLdouble x );
+    void       (*p_glVertexAttrib1dARB)( GLuint index, GLdouble x );
+    void       (*p_glVertexAttrib1dNV)( GLuint index, GLdouble x );
+    void       (*p_glVertexAttrib1dv)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib1dvARB)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib1dvNV)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib1f)( GLuint index, GLfloat x );
+    void       (*p_glVertexAttrib1fARB)( GLuint index, GLfloat x );
+    void       (*p_glVertexAttrib1fNV)( GLuint index, GLfloat x );
+    void       (*p_glVertexAttrib1fv)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib1fvARB)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib1fvNV)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib1hNV)( GLuint index, GLhalfNV x );
+    void       (*p_glVertexAttrib1hvNV)( GLuint index, const GLhalfNV *v );
+    void       (*p_glVertexAttrib1s)( GLuint index, GLshort x );
+    void       (*p_glVertexAttrib1sARB)( GLuint index, GLshort x );
+    void       (*p_glVertexAttrib1sNV)( GLuint index, GLshort x );
+    void       (*p_glVertexAttrib1sv)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib1svARB)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib1svNV)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib2d)( GLuint index, GLdouble x, GLdouble y );
+    void       (*p_glVertexAttrib2dARB)( GLuint index, GLdouble x, GLdouble y );
+    void       (*p_glVertexAttrib2dNV)( GLuint index, GLdouble x, GLdouble y );
+    void       (*p_glVertexAttrib2dv)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib2dvARB)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib2dvNV)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib2f)( GLuint index, GLfloat x, GLfloat y );
+    void       (*p_glVertexAttrib2fARB)( GLuint index, GLfloat x, GLfloat y );
+    void       (*p_glVertexAttrib2fNV)( GLuint index, GLfloat x, GLfloat y );
+    void       (*p_glVertexAttrib2fv)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib2fvARB)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib2fvNV)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib2hNV)( GLuint index, GLhalfNV x, GLhalfNV y );
+    void       (*p_glVertexAttrib2hvNV)( GLuint index, const GLhalfNV *v );
+    void       (*p_glVertexAttrib2s)( GLuint index, GLshort x, GLshort y );
+    void       (*p_glVertexAttrib2sARB)( GLuint index, GLshort x, GLshort y );
+    void       (*p_glVertexAttrib2sNV)( GLuint index, GLshort x, GLshort y );
+    void       (*p_glVertexAttrib2sv)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib2svARB)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib2svNV)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib3d)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glVertexAttrib3dARB)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glVertexAttrib3dNV)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glVertexAttrib3dv)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib3dvARB)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib3dvNV)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib3f)( GLuint index, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glVertexAttrib3fARB)( GLuint index, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glVertexAttrib3fNV)( GLuint index, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glVertexAttrib3fv)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib3fvARB)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib3fvNV)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib3hNV)( GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z );
+    void       (*p_glVertexAttrib3hvNV)( GLuint index, const GLhalfNV *v );
+    void       (*p_glVertexAttrib3s)( GLuint index, GLshort x, GLshort y, GLshort z );
+    void       (*p_glVertexAttrib3sARB)( GLuint index, GLshort x, GLshort y, GLshort z );
+    void       (*p_glVertexAttrib3sNV)( GLuint index, GLshort x, GLshort y, GLshort z );
+    void       (*p_glVertexAttrib3sv)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib3svARB)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib3svNV)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib4Nbv)( GLuint index, const GLbyte *v );
+    void       (*p_glVertexAttrib4NbvARB)( GLuint index, const GLbyte *v );
+    void       (*p_glVertexAttrib4Niv)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttrib4NivARB)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttrib4Nsv)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib4NsvARB)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib4Nub)( GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w );
+    void       (*p_glVertexAttrib4NubARB)( GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w );
+    void       (*p_glVertexAttrib4Nubv)( GLuint index, const GLubyte *v );
+    void       (*p_glVertexAttrib4NubvARB)( GLuint index, const GLubyte *v );
+    void       (*p_glVertexAttrib4Nuiv)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttrib4NuivARB)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttrib4Nusv)( GLuint index, const GLushort *v );
+    void       (*p_glVertexAttrib4NusvARB)( GLuint index, const GLushort *v );
+    void       (*p_glVertexAttrib4bv)( GLuint index, const GLbyte *v );
+    void       (*p_glVertexAttrib4bvARB)( GLuint index, const GLbyte *v );
+    void       (*p_glVertexAttrib4d)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glVertexAttrib4dARB)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glVertexAttrib4dNV)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glVertexAttrib4dv)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib4dvARB)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib4dvNV)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttrib4f)( GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glVertexAttrib4fARB)( GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glVertexAttrib4fNV)( GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glVertexAttrib4fv)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib4fvARB)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib4fvNV)( GLuint index, const GLfloat *v );
+    void       (*p_glVertexAttrib4hNV)( GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w );
+    void       (*p_glVertexAttrib4hvNV)( GLuint index, const GLhalfNV *v );
+    void       (*p_glVertexAttrib4iv)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttrib4ivARB)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttrib4s)( GLuint index, GLshort x, GLshort y, GLshort z, GLshort w );
+    void       (*p_glVertexAttrib4sARB)( GLuint index, GLshort x, GLshort y, GLshort z, GLshort w );
+    void       (*p_glVertexAttrib4sNV)( GLuint index, GLshort x, GLshort y, GLshort z, GLshort w );
+    void       (*p_glVertexAttrib4sv)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib4svARB)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib4svNV)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttrib4ubNV)( GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w );
+    void       (*p_glVertexAttrib4ubv)( GLuint index, const GLubyte *v );
+    void       (*p_glVertexAttrib4ubvARB)( GLuint index, const GLubyte *v );
+    void       (*p_glVertexAttrib4ubvNV)( GLuint index, const GLubyte *v );
+    void       (*p_glVertexAttrib4uiv)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttrib4uivARB)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttrib4usv)( GLuint index, const GLushort *v );
+    void       (*p_glVertexAttrib4usvARB)( GLuint index, const GLushort *v );
+    void       (*p_glVertexAttribArrayObjectATI)( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset );
+    void       (*p_glVertexAttribBinding)( GLuint attribindex, GLuint bindingindex );
+    void       (*p_glVertexAttribDivisor)( GLuint index, GLuint divisor );
+    void       (*p_glVertexAttribDivisorARB)( GLuint index, GLuint divisor );
+    void       (*p_glVertexAttribFormat)( GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset );
+    void       (*p_glVertexAttribFormatNV)( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride );
+    void       (*p_glVertexAttribI1i)( GLuint index, GLint x );
+    void       (*p_glVertexAttribI1iEXT)( GLuint index, GLint x );
+    void       (*p_glVertexAttribI1iv)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttribI1ivEXT)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttribI1ui)( GLuint index, GLuint x );
+    void       (*p_glVertexAttribI1uiEXT)( GLuint index, GLuint x );
+    void       (*p_glVertexAttribI1uiv)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttribI1uivEXT)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttribI2i)( GLuint index, GLint x, GLint y );
+    void       (*p_glVertexAttribI2iEXT)( GLuint index, GLint x, GLint y );
+    void       (*p_glVertexAttribI2iv)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttribI2ivEXT)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttribI2ui)( GLuint index, GLuint x, GLuint y );
+    void       (*p_glVertexAttribI2uiEXT)( GLuint index, GLuint x, GLuint y );
+    void       (*p_glVertexAttribI2uiv)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttribI2uivEXT)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttribI3i)( GLuint index, GLint x, GLint y, GLint z );
+    void       (*p_glVertexAttribI3iEXT)( GLuint index, GLint x, GLint y, GLint z );
+    void       (*p_glVertexAttribI3iv)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttribI3ivEXT)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttribI3ui)( GLuint index, GLuint x, GLuint y, GLuint z );
+    void       (*p_glVertexAttribI3uiEXT)( GLuint index, GLuint x, GLuint y, GLuint z );
+    void       (*p_glVertexAttribI3uiv)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttribI3uivEXT)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttribI4bv)( GLuint index, const GLbyte *v );
+    void       (*p_glVertexAttribI4bvEXT)( GLuint index, const GLbyte *v );
+    void       (*p_glVertexAttribI4i)( GLuint index, GLint x, GLint y, GLint z, GLint w );
+    void       (*p_glVertexAttribI4iEXT)( GLuint index, GLint x, GLint y, GLint z, GLint w );
+    void       (*p_glVertexAttribI4iv)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttribI4ivEXT)( GLuint index, const GLint *v );
+    void       (*p_glVertexAttribI4sv)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttribI4svEXT)( GLuint index, const GLshort *v );
+    void       (*p_glVertexAttribI4ubv)( GLuint index, const GLubyte *v );
+    void       (*p_glVertexAttribI4ubvEXT)( GLuint index, const GLubyte *v );
+    void       (*p_glVertexAttribI4ui)( GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
+    void       (*p_glVertexAttribI4uiEXT)( GLuint index, GLuint x, GLuint y, GLuint z, GLuint w );
+    void       (*p_glVertexAttribI4uiv)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttribI4uivEXT)( GLuint index, const GLuint *v );
+    void       (*p_glVertexAttribI4usv)( GLuint index, const GLushort *v );
+    void       (*p_glVertexAttribI4usvEXT)( GLuint index, const GLushort *v );
+    void       (*p_glVertexAttribIFormat)( GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
+    void       (*p_glVertexAttribIFormatNV)( GLuint index, GLint size, GLenum type, GLsizei stride );
+    void       (*p_glVertexAttribIPointer)( GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glVertexAttribIPointerEXT)( GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glVertexAttribL1d)( GLuint index, GLdouble x );
+    void       (*p_glVertexAttribL1dEXT)( GLuint index, GLdouble x );
+    void       (*p_glVertexAttribL1dv)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttribL1dvEXT)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttribL1i64NV)( GLuint index, GLint64EXT x );
+    void       (*p_glVertexAttribL1i64vNV)( GLuint index, const GLint64EXT *v );
+    void       (*p_glVertexAttribL1ui64ARB)( GLuint index, GLuint64EXT x );
+    void       (*p_glVertexAttribL1ui64NV)( GLuint index, GLuint64EXT x );
+    void       (*p_glVertexAttribL1ui64vARB)( GLuint index, const GLuint64EXT *v );
+    void       (*p_glVertexAttribL1ui64vNV)( GLuint index, const GLuint64EXT *v );
+    void       (*p_glVertexAttribL2d)( GLuint index, GLdouble x, GLdouble y );
+    void       (*p_glVertexAttribL2dEXT)( GLuint index, GLdouble x, GLdouble y );
+    void       (*p_glVertexAttribL2dv)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttribL2dvEXT)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttribL2i64NV)( GLuint index, GLint64EXT x, GLint64EXT y );
+    void       (*p_glVertexAttribL2i64vNV)( GLuint index, const GLint64EXT *v );
+    void       (*p_glVertexAttribL2ui64NV)( GLuint index, GLuint64EXT x, GLuint64EXT y );
+    void       (*p_glVertexAttribL2ui64vNV)( GLuint index, const GLuint64EXT *v );
+    void       (*p_glVertexAttribL3d)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glVertexAttribL3dEXT)( GLuint index, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glVertexAttribL3dv)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttribL3dvEXT)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttribL3i64NV)( GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z );
+    void       (*p_glVertexAttribL3i64vNV)( GLuint index, const GLint64EXT *v );
+    void       (*p_glVertexAttribL3ui64NV)( GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z );
+    void       (*p_glVertexAttribL3ui64vNV)( GLuint index, const GLuint64EXT *v );
+    void       (*p_glVertexAttribL4d)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glVertexAttribL4dEXT)( GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glVertexAttribL4dv)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttribL4dvEXT)( GLuint index, const GLdouble *v );
+    void       (*p_glVertexAttribL4i64NV)( GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w );
+    void       (*p_glVertexAttribL4i64vNV)( GLuint index, const GLint64EXT *v );
+    void       (*p_glVertexAttribL4ui64NV)( GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w );
+    void       (*p_glVertexAttribL4ui64vNV)( GLuint index, const GLuint64EXT *v );
+    void       (*p_glVertexAttribLFormat)( GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset );
+    void       (*p_glVertexAttribLFormatNV)( GLuint index, GLint size, GLenum type, GLsizei stride );
+    void       (*p_glVertexAttribLPointer)( GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glVertexAttribLPointerEXT)( GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glVertexAttribP1ui)( GLuint index, GLenum type, GLboolean normalized, GLuint value );
+    void       (*p_glVertexAttribP1uiv)( GLuint index, GLenum type, GLboolean normalized, const GLuint *value );
+    void       (*p_glVertexAttribP2ui)( GLuint index, GLenum type, GLboolean normalized, GLuint value );
+    void       (*p_glVertexAttribP2uiv)( GLuint index, GLenum type, GLboolean normalized, const GLuint *value );
+    void       (*p_glVertexAttribP3ui)( GLuint index, GLenum type, GLboolean normalized, GLuint value );
+    void       (*p_glVertexAttribP3uiv)( GLuint index, GLenum type, GLboolean normalized, const GLuint *value );
+    void       (*p_glVertexAttribP4ui)( GLuint index, GLenum type, GLboolean normalized, GLuint value );
+    void       (*p_glVertexAttribP4uiv)( GLuint index, GLenum type, GLboolean normalized, const GLuint *value );
+    void       (*p_glVertexAttribParameteriAMD)( GLuint index, GLenum pname, GLint param );
+    void       (*p_glVertexAttribPointer)( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer );
+    void       (*p_glVertexAttribPointerARB)( GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer );
+    void       (*p_glVertexAttribPointerNV)( GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glVertexAttribs1dvNV)( GLuint index, GLsizei count, const GLdouble *v );
+    void       (*p_glVertexAttribs1fvNV)( GLuint index, GLsizei count, const GLfloat *v );
+    void       (*p_glVertexAttribs1hvNV)( GLuint index, GLsizei n, const GLhalfNV *v );
+    void       (*p_glVertexAttribs1svNV)( GLuint index, GLsizei count, const GLshort *v );
+    void       (*p_glVertexAttribs2dvNV)( GLuint index, GLsizei count, const GLdouble *v );
+    void       (*p_glVertexAttribs2fvNV)( GLuint index, GLsizei count, const GLfloat *v );
+    void       (*p_glVertexAttribs2hvNV)( GLuint index, GLsizei n, const GLhalfNV *v );
+    void       (*p_glVertexAttribs2svNV)( GLuint index, GLsizei count, const GLshort *v );
+    void       (*p_glVertexAttribs3dvNV)( GLuint index, GLsizei count, const GLdouble *v );
+    void       (*p_glVertexAttribs3fvNV)( GLuint index, GLsizei count, const GLfloat *v );
+    void       (*p_glVertexAttribs3hvNV)( GLuint index, GLsizei n, const GLhalfNV *v );
+    void       (*p_glVertexAttribs3svNV)( GLuint index, GLsizei count, const GLshort *v );
+    void       (*p_glVertexAttribs4dvNV)( GLuint index, GLsizei count, const GLdouble *v );
+    void       (*p_glVertexAttribs4fvNV)( GLuint index, GLsizei count, const GLfloat *v );
+    void       (*p_glVertexAttribs4hvNV)( GLuint index, GLsizei n, const GLhalfNV *v );
+    void       (*p_glVertexAttribs4svNV)( GLuint index, GLsizei count, const GLshort *v );
+    void       (*p_glVertexAttribs4ubvNV)( GLuint index, GLsizei count, const GLubyte *v );
+    void       (*p_glVertexBindingDivisor)( GLuint bindingindex, GLuint divisor );
+    void       (*p_glVertexBlendARB)( GLint count );
+    void       (*p_glVertexBlendEnvfATI)( GLenum pname, GLfloat param );
+    void       (*p_glVertexBlendEnviATI)( GLenum pname, GLint param );
+    void       (*p_glVertexFormatNV)( GLint size, GLenum type, GLsizei stride );
+    void       (*p_glVertexP2ui)( GLenum type, GLuint value );
+    void       (*p_glVertexP2uiv)( GLenum type, const GLuint *value );
+    void       (*p_glVertexP3ui)( GLenum type, GLuint value );
+    void       (*p_glVertexP3uiv)( GLenum type, const GLuint *value );
+    void       (*p_glVertexP4ui)( GLenum type, GLuint value );
+    void       (*p_glVertexP4uiv)( GLenum type, const GLuint *value );
+    void       (*p_glVertexPointerEXT)( GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer );
+    void       (*p_glVertexPointerListIBM)( GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride );
+    void       (*p_glVertexPointervINTEL)( GLint size, GLenum type, const void **pointer );
+    void       (*p_glVertexStream1dATI)( GLenum stream, GLdouble x );
+    void       (*p_glVertexStream1dvATI)( GLenum stream, const GLdouble *coords );
+    void       (*p_glVertexStream1fATI)( GLenum stream, GLfloat x );
+    void       (*p_glVertexStream1fvATI)( GLenum stream, const GLfloat *coords );
+    void       (*p_glVertexStream1iATI)( GLenum stream, GLint x );
+    void       (*p_glVertexStream1ivATI)( GLenum stream, const GLint *coords );
+    void       (*p_glVertexStream1sATI)( GLenum stream, GLshort x );
+    void       (*p_glVertexStream1svATI)( GLenum stream, const GLshort *coords );
+    void       (*p_glVertexStream2dATI)( GLenum stream, GLdouble x, GLdouble y );
+    void       (*p_glVertexStream2dvATI)( GLenum stream, const GLdouble *coords );
+    void       (*p_glVertexStream2fATI)( GLenum stream, GLfloat x, GLfloat y );
+    void       (*p_glVertexStream2fvATI)( GLenum stream, const GLfloat *coords );
+    void       (*p_glVertexStream2iATI)( GLenum stream, GLint x, GLint y );
+    void       (*p_glVertexStream2ivATI)( GLenum stream, const GLint *coords );
+    void       (*p_glVertexStream2sATI)( GLenum stream, GLshort x, GLshort y );
+    void       (*p_glVertexStream2svATI)( GLenum stream, const GLshort *coords );
+    void       (*p_glVertexStream3dATI)( GLenum stream, GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glVertexStream3dvATI)( GLenum stream, const GLdouble *coords );
+    void       (*p_glVertexStream3fATI)( GLenum stream, GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glVertexStream3fvATI)( GLenum stream, const GLfloat *coords );
+    void       (*p_glVertexStream3iATI)( GLenum stream, GLint x, GLint y, GLint z );
+    void       (*p_glVertexStream3ivATI)( GLenum stream, const GLint *coords );
+    void       (*p_glVertexStream3sATI)( GLenum stream, GLshort x, GLshort y, GLshort z );
+    void       (*p_glVertexStream3svATI)( GLenum stream, const GLshort *coords );
+    void       (*p_glVertexStream4dATI)( GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glVertexStream4dvATI)( GLenum stream, const GLdouble *coords );
+    void       (*p_glVertexStream4fATI)( GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glVertexStream4fvATI)( GLenum stream, const GLfloat *coords );
+    void       (*p_glVertexStream4iATI)( GLenum stream, GLint x, GLint y, GLint z, GLint w );
+    void       (*p_glVertexStream4ivATI)( GLenum stream, const GLint *coords );
+    void       (*p_glVertexStream4sATI)( GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w );
+    void       (*p_glVertexStream4svATI)( GLenum stream, const GLshort *coords );
+    void       (*p_glVertexWeightPointerEXT)( GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glVertexWeightfEXT)( GLfloat weight );
+    void       (*p_glVertexWeightfvEXT)( const GLfloat *weight );
+    void       (*p_glVertexWeighthNV)( GLhalfNV weight );
+    void       (*p_glVertexWeighthvNV)( const GLhalfNV *weight );
+    GLenum     (*p_glVideoCaptureNV)( GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time );
+    void       (*p_glVideoCaptureStreamParameterdvNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params );
+    void       (*p_glVideoCaptureStreamParameterfvNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params );
+    void       (*p_glVideoCaptureStreamParameterivNV)( GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params );
+    void       (*p_glViewportArrayv)( GLuint first, GLsizei count, const GLfloat *v );
+    void       (*p_glViewportIndexedf)( GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h );
+    void       (*p_glViewportIndexedfv)( GLuint index, const GLfloat *v );
+    void       (*p_glViewportPositionWScaleNV)( GLuint index, GLfloat xcoeff, GLfloat ycoeff );
+    void       (*p_glViewportSwizzleNV)( GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew );
+    void       (*p_glWaitSemaphoreEXT)( GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts );
+    void       (*p_glWaitSemaphoreui64NVX)( GLuint waitGpu, GLsizei fenceObjectCount, const GLuint *semaphoreArray, const GLuint64 *fenceValueArray );
+    void       (*p_glWaitSync)( GLsync sync, GLbitfield flags, GLuint64 timeout );
+    void       (*p_glWaitVkSemaphoreNV)( GLuint64 vkSemaphore );
+    void       (*p_glWeightPathsNV)( GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights );
+    void       (*p_glWeightPointerARB)( GLint size, GLenum type, GLsizei stride, const void *pointer );
+    void       (*p_glWeightbvARB)( GLint size, const GLbyte *weights );
+    void       (*p_glWeightdvARB)( GLint size, const GLdouble *weights );
+    void       (*p_glWeightfvARB)( GLint size, const GLfloat *weights );
+    void       (*p_glWeightivARB)( GLint size, const GLint *weights );
+    void       (*p_glWeightsvARB)( GLint size, const GLshort *weights );
+    void       (*p_glWeightubvARB)( GLint size, const GLubyte *weights );
+    void       (*p_glWeightuivARB)( GLint size, const GLuint *weights );
+    void       (*p_glWeightusvARB)( GLint size, const GLushort *weights );
+    void       (*p_glWindowPos2d)( GLdouble x, GLdouble y );
+    void       (*p_glWindowPos2dARB)( GLdouble x, GLdouble y );
+    void       (*p_glWindowPos2dMESA)( GLdouble x, GLdouble y );
+    void       (*p_glWindowPos2dv)( const GLdouble *v );
+    void       (*p_glWindowPos2dvARB)( const GLdouble *v );
+    void       (*p_glWindowPos2dvMESA)( const GLdouble *v );
+    void       (*p_glWindowPos2f)( GLfloat x, GLfloat y );
+    void       (*p_glWindowPos2fARB)( GLfloat x, GLfloat y );
+    void       (*p_glWindowPos2fMESA)( GLfloat x, GLfloat y );
+    void       (*p_glWindowPos2fv)( const GLfloat *v );
+    void       (*p_glWindowPos2fvARB)( const GLfloat *v );
+    void       (*p_glWindowPos2fvMESA)( const GLfloat *v );
+    void       (*p_glWindowPos2i)( GLint x, GLint y );
+    void       (*p_glWindowPos2iARB)( GLint x, GLint y );
+    void       (*p_glWindowPos2iMESA)( GLint x, GLint y );
+    void       (*p_glWindowPos2iv)( const GLint *v );
+    void       (*p_glWindowPos2ivARB)( const GLint *v );
+    void       (*p_glWindowPos2ivMESA)( const GLint *v );
+    void       (*p_glWindowPos2s)( GLshort x, GLshort y );
+    void       (*p_glWindowPos2sARB)( GLshort x, GLshort y );
+    void       (*p_glWindowPos2sMESA)( GLshort x, GLshort y );
+    void       (*p_glWindowPos2sv)( const GLshort *v );
+    void       (*p_glWindowPos2svARB)( const GLshort *v );
+    void       (*p_glWindowPos2svMESA)( const GLshort *v );
+    void       (*p_glWindowPos3d)( GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glWindowPos3dARB)( GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glWindowPos3dMESA)( GLdouble x, GLdouble y, GLdouble z );
+    void       (*p_glWindowPos3dv)( const GLdouble *v );
+    void       (*p_glWindowPos3dvARB)( const GLdouble *v );
+    void       (*p_glWindowPos3dvMESA)( const GLdouble *v );
+    void       (*p_glWindowPos3f)( GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glWindowPos3fARB)( GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glWindowPos3fMESA)( GLfloat x, GLfloat y, GLfloat z );
+    void       (*p_glWindowPos3fv)( const GLfloat *v );
+    void       (*p_glWindowPos3fvARB)( const GLfloat *v );
+    void       (*p_glWindowPos3fvMESA)( const GLfloat *v );
+    void       (*p_glWindowPos3i)( GLint x, GLint y, GLint z );
+    void       (*p_glWindowPos3iARB)( GLint x, GLint y, GLint z );
+    void       (*p_glWindowPos3iMESA)( GLint x, GLint y, GLint z );
+    void       (*p_glWindowPos3iv)( const GLint *v );
+    void       (*p_glWindowPos3ivARB)( const GLint *v );
+    void       (*p_glWindowPos3ivMESA)( const GLint *v );
+    void       (*p_glWindowPos3s)( GLshort x, GLshort y, GLshort z );
+    void       (*p_glWindowPos3sARB)( GLshort x, GLshort y, GLshort z );
+    void       (*p_glWindowPos3sMESA)( GLshort x, GLshort y, GLshort z );
+    void       (*p_glWindowPos3sv)( const GLshort *v );
+    void       (*p_glWindowPos3svARB)( const GLshort *v );
+    void       (*p_glWindowPos3svMESA)( const GLshort *v );
+    void       (*p_glWindowPos4dMESA)( GLdouble x, GLdouble y, GLdouble z, GLdouble w );
+    void       (*p_glWindowPos4dvMESA)( const GLdouble *v );
+    void       (*p_glWindowPos4fMESA)( GLfloat x, GLfloat y, GLfloat z, GLfloat w );
+    void       (*p_glWindowPos4fvMESA)( const GLfloat *v );
+    void       (*p_glWindowPos4iMESA)( GLint x, GLint y, GLint z, GLint w );
+    void       (*p_glWindowPos4ivMESA)( const GLint *v );
+    void       (*p_glWindowPos4sMESA)( GLshort x, GLshort y, GLshort z, GLshort w );
+    void       (*p_glWindowPos4svMESA)( const GLshort *v );
+    void       (*p_glWindowRectanglesEXT)( GLenum mode, GLsizei count, const GLint *box );
+    void       (*p_glWriteMaskEXT)( GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW );
+    void *     (*p_wglAllocateMemoryNV)( GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority );
+    BOOL       (*p_wglBindTexImageARB)( struct wgl_pbuffer * hPbuffer, int iBuffer );
+    BOOL       (*p_wglChoosePixelFormatARB)( HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats );
+    struct wgl_context * (*p_wglCreateContextAttribsARB)( HDC hDC, struct wgl_context * hShareContext, const int *attribList );
+    struct wgl_pbuffer * (*p_wglCreatePbufferARB)( HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList );
+    BOOL       (*p_wglDestroyPbufferARB)( struct wgl_pbuffer * hPbuffer );
+    void       (*p_wglFreeMemoryNV)( void *pointer );
+    HDC        (*p_wglGetCurrentReadDCARB)(void);
+    const char * (*p_wglGetExtensionsStringARB)( HDC hdc );
+    const char * (*p_wglGetExtensionsStringEXT)(void);
+    HDC        (*p_wglGetPbufferDCARB)( struct wgl_pbuffer * hPbuffer );
+    BOOL       (*p_wglGetPixelFormatAttribfvARB)( HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues );
+    BOOL       (*p_wglGetPixelFormatAttribivARB)( HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues );
+    int        (*p_wglGetSwapIntervalEXT)(void);
+    BOOL       (*p_wglMakeContextCurrentARB)( HDC hDrawDC, HDC hReadDC, struct wgl_context * hglrc );
+    BOOL       (*p_wglQueryCurrentRendererIntegerWINE)( GLenum attribute, GLuint *value );
+    const GLchar * (*p_wglQueryCurrentRendererStringWINE)( GLenum attribute );
+    BOOL       (*p_wglQueryPbufferARB)( struct wgl_pbuffer * hPbuffer, int iAttribute, int *piValue );
+    BOOL       (*p_wglQueryRendererIntegerWINE)( HDC dc, GLint renderer, GLenum attribute, GLuint *value );
+    const GLchar * (*p_wglQueryRendererStringWINE)( HDC dc, GLint renderer, GLenum attribute );
+    int        (*p_wglReleasePbufferDCARB)( struct wgl_pbuffer * hPbuffer, HDC hDC );
+    BOOL       (*p_wglReleaseTexImageARB)( struct wgl_pbuffer * hPbuffer, int iBuffer );
+    BOOL       (*p_wglSetPbufferAttribARB)( struct wgl_pbuffer * hPbuffer, const int *piAttribList );
+    BOOL       (*p_wglSetPixelFormatWINE)( HDC hdc, int format );
+    BOOL       (*p_wglSwapIntervalEXT)( int interval );
 };
 
 #define ALL_GL_UNIX_FUNCS \
-- 
GitLab

