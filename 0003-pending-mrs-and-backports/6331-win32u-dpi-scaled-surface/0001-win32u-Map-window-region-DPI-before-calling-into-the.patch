From 01ee6c052b241a601a9975b5accb80b4455827b4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 9 Aug 2024 09:40:37 +0200
Subject: [PATCH 1/4] win32u: Map window region DPI before calling into the
 drivers.

---
 dlls/win32u/sysparams.c      | 23 +++++++++++++++++++++++
 dlls/win32u/win32u_private.h |  1 +
 dlls/win32u/window.c         |  8 +++++++-
 3 files changed, 31 insertions(+), 1 deletion(-)

diff --git a/dlls/win32u/sysparams.c b/dlls/win32u/sysparams.c
index 5a1b2e12e40..02d7bd8ac0c 100644
--- a/dlls/win32u/sysparams.c
+++ b/dlls/win32u/sysparams.c
@@ -2249,6 +2249,29 @@ RECT map_dpi_rect( RECT rect, UINT dpi_from, UINT dpi_to )
     return rect;
 }
 
+/**********************************************************************
+ *              map_dpi_region
+ */
+HRGN map_dpi_region( HRGN hrgn, UINT dpi_from, UINT dpi_to )
+{
+    RGNDATA *data;
+    UINT i, size;
+
+    if (!(size = NtGdiGetRegionData( hrgn, 0, NULL ))) return 0;
+    if (!(data = malloc( size ))) return 0;
+    NtGdiGetRegionData( hrgn, size, data );
+
+    if (dpi_from && dpi_to && dpi_from != dpi_to)
+    {
+        RECT *rects = (RECT *)data->Buffer;
+        for (i = 0; i < data->rdh.nCount; i++) rects[i] = map_dpi_rect( rects[i], dpi_from, dpi_to );
+    }
+
+    hrgn = NtGdiExtCreateRegion( NULL, data->rdh.dwSize + data->rdh.nRgnSize, data );
+    free( data );
+    return hrgn;
+}
+
 /**********************************************************************
  *              map_dpi_point
  */
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index 28801dfd30f..af054186f1a 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -183,6 +183,7 @@ extern RECT get_virtual_screen_rect( UINT dpi );
 extern BOOL is_exiting_thread( DWORD tid );
 extern POINT map_dpi_point( POINT pt, UINT dpi_from, UINT dpi_to );
 extern RECT map_dpi_rect( RECT rect, UINT dpi_from, UINT dpi_to );
+extern HRGN map_dpi_region( HRGN region, UINT dpi_from, UINT dpi_to );
 extern BOOL message_beep( UINT i );
 extern POINT point_phys_to_win_dpi( HWND hwnd, POINT pt );
 extern POINT point_thread_to_win_dpi( HWND hwnd, POINT pt );
diff --git a/dlls/win32u/window.c b/dlls/win32u/window.c
index c53e4f8e0e8..397d0802f1b 100644
--- a/dlls/win32u/window.c
+++ b/dlls/win32u/window.c
@@ -2231,8 +2231,14 @@ int WINAPI NtUserSetWindowRgn( HWND hwnd, HRGN hrgn, BOOL redraw )
     {
         UINT swp_flags = SWP_NOSIZE | SWP_NOMOVE | SWP_NOZORDER | SWP_NOACTIVATE | SWP_FRAMECHANGED |
             SWP_NOCLIENTSIZE | SWP_NOCLIENTMOVE;
+        HRGN monitor_hrgn;
+
         if (!redraw) swp_flags |= SWP_NOREDRAW;
-        user_driver->pSetWindowRgn( hwnd, hrgn, redraw );
+
+        monitor_hrgn = map_dpi_region( hrgn, get_thread_dpi(), get_win_monitor_dpi( hwnd ) );
+        user_driver->pSetWindowRgn( hwnd, monitor_hrgn, redraw );
+        if (monitor_hrgn) NtGdiDeleteObjectApp( monitor_hrgn );
+
         NtUserSetWindowPos( hwnd, 0, 0, 0, 0, 0, swp_flags );
         if (hrgn) NtGdiDeleteObjectApp( hrgn );
     }
-- 
2.46.0

