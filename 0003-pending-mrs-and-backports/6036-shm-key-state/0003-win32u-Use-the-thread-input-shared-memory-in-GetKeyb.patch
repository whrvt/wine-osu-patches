From 12815b4e4d0a2dc4b7a3b54c3133d62eeb4c2e79 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 16 Jun 2023 09:58:55 +0200
Subject: [PATCH 3/7] win32u: Use the thread input shared memory in
 GetKeyboardState.

---
 dlls/win32u/input.c | 20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

diff --git a/dlls/win32u/input.c b/dlls/win32u/input.c
index ba54cd3d7bb..5f7e9690ee0 100644
--- a/dlls/win32u/input.c
+++ b/dlls/win32u/input.c
@@ -972,21 +972,19 @@ SHORT WINAPI NtUserGetKeyState( INT vkey )
  */
 BOOL WINAPI NtUserGetKeyboardState( BYTE *state )
 {
-    BOOL ret;
+    struct object_lock lock = OBJECT_LOCK_INIT;
+    const input_shm_t *input_shm;
+    NTSTATUS status;
     UINT i;
 
     TRACE("(%p)\n", state);
 
-    memset( state, 0, 256 );
-    SERVER_START_REQ( get_key_state )
-    {
-        req->key = -1;
-        wine_server_set_reply( req, state, 256 );
-        ret = !wine_server_call_err( req );
-        for (i = 0; i < 256; i++) state[i] &= 0x81;
-    }
-    SERVER_END_REQ;
-    return ret;
+    while ((status = get_shared_input( GetCurrentThreadId(), &lock, &input_shm )) == STATUS_PENDING)
+        memcpy( state, (const void *)input_shm->keystate, 256 );
+    if (status) memset( state, 0, 256 );
+
+    for (i = 0; i < 256; i++) state[i] &= 0x81;
+    return TRUE;
 }
 
 /***********************************************************************
-- 
2.45.2

