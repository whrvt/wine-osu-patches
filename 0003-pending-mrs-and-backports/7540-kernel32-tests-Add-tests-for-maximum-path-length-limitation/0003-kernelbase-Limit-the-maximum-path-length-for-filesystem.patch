From 5ca01256d328679f194b062c8b7e5dcef36b14de Mon Sep 17 00:00:00 2001
From: yaoyongjie <yaoyongjie@uniontech.com>
Date: Tue, 11 Mar 2025 15:20:33 +0800
Subject: [PATCH] kernelbase: Limit the maximum path length for filesystem.

In CopyFileEx, by default, the file name
and path are limited to MAX_PATH characters. To extend this limit
to 32,767 wide characters, need prepend "\\\\?\\" to the path.
---
 dlls/kernel32/tests/file.c |  8 ++++----
 dlls/kernelbase/file.c     | 12 ++++++++++++
 2 files changed, 16 insertions(+), 4 deletions(-)

diff --git a/dlls/kernel32/tests/file.c b/dlls/kernel32/tests/file.c
index ab63b8ad120..5d9f3aa4290 100644
--- a/dlls/kernel32/tests/file.c
+++ b/dlls/kernel32/tests/file.c
@@ -1048,12 +1048,12 @@ static void test_CopyFileW(void)
         wcscat(long_path_1, a);
         SetLastError(0xdeadbeef);
         ret = CopyFileExW(source, long_path_1, NULL, NULL, NULL, 0);
-        todo_wine ok(!ret && GetLastError() == ERROR_PATH_NOT_FOUND, "Expected CopyFileExW failed with ERROR_PATH_NOT_FOUND, but got %ld, copy %s -> %s\n", GetLastError(), wine_dbgstr_w(source), wine_dbgstr_w(long_path_1));
+        ok(!ret && GetLastError() == ERROR_PATH_NOT_FOUND, "Expected CopyFileExW failed with ERROR_PATH_NOT_FOUND, but got %ld, copy %s -> %s\n", GetLastError(), wine_dbgstr_w(source), wine_dbgstr_w(long_path_1));
         wcscpy(long_path_2, temp_path);
         wcscat(long_path_2, b);
         SetLastError(0xdeadbeef);
         ret = CopyFileExW(long_path_1, long_path_2, NULL, NULL, NULL, 0);
-        todo_wine ok(!ret && GetLastError() == ERROR_PATH_NOT_FOUND, "Expected CopyFileExW failed with ERROR_PATH_NOT_FOUND, but got %ld, copy %s -> %s\n", GetLastError(), wine_dbgstr_w(long_path_1), wine_dbgstr_w(long_path_2));
+        ok(!ret && GetLastError() == ERROR_PATH_NOT_FOUND, "Expected CopyFileExW failed with ERROR_PATH_NOT_FOUND, but got %ld, copy %s -> %s\n", GetLastError(), wine_dbgstr_w(long_path_1), wine_dbgstr_w(long_path_2));
         ret = DeleteFileW(long_path_1);
         todo_wine ok(!ret, "Unexpected DeleteFileW successed\n");
         ret = DeleteFileW(long_path_2);
@@ -1442,12 +1442,12 @@ static void test_CopyFileEx(void)
         strcat(long_path_1, a);
         SetLastError(0xdeadbeef);
         retok = CopyFileExA(source, long_path_1, NULL, NULL, NULL, 0);
-        todo_wine ok(!retok && GetLastError() == ERROR_PATH_NOT_FOUND, "Expected CopyFileExA failed with ERROR_PATH_NOT_FOUND, but got %ld, copy %s -> %s\n", GetLastError(), source, long_path_1);
+        ok(!retok && GetLastError() == ERROR_PATH_NOT_FOUND, "Expected CopyFileExA failed with ERROR_PATH_NOT_FOUND, but got %ld, copy %s -> %s\n", GetLastError(), source, long_path_1);
         strcpy(long_path_2, temp_path);
         strcat(long_path_2, b);
         SetLastError(0xdeadbeef);
         retok = CopyFileExA(long_path_1, long_path_2, NULL, NULL, NULL, 0);
-        todo_wine ok(!retok && GetLastError() == ERROR_PATH_NOT_FOUND, "Expected CopyFileExA failed with ERROR_PATH_NOT_FOUND, but got %ld, copy %s -> %s\n", GetLastError(), long_path_1, long_path_2);
+        ok(!retok && GetLastError() == ERROR_PATH_NOT_FOUND, "Expected CopyFileExA failed with ERROR_PATH_NOT_FOUND, but got %ld, copy %s -> %s\n", GetLastError(), long_path_1, long_path_2);
         retok = DeleteFileA(long_path_1);
         todo_wine ok(!retok, "Unexpected DeleteFileA successed\n");
         retok = DeleteFileA(long_path_2);
diff --git a/dlls/kernelbase/file.c b/dlls/kernelbase/file.c
index 7d8b6844456..f208d92c209 100644
--- a/dlls/kernelbase/file.c
+++ b/dlls/kernelbase/file.c
@@ -527,6 +527,18 @@ static BOOL copy_file( const WCHAR *source, const WCHAR *dest, COPYFILE2_EXTENDE
         SetLastError( ERROR_INVALID_PARAMETER );
         return FALSE;
     }
+
+    if (!RtlGetCurrentPeb()->IsLongPathAwareProcess && wcsncmp(source, L"\\\\?\\", 4) && wcslen(source) >= MAX_PATH )
+    {
+        SetLastError( ERROR_PATH_NOT_FOUND );
+        return FALSE;
+    }
+    if (!RtlGetCurrentPeb()->IsLongPathAwareProcess && wcsncmp(dest, L"\\\\?\\", 4) && wcslen(dest) >= MAX_PATH )
+    {
+        SetLastError( ERROR_PATH_NOT_FOUND );
+        return FALSE;
+    }
+
     if (!(buffer = HeapAlloc( GetProcessHeap(), 0, buffer_size )))
     {
         SetLastError( ERROR_NOT_ENOUGH_MEMORY );
-- 
GitLab

