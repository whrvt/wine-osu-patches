From 2fe6e3ad7be0c099914b48fcc10acba5b619ef8f Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Thu, 16 Jan 2025 11:23:00 -0600
Subject: [PATCH] crypt32: Factor out CRYPT_SerializeContextToReg().

---
 dlls/crypt32/regstore.c | 56 ++++++++++++++++++++++-------------------
 1 file changed, 30 insertions(+), 26 deletions(-)

diff --git a/dlls/crypt32/regstore.c b/dlls/crypt32/regstore.c
index 962bd6a0382..43ffa106c76 100644
--- a/dlls/crypt32/regstore.c
+++ b/dlls/crypt32/regstore.c
@@ -197,6 +197,35 @@ static BOOL CRYPT_WriteSerializedToReg(HKEY key, DWORD flags, const BYTE *hash,
     return ret;
 }
 
+static BOOL CRYPT_SerializeContextToReg(HKEY key, DWORD flags, const WINE_CONTEXT_INTERFACE *context_iface,
+ const void *context)
+{
+    BYTE hash[20];
+    DWORD hash_size = sizeof(hash);
+    DWORD size = 0;
+    BYTE *buf;
+    BOOL ret;
+
+    if (!context_iface->getProp(context, CERT_HASH_PROP_ID, hash,  &hash_size))
+        return FALSE;
+
+    context_iface->serialize(context, 0, NULL, &size);
+    if (!size)
+        return FALSE;
+
+    if (!(buf = CryptMemAlloc(size)))
+        return FALSE;
+
+    if (!(context_iface->serialize(context, 0, buf, &size)))
+    {
+        CryptMemFree(buf);
+        return FALSE;
+    }
+    ret = CRYPT_WriteSerializedToReg(key, flags, hash, buf, size);
+    CryptMemFree(buf);
+    return ret;
+}
+
 BOOL CRYPT_SerializeContextsToReg(HKEY key, DWORD flags,
  const WINE_CONTEXT_INTERFACE *contextInterface, HCERTSTORE memStore)
 {
@@ -205,32 +234,7 @@ BOOL CRYPT_SerializeContextsToReg(HKEY key, DWORD flags,
 
     do {
         context = contextInterface->enumContextsInStore(memStore, context);
-        if (context)
-        {
-            BYTE hash[20];
-            DWORD hashSize = sizeof(hash);
-
-            ret = contextInterface->getProp(context, CERT_HASH_PROP_ID, hash,
-             &hashSize);
-            if (ret)
-            {
-                DWORD size = 0;
-                LPBYTE buf = NULL;
-
-                ret = contextInterface->serialize(context, 0, NULL, &size);
-                if (size)
-                    buf = CryptMemAlloc(size);
-                if (buf)
-                {
-                    ret = contextInterface->serialize(context, 0, buf, &size);
-                    if (ret)
-                        ret = CRYPT_WriteSerializedToReg(key, flags, hash, buf, size);
-                }
-                CryptMemFree(buf);
-            }
-        }
-        else
-            ret = TRUE;
+        ret = !context || CRYPT_SerializeContextToReg(key, flags, contextInterface, context);
     } while (ret && context != NULL);
     if (context)
         Context_Release(context_from_ptr(context));
-- 
GitLab

