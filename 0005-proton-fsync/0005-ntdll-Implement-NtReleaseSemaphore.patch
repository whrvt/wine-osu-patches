From c0afb2dfba2d8c229d64b4e2f8983ee4ae9c5fd4 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <zfigura@codeweavers.com>
Date: Mon, 6 Jul 2020 19:21:55 -0500
Subject: [PATCH 0488/1533] ntdll: Implement NtReleaseSemaphore().

---
 dlls/ntdll/unix/fsync.c | 31 +++++++++++++++++++++++++++++++
 dlls/ntdll/unix/fsync.h |  1 +
 dlls/ntdll/unix/sync.c  |  3 +++
 server/esync.c          |  1 +
 4 files changed, 36 insertions(+)

diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index c1530300e18..5281d1cbce8 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -68,6 +68,11 @@ static inline int futex_wait_multiple( const struct futex_wait_block *futexes,
     return syscall( __NR_futex, futexes, 13, count, timeout, 0, 0 );
 }
 
+static inline int futex_wake( int *addr, int val )
+{
+    return syscall( __NR_futex, addr, 1, val, NULL, 0, 0 );
+}
+
 int do_fsync(void)
 {
 #ifdef __linux__
@@ -285,3 +290,29 @@ NTSTATUS fsync_create_semaphore( HANDLE *handle, ACCESS_MASK access,
 
     return create_fsync( FSYNC_SEMAPHORE, handle, access, attr, initial, max );
 }
+
+NTSTATUS fsync_release_semaphore( HANDLE handle, ULONG count, ULONG *prev )
+{
+    struct fsync *obj;
+    struct semaphore *semaphore;
+    ULONG current;
+
+    TRACE("%p, %d, %p.\n", handle, (int)count, prev);
+
+    if (!(obj = get_cached_object( handle ))) return STATUS_INVALID_HANDLE;
+    semaphore = obj->shm;
+
+    do
+    {
+        current = semaphore->count;
+        if (count + current > semaphore->max)
+            return STATUS_SEMAPHORE_LIMIT_EXCEEDED;
+    } while (__sync_val_compare_and_swap( &semaphore->count, current, count + current ) != current);
+
+    if (prev) *prev = current;
+
+    if (!current)
+        futex_wake( &semaphore->count, count );
+
+    return STATUS_SUCCESS;
+}
diff --git a/dlls/ntdll/unix/fsync.h b/dlls/ntdll/unix/fsync.h
index 273a4817dd0..0ec618385ed 100644
--- a/dlls/ntdll/unix/fsync.h
+++ b/dlls/ntdll/unix/fsync.h
@@ -23,3 +23,4 @@ extern void fsync_init(void);
 
 extern NTSTATUS fsync_create_semaphore(HANDLE *handle, ACCESS_MASK access,
     const OBJECT_ATTRIBUTES *attr, LONG initial, LONG max);
+extern NTSTATUS fsync_release_semaphore( HANDLE handle, ULONG count, ULONG *prev );
diff --git a/dlls/ntdll/unix/sync.c b/dlls/ntdll/unix/sync.c
index 08ee792d0ec..075c93b6bad 100644
--- a/dlls/ntdll/unix/sync.c
+++ b/dlls/ntdll/unix/sync.c
@@ -369,6 +369,9 @@ NTSTATUS WINAPI NtReleaseSemaphore( HANDLE handle, ULONG count, ULONG *previous
 {
     unsigned int ret;
 
+    if (do_fsync())
+        return fsync_release_semaphore( handle, count, previous );
+
     if (do_esync())
         return esync_release_semaphore( handle, count, previous );
 
diff --git a/server/esync.c b/server/esync.c
index e193f61b3a7..fc8120f9449 100644
--- a/server/esync.c
+++ b/server/esync.c
@@ -23,6 +23,7 @@
 
 #include <fcntl.h>
 #include <stdio.h>
+#include <stdint.h>
 #include <stdarg.h>
 #ifdef HAVE_SYS_EVENTFD_H
 # include <sys/eventfd.h>
-- 
2.45.0

