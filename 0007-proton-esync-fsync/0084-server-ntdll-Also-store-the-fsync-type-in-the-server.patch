From 19824958f0adfd570070d9add90056d6d7720d51 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Sun, 2 Sep 2018 11:48:26 -0500
Subject: [PATCH 0510/2346] server, ntdll: Also store the fsync type in the
 server.

---
 dlls/ntdll/unix/fsync.c |  2 ++
 server/fsync.c          | 26 +++++++++++++++++++++++---
 server/protocol.def     |  2 ++
 3 files changed, 27 insertions(+), 3 deletions(-)

diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index b5116e07920..e65abc525ed 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -290,12 +290,14 @@ static NTSTATUS create_fsync( enum fsync_type type, HANDLE *handle,
         req->access = access;
         req->low    = low;
         req->high   = high;
+        req->type   = type;
         wine_server_add_data( req, objattr, len );
         ret = wine_server_call( req );
         if (!ret || ret == STATUS_OBJECT_NAME_EXISTS)
         {
             *handle = wine_server_ptr_handle( reply->handle );
             shm_idx = reply->shm_idx;
+            type    = reply->type;
         }
     }
     SERVER_END_REQ;
diff --git a/server/fsync.c b/server/fsync.c
index 1d6a49fb517..d32d5f9c689 100644
--- a/server/fsync.c
+++ b/server/fsync.c
@@ -127,6 +127,7 @@ struct fsync
 {
     struct object  obj;
     unsigned int   shm_idx;
+    enum fsync_type type;
 };
 
 static void fsync_dump( struct object *obj, int verbose );
@@ -237,9 +238,16 @@ unsigned int fsync_alloc_shm( int low, int high )
 #endif
 }
 
+static int type_matches( enum fsync_type type1, enum fsync_type type2 )
+{
+    return (type1 == type2) ||
+           ((type1 == FSYNC_AUTO_EVENT || type1 == FSYNC_MANUAL_EVENT) &&
+            (type2 == FSYNC_AUTO_EVENT || type2 == FSYNC_MANUAL_EVENT));
+}
+
 struct fsync *create_fsync( struct object *root, const struct unicode_str *name,
-                            unsigned int attr, int low, int high,
-                            const struct security_descriptor *sd )
+    unsigned int attr, int low, int high, enum fsync_type type,
+    const struct security_descriptor *sd )
 {
 #ifdef __linux__
     struct fsync *fsync;
@@ -256,6 +264,17 @@ struct fsync *create_fsync( struct object *root, const struct unicode_str *name,
              * and the time its shared memory portion is initialized. */
 
             fsync->shm_idx = fsync_alloc_shm( low, high );
+            fsync->type = type;
+        }
+        else
+        {
+            /* validate the type */
+            if (!type_matches( type, fsync->type ))
+            {
+                release_object( &fsync->obj );
+                set_error( STATUS_OBJECT_TYPE_MISMATCH );
+                return NULL;
+            }
         }
     }
 
@@ -339,7 +358,7 @@ DECL_HANDLER(create_fsync)
     if (!objattr) return;
 
     if ((fsync = create_fsync( root, &name, objattr->attributes, req->low,
-                               req->high, sd )))
+                               req->high, req->type, sd )))
     {
         if (get_error() == STATUS_OBJECT_NAME_EXISTS)
             reply->handle = alloc_handle( current->process, fsync, req->access, objattr->attributes );
@@ -348,6 +367,7 @@ DECL_HANDLER(create_fsync)
                                                           req->access, objattr->attributes );
 
         reply->shm_idx = fsync->shm_idx;
+        reply->type = fsync->type;
         release_object( fsync );
     }
 
diff --git a/server/protocol.def b/server/protocol.def
index d0f9c715a54..2b9f3bd1333 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -4007,9 +4007,11 @@ enum fsync_type
     unsigned int access;        /* wanted access rights */
     int low;                    /* initial value of low word */
     int high;                   /* initial value of high word */
+    int type;                   /* type of fsync object */
     VARARG(objattr,object_attributes); /* object attributes */
 @REPLY
     obj_handle_t handle;        /* handle to the object */
+    int type;                   /* type of fsync object */
     unsigned int shm_idx;       /* this object's index into the shm section */
 @END
 
-- 
2.47.0

