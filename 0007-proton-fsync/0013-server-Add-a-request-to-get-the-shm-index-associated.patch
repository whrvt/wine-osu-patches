From 8bd11328793276f74980fd03003fc1300c86c613 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Sat, 1 Sep 2018 16:57:08 -0500
Subject: [PATCH 0496/1533] server: Add a request to get the shm index
 associated with a waitable handle.

---
 dlls/ntdll/unix/fsync.c |  7 -------
 server/fsync.c          | 28 ++++++++++++++++++++++++++++
 server/object.h         |  2 +-
 server/protocol.def     | 16 ++++++++++++++++
 4 files changed, 45 insertions(+), 8 deletions(-)

diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index e7a495be365..2f680212fc0 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -95,13 +95,6 @@ int do_fsync(void)
 #endif
 }
 
-enum fsync_type
-{
-    FSYNC_SEMAPHORE = 1,
-    FSYNC_AUTO_EVENT,
-    FSYNC_MANUAL_EVENT,
-};
-
 struct fsync
 {
     enum fsync_type type;
diff --git a/server/fsync.c b/server/fsync.c
index 55a8e709dbf..21f41f54ca1 100644
--- a/server/fsync.c
+++ b/server/fsync.c
@@ -285,3 +285,31 @@ DECL_HANDLER(create_fsync)
 
     if (root) release_object( root );
 }
+
+
+/* Retrieve the index of a shm section which will be signaled by the server. */
+DECL_HANDLER(get_fsync_idx)
+{
+    struct object *obj;
+    enum fsync_type type;
+
+    if (!(obj = get_handle_obj( current->process, req->handle, SYNCHRONIZE, NULL )))
+        return;
+
+    if (obj->ops->get_fsync_idx)
+    {
+        reply->shm_idx = obj->ops->get_fsync_idx( obj, &type );
+        reply->type = type;
+    }
+    else
+    {
+        if (debug_level)
+        {
+            fprintf( stderr, "%04x: fsync: can't wait on object: ", current->id );
+            obj->ops->dump( obj, 0 );
+        }
+        set_error( STATUS_NOT_IMPLEMENTED );
+    }
+
+    release_object( obj );
+}
diff --git a/server/object.h b/server/object.h
index 632b20a548c..c482b8ceeef 100644
--- a/server/object.h
+++ b/server/object.h
@@ -81,7 +81,7 @@ struct object_ops
     /* return the esync fd for this object */
     int (*get_esync_fd)(struct object *, enum esync_type *type);
     /* return the fsync shm idx for this object */
-    unsigned int (*get_fsync_idx)(struct object *);
+    unsigned int (*get_fsync_idx)(struct object *, enum fsync_type *type);
     /* wait satisfied */
     void (*satisfied)(struct object *,struct wait_queue_entry *);
     /* signal an object */
diff --git a/server/protocol.def b/server/protocol.def
index 2243d97dcfe..d32ae3a27a3 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -3992,6 +3992,14 @@ enum esync_type
 @REQ(get_esync_apc_fd)
 @END
 
+enum fsync_type
+{
+    FSYNC_SEMAPHORE = 1,
+    FSYNC_AUTO_EVENT,
+    FSYNC_MANUAL_EVENT,
+    FSYNC_MANUAL_SERVER,
+};
+
 /* Create a new futex-based synchronization object */
 @REQ(create_fsync)
     unsigned int access;        /* wanted access rights */
@@ -4002,3 +4010,11 @@ enum esync_type
     obj_handle_t handle;        /* handle to the object */
     unsigned int shm_idx;       /* this object's index into the shm section */
 @END
+
+/* Retrieve the shm index for an object. */
+@REQ(get_fsync_idx)
+    obj_handle_t handle;        /* handle to the object */
+@REPLY
+    int          type;
+    unsigned int shm_idx;
+@END
-- 
2.45.0

