From 80839a14ece945a6e5f69407a18333389a379e60 Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Sun, 3 Mar 2019 11:02:28 -0600
Subject: [PATCH 0518/1533] server: Create futex sections for timer objects.

---
 dlls/ntdll/unix/fsync.c |  3 +++
 server/protocol.def     |  1 +
 server/timer.c          | 18 +++++++++++++++++-
 3 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index 690898f7eac..f2ae70ee1ab 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -734,6 +734,7 @@ static NTSTATUS __fsync_wait_objects( DWORD count, const HANDLE *handles,
                         break;
                     }
                     case FSYNC_AUTO_EVENT:
+                    case FSYNC_AUTO_SERVER:
                     {
                         struct event *event = obj->shm;
 
@@ -938,6 +939,7 @@ tryagain:
                     break;
                 }
                 case FSYNC_AUTO_EVENT:
+                case FSYNC_AUTO_SERVER:
                 {
                     struct event *event = obj->shm;
                     if (!__sync_val_compare_and_swap( &event->signaled, 1, 0 ))
@@ -984,6 +986,7 @@ tooslow:
                     break;
                 }
                 case FSYNC_AUTO_EVENT:
+                case FSYNC_AUTO_SERVER:
                 {
                     struct event *event = obj->shm;
                     __atomic_store_n( &event->signaled, 1, __ATOMIC_SEQ_CST );
diff --git a/server/protocol.def b/server/protocol.def
index 916d0b2e2d4..2d91baf245a 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -3998,6 +3998,7 @@ enum fsync_type
     FSYNC_AUTO_EVENT,
     FSYNC_MANUAL_EVENT,
     FSYNC_MUTEX,
+    FSYNC_AUTO_SERVER,
     FSYNC_MANUAL_SERVER,
     FSYNC_QUEUE,
 };
diff --git a/server/timer.c b/server/timer.c
index 9ec9604aa0e..afc12ff03ad 100644
--- a/server/timer.c
+++ b/server/timer.c
@@ -36,6 +36,7 @@
 #include "handle.h"
 #include "request.h"
 #include "esync.h"
+#include "fsync.h"
 
 static const WCHAR timer_name[] = {'T','i','m','e','r'};
 
@@ -63,11 +64,13 @@ struct timer
     client_ptr_t         callback;  /* callback APC function */
     client_ptr_t         arg;       /* callback argument */
     int                  esync_fd;  /* esync file descriptor */
+    unsigned int         fsync_idx; /* fsync shm index */
 };
 
 static void timer_dump( struct object *obj, int verbose );
 static int timer_signaled( struct object *obj, struct wait_queue_entry *entry );
 static int timer_get_esync_fd( struct object *obj, enum esync_type *type );
+static unsigned int timer_get_fsync_idx( struct object *obj, enum fsync_type *type );
 static void timer_satisfied( struct object *obj, struct wait_queue_entry *entry );
 static void timer_destroy( struct object *obj );
 
@@ -80,7 +83,7 @@ static const struct object_ops timer_ops =
     remove_queue,              /* remove_queue */
     timer_signaled,            /* signaled */
     timer_get_esync_fd,        /* get_esync_fd */
-    NULL,                      /* get_fsync_idx */
+    timer_get_fsync_idx,       /* get_fsync_idx */
     timer_satisfied,           /* satisfied */
     no_signal,                 /* signal */
     no_get_fd,                 /* get_fd */
@@ -117,6 +120,9 @@ static struct timer *create_timer( struct object *root, const struct unicode_str
             timer->thread   = NULL;
             timer->esync_fd = -1;
 
+            if (do_fsync())
+                timer->fsync_idx = fsync_alloc_shm( 0, 0 );
+
             if (do_esync())
                 timer->esync_fd = esync_create_fd( 0, 0 );
         }
@@ -191,6 +197,9 @@ static int set_timer( struct timer *timer, timeout_t expire, unsigned int period
         period = 0;  /* period doesn't make any sense for a manual timer */
         timer->signaled = 0;
 
+        if (do_fsync())
+            fsync_clear( &timer->obj );
+
         if (do_esync())
             esync_clear( timer->esync_fd );
     }
@@ -227,6 +236,13 @@ static int timer_get_esync_fd( struct object *obj, enum esync_type *type )
     return timer->esync_fd;
 }
 
+static unsigned int timer_get_fsync_idx( struct object *obj, enum fsync_type *type )
+{
+    struct timer *timer = (struct timer *)obj;
+    *type = timer->manual ? FSYNC_MANUAL_SERVER : FSYNC_AUTO_SERVER;
+    return timer->fsync_idx;
+}
+
 static void timer_satisfied( struct object *obj, struct wait_queue_entry *entry )
 {
     struct timer *timer = (struct timer *)obj;
-- 
2.45.0

