From d4710b8803f37df06ede73da5b42daa1d72600de Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Thu, 1 Apr 2021 20:19:35 +0300
Subject: [PATCH 0547/1533] esync, fsync: Yield execution before alertable wait
 for AC Odyssey.

CW-Bug-ID: #18881
---
 dlls/ntdll/unix/esync.c        | 11 +++++++++++
 dlls/ntdll/unix/fsync.c        |  9 +++++++++
 dlls/ntdll/unix/loader.c       |  8 ++++++++
 dlls/ntdll/unix/unix_private.h |  2 ++
 4 files changed, 30 insertions(+)

diff --git a/dlls/ntdll/unix/esync.c b/dlls/ntdll/unix/esync.c
index 159d25349dc..12d7f7e4938 100644
--- a/dlls/ntdll/unix/esync.c
+++ b/dlls/ntdll/unix/esync.c
@@ -947,6 +947,8 @@ static NTSTATUS __esync_wait_objects( DWORD count, const HANDLE *handles, BOOLEA
 
                     if (event->signaled)
                     {
+                        if (ac_odyssey && alertable)
+                            usleep( 0 );
                         if ((size = read( obj->fd, &value, sizeof(value) )) == sizeof(value))
                         {
                             TRACE("Woken up by handle %p [%d].\n", handles[i], i);
@@ -962,6 +964,12 @@ static NTSTATUS __esync_wait_objects( DWORD count, const HANDLE *handles, BOOLEA
 
                     if (event->signaled)
                     {
+                        if (ac_odyssey && alertable)
+                        {
+                            usleep( 0 );
+                            if (!event->signaled)
+                                break;
+                        }
                         TRACE("Woken up by handle %p [%d].\n", handles[i], i);
                         return i;
                     }
@@ -990,6 +998,9 @@ static NTSTATUS __esync_wait_objects( DWORD count, const HANDLE *handles, BOOLEA
 
         while (1)
         {
+            if (ac_odyssey && alertable)
+                usleep( 0 );
+
             ret = do_poll( fds, pollcount, timeout ? &end : NULL );
             if (ret > 0)
             {
diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index 66e2b6a6841..65fc9d2ac81 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -916,6 +916,9 @@ static NTSTATUS __fsync_wait_objects( DWORD count, const HANDLE *handles,
                         {
                             if (__sync_val_compare_and_swap( &event->signaled, 1, 0 ))
                             {
+                                if (ac_odyssey && alertable)
+                                    usleep( 0 );
+
                                 TRACE("Woken up by handle %p [%d].\n", handles[i], i);
                                 return i;
                             }
@@ -935,6 +938,9 @@ static NTSTATUS __fsync_wait_objects( DWORD count, const HANDLE *handles,
                         {
                             if (__atomic_load_n( &event->signaled, __ATOMIC_SEQ_CST ))
                             {
+                                if (ac_odyssey && alertable)
+                                    usleep( 0 );
+
                                 TRACE("Woken up by handle %p [%d].\n", handles[i], i);
                                 return i;
                             }
@@ -965,6 +971,9 @@ static NTSTATUS __fsync_wait_objects( DWORD count, const HANDLE *handles,
 
             /* Looks like everything is contended, so wait. */
 
+            if (ac_odyssey && alertable)
+                usleep( 0 );
+
             if (timeout && !timeout->QuadPart)
             {
                 /* Unlike esync, we already know that we've timed out, so we
diff --git a/dlls/ntdll/unix/loader.c b/dlls/ntdll/unix/loader.c
index 0712ddd3fdf..f9ec5504310 100644
--- a/dlls/ntdll/unix/loader.c
+++ b/dlls/ntdll/unix/loader.c
@@ -1920,10 +1920,18 @@ static ULONG_PTR get_image_address(void)
     return 0;
 }
 
+BOOL ac_odyssey;
+
 static void hacks_init(void)
 {
     const char *sgi = getenv( "SteamGameId" );
 
+    if (main_argc > 1 && strstr(main_argv[1], "ACOdyssey.exe"))
+    {
+        ERR("HACK: AC Odyssey sync tweak on.\n");
+        ac_odyssey = TRUE;
+    }
+
     switch (sgi ? atoi( sgi ) : -1)
     {
     case 25700: /* Madballs in Babo: Invasion */
diff --git a/dlls/ntdll/unix/unix_private.h b/dlls/ntdll/unix/unix_private.h
index 02b77ad220c..61d94a16edc 100644
--- a/dlls/ntdll/unix/unix_private.h
+++ b/dlls/ntdll/unix/unix_private.h
@@ -178,6 +178,8 @@ extern SYSTEM_CPU_INFORMATION cpu_info;
 extern struct ldt_copy __wine_ldt_copy;
 #endif
 
+extern BOOL ac_odyssey;
+
 extern void init_environment(void);
 extern void init_startup_info(void);
 extern void *create_startup_info( const UNICODE_STRING *nt_image, ULONG process_flags,
-- 
2.45.0

