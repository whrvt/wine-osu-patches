From 1f907e33609c14ecac945292b9f761d28bebba68 Mon Sep 17 00:00:00 2001
From: Paul Gofman <pgofman@codeweavers.com>
Date: Thu, 27 Apr 2023 16:53:17 -0600
Subject: [PATCH 0576/1533] fsync: Cache current process ID.

CW-Bug-Id: #22194
---
 dlls/ntdll/unix/fsync.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/dlls/ntdll/unix/fsync.c b/dlls/ntdll/unix/fsync.c
index 4dade5eb27f..c5d38754ea6 100644
--- a/dlls/ntdll/unix/fsync.c
+++ b/dlls/ntdll/unix/fsync.c
@@ -59,6 +59,8 @@ WINE_DEFAULT_DEBUG_CHANNEL(fsync);
 #include "pshpack4.h"
 #include "poppack.h"
 
+static int current_pid;
+
 /* futex_waitv interface */
 
 #ifndef __NR_futex_waitv
@@ -348,7 +350,7 @@ static void put_object_from_wait( struct fsync *obj )
 {
     int *shm = obj->shm;
 
-    __sync_val_compare_and_swap( &shm[3], GetCurrentProcessId(), 0 );
+    __sync_val_compare_and_swap( &shm[3], current_pid, 0 );
     put_object( obj );
 }
 
@@ -434,7 +436,7 @@ static NTSTATUS get_object_for_wait( HANDLE handle, struct fsync *obj )
     shm = obj->shm;
     /* Give wineserver a chance to cleanup shm index if the process
      * is killed while we are waiting on the object. */
-    __atomic_store_n( &shm[3], GetCurrentProcessId(), __ATOMIC_SEQ_CST );
+    __atomic_store_n( &shm[3], current_pid, __ATOMIC_SEQ_CST );
     return STATUS_SUCCESS;
 }
 
@@ -564,6 +566,9 @@ void fsync_init(void)
             ERR("Failed to initialize shared memory: %s\n", strerror( errno ));
         exit(1);
     }
+
+    current_pid = GetCurrentProcessId();
+    assert(current_pid);
 }
 
 NTSTATUS fsync_create_semaphore( HANDLE *handle, ACCESS_MASK access,
-- 
2.45.0

