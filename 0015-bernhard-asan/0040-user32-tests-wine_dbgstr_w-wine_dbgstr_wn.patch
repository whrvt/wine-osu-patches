From 6ea1de51588c748ea4f519fb6d7d0079a013acc8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20=C3=9Cbelacker?= <bernhardu@mailbox.org>
Date: Tue, 10 Dec 2024 01:20:02 +0100
Subject: [PATCH 40/86] user32/tests: wine_dbgstr_w - wine_dbgstr_wn

=================================================================
==460==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffffe1fca30 at pc 0x00014040e081 bp 0x7ffffe1fc6a0 sp 0x7ffffe1fc6e8
READ of size 2 at 0x7ffffe1fca30 thread T0
0724:fixme:file:server_get_file_info Unsupported info class e
    #0 0x00014040e080 in wine_dbgstr_wn /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/debug.h:263:30
    #1 0x0001403f4a7a in wine_dbgstr_w /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/debug.h:306:12
    #2 0x0001403f4a7a in test_gettext /home/bernhard/data/entwicklung/2024/wine\wine/dlls/user32/tests/win.c:8480:82
    #3 0x000140367d54 in func_win /home/bernhard/data/entwicklung/2024/wine\wine/dlls/user32/tests/win.c:13507:5
    #4 0x00014044f7b1 in run_test /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/test.h:765:5
    #5 0x00014044f7b1 in main /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/test.h:884:12
    #6 0x00014045172f in mainCRTStartup /home/bernhard/data/entwicklung/2024/wine\wine/dlls/msvcrt/crt_main.c:58:11
    #7 0x6ffffc1c4808 in BaseThreadInitThunk /home/bernhard/data/entwicklung/2024/wine/wine/dlls/kernel32\thread.c:61:5
    #8 0x6ffffc39fa1a in RtlUserThreadStart (C:\windows\system32\ntdll.dll+0x17000fa1a)

Address 0x7ffffe1fca30 is located in stack of thread T0 at offset 112 in frame
    #0 0x0001403f1c1f in test_gettext /home/bernhard/data/entwicklung/2024/wine\wine/dlls/user32/tests/win.c:8288

  This frame has 5 object(s):
    [32, 36) 'tid' (line 8290)
    [48, 112) 'bufW' (line 8291) <== Memory access at offset 112 overflows this variable
    [144, 152) 'thread' (line 8292)
    [176, 208) 'buf' (line 8294)
    [240, 288) 'msg' (line 8298)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp, SEH and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/debug.h:263:30 in wine_dbgstr_wn
Shadow bytes around the buggy address:
  0x7ffffe1fc780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffffe1fc800: 00 00 00 00 00 00 00 00 00 00 00 00 00 04 f3 f3
  0x7ffffe1fc880: f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x7ffffe1fc900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffffe1fc980: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 00 00
=>0x7ffffe1fca00: 00 00 00 00 00 00[f2]f2 f2 f2 00 f2 f2 f2 00 00
  0x7ffffe1fca80: 00 00 f2 f2 f2 f2 00 00 00 00 00 00 f3 f3 f3 f3
  0x7ffffe1fcb00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffffe1fcb80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffffe1fcc00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffffe1fcc80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==460==ABORTING
0724:fixme:kernelbase:AppPolicyGetProcessTerminationMethod FFFFFFFFFFFFFFFA, 00007FFFFEA8FE80
make: *** [Makefile:388405: dlls/user32/tests/x86_64-windows/win.ok] Fehler 1
---
 dlls/user32/tests/win.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/dlls/user32/tests/win.c b/dlls/user32/tests/win.c
index 160d85f2190..f5be29fc628 100644
--- a/dlls/user32/tests/win.c
+++ b/dlls/user32/tests/win.c
@@ -8345,7 +8345,7 @@ static void test_gettext(void)
     bufW[0] = 0xcc;
     buf_len = InternalGetWindowText( hwnd, bufW, ARRAYSIZE(bufW) );
     ok( buf_len == ARRAYSIZE("caption") - 1, "expected a nonempty window text\n" );
-    ok( !lstrcmpW( bufW, L"caption" ), "got %s\n", debugstr_w(bufW) );
+    ok( !lstrcmpW( bufW, L"caption" ), "got %s\n", wine_dbgstr_wn(bufW, ARRAY_SIZE(bufW)) );
 
     g_wm_gettext_override.enabled = FALSE;
 
@@ -8458,7 +8458,7 @@ static void test_gettext(void)
     g_wm_gettext_override.dont_terminate = TRUE;
     buf_len = GetWindowTextW( hwnd, bufW, ARRAY_SIZE(bufW));
     ok( buf_len == 4, "Unexpected text length, %d\n", buf_len );
-    ok( !memcmp(bufW, textW, 4 * sizeof(WCHAR)), "Unexpected window text, %s\n", wine_dbgstr_w(bufW) );
+    ok( !memcmp(bufW, textW, 4 * sizeof(WCHAR)), "Unexpected window text, %s\n", wine_dbgstr_wn(bufW, ARRAY_SIZE(bufW)) );
     ok( bufW[4] == 0, "Unexpected buffer contents, %#x\n", bufW[4] );
     g_wm_gettext_override.dont_terminate = FALSE;
 
@@ -8477,7 +8477,7 @@ static void test_gettext(void)
     g_wm_gettext_override.dont_terminate = TRUE;
     buf_len = GetWindowTextW( hwnd2, bufW, ARRAY_SIZE(bufW));
     ok( buf_len == 4, "Unexpected text length, %d\n", buf_len );
-    ok( !memcmp(bufW, textW, 4 * sizeof(WCHAR)), "Unexpected window text, %s\n", wine_dbgstr_w(bufW) );
+    ok( !memcmp(bufW, textW, 4 * sizeof(WCHAR)), "Unexpected window text, %s\n", wine_dbgstr_wn(bufW, ARRAY_SIZE(bufW)) );
     ok( bufW[4] == 0x1c1c, "Unexpected buffer contents, %#x\n", bufW[4] );
     g_wm_gettext_override.dont_terminate = FALSE;
 
-- 
2.47.1

