From c48f827648f6d59502290bba2835aa0c676345c6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20=C3=9Cbelacker?= <bernhardu@mailbox.org>
Date: Mon, 9 Dec 2024 23:04:49 +0100
Subject: [PATCH 39/86] setupapi/tests: debugstr_a - debugstr_an

=================================================================
==504==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffffe1fc974 at pc 0x00014005ac1d bp 0x7ffffe1fbe40 sp 0x7ffffe1fbe88
READ of size 1 at 0x7ffffe1fc974 thread T0
01e4:fixme:file:server_get_file_info Unsupported info class e
    #0 0x00014005ac1c in wine_dbgstr_an /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/debug.h:219:30
    #1 0x00014005ac1c in debugstr_a /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/debug.h:521:65
    #2 0x000140054cef in test_driver_store /home/bernhard/data/entwicklung/2024/wine\wine/dlls/setupapi/tests/devinst.c:4510:44
    #3 0x0001400224ad in func_devinst /home/bernhard/data/entwicklung/2024/wine\wine/dlls/setupapi/tests/devinst.c:4709:5
    #4 0x0001400c710c in run_test /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/test.h:765:5
    #5 0x0001400c710c in main /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/test.h:884:12
    #6 0x0001400c903f in mainCRTStartup /home/bernhard/data/entwicklung/2024/wine\wine/dlls/msvcrt/crt_main.c:58:11
    #7 0x6ffff80e4808 in BaseThreadInitThunk /home/bernhard/data/entwicklung/2024/wine/wine/dlls/kernel32\thread.c:61:5
    #8 0x6ffff82bfa1a in RtlUserThreadStart (C:\windows\system32\ntdll.dll+0x17000fa1a)

Address 0x7ffffe1fc974 is located in stack of thread T0 at offset 2004 in frame
    #0 0x00014005279f in test_driver_store /home/bernhard/data/entwicklung/2024/wine\wine/dlls/setupapi/tests/devinst.c:4335

  This frame has 13 object(s):
    [32, 292) 'path.i.i' (line 570)
    [368, 628) 'filename.i.i' (line 570)
    [704, 1508) 'cab_params.i' (line 583)
    [1648, 1660) 'erf.i' (line 585)
    [1680, 1712) 'device' (line 4337)
    [1744, 2004) 'dest' (line 4338) <== Memory access at offset 2004 overflows this variable
    [2080, 2340) 'orig_dest' (line 4338)
    [2416, 2676) 'inf_path' (line 4338)
    [2752, 3552) 'driver' (line 4339)
    [3680, 3940) 'orig_cwd' (line 4340)
    [4016, 4276) 'driver_path' (line 4341)
    [4352, 4400) 'system_info' (line 4342)
    [4432, 4436) 'size' (line 4345)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp, SEH and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/debug.h:219:30 in wine_dbgstr_an
Shadow bytes around the buggy address:
  0x7ffffe1fc680: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
  0x7ffffe1fc700: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
  0x7ffffe1fc780: f8 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2
  0x7ffffe1fc800: f2 f2 f8 f8 f2 f2 00 00 00 00 f2 f2 f2 f2 00 00
  0x7ffffe1fc880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7ffffe1fc900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00[04]f2
  0x7ffffe1fc980: f2 f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00
  0x7ffffe1fca00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffffe1fca80: 00 00 00 00 00 00 00 00 04 f2 f2 f2 f2 f2 f2 f2
  0x7ffffe1fcb00: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffffe1fcb80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==504==ABORTING
01e4:fixme:kernelbase:AppPolicyGetProcessTerminationMethod FFFFFFFFFFFFFFFA, 00007FFFFEA8FE80
make: *** [Makefile:352637: dlls/setupapi/tests/x86_64-windows/devinst.ok] Fehler 1
---
 dlls/setupapi/tests/devinst.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/dlls/setupapi/tests/devinst.c b/dlls/setupapi/tests/devinst.c
index c5c0114b2b7..3b900eeed31 100644
--- a/dlls/setupapi/tests/devinst.c
+++ b/dlls/setupapi/tests/devinst.c
@@ -4464,7 +4464,7 @@ static void test_driver_store(struct testsign_context *ctx)
     memset(dest, 0xcc, sizeof(dest));
     ret = pDriverStoreFindDriverPackageA("winetest.inf", 0, 0, system_info.wProcessorArchitecture, 0, dest, &size);
     ok(ret == HRESULT_FROM_WIN32(ERROR_NOT_FOUND), "Got %#x.\n", ret);
-    ok(!dest[0], "Got %s.\n", debugstr_a(dest));
+    ok(!dest[0], "Got %s.\n", debugstr_an(dest, ARRAY_SIZE(dest)));
     todo_wine ok(!size, "Got size %lu.\n", size);
 
     /* Windows 7 allows relative paths. Windows 8+ do not.
@@ -4479,8 +4479,8 @@ static void test_driver_store(struct testsign_context *ctx)
     ok(!ret, "Got %#x.\n", ret);
     ok(size > ARRAY_SIZE(repository_dir), "Got size %lu.\n", size);
     ok(size == strlen(dest) + 1, "Expected size %Iu, got %lu.\n", strlen(dest) + 1, size);
-    ok(!memicmp(dest, repository_dir, strlen(repository_dir)), "Got path %s.\n", debugstr_a(dest));
-    ok(!strcmp(dest + strlen(dest) - 13, "\\winetest.inf"), "Got path %s.\n", debugstr_a(dest));
+    ok(!memicmp(dest, repository_dir, strlen(repository_dir)), "Got path %s.\n", debugstr_an(dest, ARRAY_SIZE(dest)));
+    ok(!strcmp(dest + strlen(dest) - 13, "\\winetest.inf"), "Got path %s.\n", debugstr_an(dest, ARRAY_SIZE(dest)));
 
     strcpy(orig_dest, dest);
 
@@ -4489,14 +4489,14 @@ static void test_driver_store(struct testsign_context *ctx)
     memset(dest, 0xcc, sizeof(dest));
     ret = pDriverStoreAddDriverPackageA(inf_path, 0, 0, system_info.wProcessorArchitecture, dest, &size);
     ok(!ret, "Got %#x.\n", ret);
-    ok(!strcmp(dest, orig_dest), "Expected %s, got %s.\n", debugstr_a(orig_dest), debugstr_a(dest));
+    ok(!strcmp(dest, orig_dest), "Expected %s, got %s.\n", debugstr_a(orig_dest), debugstr_an(dest, ARRAY_SIZE(dest)));
     ok(size == strlen(dest) + 1, "Expected size %Iu, got %lu.\n", strlen(dest) + 1, size);
 
     size = ARRAY_SIZE(dest);
     memset(dest, 0xcc, sizeof(dest));
     ret = pDriverStoreFindDriverPackageA("winetest.inf", 0, 0, system_info.wProcessorArchitecture, 0, dest, &size);
     ok(!ret, "Got %#x.\n", ret);
-    ok(!strcmp(dest, orig_dest), "Expected %s, got %s.\n", debugstr_a(orig_dest), debugstr_a(dest));
+    ok(!strcmp(dest, orig_dest), "Expected %s, got %s.\n", debugstr_a(orig_dest), debugstr_an(dest, ARRAY_SIZE(dest)));
     ok(size == strlen(dest) + 1, "Expected size %Iu, got %lu.\n", strlen(dest) + 1, size);
 
     /* Test the length parameter.
@@ -4507,7 +4507,7 @@ static void test_driver_store(struct testsign_context *ctx)
     memset(dest, 0xcc, sizeof(dest));
     ret = pDriverStoreFindDriverPackageA("winetest.inf", 0, 0, system_info.wProcessorArchitecture, 0, dest, &size);
     ok(ret == E_INVALIDARG, "Got %#x.\n", ret);
-    ok(dest[0] == (char)0xcc, "Got %s.\n", debugstr_a(dest));
+    ok(dest[0] == (char)0xcc, "Got %s.\n", debugstr_an(dest, ARRAY_SIZE(dest)));
     ok(size == MAX_PATH - 1, "Expected size %Iu, got %lu.\n", strlen(orig_dest) + 1, size);
 
     size = 0;
@@ -4582,7 +4582,7 @@ static void test_driver_store(struct testsign_context *ctx)
     ok(!ret || ret == HRESULT_FROM_WIN32(ERROR_NOT_FOUND) /* Win < 8 */, "Got %#x.\n", ret);
     if (!ret)
     {
-        ok(!strcmp(dest, orig_dest), "Expected %s, got %s.\n", debugstr_a(orig_dest), debugstr_a(dest));
+        ok(!strcmp(dest, orig_dest), "Expected %s, got %s.\n", debugstr_a(orig_dest), debugstr_an(dest, ARRAY_SIZE(dest)));
         ok(size == strlen(dest) + 1, "Expected size %Iu, got %lu.\n", strlen(dest) + 1, size);
     }
 
@@ -4594,7 +4594,7 @@ static void test_driver_store(struct testsign_context *ctx)
     memset(dest, 0xcc, sizeof(dest));
     ret = pDriverStoreFindDriverPackageA("not_winetest.inf", 0, 0, system_info.wProcessorArchitecture, 0, dest, &size);
     ok(ret == HRESULT_FROM_WIN32(ERROR_NOT_FOUND), "Got %#x.\n", ret);
-    ok(!dest[0], "Got %s.\n", debugstr_a(dest));
+    ok(!dest[0], "Got %s.\n", debugstr_an(dest, ARRAY_SIZE(dest)));
     todo_wine ok(!size, "Got size %lu.\n", size);
 
     ret = SetupDiCallClassInstaller(DIF_INSTALLDEVICEFILES, set, &device);
-- 
2.47.1

