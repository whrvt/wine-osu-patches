From 268c86c3be6b7020973c4944649d8ef35bdebb33 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20=C3=9Cbelacker?= <bernhardu@mailbox.org>
Date: Wed, 4 Dec 2024 22:26:51 +0100
Subject: [PATCH 64/86] gdi32: Do not rely on termination in logfont
 conversations.

gdi32_test font (ASan)

bernhard@rechner:~/wine_asan_2024-11-07/drive_c/x86_64$ ASAN_OPTIONS='verbosity=0:windows_hook_rtl_allocators=1' WINEDLLOVERRIDES="$F=n;*.dll=n" WINEDEBUG= wine64 z:/home/bernhard/data/entwicklung/2024/wine/wine-build/build-asan-pe/64/obj/dlls/gdi32/tests/x86_64-windows/gdi32_test.exe font
=================================================================
==1512==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffffe1ff8ec at pc 0x6ffffa6106e9 bp 0x7ffffe1f9a70 sp 0x7ffffe1f9ab8
READ of size 33 at 0x7ffffe1ff8ec thread T0
05fc:fixme:file:server_get_file_info Unsupported info class e
    #0 0x6ffffa6106e8 in strlen /home/bernhard/data/entwicklung/2024/llvm-mingw/2024-10-18/llvm-mingw/llvm-project/compiler-rt\lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:425:5
    #1 0x6fffff439388 in MultiByteToWideChar /home/bernhard/data/entwicklung/2024/wine/wine/dlls/kernelbase\locale.c:7023:30
    #2 0x6ffffe0e28fa in logfont_AtoW /home/bernhard/data/entwicklung/2024/wine/wine/dlls/gdi32\text.c:784:5
    #3 0x6ffffe0e28fa in CreateFontIndirectA /home/bernhard/data/entwicklung/2024/wine/wine/dlls/gdi32\text.c:868:5
    #4 0x0001400c25be in test_logfont /home/bernhard/data/entwicklung/2024/wine\wine/dlls/gdi32/tests/font.c:220:13
    #5 0x0001400c25be in func_font /home/bernhard/data/entwicklung/2024/wine\wine/dlls/gdi32/tests/font.c:7862:5
    #6 0x0001401bcac1 in run_test /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/test.h:765:5
    #7 0x0001401bcac1 in main /home/bernhard/data/entwicklung/2024/wine\wine/include/wine/test.h:884:12
    #8 0x0001401be9cf in mainCRTStartup /home/bernhard/data/entwicklung/2024/wine\wine/dlls/msvcrt/crt_main.c:58:11
    #9 0x6fffffa54808 in BaseThreadInitThunk /home/bernhard/data/entwicklung/2024/wine/wine/dlls/kernel32\thread.c:61:5
    #10 0x6fffffc2fa1a in RtlUserThreadStart (C:\windows\system32\ntdll.dll+0x17000fa1a)

Address 0x7ffffe1ff8ec is located in stack of thread T0 at offset 21228 in frame
    #0 0x0001400c083f in func_font /home/bernhard/data/entwicklung/2024/wine\wine/dlls/gdi32/tests/font.c:7841

  This frame has 215 object(s):
    [32, 92) 'lf.i.i4718' (line 6164)
    [128, 148) 'rgm.i.i' (line 6168)
    [192, 212) 'vgm.i.i' (line 6168)
    [256, 260) 'code.i.i' (line 6169)
    [272, 274) 'idx.i.i' (line 6170)
    [288, 300) 'abc.i.i' (line 6171)
    [320, 332) 'vabc.i.i' (line 6171)
    [352, 584) 'otm.i.i' (line 6172)
    [656, 658) 'numOfLongVerMetrics.i.i' (line 6173)
    [672, 674) 'topSideBearing.i.i' (line 6217)
    [688, 948) 'ttf_name.i4719' (line 6252)
    [1024, 1044) 'gm.i4720' (line 6255)
    [1088, 1090) 'hgi.i' (line 6256)
    [1104, 1106) 'vgi.i' (line 6256)
    [1120, 1380) 'ttf_name.i4641' (line 7788)
    [1456, 1516) 'tm1.i4642' (line 7789)
    [1552, 1612) 'tm2.i' (line 7789)
    [1648, 1652) 'enum_called.i' (line 7790)
    [1664, 1756) 'lf.i4643' (line 7791)
    [1792, 1852) 'lf.i4610' (line 7702)
    [1888, 1948) 'lf.i4605' (line 7591)
    [1984, 2000) 'efnd.i4490' (line 7127)
    [2016, 2032) 'efnd_w.i' (line 7128)
    [2048, 2308) 'ttf_name.i4491' (line 7129)
    [2384, 2644) 'ttf_name2.i' (line 7129)
    [2720, 2980) 'ttf_name3.i' (line 7129)
    [3056, 3116) 'font.i4492' (line 7130)
    [3152, 3244) 'font_w.i' (line 7131)
    [3280, 3296) 'efnd.i4424' (line 7055)
    [3312, 3572) 'ttf_name.i4425' (line 7056)
    [3648, 3908) 'ttf_name_bold.i' (line 7056)
    [3984, 4044) 'font.i4426' (line 7057)
    [4080, 4340) 'ttf_name.i4357' (line 7009)
    [4416, 4476) 'font.i' (line 7010)
    [4512, 4516) 'found_font.i' (line 7012)
    [4528, 4538) 'glyphs.i4243' (line 6951)
    [4560, 4580) 'widths.i' (line 6952)
    [4624, 4628) 'width.i' (line 6953)
    [4640, 4700) 'lf.i4244' (line 6954)
    [4736, 4796) 'abc.i4245' (line 6955)
    [4832, 4844) 'abc1.i' (line 6955)
    [4864, 4884) 'text.i' (line 6821)
    [4928, 4988) 'lf.i4152' (line 6832)
    [5024, 5056) 'facename.i' (line 6834)
    [5088, 5132) 'bmi.i' (line 6835)
    [5168, 5176) 'hBmp.i.sroa.0' (line 6836)
    [5200, 5208) 'hBmp.i.sroa.6' (line 6836)
    [5232, 5248) 'pixels.i' (line 6837)
    [5264, 5296) 'bmp.i' (line 6840)
    [5328, 5384) 'tm.i4153' (line 6841)
    [5424, 5456) 'ci.i' (line 6842)
    [5488, 5489) 'chr.i' (line 6843)
    [5504, 5506) 'code.i' (line 6918)
    [5520, 5580) 'lf.i4050' (line 6704)
    [5616, 5984) 'data.i4051' (line 6706)
    [6048, 6108) 'lf.i3917' (line 6606)
    [6144, 6148) 'bufferA.i' (line 6608)
    [6160, 6164) 'bufferW.i' (line 6609)
    [6176, 6192) 'efd.i3872' (line 6568)
    [6208, 6268) 'lf.i3873' (line 6569)
    [6304, 6364) 'lf.i3739' (line 6506)
    [6400, 6456) 'tm1.i' (line 6508)
    [6496, 6552) 'tm.i3740' (line 6508)
    [6592, 6652) 'lf.i3687' (line 6323)
    [6688, 6720) 'face_name.i3688' (line 6325)
    [6752, 6880) 'bufW.i3625' (line 5585)
    [6912, 6976) 'bufA.i3626' (line 5586)
    [7008, 7068) 'lf.i3627' (line 5588)
    [7104, 7164) 'lf.i3582' (line 4607)
    [7200, 7260) 'clf.i' (line 4607)
    [7296, 7556) 'lfex.i' (line 5082)
    [7632, 7692) 'lf.i3509' (line 5051)
    [7728, 7788) 'getobj_lf.i' (line 5051)
    [7824, 7884) 'lf.i3175' (line 7393)
    [7920, 8152) 'otm.i3176' (line 7396)
    [8224, 8260) 'hhea.i' (line 7397)
    [8304, 8316) 'info.i3177' (line 7398)
    [8336, 8348) 'info2.i3178' (line 7398)
    [8368, 8384) 'pt.i3179' (line 7403)
    [8400, 8460) 'lf.i3090' (line 7601)
    [8496, 8556) 'str.i' (line 7606)
    [8592, 8656) 'result.i3091' (line 7607)
    [8688, 8808) 'kern.i' (line 7608)
    [8848, 8968) 'pos.i3092' (line 7608)
    [9008, 9128) 'pos_kern.i' (line 7608)
    [9168, 9288) 'dx.i' (line 7608)
    [9328, 9448) 'dx_kern.i' (line 7608)
    [9488, 9552) 'result.i' (line 4996)
    [9584, 9624) 'glyphs.i2892' (line 4998)
    [9664, 9744) 'pos.i' (line 4999)
    [9776, 9836) 'fA.i' (line 4488)
    [9872, 9964) 'fW.i' (line 4489)
    [10000, 10032) 'bufA.i' (line 4490)
    [10064, 10128) 'bufW.i' (line 4491)
    [10160, 10696) 'file_info.i' (line 4347)
    [10832, 10848) 'info.i' (line 4349)
    [10864, 10992) 'info2.i' (line 4349)
    [11024, 11028) 'read.i' (line 4349)
    [11040, 11048) 'needed.i' (line 4351)
    [11072, 11132) 'lf.i2501' (line 4352)
    [11168, 11184) 'file.i' (line 4354)
    [11200, 11214) 'data.i' (line 4354)
    [11232, 11240) 'time.i' (line 4355)
    [11264, 11272) 'size.i2502' (line 4356)
    [11296, 11352) 'tm.i2476' (line 4105)
    [11392, 11452) 'lf.i2477' (line 4106)
    [11488, 11492) 'enumed.i' (line 4109)
    [11504, 11520) 'efd.i2443' (line 3223)
    [11536, 11596) 'target.i' (line 3224)
    [11632, 11692) 'enum_font.i' (line 3224)
    [11728, 11760) 'csi.i2444' (line 3227)
    [11792, 11808) 'efd.i2236' (line 2961)
    [11824, 11840) 'efdw.i' (line 2962)
    [11856, 11916) 'lf.i2237' (line 2963)
    [11952, 11956) 'ansi_charset.i2238' (line 2965)
    [11968, 11972) 'symbol_charset.i2239' (line 2965)
    [11984, 11988) 'russian_charset.i2240' (line 2965)
    [12000, 12016) 'efd.i1966' (line 2961)
    [12032, 12092) 'lf.i1967' (line 2963)
    [12128, 12132) 'ansi_charset.i1968' (line 2965)
    [12144, 12148) 'symbol_charset.i1969' (line 2965)
    [12160, 12164) 'russian_charset.i1970' (line 2965)
    [12176, 12192) 'efd.i1836' (line 2961)
    [12208, 12268) 'lf.i1837' (line 2963)
    [12304, 12308) 'ansi_charset.i1838' (line 2965)
    [12320, 12324) 'symbol_charset.i1839' (line 2965)
    [12336, 12340) 'russian_charset.i1840' (line 2965)
    [12352, 12368) 'efd.i1518' (line 2961)
    [12384, 12444) 'lf.i1519' (line 2963)
    [12480, 12484) 'ansi_charset.i1520' (line 2965)
    [12496, 12500) 'symbol_charset.i1521' (line 2965)
    [12512, 12516) 'russian_charset.i1522' (line 2965)
    [12528, 12544) 'efd.i' (line 2961)
    [12560, 12620) 'lf.i1379' (line 2963)
    [12656, 12660) 'ansi_charset.i' (line 2965)
    [12672, 12676) 'symbol_charset.i' (line 2965)
    [12688, 12692) 'russian_charset.i' (line 2965)
    [12704, 12764) 'lf.i1321' (line 5501)
    [12800, 12816) 'efnd.i' (line 5503)
    [12832, 12892) 'lf.i1203' (line 5391)
    [12928, 13188) 'tmp_path.i.i.i' (line 139)
    [13264, 13268) 'size.i.i' (line 2091)
    [13280, 13540) 'ttf_name.i.i' (line 2094)
    [13616, 13676) 'lf.i1148' (line 4579)
    [13712, 13720) 'size.i1149' (line 4581)
    [13744, 13804) 'lf.i895' (line 4159)
    [13840, 13872) 'csi.i896' (line 4162)
    [13904, 13936) 'buf.i' (line 4164)
    [13968, 14028) 'lf.i871' (line 2805)
    [14064, 14124) 'lf.i832' (line 2744)
    [14160, 14192) 'csi.i763' (line 2593)
    [14224, 14232) 'csb.i' (line 2642)
    [14256, 14272) 'clientArea.i' (line 2369)
    [14288, 14348) 'lf.i698' (line 2370)
    [14384, 14392) 'size.i699' (line 2373)
    [14416, 14424) 'expect.i' (line 2373)
    [14448, 14452) 'indices.i' (line 2375)
    [14464, 14524) 'lf.i662' (line 7728)
    [14560, 14592) 'face_name.i663' (line 7732)
    [14624, 14684) 'lf.i612' (line 2185)
    [14720, 14780) 'lf.i517' (line 1782)
    [14816, 15048) 'otm.i518' (line 1792)
    [15120, 15180) 'lf.i444' (line 1583)
    [15216, 15228) 'testtext.i' (line 1585)
    [15248, 15252) 'c.i' (line 1586)
    [15264, 15274) 'glyphs.i445' (line 1587)
    [15296, 15352) 'textm.i' (line 1588)
    [15392, 15396) 'num_fonts.i' (line 1591)
    [15408, 15668) 'ttf_name.i' (line 1593)
    [15744, 15748) 'fit1.i' (line 1403)
    [15760, 15764) 'fit2.i' (line 1403)
    [15776, 15788) 'extents2.i' (line 1403)
    [15808, 15868) 'lf.i300' (line 1404)
    [15904, 15960) 'tm.i301' (line 1405)
    [16000, 16008) 'sz.i' (line 1408)
    [16032, 16040) 'sz1.i' (line 1409)
    [16064, 16072) 'sz2.i' (line 1409)
    [16096, 16156) 'lf.i198' (line 1113)
    [16192, 16200) 'hfont.i' (line 1114)
    [16224, 16236) 'abc.i' (line 1115)
    [16256, 16268) 'abcw.i' (line 1116)
    [16288, 16300) 'abcf.i' (line 1117)
    [16320, 16322) 'glyphs.i' (line 1118)
    [16336, 16360) 'a.i' (line 1204)
    [16400, 16424) 'w.i' (line 1204)
    [16464, 19536) 'full.i' (line 1205)
    [19664, 19684) 'gm.i199' (line 1316)
    [19728, 19788) 'tm.i172' (line 1024)
    [19824, 19832) 'size.i' (line 1026)
    [19856, 19860) 'height.i' (line 1027)
    [19872, 19932) 'lf.i114' (line 864)
    [19968, 20024) 'tm.i' (line 866)
    [20064, 20096) 'face_name.i115' (line 868)
    [20128, 20160) 'csi.i' (line 869)
    [20192, 20212) 'gm.i116' (line 914)
    [20256, 20264) 'fs.i' (line 915)
    [20288, 20348) 'lf.i75' (line 452)
    [20384, 20616) 'otm.i' (line 454)
    [20688, 20696) 'size_orig.i76' (line 455)
    [20720, 20724) 'width_orig.i77' (line 456)
    [20736, 20760) 'xform.i' (line 457)
    [20800, 20820) 'gm.i' (line 458)
    [20864, 20880) 'mat2.i' (line 459)
    [20896, 20904) 'pt.i' (line 460)
    [20928, 20988) 'bitmap_lf.i' (line 362)
    [21024, 21080) 'tm_orig.i' (line 364)
    [21120, 21128) 'size_orig.i' (line 365)
    [21152, 21156) 'width_orig.i' (line 366)
    [21168, 21228) 'lf.i37' (line 203) <== Memory access at offset 21228 overflows this variable
    [21264, 21320) 'tm.i.i' (line 6364)
    [21360, 21420) 'lf.i' (line 6451)
    [21456, 21716) 'path_name' (line 7846)
    [21792, 21896) 'startup' (line 7847)
    [21936, 21944) 'argv' (line 7848)
    [21968, 21992) 'info' (line 7940)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp, SEH and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/bernhard/data/entwicklung/2024/wine/wine/dlls/kernelbase\locale.c:7023:30 in MultiByteToWideChar
Shadow bytes around the buggy address:
  0x7ffffe1ff600: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
  0x7ffffe1ff680: f8 f2 f2 f2 f2 f2 f2 f2 f2 f2 f8 f2 f2 f2 f8 f2
  0x7ffffe1ff700: f8 f8 f8 f2 f2 f2 f2 f2 f8 f8 f8 f2 f2 f2 f2 f2
  0x7ffffe1ff780: f8 f8 f2 f2 f8 f2 f2 f2 f8 f8 f8 f8 f8 f8 f8 f8
  0x7ffffe1ff800: f2 f2 f2 f2 f8 f8 f8 f8 f8 f8 f8 f2 f2 f2 f2 f2
=>0x7ffffe1ff880: f8 f2 f2 f2 f8 f2 00 00 00 00 00 00 00[04]f2 f2
  0x7ffffe1ff900: f2 f2 f8 f8 f8 f8 f8 f8 f8 f2 f2 f2 f2 f2 f8 f8
  0x7ffffe1ff980: f8 f8 f8 f8 f8 f8 f2 f2 f2 f2 00 00 00 00 00 00
  0x7ffffe1ffa00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x7ffffe1ffa80: 00 00 00 00 00 00 00 00 00 00 04 f2 f2 f2 f2 f2
  0x7ffffe1ffb00: f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==1512==ABORTING
bernhard@rechner:~/wine_asan_2024-11-07/drive_c/x86_64$ 05fc:fixme:kernelbase:AppPolicyGetProcessTerminationMethod FFFFFFFFFFFFFFFA, 00007FFFFEA8FE80
---
 dlls/gdi32/text.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/dlls/gdi32/text.c b/dlls/gdi32/text.c
index ff548306dc3..2de68f892d8 100644
--- a/dlls/gdi32/text.c
+++ b/dlls/gdi32/text.c
@@ -781,7 +781,7 @@ static void text_metric_ex_WtoA(const NEWTEXTMETRICEXW *tmW, NEWTEXTMETRICEXA *t
 static void logfont_AtoW( const LOGFONTA *fontA, LPLOGFONTW fontW )
 {
     memcpy( fontW, fontA, sizeof(LOGFONTA) - LF_FACESIZE );
-    MultiByteToWideChar( CP_ACP, 0, fontA->lfFaceName, -1, fontW->lfFaceName,
+    MultiByteToWideChar( CP_ACP, 0, fontA->lfFaceName, sizeof(fontA->lfFaceName), fontW->lfFaceName,
                          LF_FACESIZE );
     fontW->lfFaceName[LF_FACESIZE - 1] = 0;
 }
@@ -789,7 +789,7 @@ static void logfont_AtoW( const LOGFONTA *fontA, LPLOGFONTW fontW )
 static void logfont_WtoA( const LOGFONTW *fontW, LPLOGFONTA fontA )
 {
     memcpy( fontA, fontW, sizeof(LOGFONTA) - LF_FACESIZE );
-    WideCharToMultiByte( CP_ACP, 0, fontW->lfFaceName, -1, fontA->lfFaceName,
+    WideCharToMultiByte( CP_ACP, 0, fontW->lfFaceName, sizeof(fontA->lfFaceName), fontA->lfFaceName,
                          LF_FACESIZE, NULL, NULL );
     fontA->lfFaceName[LF_FACESIZE - 1] = 0;
 }
-- 
2.47.1

